-- we don't know how to generate root <with-no-name> (class Root) :(
create sequence access_token_id_seq
	maxvalue 2147483647;

alter sequence access_token_id_seq owner to postgres;

create sequence account_account_id_seq
	maxvalue 2147483647;

alter sequence account_account_id_seq owner to postgres;

create sequence account_account_tag_id_seq
	maxvalue 2147483647;

alter sequence account_account_tag_id_seq owner to postgres;

create sequence account_account_template_id_seq
	maxvalue 2147483647;

alter sequence account_account_template_id_seq owner to postgres;

create sequence account_account_type_id_seq
	maxvalue 2147483647;

alter sequence account_account_type_id_seq owner to postgres;

create sequence account_analytic_account_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_account_id_seq owner to postgres;

create sequence account_analytic_default_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_default_id_seq owner to postgres;

create sequence account_analytic_distribution_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_distribution_id_seq owner to postgres;

create sequence account_analytic_group_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_group_id_seq owner to postgres;

create sequence account_analytic_line_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_line_id_seq owner to postgres;

create sequence account_analytic_tag_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_tag_id_seq owner to postgres;

create sequence account_asset_id_seq
	maxvalue 2147483647;

alter sequence account_asset_id_seq owner to postgres;

create sequence account_asset_pause_id_seq
	maxvalue 2147483647;

alter sequence account_asset_pause_id_seq owner to postgres;

create sequence account_asset_sell_id_seq
	maxvalue 2147483647;

alter sequence account_asset_sell_id_seq owner to postgres;

create sequence account_automatic_entry_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_automatic_entry_wizard_id_seq owner to postgres;

create sequence account_bank_statement_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_id_seq owner to postgres;

create sequence account_bank_statement_cashbox_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_cashbox_id_seq owner to postgres;

create sequence account_bank_statement_closebalance_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_closebalance_id_seq owner to postgres;

create sequence account_bank_statement_import_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_import_id_seq owner to postgres;

create sequence account_bank_statement_import_journal_creation_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_import_journal_creation_id_seq owner to postgres;

create sequence account_bank_statement_line_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_line_id_seq owner to postgres;

create sequence account_cash_rounding_id_seq
	maxvalue 2147483647;

alter sequence account_cash_rounding_id_seq owner to postgres;

create sequence account_cashbox_line_id_seq
	maxvalue 2147483647;

alter sequence account_cashbox_line_id_seq owner to postgres;

create sequence account_change_lock_date_id_seq
	maxvalue 2147483647;

alter sequence account_change_lock_date_id_seq owner to postgres;

create sequence account_chart_template_id_seq
	maxvalue 2147483647;

alter sequence account_chart_template_id_seq owner to postgres;

create sequence account_common_journal_report_id_seq
	maxvalue 2147483647;

alter sequence account_common_journal_report_id_seq owner to postgres;

create sequence account_common_report_id_seq
	maxvalue 2147483647;

alter sequence account_common_report_id_seq owner to postgres;

create sequence account_edi_document_id_seq
	maxvalue 2147483647;

alter sequence account_edi_document_id_seq owner to postgres;

create sequence account_edi_format_id_seq
	maxvalue 2147483647;

alter sequence account_edi_format_id_seq owner to postgres;

create sequence account_financial_html_report_id_seq
	maxvalue 2147483647;

alter sequence account_financial_html_report_id_seq owner to postgres;

create sequence account_financial_html_report_line_id_seq
	maxvalue 2147483647;

alter sequence account_financial_html_report_line_id_seq owner to postgres;

create sequence account_financial_year_op_id_seq
	maxvalue 2147483647;

alter sequence account_financial_year_op_id_seq owner to postgres;

create sequence account_fiscal_position_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_id_seq owner to postgres;

create sequence account_fiscal_position_account_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_account_id_seq owner to postgres;

create sequence account_fiscal_position_account_template_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_account_template_id_seq owner to postgres;

create sequence account_fiscal_position_tax_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_tax_id_seq owner to postgres;

create sequence account_fiscal_position_tax_template_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_tax_template_id_seq owner to postgres;

create sequence account_fiscal_position_template_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_template_id_seq owner to postgres;

create sequence account_fiscal_year_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_year_id_seq owner to postgres;

create sequence account_followup_followup_line_id_seq
	maxvalue 2147483647;

alter sequence account_followup_followup_line_id_seq owner to postgres;

create sequence account_full_reconcile_id_seq
	maxvalue 2147483647;

alter sequence account_full_reconcile_id_seq owner to postgres;

create sequence account_group_id_seq
	maxvalue 2147483647;

alter sequence account_group_id_seq owner to postgres;

create sequence account_group_template_id_seq
	maxvalue 2147483647;

alter sequence account_group_template_id_seq owner to postgres;

create sequence account_incoterms_id_seq
	maxvalue 2147483647;

alter sequence account_incoterms_id_seq owner to postgres;

create sequence account_invoice_extract_words_id_seq
	maxvalue 2147483647;

alter sequence account_invoice_extract_words_id_seq owner to postgres;

create sequence account_invoice_send_id_seq
	maxvalue 2147483647;

alter sequence account_invoice_send_id_seq owner to postgres;

create sequence account_journal_id_seq
	maxvalue 2147483647;

alter sequence account_journal_id_seq owner to postgres;

create sequence account_journal_group_id_seq
	maxvalue 2147483647;

alter sequence account_journal_group_id_seq owner to postgres;

create sequence account_link_journal_id_seq
	maxvalue 2147483647;

alter sequence account_link_journal_id_seq owner to postgres;

create sequence account_link_journal_line_id_seq
	maxvalue 2147483647;

alter sequence account_link_journal_line_id_seq owner to postgres;

create sequence account_move_id_seq
	maxvalue 2147483647;

alter sequence account_move_id_seq owner to postgres;

create sequence account_move_line_id_seq
	maxvalue 2147483647;

alter sequence account_move_line_id_seq owner to postgres;

create sequence account_move_reversal_id_seq
	maxvalue 2147483647;

alter sequence account_move_reversal_id_seq owner to postgres;

create sequence account_multicurrency_revaluation_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_multicurrency_revaluation_wizard_id_seq owner to postgres;

create sequence account_online_account_id_seq
	maxvalue 2147483647;

alter sequence account_online_account_id_seq owner to postgres;

create sequence account_online_journal_id_seq
	maxvalue 2147483647;

alter sequence account_online_journal_id_seq owner to postgres;

create sequence account_online_link_id_seq
	maxvalue 2147483647;

alter sequence account_online_link_id_seq owner to postgres;

create sequence account_online_link_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_online_link_wizard_id_seq owner to postgres;

create sequence account_online_provider_id_seq
	maxvalue 2147483647;

alter sequence account_online_provider_id_seq owner to postgres;

create sequence account_online_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_online_wizard_id_seq owner to postgres;

create sequence account_partial_reconcile_id_seq
	maxvalue 2147483647;

alter sequence account_partial_reconcile_id_seq owner to postgres;

create sequence account_payment_id_seq
	maxvalue 2147483647;

alter sequence account_payment_id_seq owner to postgres;

create sequence account_payment_method_id_seq
	maxvalue 2147483647;

alter sequence account_payment_method_id_seq owner to postgres;

create sequence account_payment_register_id_seq
	maxvalue 2147483647;

alter sequence account_payment_register_id_seq owner to postgres;

create sequence account_payment_term_id_seq
	maxvalue 2147483647;

alter sequence account_payment_term_id_seq owner to postgres;

create sequence account_payment_term_line_id_seq
	maxvalue 2147483647;

alter sequence account_payment_term_line_id_seq owner to postgres;

create sequence account_print_journal_id_seq
	maxvalue 2147483647;

alter sequence account_print_journal_id_seq owner to postgres;

create sequence account_reconcile_model_id_seq
	maxvalue 2147483647;

alter sequence account_reconcile_model_id_seq owner to postgres;

create sequence account_reconcile_model_line_id_seq
	maxvalue 2147483647;

alter sequence account_reconcile_model_line_id_seq owner to postgres;

create sequence account_reconcile_model_line_template_id_seq
	maxvalue 2147483647;

alter sequence account_reconcile_model_line_template_id_seq owner to postgres;

create sequence account_reconcile_model_partner_mapping_id_seq
	maxvalue 2147483647;

alter sequence account_reconcile_model_partner_mapping_id_seq owner to postgres;

create sequence account_reconcile_model_template_id_seq
	maxvalue 2147483647;

alter sequence account_reconcile_model_template_id_seq owner to postgres;

create sequence account_report_footnote_id_seq
	maxvalue 2147483647;

alter sequence account_report_footnote_id_seq owner to postgres;

create sequence account_report_manager_id_seq
	maxvalue 2147483647;

alter sequence account_report_manager_id_seq owner to postgres;

create sequence account_reports_export_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_reports_export_wizard_id_seq owner to postgres;

create sequence account_reports_export_wizard_format_id_seq
	maxvalue 2147483647;

alter sequence account_reports_export_wizard_format_id_seq owner to postgres;

create sequence account_resequence_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_resequence_wizard_id_seq owner to postgres;

create sequence account_setup_bank_manual_config_id_seq
	maxvalue 2147483647;

alter sequence account_setup_bank_manual_config_id_seq owner to postgres;

create sequence account_tax_id_seq
	maxvalue 2147483647;

alter sequence account_tax_id_seq owner to postgres;

create sequence account_tax_group_id_seq
	maxvalue 2147483647;

alter sequence account_tax_group_id_seq owner to postgres;

create sequence account_tax_repartition_line_id_seq
	maxvalue 2147483647;

alter sequence account_tax_repartition_line_id_seq owner to postgres;

create sequence account_tax_repartition_line_template_id_seq
	maxvalue 2147483647;

alter sequence account_tax_repartition_line_template_id_seq owner to postgres;

create sequence account_tax_report_id_seq
	maxvalue 2147483647;

alter sequence account_tax_report_id_seq owner to postgres;

create sequence account_tax_report_line_id_seq
	maxvalue 2147483647;

alter sequence account_tax_report_line_id_seq owner to postgres;

create sequence account_tax_template_id_seq
	maxvalue 2147483647;

alter sequence account_tax_template_id_seq owner to postgres;

create sequence account_tour_upload_bill_id_seq
	maxvalue 2147483647;

alter sequence account_tour_upload_bill_id_seq owner to postgres;

create sequence account_tour_upload_bill_email_confirm_id_seq
	maxvalue 2147483647;

alter sequence account_tour_upload_bill_email_confirm_id_seq owner to postgres;

create sequence account_transfer_model_id_seq
	maxvalue 2147483647;

alter sequence account_transfer_model_id_seq owner to postgres;

create sequence account_transfer_model_line_id_seq
	maxvalue 2147483647;

alter sequence account_transfer_model_line_id_seq owner to postgres;

create sequence account_unreconcile_id_seq
	maxvalue 2147483647;

alter sequence account_unreconcile_id_seq owner to postgres;

create sequence asset_modify_id_seq
	maxvalue 2147483647;

alter sequence asset_modify_id_seq owner to postgres;

create sequence auth_totp_wizard_id_seq
	maxvalue 2147483647;

alter sequence auth_totp_wizard_id_seq owner to postgres;

create sequence barcode_nomenclature_id_seq
	maxvalue 2147483647;

alter sequence barcode_nomenclature_id_seq owner to postgres;

create sequence barcode_rule_id_seq
	maxvalue 2147483647;

alter sequence barcode_rule_id_seq owner to postgres;

create sequence base_document_layout_id_seq
	maxvalue 2147483647;

alter sequence base_document_layout_id_seq owner to postgres;

create sequence base_import_import_id_seq
	maxvalue 2147483647;

alter sequence base_import_import_id_seq owner to postgres;

create sequence base_import_mapping_id_seq
	maxvalue 2147483647;

alter sequence base_import_mapping_id_seq owner to postgres;

create sequence base_import_tests_models_char_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_id_seq owner to postgres;

create sequence base_import_tests_models_char_noreadonly_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_noreadonly_id_seq owner to postgres;

create sequence base_import_tests_models_char_readonly_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_readonly_id_seq owner to postgres;

create sequence base_import_tests_models_char_required_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_required_id_seq owner to postgres;

create sequence base_import_tests_models_char_states_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_states_id_seq owner to postgres;

create sequence base_import_tests_models_char_stillreadonly_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_stillreadonly_id_seq owner to postgres;

create sequence base_import_tests_models_complex_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_complex_id_seq owner to postgres;

create sequence base_import_tests_models_float_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_float_id_seq owner to postgres;

create sequence base_import_tests_models_m2o_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_m2o_id_seq owner to postgres;

create sequence base_import_tests_models_m2o_related_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_m2o_related_id_seq owner to postgres;

create sequence base_import_tests_models_m2o_required_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_m2o_required_id_seq owner to postgres;

create sequence base_import_tests_models_m2o_required_related_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_m2o_required_related_id_seq owner to postgres;

create sequence base_import_tests_models_o2m_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_o2m_id_seq owner to postgres;

create sequence base_import_tests_models_o2m_child_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_o2m_child_id_seq owner to postgres;

create sequence base_import_tests_models_preview_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_preview_id_seq owner to postgres;

create sequence base_language_export_id_seq
	maxvalue 2147483647;

alter sequence base_language_export_id_seq owner to postgres;

create sequence base_language_import_id_seq
	maxvalue 2147483647;

alter sequence base_language_import_id_seq owner to postgres;

create sequence base_language_install_id_seq
	maxvalue 2147483647;

alter sequence base_language_install_id_seq owner to postgres;

create sequence base_module_uninstall_id_seq
	maxvalue 2147483647;

alter sequence base_module_uninstall_id_seq owner to postgres;

create sequence base_module_update_id_seq
	maxvalue 2147483647;

alter sequence base_module_update_id_seq owner to postgres;

create sequence base_module_upgrade_id_seq
	maxvalue 2147483647;

alter sequence base_module_upgrade_id_seq owner to postgres;

create sequence base_partner_merge_automatic_wizard_id_seq
	maxvalue 2147483647;

alter sequence base_partner_merge_automatic_wizard_id_seq owner to postgres;

create sequence base_partner_merge_line_id_seq
	maxvalue 2147483647;

alter sequence base_partner_merge_line_id_seq owner to postgres;

create sequence base_update_translations_id_seq
	maxvalue 2147483647;

alter sequence base_update_translations_id_seq owner to postgres;

create sequence bus_bus_id_seq
	maxvalue 2147483647;

alter sequence bus_bus_id_seq owner to postgres;

create sequence bus_presence_id_seq
	maxvalue 2147483647;

alter sequence bus_presence_id_seq owner to postgres;

create sequence cash_box_out_id_seq
	maxvalue 2147483647;

alter sequence cash_box_out_id_seq owner to postgres;

create sequence cash_flow_wizard_id_seq
	maxvalue 2147483647;

alter sequence cash_flow_wizard_id_seq owner to postgres;

create sequence cesa_location_id_seq
	maxvalue 2147483647;

alter sequence cesa_location_id_seq owner to postgres;

create sequence change_password_user_id_seq
	maxvalue 2147483647;

alter sequence change_password_user_id_seq owner to postgres;

create sequence change_password_wizard_id_seq
	maxvalue 2147483647;

alter sequence change_password_wizard_id_seq owner to postgres;

create sequence choose_delivery_carrier_id_seq
	maxvalue 2147483647;

alter sequence choose_delivery_carrier_id_seq owner to postgres;

create sequence choose_delivery_package_id_seq
	maxvalue 2147483647;

alter sequence choose_delivery_package_id_seq owner to postgres;

create sequence confirm_stock_sms_id_seq
	maxvalue 2147483647;

alter sequence confirm_stock_sms_id_seq owner to postgres;

create sequence crm_tag_id_seq
	maxvalue 2147483647;

alter sequence crm_tag_id_seq owner to postgres;

create sequence crm_team_id_seq
	maxvalue 2147483647;

alter sequence crm_team_id_seq owner to postgres;

create sequence decimal_precision_id_seq
	maxvalue 2147483647;

alter sequence decimal_precision_id_seq owner to postgres;

create sequence delivery_agency_id_seq
	maxvalue 2147483647;

alter sequence delivery_agency_id_seq owner to postgres;

create sequence delivery_carrier_id_seq
	maxvalue 2147483647;

alter sequence delivery_carrier_id_seq owner to postgres;

create sequence delivery_price_rule_id_seq
	maxvalue 2147483647;

alter sequence delivery_price_rule_id_seq owner to postgres;

create sequence delivery_rate_detail_id_seq
	maxvalue 2147483647;

alter sequence delivery_rate_detail_id_seq owner to postgres;

create sequence delivery_type_id_seq
	maxvalue 2147483647;

alter sequence delivery_type_id_seq owner to postgres;

create sequence digest_digest_id_seq
	maxvalue 2147483647;

alter sequence digest_digest_id_seq owner to postgres;

create sequence digest_tip_id_seq
	maxvalue 2147483647;

alter sequence digest_tip_id_seq owner to postgres;

create sequence discount_id_seq
	maxvalue 2147483647;

alter sequence discount_id_seq owner to postgres;

create sequence evcp_view_id_seq
	maxvalue 2147483647;

alter sequence evcp_view_id_seq owner to postgres;

create sequence fetchmail_server_id_seq
	maxvalue 2147483647;

alter sequence fetchmail_server_id_seq owner to postgres;

create sequence followup_send_id_seq
	maxvalue 2147483647;

alter sequence followup_send_id_seq owner to postgres;

create sequence handling_rate_id_seq
	maxvalue 2147483647;

alter sequence handling_rate_id_seq owner to postgres;

create sequence handling_rate_detail_id_seq
	maxvalue 2147483647;

alter sequence handling_rate_detail_id_seq owner to postgres;

create sequence handling_rate_line_id_seq
	maxvalue 2147483647;

alter sequence handling_rate_line_id_seq owner to postgres;

create sequence iap_account_id_seq
	maxvalue 2147483647;

alter sequence iap_account_id_seq owner to postgres;

create sequence id_zone_id_seq
	maxvalue 2147483647;

alter sequence id_zone_id_seq owner to postgres;

create sequence ir_actions_id_seq
	maxvalue 2147483647;

alter sequence ir_actions_id_seq owner to postgres;

create sequence ir_act_window_view_id_seq
	maxvalue 2147483647;

alter sequence ir_act_window_view_id_seq owner to postgres;

create sequence ir_actions_todo_id_seq
	maxvalue 2147483647;

alter sequence ir_actions_todo_id_seq owner to postgres;

create sequence ir_attachment_id_seq
	maxvalue 2147483647;

alter sequence ir_attachment_id_seq owner to postgres;

create sequence ir_config_parameter_id_seq
	maxvalue 2147483647;

alter sequence ir_config_parameter_id_seq owner to postgres;

create sequence ir_cron_id_seq
	maxvalue 2147483647;

alter sequence ir_cron_id_seq owner to postgres;

create sequence ir_default_id_seq
	maxvalue 2147483647;

alter sequence ir_default_id_seq owner to postgres;

create sequence ir_demo_id_seq
	maxvalue 2147483647;

alter sequence ir_demo_id_seq owner to postgres;

create sequence ir_demo_failure_id_seq
	maxvalue 2147483647;

alter sequence ir_demo_failure_id_seq owner to postgres;

create sequence ir_demo_failure_wizard_id_seq
	maxvalue 2147483647;

alter sequence ir_demo_failure_wizard_id_seq owner to postgres;

create sequence ir_exports_id_seq
	maxvalue 2147483647;

alter sequence ir_exports_id_seq owner to postgres;

create sequence ir_exports_line_id_seq
	maxvalue 2147483647;

alter sequence ir_exports_line_id_seq owner to postgres;

create sequence ir_filters_id_seq
	maxvalue 2147483647;

alter sequence ir_filters_id_seq owner to postgres;

create sequence ir_logging_id_seq
	maxvalue 2147483647;

alter sequence ir_logging_id_seq owner to postgres;

create sequence ir_mail_server_id_seq
	maxvalue 2147483647;

alter sequence ir_mail_server_id_seq owner to postgres;

create sequence ir_model_id_seq
	maxvalue 2147483647;

alter sequence ir_model_id_seq owner to postgres;

create sequence ir_model_access_id_seq
	maxvalue 2147483647;

alter sequence ir_model_access_id_seq owner to postgres;

create sequence ir_model_constraint_id_seq
	maxvalue 2147483647;

alter sequence ir_model_constraint_id_seq owner to postgres;

create sequence ir_model_data_id_seq
	maxvalue 2147483647;

alter sequence ir_model_data_id_seq owner to postgres;

create sequence ir_model_fields_id_seq
	maxvalue 2147483647;

alter sequence ir_model_fields_id_seq owner to postgres;

create sequence ir_model_fields_selection_id_seq
	maxvalue 2147483647;

alter sequence ir_model_fields_selection_id_seq owner to postgres;

create sequence ir_model_relation_id_seq
	maxvalue 2147483647;

alter sequence ir_model_relation_id_seq owner to postgres;

create sequence ir_module_category_id_seq
	maxvalue 2147483647;

alter sequence ir_module_category_id_seq owner to postgres;

create sequence ir_module_module_id_seq
	maxvalue 2147483647;

alter sequence ir_module_module_id_seq owner to postgres;

create sequence ir_module_module_dependency_id_seq
	maxvalue 2147483647;

alter sequence ir_module_module_dependency_id_seq owner to postgres;

create sequence ir_module_module_exclusion_id_seq
	maxvalue 2147483647;

alter sequence ir_module_module_exclusion_id_seq owner to postgres;

create sequence ir_property_id_seq
	maxvalue 2147483647;

alter sequence ir_property_id_seq owner to postgres;

create sequence ir_rule_id_seq
	maxvalue 2147483647;

alter sequence ir_rule_id_seq owner to postgres;

create sequence ir_sequence_id_seq
	maxvalue 2147483647;

alter sequence ir_sequence_id_seq owner to postgres;

create sequence ir_sequence_date_range_id_seq
	maxvalue 2147483647;

alter sequence ir_sequence_date_range_id_seq owner to postgres;

create sequence ir_server_object_lines_id_seq
	maxvalue 2147483647;

alter sequence ir_server_object_lines_id_seq owner to postgres;

create sequence ir_translation_id_seq
	maxvalue 2147483647;

alter sequence ir_translation_id_seq owner to postgres;

create sequence ir_ui_menu_id_seq
	maxvalue 2147483647;

alter sequence ir_ui_menu_id_seq owner to postgres;

create sequence ir_ui_view_id_seq
	maxvalue 2147483647;

alter sequence ir_ui_view_id_seq owner to postgres;

create sequence ir_ui_view_custom_id_seq
	maxvalue 2147483647;

alter sequence ir_ui_view_custom_id_seq owner to postgres;

create sequence mail_activity_id_seq
	maxvalue 2147483647;

alter sequence mail_activity_id_seq owner to postgres;

create sequence mail_activity_type_id_seq
	maxvalue 2147483647;

alter sequence mail_activity_type_id_seq owner to postgres;

create sequence mail_alias_id_seq
	maxvalue 2147483647;

alter sequence mail_alias_id_seq owner to postgres;

create sequence mail_blacklist_id_seq
	maxvalue 2147483647;

alter sequence mail_blacklist_id_seq owner to postgres;

create sequence mail_blacklist_remove_id_seq
	maxvalue 2147483647;

alter sequence mail_blacklist_remove_id_seq owner to postgres;

create sequence mail_channel_id_seq
	maxvalue 2147483647;

alter sequence mail_channel_id_seq owner to postgres;

create sequence mail_channel_partner_id_seq
	maxvalue 2147483647;

alter sequence mail_channel_partner_id_seq owner to postgres;

create sequence mail_compose_message_id_seq
	maxvalue 2147483647;

alter sequence mail_compose_message_id_seq owner to postgres;

create sequence mail_followers_id_seq
	maxvalue 2147483647;

alter sequence mail_followers_id_seq owner to postgres;

create sequence mail_mail_id_seq
	maxvalue 2147483647;

alter sequence mail_mail_id_seq owner to postgres;

create sequence mail_message_id_seq
	maxvalue 2147483647;

alter sequence mail_message_id_seq owner to postgres;

create sequence mail_message_res_partner_needaction_rel_id_seq
	maxvalue 2147483647;

alter sequence mail_message_res_partner_needaction_rel_id_seq owner to postgres;

create sequence mail_message_subtype_id_seq
	maxvalue 2147483647;

alter sequence mail_message_subtype_id_seq owner to postgres;

create sequence mail_moderation_id_seq
	maxvalue 2147483647;

alter sequence mail_moderation_id_seq owner to postgres;

create sequence mail_resend_cancel_id_seq
	maxvalue 2147483647;

alter sequence mail_resend_cancel_id_seq owner to postgres;

create sequence mail_resend_message_id_seq
	maxvalue 2147483647;

alter sequence mail_resend_message_id_seq owner to postgres;

create sequence mail_resend_partner_id_seq
	maxvalue 2147483647;

alter sequence mail_resend_partner_id_seq owner to postgres;

create sequence mail_shortcode_id_seq
	maxvalue 2147483647;

alter sequence mail_shortcode_id_seq owner to postgres;

create sequence mail_template_id_seq
	maxvalue 2147483647;

alter sequence mail_template_id_seq owner to postgres;

create sequence mail_template_preview_id_seq
	maxvalue 2147483647;

alter sequence mail_template_preview_id_seq owner to postgres;

create sequence mail_tracking_value_id_seq
	maxvalue 2147483647;

alter sequence mail_tracking_value_id_seq owner to postgres;

create sequence mail_wizard_invite_id_seq
	maxvalue 2147483647;

alter sequence mail_wizard_invite_id_seq owner to postgres;

create sequence order_weighing_id_seq
	maxvalue 2147483647;

alter sequence order_weighing_id_seq owner to postgres;

create sequence packaging_rate_id_seq
	maxvalue 2147483647;

alter sequence packaging_rate_id_seq owner to postgres;

create sequence packaging_rate_detail_id_seq
	maxvalue 2147483647;

alter sequence packaging_rate_detail_id_seq owner to postgres;

create sequence packaging_rate_line_id_seq
	maxvalue 2147483647;

alter sequence packaging_rate_line_id_seq owner to postgres;

create sequence payment_acquirer_id_seq
	maxvalue 2147483647;

alter sequence payment_acquirer_id_seq owner to postgres;

create sequence payment_acquirer_onboarding_wizard_id_seq
	maxvalue 2147483647;

alter sequence payment_acquirer_onboarding_wizard_id_seq owner to postgres;

create sequence payment_icon_id_seq
	maxvalue 2147483647;

alter sequence payment_icon_id_seq owner to postgres;

create sequence payment_link_wizard_id_seq
	maxvalue 2147483647;

alter sequence payment_link_wizard_id_seq owner to postgres;

create sequence payment_token_id_seq
	maxvalue 2147483647;

alter sequence payment_token_id_seq owner to postgres;

create sequence payment_transaction_id_seq
	maxvalue 2147483647;

alter sequence payment_transaction_id_seq owner to postgres;

create sequence phone_blacklist_id_seq
	maxvalue 2147483647;

alter sequence phone_blacklist_id_seq owner to postgres;

create sequence phone_blacklist_remove_id_seq
	maxvalue 2147483647;

alter sequence phone_blacklist_remove_id_seq owner to postgres;

create sequence portal_share_id_seq
	maxvalue 2147483647;

alter sequence portal_share_id_seq owner to postgres;

create sequence portal_wizard_id_seq
	maxvalue 2147483647;

alter sequence portal_wizard_id_seq owner to postgres;

create sequence portal_wizard_user_id_seq
	maxvalue 2147483647;

alter sequence portal_wizard_user_id_seq owner to postgres;

create sequence procurement_group_id_seq
	maxvalue 2147483647;

alter sequence procurement_group_id_seq owner to postgres;

create sequence product_attribute_id_seq
	maxvalue 2147483647;

alter sequence product_attribute_id_seq owner to postgres;

create sequence product_attribute_custom_value_id_seq
	maxvalue 2147483647;

alter sequence product_attribute_custom_value_id_seq owner to postgres;

create sequence product_attribute_value_id_seq
	maxvalue 2147483647;

alter sequence product_attribute_value_id_seq owner to postgres;

create sequence product_category_id_seq
	maxvalue 2147483647;

alter sequence product_category_id_seq owner to postgres;

create sequence product_packaging_id_seq
	maxvalue 2147483647;

alter sequence product_packaging_id_seq owner to postgres;

create sequence product_pricelist_id_seq
	maxvalue 2147483647;

alter sequence product_pricelist_id_seq owner to postgres;

create sequence product_pricelist_item_id_seq
	maxvalue 2147483647;

alter sequence product_pricelist_item_id_seq owner to postgres;

create sequence product_product_id_seq
	maxvalue 2147483647;

alter sequence product_product_id_seq owner to postgres;

create sequence product_removal_id_seq
	maxvalue 2147483647;

alter sequence product_removal_id_seq owner to postgres;

create sequence product_replenish_id_seq
	maxvalue 2147483647;

alter sequence product_replenish_id_seq owner to postgres;

create sequence product_supplierinfo_id_seq
	maxvalue 2147483647;

alter sequence product_supplierinfo_id_seq owner to postgres;

create sequence product_template_id_seq
	maxvalue 2147483647;

alter sequence product_template_id_seq owner to postgres;

create sequence product_template_attribute_exclusion_id_seq
	maxvalue 2147483647;

alter sequence product_template_attribute_exclusion_id_seq owner to postgres;

create sequence product_template_attribute_line_id_seq
	maxvalue 2147483647;

alter sequence product_template_attribute_line_id_seq owner to postgres;

create sequence product_template_attribute_value_id_seq
	maxvalue 2147483647;

alter sequence product_template_attribute_value_id_seq owner to postgres;

create sequence purchase_order_id_seq
	maxvalue 2147483647;

alter sequence purchase_order_id_seq owner to postgres;

create sequence purchase_order_line_id_seq
	maxvalue 2147483647;

alter sequence purchase_order_line_id_seq owner to postgres;

create sequence report_layout_id_seq
	maxvalue 2147483647;

alter sequence report_layout_id_seq owner to postgres;

create sequence report_paperformat_id_seq
	maxvalue 2147483647;

alter sequence report_paperformat_id_seq owner to postgres;

create sequence res_bank_id_seq
	maxvalue 2147483647;

alter sequence res_bank_id_seq owner to postgres;

create sequence res_company_id_seq
	maxvalue 2147483647;

alter sequence res_company_id_seq owner to postgres;

create sequence res_config_id_seq
	maxvalue 2147483647;

alter sequence res_config_id_seq owner to postgres;

create sequence res_config_installer_id_seq
	maxvalue 2147483647;

alter sequence res_config_installer_id_seq owner to postgres;

create sequence res_config_settings_id_seq
	maxvalue 2147483647;

alter sequence res_config_settings_id_seq owner to postgres;

create sequence res_country_id_seq
	maxvalue 2147483647;

alter sequence res_country_id_seq owner to postgres;

create sequence res_country_group_id_seq
	maxvalue 2147483647;

alter sequence res_country_group_id_seq owner to postgres;

create sequence res_country_state_id_seq
	maxvalue 2147483647;

alter sequence res_country_state_id_seq owner to postgres;

create sequence res_currency_id_seq
	maxvalue 2147483647;

alter sequence res_currency_id_seq owner to postgres;

create sequence res_currency_rate_id_seq
	maxvalue 2147483647;

alter sequence res_currency_rate_id_seq owner to postgres;

create sequence res_groups_id_seq
	maxvalue 2147483647;

alter sequence res_groups_id_seq owner to postgres;

create sequence res_lang_id_seq
	maxvalue 2147483647;

alter sequence res_lang_id_seq owner to postgres;

create sequence res_partner_id_seq
	maxvalue 2147483647;

alter sequence res_partner_id_seq owner to postgres;

create sequence res_partner_autocomplete_sync_id_seq
	maxvalue 2147483647;

alter sequence res_partner_autocomplete_sync_id_seq owner to postgres;

create sequence res_partner_bank_id_seq
	maxvalue 2147483647;

alter sequence res_partner_bank_id_seq owner to postgres;

create sequence res_partner_category_id_seq
	maxvalue 2147483647;

alter sequence res_partner_category_id_seq owner to postgres;

create sequence res_partner_industry_id_seq
	maxvalue 2147483647;

alter sequence res_partner_industry_id_seq owner to postgres;

create sequence res_partner_title_id_seq
	maxvalue 2147483647;

alter sequence res_partner_title_id_seq owner to postgres;

create sequence res_users_id_seq
	maxvalue 2147483647;

alter sequence res_users_id_seq owner to postgres;

create sequence res_users_apikeys_id_seq
	maxvalue 2147483647;

alter sequence res_users_apikeys_id_seq owner to postgres;

create sequence res_users_apikeys_description_id_seq
	maxvalue 2147483647;

alter sequence res_users_apikeys_description_id_seq owner to postgres;

create sequence res_users_identitycheck_id_seq
	maxvalue 2147483647;

alter sequence res_users_identitycheck_id_seq owner to postgres;

create sequence res_users_log_id_seq
	maxvalue 2147483647;

alter sequence res_users_log_id_seq owner to postgres;

create sequence reset_view_arch_wizard_id_seq
	maxvalue 2147483647;

alter sequence reset_view_arch_wizard_id_seq owner to postgres;

create sequence resource_calendar_id_seq
	maxvalue 2147483647;

alter sequence resource_calendar_id_seq owner to postgres;

create sequence resource_calendar_attendance_id_seq
	maxvalue 2147483647;

alter sequence resource_calendar_attendance_id_seq owner to postgres;

create sequence resource_calendar_leaves_id_seq
	maxvalue 2147483647;

alter sequence resource_calendar_leaves_id_seq owner to postgres;

create sequence resource_resource_id_seq
	maxvalue 2147483647;

alter sequence resource_resource_id_seq owner to postgres;

create sequence resource_test_id_seq
	maxvalue 2147483647;

alter sequence resource_test_id_seq owner to postgres;

create sequence sale_advance_payment_inv_id_seq
	maxvalue 2147483647;

alter sequence sale_advance_payment_inv_id_seq owner to postgres;

create sequence sale_order_id_seq
	maxvalue 2147483647;

alter sequence sale_order_id_seq owner to postgres;

create sequence sale_order_cancel_id_seq
	maxvalue 2147483647;

alter sequence sale_order_cancel_id_seq owner to postgres;

create sequence sale_order_line_id_seq
	maxvalue 2147483647;

alter sequence sale_order_line_id_seq owner to postgres;

create sequence sale_order_option_id_seq
	maxvalue 2147483647;

alter sequence sale_order_option_id_seq owner to postgres;

create sequence sale_order_template_id_seq
	maxvalue 2147483647;

alter sequence sale_order_template_id_seq owner to postgres;

create sequence sale_order_template_line_id_seq
	maxvalue 2147483647;

alter sequence sale_order_template_line_id_seq owner to postgres;

create sequence sale_order_template_option_id_seq
	maxvalue 2147483647;

alter sequence sale_order_template_option_id_seq owner to postgres;

create sequence sale_payment_acquirer_onboarding_wizard_id_seq
	maxvalue 2147483647;

alter sequence sale_payment_acquirer_onboarding_wizard_id_seq owner to postgres;

create sequence sms_cancel_id_seq
	maxvalue 2147483647;

alter sequence sms_cancel_id_seq owner to postgres;

create sequence sms_composer_id_seq
	maxvalue 2147483647;

alter sequence sms_composer_id_seq owner to postgres;

create sequence sms_resend_id_seq
	maxvalue 2147483647;

alter sequence sms_resend_id_seq owner to postgres;

create sequence sms_resend_recipient_id_seq
	maxvalue 2147483647;

alter sequence sms_resend_recipient_id_seq owner to postgres;

create sequence sms_sms_id_seq
	maxvalue 2147483647;

alter sequence sms_sms_id_seq owner to postgres;

create sequence sms_template_id_seq
	maxvalue 2147483647;

alter sequence sms_template_id_seq owner to postgres;

create sequence sms_template_preview_id_seq
	maxvalue 2147483647;

alter sequence sms_template_preview_id_seq owner to postgres;

create sequence snailmail_confirm_followup_id_seq
	maxvalue 2147483647;

alter sequence snailmail_confirm_followup_id_seq owner to postgres;

create sequence snailmail_confirm_invoice_id_seq
	maxvalue 2147483647;

alter sequence snailmail_confirm_invoice_id_seq owner to postgres;

create sequence snailmail_letter_id_seq
	maxvalue 2147483647;

alter sequence snailmail_letter_id_seq owner to postgres;

create sequence snailmail_letter_cancel_id_seq
	maxvalue 2147483647;

alter sequence snailmail_letter_cancel_id_seq owner to postgres;

create sequence snailmail_letter_format_error_id_seq
	maxvalue 2147483647;

alter sequence snailmail_letter_format_error_id_seq owner to postgres;

create sequence snailmail_letter_missing_required_fields_id_seq
	maxvalue 2147483647;

alter sequence snailmail_letter_missing_required_fields_id_seq owner to postgres;

create sequence stock_assign_serial_id_seq
	maxvalue 2147483647;

alter sequence stock_assign_serial_id_seq owner to postgres;

create sequence stock_backorder_confirmation_id_seq
	maxvalue 2147483647;

alter sequence stock_backorder_confirmation_id_seq owner to postgres;

create sequence stock_backorder_confirmation_line_id_seq
	maxvalue 2147483647;

alter sequence stock_backorder_confirmation_line_id_seq owner to postgres;

create sequence stock_change_product_qty_id_seq
	maxvalue 2147483647;

alter sequence stock_change_product_qty_id_seq owner to postgres;

create sequence stock_immediate_transfer_id_seq
	maxvalue 2147483647;

alter sequence stock_immediate_transfer_id_seq owner to postgres;

create sequence stock_immediate_transfer_line_id_seq
	maxvalue 2147483647;

alter sequence stock_immediate_transfer_line_id_seq owner to postgres;

create sequence stock_inventory_id_seq
	maxvalue 2147483647;

alter sequence stock_inventory_id_seq owner to postgres;

create sequence stock_inventory_line_id_seq
	maxvalue 2147483647;

alter sequence stock_inventory_line_id_seq owner to postgres;

create sequence stock_location_id_seq
	maxvalue 2147483647;

alter sequence stock_location_id_seq owner to postgres;

create sequence stock_location_route_id_seq
	maxvalue 2147483647;

alter sequence stock_location_route_id_seq owner to postgres;

create sequence stock_move_id_seq
	maxvalue 2147483647;

alter sequence stock_move_id_seq owner to postgres;

create sequence stock_move_line_id_seq
	maxvalue 2147483647;

alter sequence stock_move_line_id_seq owner to postgres;

create sequence stock_orderpoint_snooze_id_seq
	maxvalue 2147483647;

alter sequence stock_orderpoint_snooze_id_seq owner to postgres;

create sequence stock_package_destination_id_seq
	maxvalue 2147483647;

alter sequence stock_package_destination_id_seq owner to postgres;

create sequence stock_package_level_id_seq
	maxvalue 2147483647;

alter sequence stock_package_level_id_seq owner to postgres;

create sequence stock_picking_id_seq
	maxvalue 2147483647;

alter sequence stock_picking_id_seq owner to postgres;

create sequence stock_picking_type_id_seq
	maxvalue 2147483647;

alter sequence stock_picking_type_id_seq owner to postgres;

create sequence stock_production_lot_id_seq
	maxvalue 2147483647;

alter sequence stock_production_lot_id_seq owner to postgres;

create sequence stock_putaway_rule_id_seq
	maxvalue 2147483647;

alter sequence stock_putaway_rule_id_seq owner to postgres;

create sequence stock_quant_id_seq
	maxvalue 2147483647;

alter sequence stock_quant_id_seq owner to postgres;

create sequence stock_quant_package_id_seq
	maxvalue 2147483647;

alter sequence stock_quant_package_id_seq owner to postgres;

create sequence stock_quantity_history_id_seq
	maxvalue 2147483647;

alter sequence stock_quantity_history_id_seq owner to postgres;

create sequence stock_return_picking_id_seq
	maxvalue 2147483647;

alter sequence stock_return_picking_id_seq owner to postgres;

create sequence stock_return_picking_line_id_seq
	maxvalue 2147483647;

alter sequence stock_return_picking_line_id_seq owner to postgres;

create sequence stock_rule_id_seq
	maxvalue 2147483647;

alter sequence stock_rule_id_seq owner to postgres;

create sequence stock_rules_report_id_seq
	maxvalue 2147483647;

alter sequence stock_rules_report_id_seq owner to postgres;

create sequence stock_scheduler_compute_id_seq
	maxvalue 2147483647;

alter sequence stock_scheduler_compute_id_seq owner to postgres;

create sequence stock_scrap_id_seq
	maxvalue 2147483647;

alter sequence stock_scrap_id_seq owner to postgres;

create sequence stock_traceability_report_id_seq
	maxvalue 2147483647;

alter sequence stock_traceability_report_id_seq owner to postgres;

create sequence stock_track_confirmation_id_seq
	maxvalue 2147483647;

alter sequence stock_track_confirmation_id_seq owner to postgres;

create sequence stock_track_line_id_seq
	maxvalue 2147483647;

alter sequence stock_track_line_id_seq owner to postgres;

create sequence stock_valuation_layer_id_seq
	maxvalue 2147483647;

alter sequence stock_valuation_layer_id_seq owner to postgres;

create sequence stock_valuation_layer_revaluation_id_seq
	maxvalue 2147483647;

alter sequence stock_valuation_layer_revaluation_id_seq owner to postgres;

create sequence stock_warehouse_id_seq
	maxvalue 2147483647;

alter sequence stock_warehouse_id_seq owner to postgres;

create sequence stock_warehouse_orderpoint_id_seq
	maxvalue 2147483647;

alter sequence stock_warehouse_orderpoint_id_seq owner to postgres;

create sequence stock_warn_insufficient_qty_scrap_id_seq
	maxvalue 2147483647;

alter sequence stock_warn_insufficient_qty_scrap_id_seq owner to postgres;

create sequence tax_adjustments_wizard_id_seq
	maxvalue 2147483647;

alter sequence tax_adjustments_wizard_id_seq owner to postgres;

create sequence uom_category_id_seq
	maxvalue 2147483647;

alter sequence uom_category_id_seq owner to postgres;

create sequence uom_uom_id_seq
	maxvalue 2147483647;

alter sequence uom_uom_id_seq owner to postgres;

create sequence utm_campaign_id_seq
	maxvalue 2147483647;

alter sequence utm_campaign_id_seq owner to postgres;

create sequence utm_medium_id_seq
	maxvalue 2147483647;

alter sequence utm_medium_id_seq owner to postgres;

create sequence utm_source_id_seq
	maxvalue 2147483647;

alter sequence utm_source_id_seq owner to postgres;

create sequence utm_stage_id_seq
	maxvalue 2147483647;

alter sequence utm_stage_id_seq owner to postgres;

create sequence utm_tag_id_seq
	maxvalue 2147483647;

alter sequence utm_tag_id_seq owner to postgres;

create sequence validate_account_move_id_seq
	maxvalue 2147483647;

alter sequence validate_account_move_id_seq owner to postgres;

create sequence web_editor_converter_test_id_seq
	maxvalue 2147483647;

alter sequence web_editor_converter_test_id_seq owner to postgres;

create sequence web_editor_converter_test_sub_id_seq
	maxvalue 2147483647;

alter sequence web_editor_converter_test_sub_id_seq owner to postgres;

create sequence web_tour_tour_id_seq
	maxvalue 2147483647;

alter sequence web_tour_tour_id_seq owner to postgres;

create sequence wizard_ir_model_menu_create_id_seq
	maxvalue 2147483647;

alter sequence wizard_ir_model_menu_create_id_seq owner to postgres;

create sequence access_token_id_seq
	maxvalue 2147483647;

alter sequence access_token_id_seq owner to postgres;

create sequence account_account_id_seq
	maxvalue 2147483647;

alter sequence account_account_id_seq owner to postgres;

create sequence account_account_tag_id_seq
	maxvalue 2147483647;

alter sequence account_account_tag_id_seq owner to postgres;

create sequence account_account_template_id_seq
	maxvalue 2147483647;

alter sequence account_account_template_id_seq owner to postgres;

create sequence account_account_type_id_seq
	maxvalue 2147483647;

alter sequence account_account_type_id_seq owner to postgres;

create sequence account_analytic_account_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_account_id_seq owner to postgres;

create sequence account_analytic_default_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_default_id_seq owner to postgres;

create sequence account_analytic_distribution_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_distribution_id_seq owner to postgres;

create sequence account_analytic_group_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_group_id_seq owner to postgres;

create sequence account_analytic_line_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_line_id_seq owner to postgres;

create sequence account_analytic_tag_id_seq
	maxvalue 2147483647;

alter sequence account_analytic_tag_id_seq owner to postgres;

create sequence account_asset_id_seq
	maxvalue 2147483647;

alter sequence account_asset_id_seq owner to postgres;

create sequence account_asset_pause_id_seq
	maxvalue 2147483647;

alter sequence account_asset_pause_id_seq owner to postgres;

create sequence account_asset_sell_id_seq
	maxvalue 2147483647;

alter sequence account_asset_sell_id_seq owner to postgres;

create sequence account_automatic_entry_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_automatic_entry_wizard_id_seq owner to postgres;

create sequence account_bank_statement_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_id_seq owner to postgres;

create sequence account_bank_statement_cashbox_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_cashbox_id_seq owner to postgres;

create sequence account_bank_statement_closebalance_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_closebalance_id_seq owner to postgres;

create sequence account_bank_statement_import_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_import_id_seq owner to postgres;

create sequence account_bank_statement_import_journal_creation_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_import_journal_creation_id_seq owner to postgres;

create sequence account_bank_statement_line_id_seq
	maxvalue 2147483647;

alter sequence account_bank_statement_line_id_seq owner to postgres;

create sequence account_cash_rounding_id_seq
	maxvalue 2147483647;

alter sequence account_cash_rounding_id_seq owner to postgres;

create sequence account_cashbox_line_id_seq
	maxvalue 2147483647;

alter sequence account_cashbox_line_id_seq owner to postgres;

create sequence account_change_lock_date_id_seq
	maxvalue 2147483647;

alter sequence account_change_lock_date_id_seq owner to postgres;

create sequence account_chart_template_id_seq
	maxvalue 2147483647;

alter sequence account_chart_template_id_seq owner to postgres;

create sequence account_common_journal_report_id_seq
	maxvalue 2147483647;

alter sequence account_common_journal_report_id_seq owner to postgres;

create sequence account_common_report_id_seq
	maxvalue 2147483647;

alter sequence account_common_report_id_seq owner to postgres;

create sequence account_edi_document_id_seq
	maxvalue 2147483647;

alter sequence account_edi_document_id_seq owner to postgres;

create sequence account_edi_format_id_seq
	maxvalue 2147483647;

alter sequence account_edi_format_id_seq owner to postgres;

create sequence account_financial_html_report_id_seq
	maxvalue 2147483647;

alter sequence account_financial_html_report_id_seq owner to postgres;

create sequence account_financial_html_report_line_id_seq
	maxvalue 2147483647;

alter sequence account_financial_html_report_line_id_seq owner to postgres;

create sequence account_financial_year_op_id_seq
	maxvalue 2147483647;

alter sequence account_financial_year_op_id_seq owner to postgres;

create sequence account_fiscal_position_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_id_seq owner to postgres;

create sequence account_fiscal_position_account_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_account_id_seq owner to postgres;

create sequence account_fiscal_position_account_template_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_account_template_id_seq owner to postgres;

create sequence account_fiscal_position_tax_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_tax_id_seq owner to postgres;

create sequence account_fiscal_position_tax_template_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_tax_template_id_seq owner to postgres;

create sequence account_fiscal_position_template_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_position_template_id_seq owner to postgres;

create sequence account_fiscal_year_id_seq
	maxvalue 2147483647;

alter sequence account_fiscal_year_id_seq owner to postgres;

create sequence account_followup_followup_line_id_seq
	maxvalue 2147483647;

alter sequence account_followup_followup_line_id_seq owner to postgres;

create sequence account_full_reconcile_id_seq
	maxvalue 2147483647;

alter sequence account_full_reconcile_id_seq owner to postgres;

create sequence account_group_id_seq
	maxvalue 2147483647;

alter sequence account_group_id_seq owner to postgres;

create sequence account_group_template_id_seq
	maxvalue 2147483647;

alter sequence account_group_template_id_seq owner to postgres;

create sequence account_incoterms_id_seq
	maxvalue 2147483647;

alter sequence account_incoterms_id_seq owner to postgres;

create sequence account_invoice_extract_words_id_seq
	maxvalue 2147483647;

alter sequence account_invoice_extract_words_id_seq owner to postgres;

create sequence account_invoice_send_id_seq
	maxvalue 2147483647;

alter sequence account_invoice_send_id_seq owner to postgres;

create sequence account_journal_id_seq
	maxvalue 2147483647;

alter sequence account_journal_id_seq owner to postgres;

create sequence account_journal_group_id_seq
	maxvalue 2147483647;

alter sequence account_journal_group_id_seq owner to postgres;

create sequence account_link_journal_id_seq
	maxvalue 2147483647;

alter sequence account_link_journal_id_seq owner to postgres;

create sequence account_link_journal_line_id_seq
	maxvalue 2147483647;

alter sequence account_link_journal_line_id_seq owner to postgres;

create sequence account_move_id_seq
	maxvalue 2147483647;

alter sequence account_move_id_seq owner to postgres;

create sequence account_move_line_id_seq
	maxvalue 2147483647;

alter sequence account_move_line_id_seq owner to postgres;

create sequence account_move_reversal_id_seq
	maxvalue 2147483647;

alter sequence account_move_reversal_id_seq owner to postgres;

create sequence account_multicurrency_revaluation_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_multicurrency_revaluation_wizard_id_seq owner to postgres;

create sequence account_online_account_id_seq
	maxvalue 2147483647;

alter sequence account_online_account_id_seq owner to postgres;

create sequence account_online_journal_id_seq
	maxvalue 2147483647;

alter sequence account_online_journal_id_seq owner to postgres;

create sequence account_online_link_id_seq
	maxvalue 2147483647;

alter sequence account_online_link_id_seq owner to postgres;

create sequence account_online_link_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_online_link_wizard_id_seq owner to postgres;

create sequence account_online_provider_id_seq
	maxvalue 2147483647;

alter sequence account_online_provider_id_seq owner to postgres;

create sequence account_online_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_online_wizard_id_seq owner to postgres;

create sequence account_partial_reconcile_id_seq
	maxvalue 2147483647;

alter sequence account_partial_reconcile_id_seq owner to postgres;

create sequence account_payment_id_seq
	maxvalue 2147483647;

alter sequence account_payment_id_seq owner to postgres;

create sequence account_payment_method_id_seq
	maxvalue 2147483647;

alter sequence account_payment_method_id_seq owner to postgres;

create sequence account_payment_register_id_seq
	maxvalue 2147483647;

alter sequence account_payment_register_id_seq owner to postgres;

create sequence account_payment_term_id_seq
	maxvalue 2147483647;

alter sequence account_payment_term_id_seq owner to postgres;

create sequence account_payment_term_line_id_seq
	maxvalue 2147483647;

alter sequence account_payment_term_line_id_seq owner to postgres;

create sequence account_print_journal_id_seq
	maxvalue 2147483647;

alter sequence account_print_journal_id_seq owner to postgres;

create sequence account_reconcile_model_id_seq
	maxvalue 2147483647;

alter sequence account_reconcile_model_id_seq owner to postgres;

create sequence account_reconcile_model_line_id_seq
	maxvalue 2147483647;

alter sequence account_reconcile_model_line_id_seq owner to postgres;

create sequence account_reconcile_model_line_template_id_seq
	maxvalue 2147483647;

alter sequence account_reconcile_model_line_template_id_seq owner to postgres;

create sequence account_reconcile_model_partner_mapping_id_seq
	maxvalue 2147483647;

alter sequence account_reconcile_model_partner_mapping_id_seq owner to postgres;

create sequence account_reconcile_model_template_id_seq
	maxvalue 2147483647;

alter sequence account_reconcile_model_template_id_seq owner to postgres;

create sequence account_report_footnote_id_seq
	maxvalue 2147483647;

alter sequence account_report_footnote_id_seq owner to postgres;

create sequence account_report_manager_id_seq
	maxvalue 2147483647;

alter sequence account_report_manager_id_seq owner to postgres;

create sequence account_reports_export_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_reports_export_wizard_id_seq owner to postgres;

create sequence account_reports_export_wizard_format_id_seq
	maxvalue 2147483647;

alter sequence account_reports_export_wizard_format_id_seq owner to postgres;

create sequence account_resequence_wizard_id_seq
	maxvalue 2147483647;

alter sequence account_resequence_wizard_id_seq owner to postgres;

create sequence account_setup_bank_manual_config_id_seq
	maxvalue 2147483647;

alter sequence account_setup_bank_manual_config_id_seq owner to postgres;

create sequence account_tax_id_seq
	maxvalue 2147483647;

alter sequence account_tax_id_seq owner to postgres;

create sequence account_tax_group_id_seq
	maxvalue 2147483647;

alter sequence account_tax_group_id_seq owner to postgres;

create sequence account_tax_repartition_line_id_seq
	maxvalue 2147483647;

alter sequence account_tax_repartition_line_id_seq owner to postgres;

create sequence account_tax_repartition_line_template_id_seq
	maxvalue 2147483647;

alter sequence account_tax_repartition_line_template_id_seq owner to postgres;

create sequence account_tax_report_id_seq
	maxvalue 2147483647;

alter sequence account_tax_report_id_seq owner to postgres;

create sequence account_tax_report_line_id_seq
	maxvalue 2147483647;

alter sequence account_tax_report_line_id_seq owner to postgres;

create sequence account_tax_template_id_seq
	maxvalue 2147483647;

alter sequence account_tax_template_id_seq owner to postgres;

create sequence account_tour_upload_bill_id_seq
	maxvalue 2147483647;

alter sequence account_tour_upload_bill_id_seq owner to postgres;

create sequence account_tour_upload_bill_email_confirm_id_seq
	maxvalue 2147483647;

alter sequence account_tour_upload_bill_email_confirm_id_seq owner to postgres;

create sequence account_transfer_model_id_seq
	maxvalue 2147483647;

alter sequence account_transfer_model_id_seq owner to postgres;

create sequence account_transfer_model_line_id_seq
	maxvalue 2147483647;

alter sequence account_transfer_model_line_id_seq owner to postgres;

create sequence account_unreconcile_id_seq
	maxvalue 2147483647;

alter sequence account_unreconcile_id_seq owner to postgres;

create sequence asset_modify_id_seq
	maxvalue 2147483647;

alter sequence asset_modify_id_seq owner to postgres;

create sequence auth_totp_wizard_id_seq
	maxvalue 2147483647;

alter sequence auth_totp_wizard_id_seq owner to postgres;

create sequence barcode_nomenclature_id_seq
	maxvalue 2147483647;

alter sequence barcode_nomenclature_id_seq owner to postgres;

create sequence barcode_rule_id_seq
	maxvalue 2147483647;

alter sequence barcode_rule_id_seq owner to postgres;

create sequence base_document_layout_id_seq
	maxvalue 2147483647;

alter sequence base_document_layout_id_seq owner to postgres;

create sequence base_import_import_id_seq
	maxvalue 2147483647;

alter sequence base_import_import_id_seq owner to postgres;

create sequence base_import_mapping_id_seq
	maxvalue 2147483647;

alter sequence base_import_mapping_id_seq owner to postgres;

create sequence base_import_tests_models_char_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_id_seq owner to postgres;

create sequence base_import_tests_models_char_noreadonly_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_noreadonly_id_seq owner to postgres;

create sequence base_import_tests_models_char_readonly_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_readonly_id_seq owner to postgres;

create sequence base_import_tests_models_char_required_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_required_id_seq owner to postgres;

create sequence base_import_tests_models_char_states_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_states_id_seq owner to postgres;

create sequence base_import_tests_models_char_stillreadonly_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_char_stillreadonly_id_seq owner to postgres;

create sequence base_import_tests_models_complex_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_complex_id_seq owner to postgres;

create sequence base_import_tests_models_float_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_float_id_seq owner to postgres;

create sequence base_import_tests_models_m2o_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_m2o_id_seq owner to postgres;

create sequence base_import_tests_models_m2o_related_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_m2o_related_id_seq owner to postgres;

create sequence base_import_tests_models_m2o_required_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_m2o_required_id_seq owner to postgres;

create sequence base_import_tests_models_m2o_required_related_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_m2o_required_related_id_seq owner to postgres;

create sequence base_import_tests_models_o2m_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_o2m_id_seq owner to postgres;

create sequence base_import_tests_models_o2m_child_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_o2m_child_id_seq owner to postgres;

create sequence base_import_tests_models_preview_id_seq
	maxvalue 2147483647;

alter sequence base_import_tests_models_preview_id_seq owner to postgres;

create sequence base_language_export_id_seq
	maxvalue 2147483647;

alter sequence base_language_export_id_seq owner to postgres;

create sequence base_language_import_id_seq
	maxvalue 2147483647;

alter sequence base_language_import_id_seq owner to postgres;

create sequence base_language_install_id_seq
	maxvalue 2147483647;

alter sequence base_language_install_id_seq owner to postgres;

create sequence base_module_uninstall_id_seq
	maxvalue 2147483647;

alter sequence base_module_uninstall_id_seq owner to postgres;

create sequence base_module_update_id_seq
	maxvalue 2147483647;

alter sequence base_module_update_id_seq owner to postgres;

create sequence base_module_upgrade_id_seq
	maxvalue 2147483647;

alter sequence base_module_upgrade_id_seq owner to postgres;

create sequence base_partner_merge_automatic_wizard_id_seq
	maxvalue 2147483647;

alter sequence base_partner_merge_automatic_wizard_id_seq owner to postgres;

create sequence base_partner_merge_line_id_seq
	maxvalue 2147483647;

alter sequence base_partner_merge_line_id_seq owner to postgres;

create sequence base_update_translations_id_seq
	maxvalue 2147483647;

alter sequence base_update_translations_id_seq owner to postgres;

create sequence bus_bus_id_seq
	maxvalue 2147483647;

alter sequence bus_bus_id_seq owner to postgres;

create sequence bus_presence_id_seq
	maxvalue 2147483647;

alter sequence bus_presence_id_seq owner to postgres;

create sequence cash_box_out_id_seq
	maxvalue 2147483647;

alter sequence cash_box_out_id_seq owner to postgres;

create sequence cash_flow_wizard_id_seq
	maxvalue 2147483647;

alter sequence cash_flow_wizard_id_seq owner to postgres;

create sequence cesa_location_id_seq
	maxvalue 2147483647;

alter sequence cesa_location_id_seq owner to postgres;

create sequence change_password_user_id_seq
	maxvalue 2147483647;

alter sequence change_password_user_id_seq owner to postgres;

create sequence change_password_wizard_id_seq
	maxvalue 2147483647;

alter sequence change_password_wizard_id_seq owner to postgres;

create sequence choose_delivery_carrier_id_seq
	maxvalue 2147483647;

alter sequence choose_delivery_carrier_id_seq owner to postgres;

create sequence choose_delivery_package_id_seq
	maxvalue 2147483647;

alter sequence choose_delivery_package_id_seq owner to postgres;

create sequence confirm_stock_sms_id_seq
	maxvalue 2147483647;

alter sequence confirm_stock_sms_id_seq owner to postgres;

create sequence crm_tag_id_seq
	maxvalue 2147483647;

alter sequence crm_tag_id_seq owner to postgres;

create sequence crm_team_id_seq
	maxvalue 2147483647;

alter sequence crm_team_id_seq owner to postgres;

create sequence decimal_precision_id_seq
	maxvalue 2147483647;

alter sequence decimal_precision_id_seq owner to postgres;

create sequence delivery_agency_id_seq
	maxvalue 2147483647;

alter sequence delivery_agency_id_seq owner to postgres;

create sequence delivery_carrier_id_seq
	maxvalue 2147483647;

alter sequence delivery_carrier_id_seq owner to postgres;

create sequence delivery_price_rule_id_seq
	maxvalue 2147483647;

alter sequence delivery_price_rule_id_seq owner to postgres;

create sequence delivery_rate_detail_id_seq
	maxvalue 2147483647;

alter sequence delivery_rate_detail_id_seq owner to postgres;

create sequence delivery_type_id_seq
	maxvalue 2147483647;

alter sequence delivery_type_id_seq owner to postgres;

create sequence digest_digest_id_seq
	maxvalue 2147483647;

alter sequence digest_digest_id_seq owner to postgres;

create sequence digest_tip_id_seq
	maxvalue 2147483647;

alter sequence digest_tip_id_seq owner to postgres;

create sequence discount_id_seq
	maxvalue 2147483647;

alter sequence discount_id_seq owner to postgres;

create sequence evcp_view_id_seq
	maxvalue 2147483647;

alter sequence evcp_view_id_seq owner to postgres;

create sequence fetchmail_server_id_seq
	maxvalue 2147483647;

alter sequence fetchmail_server_id_seq owner to postgres;

create sequence followup_send_id_seq
	maxvalue 2147483647;

alter sequence followup_send_id_seq owner to postgres;

create sequence handling_rate_id_seq
	maxvalue 2147483647;

alter sequence handling_rate_id_seq owner to postgres;

create sequence handling_rate_detail_id_seq
	maxvalue 2147483647;

alter sequence handling_rate_detail_id_seq owner to postgres;

create sequence handling_rate_line_id_seq
	maxvalue 2147483647;

alter sequence handling_rate_line_id_seq owner to postgres;

create sequence iap_account_id_seq
	maxvalue 2147483647;

alter sequence iap_account_id_seq owner to postgres;

create sequence id_zone_id_seq
	maxvalue 2147483647;

alter sequence id_zone_id_seq owner to postgres;

create sequence ir_actions_id_seq
	maxvalue 2147483647;

alter sequence ir_actions_id_seq owner to postgres;

create sequence ir_act_window_view_id_seq
	maxvalue 2147483647;

alter sequence ir_act_window_view_id_seq owner to postgres;

create sequence ir_actions_todo_id_seq
	maxvalue 2147483647;

alter sequence ir_actions_todo_id_seq owner to postgres;

create sequence ir_attachment_id_seq
	maxvalue 2147483647;

alter sequence ir_attachment_id_seq owner to postgres;

create sequence ir_config_parameter_id_seq
	maxvalue 2147483647;

alter sequence ir_config_parameter_id_seq owner to postgres;

create sequence ir_cron_id_seq
	maxvalue 2147483647;

alter sequence ir_cron_id_seq owner to postgres;

create sequence ir_default_id_seq
	maxvalue 2147483647;

alter sequence ir_default_id_seq owner to postgres;

create sequence ir_demo_id_seq
	maxvalue 2147483647;

alter sequence ir_demo_id_seq owner to postgres;

create sequence ir_demo_failure_id_seq
	maxvalue 2147483647;

alter sequence ir_demo_failure_id_seq owner to postgres;

create sequence ir_demo_failure_wizard_id_seq
	maxvalue 2147483647;

alter sequence ir_demo_failure_wizard_id_seq owner to postgres;

create sequence ir_exports_id_seq
	maxvalue 2147483647;

alter sequence ir_exports_id_seq owner to postgres;

create sequence ir_exports_line_id_seq
	maxvalue 2147483647;

alter sequence ir_exports_line_id_seq owner to postgres;

create sequence ir_filters_id_seq
	maxvalue 2147483647;

alter sequence ir_filters_id_seq owner to postgres;

create sequence ir_logging_id_seq
	maxvalue 2147483647;

alter sequence ir_logging_id_seq owner to postgres;

create sequence ir_mail_server_id_seq
	maxvalue 2147483647;

alter sequence ir_mail_server_id_seq owner to postgres;

create sequence ir_model_id_seq
	maxvalue 2147483647;

alter sequence ir_model_id_seq owner to postgres;

create sequence ir_model_access_id_seq
	maxvalue 2147483647;

alter sequence ir_model_access_id_seq owner to postgres;

create sequence ir_model_constraint_id_seq
	maxvalue 2147483647;

alter sequence ir_model_constraint_id_seq owner to postgres;

create sequence ir_model_data_id_seq
	maxvalue 2147483647;

alter sequence ir_model_data_id_seq owner to postgres;

create sequence ir_model_fields_id_seq
	maxvalue 2147483647;

alter sequence ir_model_fields_id_seq owner to postgres;

create sequence ir_model_fields_selection_id_seq
	maxvalue 2147483647;

alter sequence ir_model_fields_selection_id_seq owner to postgres;

create sequence ir_model_relation_id_seq
	maxvalue 2147483647;

alter sequence ir_model_relation_id_seq owner to postgres;

create sequence ir_module_category_id_seq
	maxvalue 2147483647;

alter sequence ir_module_category_id_seq owner to postgres;

create sequence ir_module_module_id_seq
	maxvalue 2147483647;

alter sequence ir_module_module_id_seq owner to postgres;

create sequence ir_module_module_dependency_id_seq
	maxvalue 2147483647;

alter sequence ir_module_module_dependency_id_seq owner to postgres;

create sequence ir_module_module_exclusion_id_seq
	maxvalue 2147483647;

alter sequence ir_module_module_exclusion_id_seq owner to postgres;

create sequence ir_property_id_seq
	maxvalue 2147483647;

alter sequence ir_property_id_seq owner to postgres;

create sequence ir_rule_id_seq
	maxvalue 2147483647;

alter sequence ir_rule_id_seq owner to postgres;

create sequence ir_sequence_id_seq
	maxvalue 2147483647;

alter sequence ir_sequence_id_seq owner to postgres;

create sequence ir_sequence_date_range_id_seq
	maxvalue 2147483647;

alter sequence ir_sequence_date_range_id_seq owner to postgres;

create sequence ir_server_object_lines_id_seq
	maxvalue 2147483647;

alter sequence ir_server_object_lines_id_seq owner to postgres;

create sequence ir_translation_id_seq
	maxvalue 2147483647;

alter sequence ir_translation_id_seq owner to postgres;

create sequence ir_ui_menu_id_seq
	maxvalue 2147483647;

alter sequence ir_ui_menu_id_seq owner to postgres;

create sequence ir_ui_view_id_seq
	maxvalue 2147483647;

alter sequence ir_ui_view_id_seq owner to postgres;

create sequence ir_ui_view_custom_id_seq
	maxvalue 2147483647;

alter sequence ir_ui_view_custom_id_seq owner to postgres;

create sequence mail_activity_id_seq
	maxvalue 2147483647;

alter sequence mail_activity_id_seq owner to postgres;

create sequence mail_activity_type_id_seq
	maxvalue 2147483647;

alter sequence mail_activity_type_id_seq owner to postgres;

create sequence mail_alias_id_seq
	maxvalue 2147483647;

alter sequence mail_alias_id_seq owner to postgres;

create sequence mail_blacklist_id_seq
	maxvalue 2147483647;

alter sequence mail_blacklist_id_seq owner to postgres;

create sequence mail_blacklist_remove_id_seq
	maxvalue 2147483647;

alter sequence mail_blacklist_remove_id_seq owner to postgres;

create sequence mail_channel_id_seq
	maxvalue 2147483647;

alter sequence mail_channel_id_seq owner to postgres;

create sequence mail_channel_partner_id_seq
	maxvalue 2147483647;

alter sequence mail_channel_partner_id_seq owner to postgres;

create sequence mail_compose_message_id_seq
	maxvalue 2147483647;

alter sequence mail_compose_message_id_seq owner to postgres;

create sequence mail_followers_id_seq
	maxvalue 2147483647;

alter sequence mail_followers_id_seq owner to postgres;

create sequence mail_mail_id_seq
	maxvalue 2147483647;

alter sequence mail_mail_id_seq owner to postgres;

create sequence mail_message_id_seq
	maxvalue 2147483647;

alter sequence mail_message_id_seq owner to postgres;

create sequence mail_message_res_partner_needaction_rel_id_seq
	maxvalue 2147483647;

alter sequence mail_message_res_partner_needaction_rel_id_seq owner to postgres;

create sequence mail_message_subtype_id_seq
	maxvalue 2147483647;

alter sequence mail_message_subtype_id_seq owner to postgres;

create sequence mail_moderation_id_seq
	maxvalue 2147483647;

alter sequence mail_moderation_id_seq owner to postgres;

create sequence mail_resend_cancel_id_seq
	maxvalue 2147483647;

alter sequence mail_resend_cancel_id_seq owner to postgres;

create sequence mail_resend_message_id_seq
	maxvalue 2147483647;

alter sequence mail_resend_message_id_seq owner to postgres;

create sequence mail_resend_partner_id_seq
	maxvalue 2147483647;

alter sequence mail_resend_partner_id_seq owner to postgres;

create sequence mail_shortcode_id_seq
	maxvalue 2147483647;

alter sequence mail_shortcode_id_seq owner to postgres;

create sequence mail_template_id_seq
	maxvalue 2147483647;

alter sequence mail_template_id_seq owner to postgres;

create sequence mail_template_preview_id_seq
	maxvalue 2147483647;

alter sequence mail_template_preview_id_seq owner to postgres;

create sequence mail_tracking_value_id_seq
	maxvalue 2147483647;

alter sequence mail_tracking_value_id_seq owner to postgres;

create sequence mail_wizard_invite_id_seq
	maxvalue 2147483647;

alter sequence mail_wizard_invite_id_seq owner to postgres;

create sequence order_weighing_id_seq
	maxvalue 2147483647;

alter sequence order_weighing_id_seq owner to postgres;

create sequence packaging_rate_id_seq
	maxvalue 2147483647;

alter sequence packaging_rate_id_seq owner to postgres;

create sequence packaging_rate_detail_id_seq
	maxvalue 2147483647;

alter sequence packaging_rate_detail_id_seq owner to postgres;

create sequence packaging_rate_line_id_seq
	maxvalue 2147483647;

alter sequence packaging_rate_line_id_seq owner to postgres;

create sequence payment_acquirer_id_seq
	maxvalue 2147483647;

alter sequence payment_acquirer_id_seq owner to postgres;

create sequence payment_acquirer_onboarding_wizard_id_seq
	maxvalue 2147483647;

alter sequence payment_acquirer_onboarding_wizard_id_seq owner to postgres;

create sequence payment_icon_id_seq
	maxvalue 2147483647;

alter sequence payment_icon_id_seq owner to postgres;

create sequence payment_link_wizard_id_seq
	maxvalue 2147483647;

alter sequence payment_link_wizard_id_seq owner to postgres;

create sequence payment_token_id_seq
	maxvalue 2147483647;

alter sequence payment_token_id_seq owner to postgres;

create sequence payment_transaction_id_seq
	maxvalue 2147483647;

alter sequence payment_transaction_id_seq owner to postgres;

create sequence phone_blacklist_id_seq
	maxvalue 2147483647;

alter sequence phone_blacklist_id_seq owner to postgres;

create sequence phone_blacklist_remove_id_seq
	maxvalue 2147483647;

alter sequence phone_blacklist_remove_id_seq owner to postgres;

create sequence portal_share_id_seq
	maxvalue 2147483647;

alter sequence portal_share_id_seq owner to postgres;

create sequence portal_wizard_id_seq
	maxvalue 2147483647;

alter sequence portal_wizard_id_seq owner to postgres;

create sequence portal_wizard_user_id_seq
	maxvalue 2147483647;

alter sequence portal_wizard_user_id_seq owner to postgres;

create sequence procurement_group_id_seq
	maxvalue 2147483647;

alter sequence procurement_group_id_seq owner to postgres;

create sequence product_attribute_id_seq
	maxvalue 2147483647;

alter sequence product_attribute_id_seq owner to postgres;

create sequence product_attribute_custom_value_id_seq
	maxvalue 2147483647;

alter sequence product_attribute_custom_value_id_seq owner to postgres;

create sequence product_attribute_value_id_seq
	maxvalue 2147483647;

alter sequence product_attribute_value_id_seq owner to postgres;

create sequence product_category_id_seq
	maxvalue 2147483647;

alter sequence product_category_id_seq owner to postgres;

create sequence product_packaging_id_seq
	maxvalue 2147483647;

alter sequence product_packaging_id_seq owner to postgres;

create sequence product_pricelist_id_seq
	maxvalue 2147483647;

alter sequence product_pricelist_id_seq owner to postgres;

create sequence product_pricelist_item_id_seq
	maxvalue 2147483647;

alter sequence product_pricelist_item_id_seq owner to postgres;

create sequence product_product_id_seq
	maxvalue 2147483647;

alter sequence product_product_id_seq owner to postgres;

create sequence product_removal_id_seq
	maxvalue 2147483647;

alter sequence product_removal_id_seq owner to postgres;

create sequence product_replenish_id_seq
	maxvalue 2147483647;

alter sequence product_replenish_id_seq owner to postgres;

create sequence product_supplierinfo_id_seq
	maxvalue 2147483647;

alter sequence product_supplierinfo_id_seq owner to postgres;

create sequence product_template_id_seq
	maxvalue 2147483647;

alter sequence product_template_id_seq owner to postgres;

create sequence product_template_attribute_exclusion_id_seq
	maxvalue 2147483647;

alter sequence product_template_attribute_exclusion_id_seq owner to postgres;

create sequence product_template_attribute_line_id_seq
	maxvalue 2147483647;

alter sequence product_template_attribute_line_id_seq owner to postgres;

create sequence product_template_attribute_value_id_seq
	maxvalue 2147483647;

alter sequence product_template_attribute_value_id_seq owner to postgres;

create sequence purchase_order_id_seq
	maxvalue 2147483647;

alter sequence purchase_order_id_seq owner to postgres;

create sequence purchase_order_line_id_seq
	maxvalue 2147483647;

alter sequence purchase_order_line_id_seq owner to postgres;

create sequence report_layout_id_seq
	maxvalue 2147483647;

alter sequence report_layout_id_seq owner to postgres;

create sequence report_paperformat_id_seq
	maxvalue 2147483647;

alter sequence report_paperformat_id_seq owner to postgres;

create sequence res_bank_id_seq
	maxvalue 2147483647;

alter sequence res_bank_id_seq owner to postgres;

create sequence res_company_id_seq
	maxvalue 2147483647;

alter sequence res_company_id_seq owner to postgres;

create sequence res_config_id_seq
	maxvalue 2147483647;

alter sequence res_config_id_seq owner to postgres;

create sequence res_config_installer_id_seq
	maxvalue 2147483647;

alter sequence res_config_installer_id_seq owner to postgres;

create sequence res_config_settings_id_seq
	maxvalue 2147483647;

alter sequence res_config_settings_id_seq owner to postgres;

create sequence res_country_id_seq
	maxvalue 2147483647;

alter sequence res_country_id_seq owner to postgres;

create sequence res_country_group_id_seq
	maxvalue 2147483647;

alter sequence res_country_group_id_seq owner to postgres;

create sequence res_country_state_id_seq
	maxvalue 2147483647;

alter sequence res_country_state_id_seq owner to postgres;

create sequence res_currency_id_seq
	maxvalue 2147483647;

alter sequence res_currency_id_seq owner to postgres;

create sequence res_currency_rate_id_seq
	maxvalue 2147483647;

alter sequence res_currency_rate_id_seq owner to postgres;

create sequence res_groups_id_seq
	maxvalue 2147483647;

alter sequence res_groups_id_seq owner to postgres;

create sequence res_lang_id_seq
	maxvalue 2147483647;

alter sequence res_lang_id_seq owner to postgres;

create sequence res_partner_id_seq
	maxvalue 2147483647;

alter sequence res_partner_id_seq owner to postgres;

create sequence res_partner_autocomplete_sync_id_seq
	maxvalue 2147483647;

alter sequence res_partner_autocomplete_sync_id_seq owner to postgres;

create sequence res_partner_bank_id_seq
	maxvalue 2147483647;

alter sequence res_partner_bank_id_seq owner to postgres;

create sequence res_partner_category_id_seq
	maxvalue 2147483647;

alter sequence res_partner_category_id_seq owner to postgres;

create sequence res_partner_industry_id_seq
	maxvalue 2147483647;

alter sequence res_partner_industry_id_seq owner to postgres;

create sequence res_partner_title_id_seq
	maxvalue 2147483647;

alter sequence res_partner_title_id_seq owner to postgres;

create sequence res_users_id_seq
	maxvalue 2147483647;

alter sequence res_users_id_seq owner to postgres;

create sequence res_users_apikeys_id_seq
	maxvalue 2147483647;

alter sequence res_users_apikeys_id_seq owner to postgres;

create sequence res_users_apikeys_description_id_seq
	maxvalue 2147483647;

alter sequence res_users_apikeys_description_id_seq owner to postgres;

create sequence res_users_identitycheck_id_seq
	maxvalue 2147483647;

alter sequence res_users_identitycheck_id_seq owner to postgres;

create sequence res_users_log_id_seq
	maxvalue 2147483647;

alter sequence res_users_log_id_seq owner to postgres;

create sequence reset_view_arch_wizard_id_seq
	maxvalue 2147483647;

alter sequence reset_view_arch_wizard_id_seq owner to postgres;

create sequence resource_calendar_id_seq
	maxvalue 2147483647;

alter sequence resource_calendar_id_seq owner to postgres;

create sequence resource_calendar_attendance_id_seq
	maxvalue 2147483647;

alter sequence resource_calendar_attendance_id_seq owner to postgres;

create sequence resource_calendar_leaves_id_seq
	maxvalue 2147483647;

alter sequence resource_calendar_leaves_id_seq owner to postgres;

create sequence resource_resource_id_seq
	maxvalue 2147483647;

alter sequence resource_resource_id_seq owner to postgres;

create sequence resource_test_id_seq
	maxvalue 2147483647;

alter sequence resource_test_id_seq owner to postgres;

create sequence sale_advance_payment_inv_id_seq
	maxvalue 2147483647;

alter sequence sale_advance_payment_inv_id_seq owner to postgres;

create sequence sale_order_id_seq
	maxvalue 2147483647;

alter sequence sale_order_id_seq owner to postgres;

create sequence sale_order_cancel_id_seq
	maxvalue 2147483647;

alter sequence sale_order_cancel_id_seq owner to postgres;

create sequence sale_order_line_id_seq
	maxvalue 2147483647;

alter sequence sale_order_line_id_seq owner to postgres;

create sequence sale_order_option_id_seq
	maxvalue 2147483647;

alter sequence sale_order_option_id_seq owner to postgres;

create sequence sale_order_template_id_seq
	maxvalue 2147483647;

alter sequence sale_order_template_id_seq owner to postgres;

create sequence sale_order_template_line_id_seq
	maxvalue 2147483647;

alter sequence sale_order_template_line_id_seq owner to postgres;

create sequence sale_order_template_option_id_seq
	maxvalue 2147483647;

alter sequence sale_order_template_option_id_seq owner to postgres;

create sequence sale_payment_acquirer_onboarding_wizard_id_seq
	maxvalue 2147483647;

alter sequence sale_payment_acquirer_onboarding_wizard_id_seq owner to postgres;

create sequence sms_cancel_id_seq
	maxvalue 2147483647;

alter sequence sms_cancel_id_seq owner to postgres;

create sequence sms_composer_id_seq
	maxvalue 2147483647;

alter sequence sms_composer_id_seq owner to postgres;

create sequence sms_resend_id_seq
	maxvalue 2147483647;

alter sequence sms_resend_id_seq owner to postgres;

create sequence sms_resend_recipient_id_seq
	maxvalue 2147483647;

alter sequence sms_resend_recipient_id_seq owner to postgres;

create sequence sms_sms_id_seq
	maxvalue 2147483647;

alter sequence sms_sms_id_seq owner to postgres;

create sequence sms_template_id_seq
	maxvalue 2147483647;

alter sequence sms_template_id_seq owner to postgres;

create sequence sms_template_preview_id_seq
	maxvalue 2147483647;

alter sequence sms_template_preview_id_seq owner to postgres;

create sequence snailmail_confirm_followup_id_seq
	maxvalue 2147483647;

alter sequence snailmail_confirm_followup_id_seq owner to postgres;

create sequence snailmail_confirm_invoice_id_seq
	maxvalue 2147483647;

alter sequence snailmail_confirm_invoice_id_seq owner to postgres;

create sequence snailmail_letter_id_seq
	maxvalue 2147483647;

alter sequence snailmail_letter_id_seq owner to postgres;

create sequence snailmail_letter_cancel_id_seq
	maxvalue 2147483647;

alter sequence snailmail_letter_cancel_id_seq owner to postgres;

create sequence snailmail_letter_format_error_id_seq
	maxvalue 2147483647;

alter sequence snailmail_letter_format_error_id_seq owner to postgres;

create sequence snailmail_letter_missing_required_fields_id_seq
	maxvalue 2147483647;

alter sequence snailmail_letter_missing_required_fields_id_seq owner to postgres;

create sequence stock_assign_serial_id_seq
	maxvalue 2147483647;

alter sequence stock_assign_serial_id_seq owner to postgres;

create sequence stock_backorder_confirmation_id_seq
	maxvalue 2147483647;

alter sequence stock_backorder_confirmation_id_seq owner to postgres;

create sequence stock_backorder_confirmation_line_id_seq
	maxvalue 2147483647;

alter sequence stock_backorder_confirmation_line_id_seq owner to postgres;

create sequence stock_change_product_qty_id_seq
	maxvalue 2147483647;

alter sequence stock_change_product_qty_id_seq owner to postgres;

create sequence stock_immediate_transfer_id_seq
	maxvalue 2147483647;

alter sequence stock_immediate_transfer_id_seq owner to postgres;

create sequence stock_immediate_transfer_line_id_seq
	maxvalue 2147483647;

alter sequence stock_immediate_transfer_line_id_seq owner to postgres;

create sequence stock_inventory_id_seq
	maxvalue 2147483647;

alter sequence stock_inventory_id_seq owner to postgres;

create sequence stock_inventory_line_id_seq
	maxvalue 2147483647;

alter sequence stock_inventory_line_id_seq owner to postgres;

create sequence stock_location_id_seq
	maxvalue 2147483647;

alter sequence stock_location_id_seq owner to postgres;

create sequence stock_location_route_id_seq
	maxvalue 2147483647;

alter sequence stock_location_route_id_seq owner to postgres;

create sequence stock_move_id_seq
	maxvalue 2147483647;

alter sequence stock_move_id_seq owner to postgres;

create sequence stock_move_line_id_seq
	maxvalue 2147483647;

alter sequence stock_move_line_id_seq owner to postgres;

create sequence stock_orderpoint_snooze_id_seq
	maxvalue 2147483647;

alter sequence stock_orderpoint_snooze_id_seq owner to postgres;

create sequence stock_package_destination_id_seq
	maxvalue 2147483647;

alter sequence stock_package_destination_id_seq owner to postgres;

create sequence stock_package_level_id_seq
	maxvalue 2147483647;

alter sequence stock_package_level_id_seq owner to postgres;

create sequence stock_picking_id_seq
	maxvalue 2147483647;

alter sequence stock_picking_id_seq owner to postgres;

create sequence stock_picking_type_id_seq
	maxvalue 2147483647;

alter sequence stock_picking_type_id_seq owner to postgres;

create sequence stock_production_lot_id_seq
	maxvalue 2147483647;

alter sequence stock_production_lot_id_seq owner to postgres;

create sequence stock_putaway_rule_id_seq
	maxvalue 2147483647;

alter sequence stock_putaway_rule_id_seq owner to postgres;

create sequence stock_quant_id_seq
	maxvalue 2147483647;

alter sequence stock_quant_id_seq owner to postgres;

create sequence stock_quant_package_id_seq
	maxvalue 2147483647;

alter sequence stock_quant_package_id_seq owner to postgres;

create sequence stock_quantity_history_id_seq
	maxvalue 2147483647;

alter sequence stock_quantity_history_id_seq owner to postgres;

create sequence stock_return_picking_id_seq
	maxvalue 2147483647;

alter sequence stock_return_picking_id_seq owner to postgres;

create sequence stock_return_picking_line_id_seq
	maxvalue 2147483647;

alter sequence stock_return_picking_line_id_seq owner to postgres;

create sequence stock_rule_id_seq
	maxvalue 2147483647;

alter sequence stock_rule_id_seq owner to postgres;

create sequence stock_rules_report_id_seq
	maxvalue 2147483647;

alter sequence stock_rules_report_id_seq owner to postgres;

create sequence stock_scheduler_compute_id_seq
	maxvalue 2147483647;

alter sequence stock_scheduler_compute_id_seq owner to postgres;

create sequence stock_scrap_id_seq
	maxvalue 2147483647;

alter sequence stock_scrap_id_seq owner to postgres;

create sequence stock_traceability_report_id_seq
	maxvalue 2147483647;

alter sequence stock_traceability_report_id_seq owner to postgres;

create sequence stock_track_confirmation_id_seq
	maxvalue 2147483647;

alter sequence stock_track_confirmation_id_seq owner to postgres;

create sequence stock_track_line_id_seq
	maxvalue 2147483647;

alter sequence stock_track_line_id_seq owner to postgres;

create sequence stock_valuation_layer_id_seq
	maxvalue 2147483647;

alter sequence stock_valuation_layer_id_seq owner to postgres;

create sequence stock_valuation_layer_revaluation_id_seq
	maxvalue 2147483647;

alter sequence stock_valuation_layer_revaluation_id_seq owner to postgres;

create sequence stock_warehouse_id_seq
	maxvalue 2147483647;

alter sequence stock_warehouse_id_seq owner to postgres;

create sequence stock_warehouse_orderpoint_id_seq
	maxvalue 2147483647;

alter sequence stock_warehouse_orderpoint_id_seq owner to postgres;

create sequence stock_warn_insufficient_qty_scrap_id_seq
	maxvalue 2147483647;

alter sequence stock_warn_insufficient_qty_scrap_id_seq owner to postgres;

create sequence tax_adjustments_wizard_id_seq
	maxvalue 2147483647;

alter sequence tax_adjustments_wizard_id_seq owner to postgres;

create sequence uom_category_id_seq
	maxvalue 2147483647;

alter sequence uom_category_id_seq owner to postgres;

create sequence uom_uom_id_seq
	maxvalue 2147483647;

alter sequence uom_uom_id_seq owner to postgres;

create sequence utm_campaign_id_seq
	maxvalue 2147483647;

alter sequence utm_campaign_id_seq owner to postgres;

create sequence utm_medium_id_seq
	maxvalue 2147483647;

alter sequence utm_medium_id_seq owner to postgres;

create sequence utm_source_id_seq
	maxvalue 2147483647;

alter sequence utm_source_id_seq owner to postgres;

create sequence utm_stage_id_seq
	maxvalue 2147483647;

alter sequence utm_stage_id_seq owner to postgres;

create sequence utm_tag_id_seq
	maxvalue 2147483647;

alter sequence utm_tag_id_seq owner to postgres;

create sequence validate_account_move_id_seq
	maxvalue 2147483647;

alter sequence validate_account_move_id_seq owner to postgres;

create sequence web_editor_converter_test_id_seq
	maxvalue 2147483647;

alter sequence web_editor_converter_test_id_seq owner to postgres;

create sequence web_editor_converter_test_sub_id_seq
	maxvalue 2147483647;

alter sequence web_editor_converter_test_sub_id_seq owner to postgres;

create sequence web_tour_tour_id_seq
	maxvalue 2147483647;

alter sequence web_tour_tour_id_seq owner to postgres;

create sequence wizard_ir_model_menu_create_id_seq
	maxvalue 2147483647;

alter sequence wizard_ir_model_menu_create_id_seq owner to postgres;

create table account_account
(
	id integer default nextval('account_account_id_seq'::regclass) not null
		constraint account_account_pkey
			primary key,
	name varchar not null,
	currency_id integer,
	code varchar(64) not null,
	deprecated boolean,
	user_type_id integer not null,
	internal_type varchar,
	internal_group varchar,
	reconcile boolean,
	note text,
	company_id integer not null,
	group_id integer,
	root_id integer,
	is_off_balance boolean,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	asset_model integer,
	create_asset varchar not null,
	multiple_assets_per_line boolean,
	constraint account_account_code_company_uniq
		unique (code, company_id)
);

comment on table account_account is 'Account';

comment on column account_account.name is 'Account Name';

comment on column account_account.currency_id is 'Account Currency';

comment on column account_account.code is 'Code';

comment on column account_account.deprecated is 'Deprecated';

comment on column account_account.user_type_id is 'Type';

comment on column account_account.internal_type is 'Internal Type';

comment on column account_account.internal_group is 'Internal Group';

comment on column account_account.reconcile is 'Allow Reconciliation';

comment on column account_account.note is 'Internal Notes';

comment on column account_account.company_id is 'Company';

comment on column account_account.group_id is 'Group';

comment on column account_account.root_id is 'Root';

comment on column account_account.is_off_balance is 'Is Off Balance';

comment on column account_account.create_uid is 'Created by';

comment on column account_account.create_date is 'Created on';

comment on column account_account.write_uid is 'Last Updated by';

comment on column account_account.write_date is 'Last Updated on';

comment on column account_account.asset_model is 'Asset Model';

comment on column account_account.create_asset is 'Create Asset';

comment on column account_account.multiple_assets_per_line is 'Multiple Assets per Line';

alter table account_account owner to postgres;

create index account_account_code_index
	on account_account (code);

create index account_account_deprecated_index
	on account_account (deprecated);

create index account_account_name_index
	on account_account (name);

create table account_cash_rounding
(
	id integer default nextval('account_cash_rounding_id_seq'::regclass) not null
		constraint account_cash_rounding_pkey
			primary key,
	name varchar not null,
	rounding double precision not null,
	strategy varchar not null,
	rounding_method varchar not null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table account_cash_rounding is 'Account Cash Rounding';

comment on column account_cash_rounding.name is 'Name';

comment on column account_cash_rounding.rounding is 'Rounding Precision';

comment on column account_cash_rounding.strategy is 'Rounding Strategy';

comment on column account_cash_rounding.rounding_method is 'Rounding Method';

comment on column account_cash_rounding.create_uid is 'Created by';

comment on column account_cash_rounding.create_date is 'Created on';

comment on column account_cash_rounding.write_uid is 'Last Updated by';

comment on column account_cash_rounding.write_date is 'Last Updated on';

alter table account_cash_rounding owner to postgres;

create table account_incoterms
(
	id integer default nextval('account_incoterms_id_seq'::regclass) not null
		constraint account_incoterms_pkey
			primary key,
	name varchar not null,
	code varchar(3) not null,
	active boolean,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table account_incoterms is 'Incoterms';

comment on column account_incoterms.name is 'Name';

comment on column account_incoterms.code is 'Code';

comment on column account_incoterms.active is 'Active';

comment on column account_incoterms.create_uid is 'Created by';

comment on column account_incoterms.create_date is 'Created on';

comment on column account_incoterms.write_uid is 'Last Updated by';

comment on column account_incoterms.write_date is 'Last Updated on';

alter table account_incoterms owner to postgres;

create table discount
(
	id integer default nextval('discount_id_seq'::regclass) not null
		constraint discount_pkey
			primary key,
	name varchar,
	discount double precision,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table discount is 'discount';

comment on column discount.name is 'Name';

comment on column discount.discount is 'Remise en %';

comment on column discount.create_uid is 'Created by';

comment on column discount.create_date is 'Created on';

comment on column discount.write_uid is 'Last Updated by';

comment on column discount.write_date is 'Last Updated on';

alter table discount owner to postgres;

create table ir_attachment
(
	id integer default nextval('ir_attachment_id_seq'::regclass) not null
		constraint ir_attachment_pkey
			primary key,
	name varchar not null,
	description text,
	res_model varchar,
	res_field varchar,
	res_id integer,
	company_id integer,
	type varchar not null,
	url varchar(1024),
	public boolean,
	access_token varchar,
	db_datas bytea,
	store_fname varchar,
	file_size integer,
	checksum varchar(40),
	mimetype varchar,
	index_content text,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	original_id integer
		constraint ir_attachment_original_id_fkey
			references ir_attachment
				on delete set null
);

comment on table ir_attachment is 'Attachment';

comment on column ir_attachment.name is 'Name';

comment on column ir_attachment.description is 'Description';

comment on column ir_attachment.res_model is 'Resource Model';

comment on column ir_attachment.res_field is 'Resource Field';

comment on column ir_attachment.res_id is 'Resource ID';

comment on column ir_attachment.company_id is 'Company';

comment on column ir_attachment.type is 'Type';

comment on column ir_attachment.url is 'Url';

comment on column ir_attachment.public is 'Is public document';

comment on column ir_attachment.access_token is 'Access Token';

comment on column ir_attachment.db_datas is 'Database Data';

comment on column ir_attachment.store_fname is 'Stored Filename';

comment on column ir_attachment.file_size is 'File Size';

comment on column ir_attachment.checksum is 'Checksum/SHA1';

comment on column ir_attachment.mimetype is 'Mime Type';

comment on column ir_attachment.index_content is 'Indexed Content';

comment on column ir_attachment.create_uid is 'Created by';

comment on column ir_attachment.create_date is 'Created on';

comment on column ir_attachment.write_uid is 'Last Updated by';

comment on column ir_attachment.write_date is 'Last Updated on';

comment on column ir_attachment.original_id is 'Original (unoptimized, unresized) attachment';

alter table ir_attachment owner to postgres;

create table account_analytic_account
(
	id integer default nextval('account_analytic_account_id_seq'::regclass) not null
		constraint account_analytic_account_pkey
			primary key,
	name varchar not null,
	code varchar,
	active boolean,
	group_id integer,
	company_id integer,
	partner_id integer,
	message_main_attachment_id integer
		constraint account_analytic_account_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table account_analytic_account is 'Analytic Account';

comment on column account_analytic_account.name is 'Analytic Account';

comment on column account_analytic_account.code is 'Reference';

comment on column account_analytic_account.active is 'Active';

comment on column account_analytic_account.group_id is 'Group';

comment on column account_analytic_account.company_id is 'Company';

comment on column account_analytic_account.partner_id is 'Customer';

comment on column account_analytic_account.message_main_attachment_id is 'Main Attachment';

comment on column account_analytic_account.create_uid is 'Created by';

comment on column account_analytic_account.create_date is 'Created on';

comment on column account_analytic_account.write_uid is 'Last Updated by';

comment on column account_analytic_account.write_date is 'Last Updated on';

alter table account_analytic_account owner to postgres;

create index account_analytic_account_code_index
	on account_analytic_account (code);

create index account_analytic_account_message_main_attachment_id_index
	on account_analytic_account (message_main_attachment_id);

create index account_analytic_account_name_index
	on account_analytic_account (name);

create table account_journal
(
	id integer default nextval('account_journal_id_seq'::regclass) not null
		constraint account_journal_pkey
			primary key,
	name varchar not null,
	code varchar(6) not null,
	active boolean,
	type varchar not null,
	default_account_id integer
		constraint account_journal_default_account_id_fkey
			references account_account
				on delete restrict,
	payment_debit_account_id integer
		constraint account_journal_payment_debit_account_id_fkey
			references account_account
				on delete restrict,
	payment_credit_account_id integer
		constraint account_journal_payment_credit_account_id_fkey
			references account_account
				on delete restrict,
	suspense_account_id integer
		constraint account_journal_suspense_account_id_fkey
			references account_account
				on delete restrict,
	restrict_mode_hash_table boolean,
	sequence integer,
	invoice_reference_type varchar not null,
	invoice_reference_model varchar not null,
	currency_id integer,
	company_id integer not null,
	refund_sequence boolean,
	sequence_override_regex text,
	at_least_one_inbound boolean,
	at_least_one_outbound boolean,
	profit_account_id integer
		constraint account_journal_profit_account_id_fkey
			references account_account
				on delete set null,
	loss_account_id integer
		constraint account_journal_loss_account_id_fkey
			references account_account
				on delete set null,
	bank_account_id integer,
	bank_statements_source varchar,
	sale_activity_type_id integer,
	sale_activity_user_id integer,
	sale_activity_note text,
	alias_id integer,
	secure_sequence_id integer,
	show_on_dashboard boolean,
	color integer,
	message_main_attachment_id integer
		constraint account_journal_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	account_online_journal_id integer,
	bank_statement_creation varchar,
	account_online_account_id integer,
	account_online_link_id integer,
	bank_statement_creation_groupby varchar,
	constraint account_journal_code_company_uniq
		unique (code, name, company_id)
);

comment on table account_journal is 'Journal';

comment on column account_journal.name is 'Journal Name';

comment on column account_journal.code is 'Short Code';

comment on column account_journal.active is 'Active';

comment on column account_journal.type is 'Type';

comment on column account_journal.default_account_id is 'Default Account';

comment on column account_journal.payment_debit_account_id is 'Outstanding Receipts Account';

comment on column account_journal.payment_credit_account_id is 'Outstanding Payments Account';

comment on column account_journal.suspense_account_id is 'Suspense Account';

comment on column account_journal.restrict_mode_hash_table is 'Lock Posted Entries with Hash';

comment on column account_journal.sequence is 'Sequence';

comment on column account_journal.invoice_reference_type is 'Communication Type';

comment on column account_journal.invoice_reference_model is 'Communication Standard';

comment on column account_journal.currency_id is 'Currency';

comment on column account_journal.company_id is 'Company';

comment on column account_journal.refund_sequence is 'Dedicated Credit Note Sequence';

comment on column account_journal.sequence_override_regex is 'Sequence Override Regex';

comment on column account_journal.at_least_one_inbound is 'At Least One Inbound';

comment on column account_journal.at_least_one_outbound is 'At Least One Outbound';

comment on column account_journal.profit_account_id is 'Profit Account';

comment on column account_journal.loss_account_id is 'Loss Account';

comment on column account_journal.bank_account_id is 'Bank Account';

comment on column account_journal.bank_statements_source is 'Bank Feeds';

comment on column account_journal.sale_activity_type_id is 'Schedule Activity';

comment on column account_journal.sale_activity_user_id is 'Activity User';

comment on column account_journal.sale_activity_note is 'Activity Summary';

comment on column account_journal.alias_id is 'Email Alias';

comment on column account_journal.secure_sequence_id is 'Secure Sequence';

comment on column account_journal.show_on_dashboard is 'Show journal on dashboard';

comment on column account_journal.color is 'Color Index';

comment on column account_journal.message_main_attachment_id is 'Main Attachment';

comment on column account_journal.create_uid is 'Created by';

comment on column account_journal.create_date is 'Created on';

comment on column account_journal.write_uid is 'Last Updated by';

comment on column account_journal.write_date is 'Last Updated on';

comment on column account_journal.account_online_journal_id is 'Account Online Journal';

comment on column account_journal.bank_statement_creation is 'Creation of Bank Statements';

comment on column account_journal.account_online_account_id is 'Account Online Account';

comment on column account_journal.account_online_link_id is 'Account Online Link';

comment on column account_journal.bank_statement_creation_groupby is 'Bank Statements Group By';

alter table account_journal owner to postgres;

create table account_account_account_journal_rel
(
	account_account_id integer not null
		constraint account_account_account_journal_rel_account_account_id_fkey
			references account_account
				on delete cascade,
	account_journal_id integer not null
		constraint account_account_account_journal_rel_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_account_account_journal_rel_pkey
		primary key (account_account_id, account_journal_id)
);

comment on table account_account_account_journal_rel is 'RELATION BETWEEN account_account AND account_journal';

alter table account_account_account_journal_rel owner to postgres;

create index account_account_account_journ_account_journal_id_account_ac_idx
	on account_account_account_journal_rel (account_journal_id, account_account_id);

create table account_asset
(
	id integer default nextval('account_asset_id_seq'::regclass) not null
		constraint account_asset_pkey
			primary key,
	name varchar not null,
	currency_id integer not null,
	company_id integer not null,
	state varchar,
	active boolean,
	asset_type varchar,
	method varchar,
	method_number integer,
	method_period varchar,
	method_progress_factor double precision,
	prorata boolean,
	prorata_date date,
	account_asset_id integer
		constraint account_asset_account_asset_id_fkey
			references account_account
				on delete set null,
	account_depreciation_id integer
		constraint account_asset_account_depreciation_id_fkey
			references account_account
				on delete set null,
	account_depreciation_expense_id integer
		constraint account_asset_account_depreciation_expense_id_fkey
			references account_account
				on delete set null,
	journal_id integer
		constraint account_asset_journal_id_fkey
			references account_journal
				on delete set null,
	original_value numeric,
	book_value numeric,
	salvage_value numeric,
	account_analytic_id integer
		constraint account_asset_account_analytic_id_fkey
			references account_analytic_account
				on delete set null,
	first_depreciation_date date,
	acquisition_date date,
	disposal_date date,
	model_id integer
		constraint account_asset_model_id_fkey
			references account_asset
				on delete set null,
	parent_id integer
		constraint account_asset_parent_id_fkey
			references account_asset
				on delete set null,
	already_depreciated_amount_import numeric,
	depreciation_number_import integer,
	first_depreciation_date_import date,
	message_main_attachment_id integer
		constraint account_asset_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table account_asset is 'Asset/Revenue Recognition';

comment on column account_asset.name is 'Asset Name';

comment on column account_asset.currency_id is 'Currency';

comment on column account_asset.company_id is 'Company';

comment on column account_asset.state is 'Status';

comment on column account_asset.active is 'Active';

comment on column account_asset.asset_type is 'Asset Type';

comment on column account_asset.method is 'Method';

comment on column account_asset.method_number is 'Number of Depreciations';

comment on column account_asset.method_period is 'Number of Months in a Period';

comment on column account_asset.method_progress_factor is 'Degressive Factor';

comment on column account_asset.prorata is 'Prorata Temporis';

comment on column account_asset.prorata_date is 'Prorata Date';

comment on column account_asset.account_asset_id is 'Fixed Asset Account';

comment on column account_asset.account_depreciation_id is 'Depreciation Account';

comment on column account_asset.account_depreciation_expense_id is 'Expense Account';

comment on column account_asset.journal_id is 'Journal';

comment on column account_asset.original_value is 'Original Value';

comment on column account_asset.book_value is 'Book Value';

comment on column account_asset.salvage_value is 'Not Depreciable Value';

comment on column account_asset.account_analytic_id is 'Analytic Account';

comment on column account_asset.first_depreciation_date is 'First Depreciation Date';

comment on column account_asset.acquisition_date is 'Acquisition Date';

comment on column account_asset.disposal_date is 'Disposal Date';

comment on column account_asset.model_id is 'Model';

comment on column account_asset.parent_id is 'Parent';

comment on column account_asset.already_depreciated_amount_import is 'Already Depreciated Amount Import';

comment on column account_asset.depreciation_number_import is 'Depreciation Number Import';

comment on column account_asset.first_depreciation_date_import is 'First Depreciation Date Import';

comment on column account_asset.message_main_attachment_id is 'Main Attachment';

comment on column account_asset.create_uid is 'Created by';

comment on column account_asset.create_date is 'Created on';

comment on column account_asset.write_uid is 'Last Updated by';

comment on column account_asset.write_date is 'Last Updated on';

alter table account_asset owner to postgres;

alter table account_account
	add constraint account_account_asset_model_fkey
		foreign key (asset_model) references account_asset
			on delete set null;

create index account_asset_asset_type_index
	on account_asset (asset_type);

create index account_asset_message_main_attachment_id_index
	on account_asset (message_main_attachment_id);

create table account_bank_statement
(
	id integer default nextval('account_bank_statement_id_seq'::regclass) not null
		constraint account_bank_statement_pkey
			primary key,
	name varchar,
	reference varchar,
	date date not null,
	date_done timestamp,
	balance_start numeric,
	balance_end_real numeric,
	state varchar not null,
	journal_id integer not null
		constraint account_bank_statement_journal_id_fkey
			references account_journal
				on delete restrict,
	company_id integer,
	total_entry_encoding numeric,
	balance_end numeric,
	difference numeric,
	user_id integer,
	cashbox_start_id integer,
	cashbox_end_id integer,
	previous_statement_id integer
		constraint account_bank_statement_previous_statement_id_fkey
			references account_bank_statement
				on delete set null,
	is_valid_balance_start boolean,
	message_main_attachment_id integer
		constraint account_bank_statement_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	sequence_prefix varchar,
	sequence_number integer,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	is_locked boolean
);

comment on table account_bank_statement is 'Bank Statement';

comment on column account_bank_statement.name is 'Reference';

comment on column account_bank_statement.reference is 'External Reference';

comment on column account_bank_statement.date is 'Date';

comment on column account_bank_statement.date_done is 'Closed On';

comment on column account_bank_statement.balance_start is 'Starting Balance';

comment on column account_bank_statement.balance_end_real is 'Ending Balance';

comment on column account_bank_statement.state is 'Status';

comment on column account_bank_statement.journal_id is 'Journal';

comment on column account_bank_statement.company_id is 'Company';

comment on column account_bank_statement.total_entry_encoding is 'Transactions Subtotal';

comment on column account_bank_statement.balance_end is 'Computed Balance';

comment on column account_bank_statement.difference is 'Difference';

comment on column account_bank_statement.user_id is 'Responsible';

comment on column account_bank_statement.cashbox_start_id is 'Starting Cashbox';

comment on column account_bank_statement.cashbox_end_id is 'Ending Cashbox';

comment on column account_bank_statement.previous_statement_id is 'Previous Statement';

comment on column account_bank_statement.is_valid_balance_start is 'Is Valid Balance Start';

comment on column account_bank_statement.message_main_attachment_id is 'Main Attachment';

comment on column account_bank_statement.sequence_prefix is 'Sequence Prefix';

comment on column account_bank_statement.sequence_number is 'Sequence Number';

comment on column account_bank_statement.create_uid is 'Created by';

comment on column account_bank_statement.create_date is 'Created on';

comment on column account_bank_statement.write_uid is 'Last Updated by';

comment on column account_bank_statement.write_date is 'Last Updated on';

comment on column account_bank_statement.is_locked is 'Locked';

alter table account_bank_statement owner to postgres;

create index account_bank_statement_date_index
	on account_bank_statement (date);

create index account_bank_statement_message_main_attachment_id_index
	on account_bank_statement (message_main_attachment_id);

create index account_bank_statement_sequence_index
	on account_bank_statement (journal_id asc, sequence_prefix desc, sequence_number desc, name asc);

create index account_bank_statement_sequence_index2
	on account_bank_statement (journal_id asc, id desc, sequence_prefix asc);

create table account_bank_statement_line
(
	id integer default nextval('account_bank_statement_line_id_seq'::regclass) not null
		constraint account_bank_statement_line_pkey
			primary key,
	move_id integer not null,
	statement_id integer not null
		constraint account_bank_statement_line_statement_id_fkey
			references account_bank_statement
				on delete cascade,
	sequence integer,
	account_number varchar,
	partner_name varchar,
	transaction_type varchar,
	payment_ref varchar not null,
	amount numeric,
	amount_currency numeric,
	foreign_currency_id integer,
	amount_residual double precision,
	currency_id integer,
	partner_id integer,
	is_reconciled boolean,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	online_identifier varchar,
	online_partner_vendor_name varchar,
	online_partner_bank_account varchar,
	unique_import_id varchar
		constraint account_bank_statement_line_unique_import_id
			unique,
	online_transaction_identifier varchar,
	online_partner_information varchar,
	online_account_id integer,
	online_link_id integer
);

comment on table account_bank_statement_line is 'Bank Statement Line';

comment on column account_bank_statement_line.move_id is 'Journal Entry';

comment on column account_bank_statement_line.statement_id is 'Statement';

comment on column account_bank_statement_line.sequence is 'Sequence';

comment on column account_bank_statement_line.account_number is 'Bank Account Number';

comment on column account_bank_statement_line.partner_name is 'Partner Name';

comment on column account_bank_statement_line.transaction_type is 'Transaction Type';

comment on column account_bank_statement_line.payment_ref is 'Label';

comment on column account_bank_statement_line.amount is 'Amount';

comment on column account_bank_statement_line.amount_currency is 'Amount Currency';

comment on column account_bank_statement_line.foreign_currency_id is 'Foreign Currency';

comment on column account_bank_statement_line.amount_residual is 'Residual Amount';

comment on column account_bank_statement_line.currency_id is 'Journal Currency';

comment on column account_bank_statement_line.partner_id is 'Partner';

comment on column account_bank_statement_line.is_reconciled is 'Is Reconciled';

comment on column account_bank_statement_line.create_uid is 'Created by';

comment on column account_bank_statement_line.create_date is 'Created on';

comment on column account_bank_statement_line.write_uid is 'Last Updated by';

comment on column account_bank_statement_line.write_date is 'Last Updated on';

comment on column account_bank_statement_line.online_identifier is 'Online Identifier';

comment on column account_bank_statement_line.online_partner_vendor_name is 'Online Partner Vendor Name';

comment on column account_bank_statement_line.online_partner_bank_account is 'Online Partner Bank Account';

comment on column account_bank_statement_line.unique_import_id is 'Import ID';

comment on column account_bank_statement_line.online_transaction_identifier is 'Online Transaction Identifier';

comment on column account_bank_statement_line.online_partner_information is 'Online Partner Information';

comment on column account_bank_statement_line.online_account_id is 'Online Account';

comment on column account_bank_statement_line.online_link_id is 'Account Online Link';

alter table account_bank_statement_line owner to postgres;

create index account_bank_statement_line_sequence_index
	on account_bank_statement_line (sequence);

create index account_bank_statement_line_statement_id_index
	on account_bank_statement_line (statement_id);

create index account_journal_company_id_index
	on account_journal (company_id);

create index account_journal_message_main_attachment_id_index
	on account_journal (message_main_attachment_id);

create table crm_team
(
	id integer default nextval('crm_team_id_seq'::regclass) not null
		constraint crm_team_pkey
			primary key,
	name varchar not null,
	sequence integer,
	active boolean,
	company_id integer,
	user_id integer,
	color integer,
	message_main_attachment_id integer
		constraint crm_team_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	use_quotations boolean,
	invoiced_target double precision
);

comment on table crm_team is 'Sales Team';

comment on column crm_team.name is 'Sales Team';

comment on column crm_team.sequence is 'Sequence';

comment on column crm_team.active is 'Active';

comment on column crm_team.company_id is 'Company';

comment on column crm_team.user_id is 'Team Leader';

comment on column crm_team.color is 'Color Index';

comment on column crm_team.message_main_attachment_id is 'Main Attachment';

comment on column crm_team.create_uid is 'Created by';

comment on column crm_team.create_date is 'Created on';

comment on column crm_team.write_uid is 'Last Updated by';

comment on column crm_team.write_date is 'Last Updated on';

comment on column crm_team.use_quotations is 'Quotations';

comment on column crm_team.invoiced_target is 'Invoicing Target';

alter table crm_team owner to postgres;

create index crm_team_company_id_index
	on crm_team (company_id);

create index crm_team_message_main_attachment_id_index
	on crm_team (message_main_attachment_id);

create index ir_attachment_checksum_index
	on ir_attachment (checksum);

create index ir_attachment_original_id_index
	on ir_attachment (original_id);

create index ir_attachment_res_idx
	on ir_attachment (res_model, res_id);

create index ir_attachment_url_index
	on ir_attachment (url);

create table ir_logging
(
	id integer default nextval('ir_logging_id_seq'::regclass) not null
		constraint ir_logging_pkey
			primary key,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	name varchar not null,
	type varchar not null,
	dbname varchar,
	level varchar,
	message text not null,
	path varchar not null,
	func varchar not null,
	line varchar not null
);

comment on table ir_logging is 'Logging';

comment on column ir_logging.create_uid is 'Created by';

comment on column ir_logging.create_date is 'Created on';

comment on column ir_logging.write_uid is 'Last Updated by';

comment on column ir_logging.write_date is 'Last Updated on';

comment on column ir_logging.name is 'Name';

comment on column ir_logging.type is 'Type';

comment on column ir_logging.dbname is 'Database Name';

comment on column ir_logging.level is 'Level';

comment on column ir_logging.message is 'Message';

comment on column ir_logging.path is 'Path';

comment on column ir_logging.func is 'Function';

comment on column ir_logging.line is 'Line';

alter table ir_logging owner to postgres;

create index ir_logging_dbname_index
	on ir_logging (dbname);

create index ir_logging_level_index
	on ir_logging (level);

create index ir_logging_type_index
	on ir_logging (type);

create table ir_ui_view
(
	id integer default nextval('ir_ui_view_id_seq'::regclass) not null
		constraint ir_ui_view_pkey
			primary key,
	name varchar not null,
	model varchar,
	key varchar,
	priority integer not null,
	type varchar,
	arch_db text,
	arch_fs varchar,
	arch_updated boolean,
	arch_prev text,
	inherit_id integer
		constraint ir_ui_view_inherit_id_fkey
			references ir_ui_view
				on delete restrict,
	field_parent varchar,
	mode varchar not null,
	active boolean,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	customize_show boolean
);

comment on table ir_ui_view is 'View';

comment on column ir_ui_view.name is 'View Name';

comment on column ir_ui_view.model is 'Model';

comment on column ir_ui_view.key is 'Key';

comment on column ir_ui_view.priority is 'Sequence';

comment on column ir_ui_view.type is 'View Type';

comment on column ir_ui_view.arch_db is 'Arch Blob';

comment on column ir_ui_view.arch_fs is 'Arch Filename';

comment on column ir_ui_view.arch_updated is 'Modified Architecture';

comment on column ir_ui_view.arch_prev is 'Previous View Architecture';

comment on column ir_ui_view.inherit_id is 'Inherited View';

comment on column ir_ui_view.field_parent is 'Child Field';

comment on column ir_ui_view.mode is 'View inheritance mode';

comment on column ir_ui_view.active is 'Active';

comment on column ir_ui_view.create_uid is 'Created by';

comment on column ir_ui_view.create_date is 'Created on';

comment on column ir_ui_view.write_uid is 'Last Updated by';

comment on column ir_ui_view.write_date is 'Last Updated on';

comment on column ir_ui_view.customize_show is 'Show As Optional Inherit';

alter table ir_ui_view owner to postgres;

create index ir_ui_view_inherit_id_index
	on ir_ui_view (inherit_id);

create index ir_ui_view_model_index
	on ir_ui_view (model);

create index ir_ui_view_model_type_inherit_id
	on ir_ui_view (model, inherit_id);

create table journal_account_control_rel
(
	journal_id integer not null
		constraint journal_account_control_rel_journal_id_fkey
			references account_journal
				on delete cascade,
	account_id integer not null
		constraint journal_account_control_rel_account_id_fkey
			references account_account
				on delete cascade,
	constraint journal_account_control_rel_pkey
		primary key (journal_id, account_id)
);

comment on table journal_account_control_rel is 'RELATION BETWEEN account_journal AND account_account';

alter table journal_account_control_rel owner to postgres;

create index journal_account_control_rel_account_id_journal_id_idx
	on journal_account_control_rel (account_id, journal_id);

create table res_country
(
	id integer default nextval('res_country_id_seq'::regclass) not null
		constraint res_country_pkey
			primary key,
	name varchar not null
		constraint res_country_name_uniq
			unique,
	code varchar(2)
		constraint res_country_code_uniq
			unique,
	address_format text,
	address_view_id integer
		constraint res_country_address_view_id_fkey
			references ir_ui_view
				on delete set null,
	currency_id integer,
	phone_code integer,
	name_position varchar,
	vat_label varchar,
	state_required boolean,
	zip_required boolean,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table res_country is 'Country';

comment on column res_country.name is 'Country Name';

comment on column res_country.code is 'Country Code';

comment on column res_country.address_format is 'Layout in Reports';

comment on column res_country.address_view_id is 'Input View';

comment on column res_country.currency_id is 'Currency';

comment on column res_country.phone_code is 'Country Calling Code';

comment on column res_country.name_position is 'Customer Name Position';

comment on column res_country.vat_label is 'Vat Label';

comment on column res_country.state_required is 'State Required';

comment on column res_country.zip_required is 'Zip Required';

comment on column res_country.create_uid is 'Created by';

comment on column res_country.create_date is 'Created on';

comment on column res_country.write_uid is 'Last Updated by';

comment on column res_country.write_date is 'Last Updated on';

alter table res_country owner to postgres;

create table account_fiscal_position
(
	id integer default nextval('account_fiscal_position_id_seq'::regclass) not null
		constraint account_fiscal_position_pkey
			primary key,
	sequence integer,
	name varchar not null,
	active boolean,
	company_id integer not null,
	note text,
	auto_apply boolean,
	vat_required boolean,
	country_id integer
		constraint account_fiscal_position_country_id_fkey
			references res_country
				on delete set null,
	country_group_id integer,
	zip_from varchar,
	zip_to varchar,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table account_fiscal_position is 'Fiscal Position';

comment on column account_fiscal_position.sequence is 'Sequence';

comment on column account_fiscal_position.name is 'Fiscal Position';

comment on column account_fiscal_position.active is 'Active';

comment on column account_fiscal_position.company_id is 'Company';

comment on column account_fiscal_position.note is 'Notes';

comment on column account_fiscal_position.auto_apply is 'Detect Automatically';

comment on column account_fiscal_position.vat_required is 'VAT required';

comment on column account_fiscal_position.country_id is 'Country';

comment on column account_fiscal_position.country_group_id is 'Country Group';

comment on column account_fiscal_position.zip_from is 'Zip Range From';

comment on column account_fiscal_position.zip_to is 'Zip Range To';

comment on column account_fiscal_position.create_uid is 'Created by';

comment on column account_fiscal_position.create_date is 'Created on';

comment on column account_fiscal_position.write_uid is 'Last Updated by';

comment on column account_fiscal_position.write_date is 'Last Updated on';

alter table account_fiscal_position owner to postgres;

create table account_move
(
	id integer default nextval('account_move_id_seq'::regclass) not null
		constraint account_move_pkey
			primary key,
	name varchar,
	date date not null,
	ref varchar,
	narration text,
	state varchar not null,
	posted_before boolean,
	move_type varchar not null,
	to_check boolean,
	journal_id integer not null
		constraint account_move_journal_id_fkey
			references account_journal
				on delete restrict,
	company_id integer,
	currency_id integer not null,
	partner_id integer,
	commercial_partner_id integer,
	is_move_sent boolean,
	partner_bank_id integer,
	payment_reference varchar,
	payment_id integer,
	statement_line_id integer
		constraint account_move_statement_line_id_fkey
			references account_bank_statement_line
				on delete set null,
	amount_untaxed numeric,
	amount_tax numeric,
	amount_total numeric,
	amount_residual numeric,
	amount_untaxed_signed numeric,
	amount_tax_signed numeric,
	amount_total_signed numeric,
	amount_residual_signed numeric,
	payment_state varchar,
	tax_cash_basis_rec_id integer,
	tax_cash_basis_move_id integer
		constraint account_move_tax_cash_basis_move_id_fkey
			references account_move
				on delete set null,
	auto_post boolean,
	reversed_entry_id integer
		constraint account_move_reversed_entry_id_fkey
			references account_move
				on delete set null,
	fiscal_position_id integer
		constraint account_move_fiscal_position_id_fkey
			references account_fiscal_position
				on delete restrict,
	invoice_user_id integer,
	invoice_date date,
	invoice_date_due date,
	invoice_origin varchar,
	invoice_payment_term_id integer,
	invoice_incoterm_id integer
		constraint account_move_invoice_incoterm_id_fkey
			references account_incoterms
				on delete set null,
	qr_code_method varchar,
	invoice_source_email varchar,
	invoice_partner_display_name varchar,
	invoice_cash_rounding_id integer
		constraint account_move_invoice_cash_rounding_id_fkey
			references account_cash_rounding
				on delete set null,
	secure_sequence_number integer,
	inalterable_hash varchar,
	access_token varchar,
	message_main_attachment_id integer
		constraint account_move_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	sequence_prefix varchar,
	sequence_number integer,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	payment_state_before_switch varchar,
	edi_state varchar,
	duplicated_vendor_ref varchar,
	extract_state varchar not null,
	extract_status_code integer,
	extract_remote_id integer,
	transfer_model_id integer,
	tax_closing_end_date date,
	tax_report_control_error boolean,
	asset_id integer
		constraint account_move_asset_id_fkey
			references account_asset
				on delete cascade,
	asset_remaining_value numeric,
	asset_depreciated_value numeric,
	asset_manually_modified boolean,
	asset_value_change boolean,
	team_id integer
		constraint account_move_team_id_fkey
			references crm_team
				on delete set null,
	partner_shipping_id integer,
	campaign_id integer,
	source_id integer,
	medium_id integer,
	stock_move_id integer,
	location_id integer,
	release_to_pay varchar,
	release_to_pay_manual varchar,
	force_release_to_pay boolean
);

comment on table account_move is 'Journal Entry';

comment on column account_move.name is 'Number';

comment on column account_move.date is 'Date';

comment on column account_move.ref is 'Reference';

comment on column account_move.narration is 'Terms and Conditions';

comment on column account_move.state is 'Status';

comment on column account_move.posted_before is 'Posted Before';

comment on column account_move.move_type is 'Type';

comment on column account_move.to_check is 'To Check';

comment on column account_move.journal_id is 'Journal';

comment on column account_move.company_id is 'Company';

comment on column account_move.currency_id is 'Currency';

comment on column account_move.partner_id is 'Partner';

comment on column account_move.commercial_partner_id is 'Commercial Entity';

comment on column account_move.is_move_sent is 'Is Move Sent';

comment on column account_move.partner_bank_id is 'Recipient Bank';

comment on column account_move.payment_reference is 'Payment Reference';

comment on column account_move.payment_id is 'Payment';

comment on column account_move.statement_line_id is 'Statement Line';

comment on column account_move.amount_untaxed is 'Untaxed Amount';

comment on column account_move.amount_tax is 'Tax';

comment on column account_move.amount_total is 'Total';

comment on column account_move.amount_residual is 'Amount Due';

comment on column account_move.amount_untaxed_signed is 'Untaxed Amount Signed';

comment on column account_move.amount_tax_signed is 'Tax Signed';

comment on column account_move.amount_total_signed is 'Total Signed';

comment on column account_move.amount_residual_signed is 'Amount Due Signed';

comment on column account_move.payment_state is 'Payment Status';

comment on column account_move.tax_cash_basis_rec_id is 'Tax Cash Basis Entry of';

comment on column account_move.tax_cash_basis_move_id is 'Origin Tax Cash Basis Entry';

comment on column account_move.auto_post is 'Post Automatically';

comment on column account_move.reversed_entry_id is 'Reversal of';

comment on column account_move.fiscal_position_id is 'Fiscal Position';

comment on column account_move.invoice_user_id is 'Salesperson';

comment on column account_move.invoice_date is 'Invoice/Bill Date';

comment on column account_move.invoice_date_due is 'Due Date';

comment on column account_move.invoice_origin is 'Origin';

comment on column account_move.invoice_payment_term_id is 'Payment Terms';

comment on column account_move.invoice_incoterm_id is 'Incoterm';

comment on column account_move.qr_code_method is 'Payment QR-code';

comment on column account_move.invoice_source_email is 'Source Email';

comment on column account_move.invoice_partner_display_name is 'Invoice Partner Display Name';

comment on column account_move.invoice_cash_rounding_id is 'Cash Rounding Method';

comment on column account_move.secure_sequence_number is 'Inalteralbility No Gap Sequence #';

comment on column account_move.inalterable_hash is 'Inalterability Hash';

comment on column account_move.access_token is 'Security Token';

comment on column account_move.message_main_attachment_id is 'Main Attachment';

comment on column account_move.sequence_prefix is 'Sequence Prefix';

comment on column account_move.sequence_number is 'Sequence Number';

comment on column account_move.create_uid is 'Created by';

comment on column account_move.create_date is 'Created on';

comment on column account_move.write_uid is 'Last Updated by';

comment on column account_move.write_date is 'Last Updated on';

comment on column account_move.payment_state_before_switch is 'Payment State Before Switch';

comment on column account_move.edi_state is 'Electronic invoicing';

comment on column account_move.duplicated_vendor_ref is 'Duplicated vendor reference';

comment on column account_move.extract_state is 'Extract state';

comment on column account_move.extract_status_code is 'Status code';

comment on column account_move.extract_remote_id is 'Id of the request to IAP-OCR';

comment on column account_move.transfer_model_id is 'Originating Model';

comment on column account_move.tax_closing_end_date is 'Tax Closing End Date';

comment on column account_move.tax_report_control_error is 'Tax Report Control Error';

comment on column account_move.asset_id is 'Asset';

comment on column account_move.asset_remaining_value is 'Depreciable Value';

comment on column account_move.asset_depreciated_value is 'Cumulative Depreciation';

comment on column account_move.asset_manually_modified is 'Asset Manually Modified';

comment on column account_move.asset_value_change is 'Asset Value Change';

comment on column account_move.team_id is 'Sales Team';

comment on column account_move.partner_shipping_id is 'Delivery Address';

comment on column account_move.campaign_id is 'Campaign';

comment on column account_move.source_id is 'Source';

comment on column account_move.medium_id is 'Medium';

comment on column account_move.stock_move_id is 'Stock Move';

comment on column account_move.location_id is 'Shipping agency';

comment on column account_move.release_to_pay is 'Release To Pay';

comment on column account_move.release_to_pay_manual is 'Should Be Paid';

comment on column account_move.force_release_to_pay is 'Force Status';

alter table account_move owner to postgres;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_move_id_fkey
		foreign key (move_id) references account_move
			on delete cascade;

create index account_move_asset_id_index
	on account_move (asset_id);

create index account_move_date_index
	on account_move (date);

create index account_move_invoice_date_due_index
	on account_move (invoice_date_due);

create index account_move_invoice_date_index
	on account_move (invoice_date);

create index account_move_message_main_attachment_id_index
	on account_move (message_main_attachment_id);

create index account_move_move_type_index
	on account_move (move_type);

create index account_move_name_index
	on account_move (name);

create index account_move_payment_id_index
	on account_move (payment_id);

create index account_move_payment_reference_index
	on account_move (payment_reference);

create index account_move_sequence_index
	on account_move (journal_id asc, sequence_prefix desc, sequence_number desc, name asc);

create index account_move_sequence_index2
	on account_move (journal_id asc, id desc, sequence_prefix asc);

create index account_move_stock_move_id_index
	on account_move (stock_move_id);

create table cesa_location
(
	id integer default nextval('cesa_location_id_seq'::regclass) not null
		constraint cesa_location_pkey
			primary key,
	code varchar,
	name varchar,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	zone_id integer,
	move_id integer
		constraint cesa_location_move_id_fkey
			references account_move
				on delete set null
);

comment on table cesa_location is 'cesa.location';

comment on column cesa_location.code is 'Code';

comment on column cesa_location.name is 'Location';

comment on column cesa_location.create_uid is 'Created by';

comment on column cesa_location.create_date is 'Created on';

comment on column cesa_location.write_uid is 'Last Updated by';

comment on column cesa_location.write_date is 'Last Updated on';

comment on column cesa_location.zone_id is 'ID Zone';

comment on column cesa_location.move_id is 'Move';

alter table cesa_location owner to postgres;

alter table account_move
	add constraint account_move_location_id_fkey
		foreign key (location_id) references cesa_location
			on delete set null;

create table res_country_state
(
	id integer default nextval('res_country_state_id_seq'::regclass) not null
		constraint res_country_state_pkey
			primary key,
	country_id integer not null
		constraint res_country_state_country_id_fkey
			references res_country
				on delete restrict,
	name varchar not null,
	code varchar not null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	constraint res_country_state_name_code_uniq
		unique (country_id, code)
);

comment on table res_country_state is 'Country state';

comment on column res_country_state.country_id is 'Country';

comment on column res_country_state.name is 'State Name';

comment on column res_country_state.code is 'State Code';

comment on column res_country_state.create_uid is 'Created by';

comment on column res_country_state.create_date is 'Created on';

comment on column res_country_state.write_uid is 'Last Updated by';

comment on column res_country_state.write_date is 'Last Updated on';

alter table res_country_state owner to postgres;

create table account_fiscal_position_res_country_state_rel
(
	account_fiscal_position_id integer not null
		constraint account_fiscal_position_res_cou_account_fiscal_position_id_fkey
			references account_fiscal_position
				on delete cascade,
	res_country_state_id integer not null
		constraint account_fiscal_position_res_country_s_res_country_state_id_fkey
			references res_country_state
				on delete cascade,
	constraint account_fiscal_position_res_country_state_rel_pkey
		primary key (account_fiscal_position_id, res_country_state_id)
);

comment on table account_fiscal_position_res_country_state_rel is 'RELATION BETWEEN account_fiscal_position AND res_country_state';

alter table account_fiscal_position_res_country_state_rel owner to postgres;

create index account_fiscal_position_res_c_res_country_state_id_account__idx
	on account_fiscal_position_res_country_state_rel (res_country_state_id, account_fiscal_position_id);

create table res_partner
(
	id integer default nextval('res_partner_id_seq'::regclass) not null
		constraint res_partner_pkey
			primary key,
	name varchar,
	company_id integer,
	create_date timestamp,
	display_name varchar,
	date date,
	title integer,
	parent_id integer
		constraint res_partner_parent_id_fkey
			references res_partner
				on delete set null,
	ref varchar,
	lang varchar,
	tz varchar,
	user_id integer,
	vat varchar,
	website varchar,
	comment text,
	credit_limit double precision,
	active boolean,
	employee boolean,
	function varchar,
	type varchar,
	street varchar,
	street2 varchar,
	zip varchar,
	city varchar,
	state_id integer
		constraint res_partner_state_id_fkey
			references res_country_state
				on delete restrict,
	country_id integer
		constraint res_partner_country_id_fkey
			references res_country
				on delete restrict,
	partner_latitude numeric,
	partner_longitude numeric,
	email varchar,
	phone varchar,
	mobile varchar,
	is_company boolean,
	industry_id integer,
	color integer,
	partner_share boolean,
	commercial_partner_id integer
		constraint res_partner_commercial_partner_id_fkey
			references res_partner
				on delete set null,
	commercial_company_name varchar,
	company_name varchar,
	create_uid integer,
	write_uid integer,
	write_date timestamp,
	message_main_attachment_id integer
		constraint res_partner_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	email_normalized varchar,
	message_bounce integer,
	contact_address_complete varchar,
	signup_token varchar,
	signup_type varchar,
	signup_expiration timestamp,
	ocn_token varchar,
	partner_gid integer,
	additional_info varchar,
	phone_sanitized varchar,
	debit_limit numeric,
	last_time_entries_checked timestamp,
	invoice_warn varchar,
	invoice_warn_msg text,
	supplier_rank integer,
	customer_rank integer,
	online_partner_vendor_name varchar,
	online_partner_bank_account varchar,
	online_partner_information varchar,
	team_id integer
		constraint res_partner_team_id_fkey
			references crm_team
				on delete set null,
	sale_warn varchar,
	sale_warn_msg text,
	picking_warn varchar,
	picking_warn_msg text,
	purchase_warn varchar,
	purchase_warn_msg text,
	state varchar,
	over_credit boolean,
	payment_type varchar not null,
	legal_form varchar,
	rc varchar,
	nif varchar,
	stat varchar,
	capital varchar,
	discount_id integer
		constraint res_partner_discount_id_fkey
			references discount
				on delete set null,
	location_id integer
		constraint res_partner_location_id_fkey
			references cesa_location
				on delete set null,
	facturation_delay integer
);

comment on column res_partner.display_name is 'Display Name';

comment on column res_partner.date is 'Date';

comment on column res_partner.title is 'Title';

comment on column res_partner.parent_id is 'Related Company';

comment on column res_partner.ref is 'Reference';

comment on column res_partner.lang is 'Language';

comment on column res_partner.tz is 'Timezone';

comment on column res_partner.user_id is 'Salesperson';

comment on column res_partner.vat is 'Tax ID';

comment on column res_partner.website is 'Website Link';

comment on column res_partner.comment is 'Notes';

comment on column res_partner.credit_limit is 'Credit Limit';

comment on column res_partner.active is 'Active';

comment on column res_partner.employee is 'Employee';

comment on column res_partner.function is 'Job Position';

comment on column res_partner.type is 'Address Type';

comment on column res_partner.street is 'Street';

comment on column res_partner.street2 is 'Street2';

comment on column res_partner.zip is 'Zip';

comment on column res_partner.city is 'City';

comment on column res_partner.state_id is 'State';

comment on column res_partner.country_id is 'Country';

comment on column res_partner.partner_latitude is 'Geo Latitude';

comment on column res_partner.partner_longitude is 'Geo Longitude';

comment on column res_partner.email is 'Email';

comment on column res_partner.phone is 'Phone';

comment on column res_partner.mobile is 'Mobile';

comment on column res_partner.is_company is 'Is a Company';

comment on column res_partner.industry_id is 'Industry';

comment on column res_partner.color is 'Color Index';

comment on column res_partner.partner_share is 'Share Partner';

comment on column res_partner.commercial_partner_id is 'Commercial Entity';

comment on column res_partner.commercial_company_name is 'Company Name Entity';

comment on column res_partner.company_name is 'Company Name';

comment on column res_partner.create_uid is 'Created by';

comment on column res_partner.write_uid is 'Last Updated by';

comment on column res_partner.write_date is 'Last Updated on';

comment on column res_partner.message_main_attachment_id is 'Main Attachment';

comment on column res_partner.email_normalized is 'Normalized Email';

comment on column res_partner.message_bounce is 'Bounce';

comment on column res_partner.contact_address_complete is 'Contact Address Complete';

comment on column res_partner.signup_token is 'Signup Token';

comment on column res_partner.signup_type is 'Signup Token Type';

comment on column res_partner.signup_expiration is 'Signup Expiration';

comment on column res_partner.ocn_token is 'OCN Token';

comment on column res_partner.partner_gid is 'Company database ID';

comment on column res_partner.additional_info is 'Additional info';

comment on column res_partner.phone_sanitized is 'Sanitized Number';

comment on column res_partner.debit_limit is 'Payable Limit';

comment on column res_partner.last_time_entries_checked is 'Latest Invoices & Payments Matching Date';

comment on column res_partner.invoice_warn is 'Invoice';

comment on column res_partner.invoice_warn_msg is 'Message for Invoice';

comment on column res_partner.supplier_rank is 'Supplier Rank';

comment on column res_partner.customer_rank is 'Customer Rank';

comment on column res_partner.online_partner_vendor_name is 'Online Partner Vendor Name';

comment on column res_partner.online_partner_bank_account is 'Online Partner Bank Account';

comment on column res_partner.online_partner_information is 'Online Partner Information';

comment on column res_partner.team_id is 'Sales Team';

comment on column res_partner.sale_warn is 'Sales Warnings';

comment on column res_partner.sale_warn_msg is 'Message for Sales Order';

comment on column res_partner.picking_warn is 'Stock Picking';

comment on column res_partner.picking_warn_msg is 'Message for Stock Picking';

comment on column res_partner.purchase_warn is 'Purchase Order';

comment on column res_partner.purchase_warn_msg is 'Message for Purchase Order';

comment on column res_partner.state is 'States';

comment on column res_partner.over_credit is 'Allow Over Credit?';

comment on column res_partner.payment_type is 'Payment type';

comment on column res_partner.legal_form is 'Legal form';

comment on column res_partner.rc is 'RC';

comment on column res_partner.nif is 'NIF';

comment on column res_partner.stat is 'Stat';

comment on column res_partner.capital is 'Capital';

comment on column res_partner.discount_id is 'Remise en %';

comment on column res_partner.location_id is 'Agence de rattachement';

comment on column res_partner.facturation_delay is 'conditionnement de facturation';

alter table res_partner owner to postgres;

alter table account_analytic_account
	add constraint account_analytic_account_partner_id_fkey
		foreign key (partner_id) references res_partner
			on delete set null;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_partner_id_fkey
		foreign key (partner_id) references res_partner
			on delete restrict;

alter table account_move
	add constraint account_move_commercial_partner_id_fkey
		foreign key (commercial_partner_id) references res_partner
			on delete set null;

alter table account_move
	add constraint account_move_partner_id_fkey
		foreign key (partner_id) references res_partner
			on delete set null;

alter table account_move
	add constraint account_move_partner_shipping_id_fkey
		foreign key (partner_shipping_id) references res_partner
			on delete set null;

create index res_partner_commercial_partner_id_index
	on res_partner (commercial_partner_id);

create index res_partner_company_id_index
	on res_partner (company_id);

create index res_partner_date_index
	on res_partner (date);

create index res_partner_display_name_index
	on res_partner (display_name);

create index res_partner_message_main_attachment_id_index
	on res_partner (message_main_attachment_id);

create index res_partner_name_index
	on res_partner (name);

create index res_partner_parent_id_index
	on res_partner (parent_id);

create index res_partner_ref_index
	on res_partner (ref);

create index res_partner_vat_index
	on res_partner (vat);

create table res_users
(
	id integer default nextval('res_users_id_seq'::regclass) not null
		constraint res_users_pkey
			primary key,
	active boolean default true,
	login varchar not null
		constraint res_users_login_key
			unique,
	password varchar,
	company_id integer not null,
	partner_id integer not null
		constraint res_users_partner_id_fkey
			references res_partner
				on delete restrict,
	create_date timestamp,
	signature text,
	action_id integer,
	share boolean,
	create_uid integer
		constraint res_users_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint res_users_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	totp_secret varchar,
	notification_type varchar not null,
	odoobot_state varchar,
	odoobot_failed boolean,
	sale_team_id integer
		constraint res_users_sale_team_id_fkey
			references crm_team
				on delete set null
);

comment on column res_users.signature is 'Email Signature';

comment on column res_users.action_id is 'Home Action';

comment on column res_users.share is 'Share User';

comment on column res_users.create_uid is 'Created by';

comment on column res_users.write_uid is 'Last Updated by';

comment on column res_users.write_date is 'Last Updated on';

comment on column res_users.totp_secret is 'Totp Secret';

comment on column res_users.notification_type is 'Notification';

comment on column res_users.odoobot_state is 'OdooBot Status';

comment on column res_users.odoobot_failed is 'Odoobot Failed';

comment on column res_users.sale_team_id is 'User''s Sales Team';

alter table res_users owner to postgres;

create table access_token
(
	id integer default nextval('access_token_id_seq'::regclass) not null
		constraint access_token_pkey
			primary key,
	token varchar,
	user_id integer
		constraint access_token_user_id_fkey
			references res_users
				on delete set null,
	create_uid integer
		constraint access_token_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint access_token_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table access_token is 'access.token';

comment on column access_token.token is 'Token';

comment on column access_token.user_id is 'User';

comment on column access_token.create_uid is 'Created by';

comment on column access_token.create_date is 'Created on';

comment on column access_token.write_uid is 'Last Updated by';

comment on column access_token.write_date is 'Last Updated on';

alter table access_token owner to postgres;

alter table account_account
	add constraint account_account_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_account
	add constraint account_account_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_account_tag
(
	id integer default nextval('account_account_tag_id_seq'::regclass) not null
		constraint account_account_tag_pkey
			primary key,
	name varchar not null,
	applicability varchar not null,
	color integer,
	active boolean,
	tax_negate boolean,
	country_id integer
		constraint account_account_tag_country_id_fkey
			references res_country
				on delete set null,
	create_uid integer
		constraint account_account_tag_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_account_tag_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_account_tag is 'Account Tag';

comment on column account_account_tag.name is 'Tag Name';

comment on column account_account_tag.applicability is 'Applicability';

comment on column account_account_tag.color is 'Color Index';

comment on column account_account_tag.active is 'Active';

comment on column account_account_tag.tax_negate is 'Negate Tax Balance';

comment on column account_account_tag.country_id is 'Country';

comment on column account_account_tag.create_uid is 'Created by';

comment on column account_account_tag.create_date is 'Created on';

comment on column account_account_tag.write_uid is 'Last Updated by';

comment on column account_account_tag.write_date is 'Last Updated on';

alter table account_account_tag owner to postgres;

create table account_account_account_tag
(
	account_account_id integer not null
		constraint account_account_account_tag_account_account_id_fkey
			references account_account
				on delete cascade,
	account_account_tag_id integer not null
		constraint account_account_account_tag_account_account_tag_id_fkey
			references account_account_tag
				on delete cascade,
	constraint account_account_account_tag_pkey
		primary key (account_account_id, account_account_tag_id)
);

comment on table account_account_account_tag is 'RELATION BETWEEN account_account AND account_account_tag';

alter table account_account_account_tag owner to postgres;

create index account_account_account_tag_account_account_tag_id_account__idx
	on account_account_account_tag (account_account_tag_id, account_account_id);

create table account_account_type
(
	id integer default nextval('account_account_type_id_seq'::regclass) not null
		constraint account_account_type_pkey
			primary key,
	name varchar not null,
	include_initial_balance boolean,
	type varchar not null,
	internal_group varchar not null,
	note text,
	create_uid integer
		constraint account_account_type_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_account_type_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_account_type is 'Account Type';

comment on column account_account_type.name is 'Account Type';

comment on column account_account_type.include_initial_balance is 'Bring Accounts Balance Forward';

comment on column account_account_type.type is 'Type';

comment on column account_account_type.internal_group is 'Internal Group';

comment on column account_account_type.note is 'Description';

comment on column account_account_type.create_uid is 'Created by';

comment on column account_account_type.create_date is 'Created on';

comment on column account_account_type.write_uid is 'Last Updated by';

comment on column account_account_type.write_date is 'Last Updated on';

alter table account_account_type owner to postgres;

alter table account_account
	add constraint account_account_user_type_id_fkey
		foreign key (user_type_id) references account_account_type
			on delete restrict;

alter table account_analytic_account
	add constraint account_analytic_account_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_analytic_account
	add constraint account_analytic_account_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_analytic_group
(
	id integer default nextval('account_analytic_group_id_seq'::regclass) not null
		constraint account_analytic_group_pkey
			primary key,
	name varchar not null,
	description text,
	parent_id integer
		constraint account_analytic_group_parent_id_fkey
			references account_analytic_group
				on delete cascade,
	parent_path varchar,
	complete_name varchar,
	company_id integer,
	create_uid integer
		constraint account_analytic_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_analytic_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_analytic_group is 'Analytic Categories';

comment on column account_analytic_group.name is 'Name';

comment on column account_analytic_group.description is 'Description';

comment on column account_analytic_group.parent_id is 'Parent';

comment on column account_analytic_group.parent_path is 'Parent Path';

comment on column account_analytic_group.complete_name is 'Complete Name';

comment on column account_analytic_group.company_id is 'Company';

comment on column account_analytic_group.create_uid is 'Created by';

comment on column account_analytic_group.create_date is 'Created on';

comment on column account_analytic_group.write_uid is 'Last Updated by';

comment on column account_analytic_group.write_date is 'Last Updated on';

alter table account_analytic_group owner to postgres;

alter table account_analytic_account
	add constraint account_analytic_account_group_id_fkey
		foreign key (group_id) references account_analytic_group
			on delete set null;

create index account_analytic_group_parent_path_index
	on account_analytic_group (parent_path);

alter table account_asset
	add constraint account_asset_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_asset
	add constraint account_asset_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_asset_pause
(
	id integer default nextval('account_asset_pause_id_seq'::regclass) not null
		constraint account_asset_pause_pkey
			primary key,
	date date not null,
	asset_id integer not null
		constraint account_asset_pause_asset_id_fkey
			references account_asset
				on delete cascade,
	create_uid integer
		constraint account_asset_pause_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_asset_pause_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_asset_pause is 'Pause Asset';

comment on column account_asset_pause.date is 'Pause date';

comment on column account_asset_pause.asset_id is 'Asset';

comment on column account_asset_pause.create_uid is 'Created by';

comment on column account_asset_pause.create_date is 'Created on';

comment on column account_asset_pause.write_uid is 'Last Updated by';

comment on column account_asset_pause.write_date is 'Last Updated on';

alter table account_asset_pause owner to postgres;

alter table account_bank_statement
	add constraint account_bank_statement_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_bank_statement
	add constraint account_bank_statement_user_id_fkey
		foreign key (user_id) references res_users
			on delete set null;

alter table account_bank_statement
	add constraint account_bank_statement_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_bank_statement_cashbox
(
	id integer default nextval('account_bank_statement_cashbox_id_seq'::regclass) not null
		constraint account_bank_statement_cashbox_pkey
			primary key,
	create_uid integer
		constraint account_bank_statement_cashbox_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_bank_statement_cashbox_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_bank_statement_cashbox is 'Bank Statement Cashbox';

comment on column account_bank_statement_cashbox.create_uid is 'Created by';

comment on column account_bank_statement_cashbox.create_date is 'Created on';

comment on column account_bank_statement_cashbox.write_uid is 'Last Updated by';

comment on column account_bank_statement_cashbox.write_date is 'Last Updated on';

alter table account_bank_statement_cashbox owner to postgres;

alter table account_bank_statement
	add constraint account_bank_statement_cashbox_end_id_fkey
		foreign key (cashbox_end_id) references account_bank_statement_cashbox
			on delete set null;

alter table account_bank_statement
	add constraint account_bank_statement_cashbox_start_id_fkey
		foreign key (cashbox_start_id) references account_bank_statement_cashbox
			on delete set null;

create table account_bank_statement_closebalance
(
	id integer default nextval('account_bank_statement_closebalance_id_seq'::regclass) not null
		constraint account_bank_statement_closebalance_pkey
			primary key,
	create_uid integer
		constraint account_bank_statement_closebalance_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_bank_statement_closebalance_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_bank_statement_closebalance is 'Bank Statement Closing Balance';

comment on column account_bank_statement_closebalance.create_uid is 'Created by';

comment on column account_bank_statement_closebalance.create_date is 'Created on';

comment on column account_bank_statement_closebalance.write_uid is 'Last Updated by';

comment on column account_bank_statement_closebalance.write_date is 'Last Updated on';

alter table account_bank_statement_closebalance owner to postgres;

create table account_bank_statement_import
(
	id integer default nextval('account_bank_statement_import_id_seq'::regclass) not null
		constraint account_bank_statement_import_pkey
			primary key,
	create_uid integer
		constraint account_bank_statement_import_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_bank_statement_import_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_bank_statement_import is 'Import Bank Statement';

comment on column account_bank_statement_import.create_uid is 'Created by';

comment on column account_bank_statement_import.create_date is 'Created on';

comment on column account_bank_statement_import.write_uid is 'Last Updated by';

comment on column account_bank_statement_import.write_date is 'Last Updated on';

alter table account_bank_statement_import owner to postgres;

create table account_bank_statement_import_ir_attachment_rel
(
	account_bank_statement_import_id integer not null
		constraint account_bank_statement_import_account_bank_statement_impor_fkey
			references account_bank_statement_import
				on delete cascade,
	ir_attachment_id integer not null
		constraint account_bank_statement_import_ir_attachme_ir_attachment_id_fkey
			references ir_attachment
				on delete cascade,
	constraint account_bank_statement_import_ir_attachment_rel_pkey
		primary key (account_bank_statement_import_id, ir_attachment_id)
);

comment on table account_bank_statement_import_ir_attachment_rel is 'RELATION BETWEEN account_bank_statement_import AND ir_attachment';

alter table account_bank_statement_import_ir_attachment_rel owner to postgres;

create index account_bank_statement_import_ir_attachment_id_account_bank_idx
	on account_bank_statement_import_ir_attachment_rel (ir_attachment_id, account_bank_statement_import_id);

create table account_bank_statement_import_journal_creation
(
	id integer default nextval('account_bank_statement_import_journal_creation_id_seq'::regclass) not null
		constraint account_bank_statement_import_journal_creation_pkey
			primary key,
	journal_id integer not null
		constraint account_bank_statement_import_journal_creation_journal_id_fkey
			references account_journal
				on delete cascade,
	create_uid integer
		constraint account_bank_statement_import_journal_creation_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_bank_statement_import_journal_creation_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_bank_statement_import_journal_creation is 'Journal Creation on Bank Statement Import';

comment on column account_bank_statement_import_journal_creation.journal_id is 'Journal';

comment on column account_bank_statement_import_journal_creation.create_uid is 'Created by';

comment on column account_bank_statement_import_journal_creation.create_date is 'Created on';

comment on column account_bank_statement_import_journal_creation.write_uid is 'Last Updated by';

comment on column account_bank_statement_import_journal_creation.write_date is 'Last Updated on';

alter table account_bank_statement_import_journal_creation owner to postgres;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

alter table account_cash_rounding
	add constraint account_cash_rounding_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_cash_rounding
	add constraint account_cash_rounding_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_cashbox_line
(
	id integer default nextval('account_cashbox_line_id_seq'::regclass) not null
		constraint account_cashbox_line_pkey
			primary key,
	coin_value numeric not null,
	number integer,
	cashbox_id integer
		constraint account_cashbox_line_cashbox_id_fkey
			references account_bank_statement_cashbox
				on delete set null,
	create_uid integer
		constraint account_cashbox_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_cashbox_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_cashbox_line is 'CashBox Line';

comment on column account_cashbox_line.coin_value is 'Coin/Bill Value';

comment on column account_cashbox_line.number is '#Coins/Bills';

comment on column account_cashbox_line.cashbox_id is 'Cashbox';

comment on column account_cashbox_line.create_uid is 'Created by';

comment on column account_cashbox_line.create_date is 'Created on';

comment on column account_cashbox_line.write_uid is 'Last Updated by';

comment on column account_cashbox_line.write_date is 'Last Updated on';

alter table account_cashbox_line owner to postgres;

create table account_change_lock_date
(
	id integer default nextval('account_change_lock_date_id_seq'::regclass) not null
		constraint account_change_lock_date_pkey
			primary key,
	period_lock_date date,
	fiscalyear_lock_date date,
	tax_lock_date date,
	create_uid integer
		constraint account_change_lock_date_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_change_lock_date_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_change_lock_date is 'Change Lock Date';

comment on column account_change_lock_date.period_lock_date is 'Lock Date for Non-Advisers';

comment on column account_change_lock_date.fiscalyear_lock_date is 'Lock Date for All Users';

comment on column account_change_lock_date.tax_lock_date is 'Tax Lock Date';

comment on column account_change_lock_date.create_uid is 'Created by';

comment on column account_change_lock_date.create_date is 'Created on';

comment on column account_change_lock_date.write_uid is 'Last Updated by';

comment on column account_change_lock_date.write_date is 'Last Updated on';

alter table account_change_lock_date owner to postgres;

create table account_edi_format
(
	id integer default nextval('account_edi_format_id_seq'::regclass) not null
		constraint account_edi_format_pkey
			primary key,
	name varchar,
	code varchar not null
		constraint account_edi_format_unique_code
			unique,
	create_uid integer
		constraint account_edi_format_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_edi_format_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_edi_format is 'EDI format';

comment on column account_edi_format.name is 'Name';

comment on column account_edi_format.code is 'Code';

comment on column account_edi_format.create_uid is 'Created by';

comment on column account_edi_format.create_date is 'Created on';

comment on column account_edi_format.write_uid is 'Last Updated by';

comment on column account_edi_format.write_date is 'Last Updated on';

alter table account_edi_format owner to postgres;

create table account_edi_document
(
	id integer default nextval('account_edi_document_id_seq'::regclass) not null
		constraint account_edi_document_pkey
			primary key,
	move_id integer not null
		constraint account_edi_document_move_id_fkey
			references account_move
				on delete cascade,
	edi_format_id integer not null
		constraint account_edi_document_edi_format_id_fkey
			references account_edi_format
				on delete restrict,
	attachment_id integer
		constraint account_edi_document_attachment_id_fkey
			references ir_attachment
				on delete set null,
	state varchar,
	error text,
	create_uid integer
		constraint account_edi_document_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_edi_document_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_edi_document_unique_edi_document_by_move_by_format
		unique (edi_format_id, move_id)
);

comment on table account_edi_document is 'Electronic Document for an account.move';

comment on column account_edi_document.move_id is 'Move';

comment on column account_edi_document.edi_format_id is 'Edi Format';

comment on column account_edi_document.attachment_id is 'Attachment';

comment on column account_edi_document.state is 'State';

comment on column account_edi_document.error is 'Error';

comment on column account_edi_document.create_uid is 'Created by';

comment on column account_edi_document.create_date is 'Created on';

comment on column account_edi_document.write_uid is 'Last Updated by';

comment on column account_edi_document.write_date is 'Last Updated on';

alter table account_edi_document owner to postgres;

create table account_edi_format_account_journal_rel
(
	account_journal_id integer not null
		constraint account_edi_format_account_journal_rel_account_journal_id_fkey
			references account_journal
				on delete cascade,
	account_edi_format_id integer not null
		constraint account_edi_format_account_journal_r_account_edi_format_id_fkey
			references account_edi_format
				on delete cascade,
	constraint account_edi_format_account_journal_rel_pkey
		primary key (account_journal_id, account_edi_format_id)
);

comment on table account_edi_format_account_journal_rel is 'RELATION BETWEEN account_journal AND account_edi_format';

alter table account_edi_format_account_journal_rel owner to postgres;

create index account_edi_format_account_jo_account_edi_format_id_account_idx
	on account_edi_format_account_journal_rel (account_edi_format_id, account_journal_id);

alter table account_fiscal_position
	add constraint account_fiscal_position_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_fiscal_position
	add constraint account_fiscal_position_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_fiscal_position_account
(
	id integer default nextval('account_fiscal_position_account_id_seq'::regclass) not null
		constraint account_fiscal_position_account_pkey
			primary key,
	position_id integer not null
		constraint account_fiscal_position_account_position_id_fkey
			references account_fiscal_position
				on delete cascade,
	company_id integer,
	account_src_id integer not null
		constraint account_fiscal_position_account_account_src_id_fkey
			references account_account
				on delete restrict,
	account_dest_id integer not null
		constraint account_fiscal_position_account_account_dest_id_fkey
			references account_account
				on delete restrict,
	create_uid integer
		constraint account_fiscal_position_account_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_position_account_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_fiscal_position_account_account_src_dest_uniq
		unique (position_id, account_src_id, account_dest_id)
);

comment on table account_fiscal_position_account is 'Accounts Mapping of Fiscal Position';

comment on column account_fiscal_position_account.position_id is 'Fiscal Position';

comment on column account_fiscal_position_account.company_id is 'Company';

comment on column account_fiscal_position_account.account_src_id is 'Account on Product';

comment on column account_fiscal_position_account.account_dest_id is 'Account to Use Instead';

comment on column account_fiscal_position_account.create_uid is 'Created by';

comment on column account_fiscal_position_account.create_date is 'Created on';

comment on column account_fiscal_position_account.write_uid is 'Last Updated by';

comment on column account_fiscal_position_account.write_date is 'Last Updated on';

alter table account_fiscal_position_account owner to postgres;

create table account_full_reconcile
(
	id integer default nextval('account_full_reconcile_id_seq'::regclass) not null
		constraint account_full_reconcile_pkey
			primary key,
	name varchar not null,
	exchange_move_id integer
		constraint account_full_reconcile_exchange_move_id_fkey
			references account_move
				on delete set null,
	create_uid integer
		constraint account_full_reconcile_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_full_reconcile_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_full_reconcile is 'Full Reconcile';

comment on column account_full_reconcile.name is 'Number';

comment on column account_full_reconcile.exchange_move_id is 'Exchange Move';

comment on column account_full_reconcile.create_uid is 'Created by';

comment on column account_full_reconcile.create_date is 'Created on';

comment on column account_full_reconcile.write_uid is 'Last Updated by';

comment on column account_full_reconcile.write_date is 'Last Updated on';

alter table account_full_reconcile owner to postgres;

alter table account_incoterms
	add constraint account_incoterms_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_incoterms
	add constraint account_incoterms_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_invoice_extract_words
(
	id integer default nextval('account_invoice_extract_words_id_seq'::regclass) not null
		constraint account_invoice_extract_words_pkey
			primary key,
	invoice_id integer
		constraint account_invoice_extract_words_invoice_id_fkey
			references account_move
				on delete set null,
	field varchar,
	selected_status integer,
	user_selected boolean,
	word_text varchar,
	word_page integer,
	"word_box_midX" double precision,
	"word_box_midY" double precision,
	word_box_width double precision,
	word_box_height double precision,
	word_box_angle double precision,
	create_uid integer
		constraint account_invoice_extract_words_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_invoice_extract_words_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_invoice_extract_words is 'Extracted words from invoice scan';

comment on column account_invoice_extract_words.invoice_id is 'Invoice';

comment on column account_invoice_extract_words.field is 'Field';

comment on column account_invoice_extract_words.selected_status is 'Invoice extract selected status.';

comment on column account_invoice_extract_words.user_selected is 'User Selected';

comment on column account_invoice_extract_words.word_text is 'Word Text';

comment on column account_invoice_extract_words.word_page is 'Word Page';

comment on column account_invoice_extract_words."word_box_midX" is 'Word Box Midx';

comment on column account_invoice_extract_words."word_box_midY" is 'Word Box Midy';

comment on column account_invoice_extract_words.word_box_width is 'Word Box Width';

comment on column account_invoice_extract_words.word_box_height is 'Word Box Height';

comment on column account_invoice_extract_words.word_box_angle is 'Word Box Angle';

comment on column account_invoice_extract_words.create_uid is 'Created by';

comment on column account_invoice_extract_words.create_date is 'Created on';

comment on column account_invoice_extract_words.write_uid is 'Last Updated by';

comment on column account_invoice_extract_words.write_date is 'Last Updated on';

alter table account_invoice_extract_words owner to postgres;

alter table account_journal
	add constraint account_journal_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_journal
	add constraint account_journal_sale_activity_user_id_fkey
		foreign key (sale_activity_user_id) references res_users
			on delete set null;

alter table account_journal
	add constraint account_journal_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_link_journal
(
	id integer default nextval('account_link_journal_id_seq'::regclass) not null
		constraint account_link_journal_pkey
			primary key,
	number_added integer,
	transactions text,
	sync_date date,
	create_uid integer
		constraint account_link_journal_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_link_journal_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_link_journal is 'Link list of bank accounts to journals';

comment on column account_link_journal.number_added is 'Number Added';

comment on column account_link_journal.transactions is 'Transactions';

comment on column account_link_journal.sync_date is 'Get transactions since';

comment on column account_link_journal.create_uid is 'Created by';

comment on column account_link_journal.create_date is 'Created on';

comment on column account_link_journal.write_uid is 'Last Updated by';

comment on column account_link_journal.write_date is 'Last Updated on';

alter table account_link_journal owner to postgres;

alter table account_move
	add constraint account_move_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_move
	add constraint account_move_invoice_user_id_fkey
		foreign key (invoice_user_id) references res_users
			on delete set null;

alter table account_move
	add constraint account_move_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_online_link
(
	id integer default nextval('account_online_link_id_seq'::regclass) not null
		constraint account_online_link_pkey
			primary key,
	last_refresh timestamp,
	state varchar not null,
	auto_sync boolean,
	company_id integer not null,
	name varchar,
	client_id varchar,
	refresh_token varchar,
	access_token varchar,
	provider_data varchar,
	message_main_attachment_id integer
		constraint account_online_link_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint account_online_link_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_link_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_online_link is 'Connection to an online banking institution';

comment on column account_online_link.last_refresh is 'Last Refresh';

comment on column account_online_link.state is 'State';

comment on column account_online_link.auto_sync is 'Automatic synchronization';

comment on column account_online_link.company_id is 'Company';

comment on column account_online_link.name is 'Name';

comment on column account_online_link.client_id is 'Client';

comment on column account_online_link.refresh_token is 'Refresh Token';

comment on column account_online_link.access_token is 'Access Token';

comment on column account_online_link.provider_data is 'Provider Data';

comment on column account_online_link.message_main_attachment_id is 'Main Attachment';

comment on column account_online_link.create_uid is 'Created by';

comment on column account_online_link.create_date is 'Created on';

comment on column account_online_link.write_uid is 'Last Updated by';

comment on column account_online_link.write_date is 'Last Updated on';

alter table account_online_link owner to postgres;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_online_link_id_fkey
		foreign key (online_link_id) references account_online_link
			on delete set null;

alter table account_journal
	add constraint account_journal_account_online_link_id_fkey
		foreign key (account_online_link_id) references account_online_link
			on delete set null;

create table account_online_account
(
	id integer default nextval('account_online_account_id_seq'::regclass) not null
		constraint account_online_account_pkey
			primary key,
	name varchar,
	online_identifier varchar,
	balance double precision,
	account_number varchar,
	account_data varchar,
	account_online_link_id integer
		constraint account_online_account_account_online_link_id_fkey
			references account_online_link
				on delete cascade,
	last_sync date,
	create_uid integer
		constraint account_online_account_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_account_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_online_account is 'representation of an online bank account';

comment on column account_online_account.name is 'Account Name';

comment on column account_online_account.online_identifier is 'Online Identifier';

comment on column account_online_account.balance is 'Balance';

comment on column account_online_account.account_number is 'Account Number';

comment on column account_online_account.account_data is 'Account Data';

comment on column account_online_account.account_online_link_id is 'Account Online Link';

comment on column account_online_account.last_sync is 'Last synchronization';

comment on column account_online_account.create_uid is 'Created by';

comment on column account_online_account.create_date is 'Created on';

comment on column account_online_account.write_uid is 'Last Updated by';

comment on column account_online_account.write_date is 'Last Updated on';

alter table account_online_account owner to postgres;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_online_account_id_fkey
		foreign key (online_account_id) references account_online_account
			on delete set null;

alter table account_journal
	add constraint account_journal_account_online_account_id_fkey
		foreign key (account_online_account_id) references account_online_account
			on delete set null;

create index account_online_link_message_main_attachment_id_index
	on account_online_link (message_main_attachment_id);

create table account_online_wizard
(
	id integer default nextval('account_online_wizard_id_seq'::regclass) not null
		constraint account_online_wizard_pkey
			primary key,
	number_added integer,
	transactions text,
	status varchar,
	method varchar,
	message varchar,
	sync_date date,
	hide_table boolean,
	create_uid integer
		constraint account_online_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_online_wizard is 'Wizard to link synchronized accounts to journal';

comment on column account_online_wizard.number_added is 'Number Added';

comment on column account_online_wizard.transactions is 'Transactions';

comment on column account_online_wizard.status is 'Status';

comment on column account_online_wizard.method is 'Method';

comment on column account_online_wizard.message is 'Message';

comment on column account_online_wizard.sync_date is 'Fetch transactions from';

comment on column account_online_wizard.hide_table is 'Hide Table';

comment on column account_online_wizard.create_uid is 'Created by';

comment on column account_online_wizard.create_date is 'Created on';

comment on column account_online_wizard.write_uid is 'Last Updated by';

comment on column account_online_wizard.write_date is 'Last Updated on';

alter table account_online_wizard owner to postgres;

create table account_payment_method
(
	id integer default nextval('account_payment_method_id_seq'::regclass) not null
		constraint account_payment_method_pkey
			primary key,
	name varchar not null,
	code varchar not null,
	payment_type varchar not null,
	sequence integer,
	create_uid integer
		constraint account_payment_method_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_payment_method_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_payment_method is 'Payment Methods';

comment on column account_payment_method.name is 'Name';

comment on column account_payment_method.code is 'Code';

comment on column account_payment_method.payment_type is 'Payment Type';

comment on column account_payment_method.sequence is 'Sequence';

comment on column account_payment_method.create_uid is 'Created by';

comment on column account_payment_method.create_date is 'Created on';

comment on column account_payment_method.write_uid is 'Last Updated by';

comment on column account_payment_method.write_date is 'Last Updated on';

alter table account_payment_method owner to postgres;

create table account_journal_inbound_payment_method_rel
(
	journal_id integer not null
		constraint account_journal_inbound_payment_method_rel_journal_id_fkey
			references account_journal
				on delete cascade,
	inbound_payment_method integer not null
		constraint account_journal_inbound_payment_met_inbound_payment_method_fkey
			references account_payment_method
				on delete cascade,
	constraint account_journal_inbound_payment_method_rel_pkey
		primary key (journal_id, inbound_payment_method)
);

comment on table account_journal_inbound_payment_method_rel is 'RELATION BETWEEN account_journal AND account_payment_method';

alter table account_journal_inbound_payment_method_rel owner to postgres;

create index account_journal_inbound_payme_inbound_payment_method_journa_idx
	on account_journal_inbound_payment_method_rel (inbound_payment_method, journal_id);

create table account_journal_outbound_payment_method_rel
(
	journal_id integer not null
		constraint account_journal_outbound_payment_method_rel_journal_id_fkey
			references account_journal
				on delete cascade,
	outbound_payment_method integer not null
		constraint account_journal_outbound_payment_m_outbound_payment_method_fkey
			references account_payment_method
				on delete cascade,
	constraint account_journal_outbound_payment_method_rel_pkey
		primary key (journal_id, outbound_payment_method)
);

comment on table account_journal_outbound_payment_method_rel is 'RELATION BETWEEN account_journal AND account_payment_method';

alter table account_journal_outbound_payment_method_rel owner to postgres;

create index account_journal_outbound_paym_outbound_payment_method_journ_idx
	on account_journal_outbound_payment_method_rel (outbound_payment_method, journal_id);

create table account_reconcile_model
(
	id integer default nextval('account_reconcile_model_id_seq'::regclass) not null
		constraint account_reconcile_model_pkey
			primary key,
	active boolean,
	name varchar not null,
	sequence integer not null,
	company_id integer not null,
	rule_type varchar not null,
	auto_reconcile boolean,
	to_check boolean,
	matching_order varchar not null,
	match_text_location_label boolean,
	match_text_location_note boolean,
	match_text_location_reference boolean,
	match_nature varchar not null,
	match_amount varchar,
	match_amount_min double precision,
	match_amount_max double precision,
	match_label varchar,
	match_label_param varchar,
	match_note varchar,
	match_note_param varchar,
	match_transaction_type varchar,
	match_transaction_type_param varchar,
	match_same_currency boolean,
	match_total_amount boolean,
	match_total_amount_param double precision,
	match_partner boolean,
	past_months_limit integer,
	decimal_separator varchar,
	create_uid integer
		constraint account_reconcile_model_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reconcile_model_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reconcile_model is 'Preset to create journal entries during a invoices and payments matching';

comment on column account_reconcile_model.active is 'Active';

comment on column account_reconcile_model.name is 'Name';

comment on column account_reconcile_model.sequence is 'Sequence';

comment on column account_reconcile_model.company_id is 'Company';

comment on column account_reconcile_model.rule_type is 'Type';

comment on column account_reconcile_model.auto_reconcile is 'Auto-validate';

comment on column account_reconcile_model.to_check is 'To Check';

comment on column account_reconcile_model.matching_order is 'Matching Order';

comment on column account_reconcile_model.match_text_location_label is 'Match Text Location Label';

comment on column account_reconcile_model.match_text_location_note is 'Match Text Location Note';

comment on column account_reconcile_model.match_text_location_reference is 'Match Text Location Reference';

comment on column account_reconcile_model.match_nature is 'Amount Nature';

comment on column account_reconcile_model.match_amount is 'Amount';

comment on column account_reconcile_model.match_amount_min is 'Amount Min Parameter';

comment on column account_reconcile_model.match_amount_max is 'Amount Max Parameter';

comment on column account_reconcile_model.match_label is 'Label';

comment on column account_reconcile_model.match_label_param is 'Label Parameter';

comment on column account_reconcile_model.match_note is 'Note';

comment on column account_reconcile_model.match_note_param is 'Note Parameter';

comment on column account_reconcile_model.match_transaction_type is 'Transaction Type';

comment on column account_reconcile_model.match_transaction_type_param is 'Transaction Type Parameter';

comment on column account_reconcile_model.match_same_currency is 'Same Currency Matching';

comment on column account_reconcile_model.match_total_amount is 'Amount Matching';

comment on column account_reconcile_model.match_total_amount_param is 'Amount Matching %';

comment on column account_reconcile_model.match_partner is 'Partner Is Set';

comment on column account_reconcile_model.past_months_limit is 'Past Months Limit';

comment on column account_reconcile_model.decimal_separator is 'Decimal Separator';

comment on column account_reconcile_model.create_uid is 'Created by';

comment on column account_reconcile_model.create_date is 'Created on';

comment on column account_reconcile_model.write_uid is 'Last Updated by';

comment on column account_reconcile_model.write_date is 'Last Updated on';

alter table account_reconcile_model owner to postgres;

create table account_journal_account_reconcile_model_rel
(
	account_reconcile_model_id integer not null
		constraint account_journal_account_reconci_account_reconcile_model_id_fkey
			references account_reconcile_model
				on delete cascade,
	account_journal_id integer not null
		constraint account_journal_account_reconcile_model_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_journal_account_reconcile_model_rel_pkey
		primary key (account_reconcile_model_id, account_journal_id)
);

comment on table account_journal_account_reconcile_model_rel is 'RELATION BETWEEN account_reconcile_model AND account_journal';

alter table account_journal_account_reconcile_model_rel owner to postgres;

create index account_journal_account_recon_account_journal_id_account_re_idx
	on account_journal_account_reconcile_model_rel (account_journal_id, account_reconcile_model_id);

create table account_reconcile_model_partner_mapping
(
	id integer default nextval('account_reconcile_model_partner_mapping_id_seq'::regclass) not null
		constraint account_reconcile_model_partner_mapping_pkey
			primary key,
	model_id integer not null
		constraint account_reconcile_model_partner_mapping_model_id_fkey
			references account_reconcile_model
				on delete cascade,
	partner_id integer not null
		constraint account_reconcile_model_partner_mapping_partner_id_fkey
			references res_partner
				on delete cascade,
	payment_ref_regex varchar,
	narration_regex varchar,
	create_uid integer
		constraint account_reconcile_model_partner_mapping_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reconcile_model_partner_mapping_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reconcile_model_partner_mapping is 'Partner mapping for reconciliation models';

comment on column account_reconcile_model_partner_mapping.model_id is 'Model';

comment on column account_reconcile_model_partner_mapping.partner_id is 'Partner';

comment on column account_reconcile_model_partner_mapping.payment_ref_regex is 'Find Text in Label';

comment on column account_reconcile_model_partner_mapping.narration_regex is 'Find Text in Notes';

comment on column account_reconcile_model_partner_mapping.create_uid is 'Created by';

comment on column account_reconcile_model_partner_mapping.create_date is 'Created on';

comment on column account_reconcile_model_partner_mapping.write_uid is 'Last Updated by';

comment on column account_reconcile_model_partner_mapping.write_date is 'Last Updated on';

alter table account_reconcile_model_partner_mapping owner to postgres;

create table account_reconcile_model_res_partner_rel
(
	account_reconcile_model_id integer not null
		constraint account_reconcile_model_res_par_account_reconcile_model_id_fkey
			references account_reconcile_model
				on delete cascade,
	res_partner_id integer not null
		constraint account_reconcile_model_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint account_reconcile_model_res_partner_rel_pkey
		primary key (account_reconcile_model_id, res_partner_id)
);

comment on table account_reconcile_model_res_partner_rel is 'RELATION BETWEEN account_reconcile_model AND res_partner';

alter table account_reconcile_model_res_partner_rel owner to postgres;

create index account_reconcile_model_res_p_res_partner_id_account_reconc_idx
	on account_reconcile_model_res_partner_rel (res_partner_id, account_reconcile_model_id);

create table account_reports_export_wizard
(
	id integer default nextval('account_reports_export_wizard_id_seq'::regclass) not null
		constraint account_reports_export_wizard_pkey
			primary key,
	report_model varchar not null,
	report_id integer not null,
	doc_name varchar,
	create_uid integer
		constraint account_reports_export_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reports_export_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reports_export_wizard is 'Export wizard for accounting''s reports';

comment on column account_reports_export_wizard.report_model is 'Report Model';

comment on column account_reports_export_wizard.report_id is 'Parent Report Id';

comment on column account_reports_export_wizard.doc_name is 'Documents Name';

comment on column account_reports_export_wizard.create_uid is 'Created by';

comment on column account_reports_export_wizard.create_date is 'Created on';

comment on column account_reports_export_wizard.write_uid is 'Last Updated by';

comment on column account_reports_export_wizard.write_date is 'Last Updated on';

alter table account_reports_export_wizard owner to postgres;

create table account_reports_export_wizard_format
(
	id integer default nextval('account_reports_export_wizard_format_id_seq'::regclass) not null
		constraint account_reports_export_wizard_format_pkey
			primary key,
	name varchar not null,
	fun_to_call varchar not null,
	export_wizard_id integer not null
		constraint account_reports_export_wizard_format_export_wizard_id_fkey
			references account_reports_export_wizard
				on delete restrict,
	create_uid integer
		constraint account_reports_export_wizard_format_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reports_export_wizard_format_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reports_export_wizard_format is 'Export format for accounting''s reports';

comment on column account_reports_export_wizard_format.name is 'Name';

comment on column account_reports_export_wizard_format.fun_to_call is 'Function to Call';

comment on column account_reports_export_wizard_format.export_wizard_id is 'Parent Wizard';

comment on column account_reports_export_wizard_format.create_uid is 'Created by';

comment on column account_reports_export_wizard_format.create_date is 'Created on';

comment on column account_reports_export_wizard_format.write_uid is 'Last Updated by';

comment on column account_reports_export_wizard_format.write_date is 'Last Updated on';

alter table account_reports_export_wizard_format owner to postgres;

create table account_resequence_wizard
(
	id integer default nextval('account_resequence_wizard_id_seq'::regclass) not null
		constraint account_resequence_wizard_pkey
			primary key,
	first_date date,
	end_date date,
	first_name varchar not null,
	ordering varchar not null,
	create_uid integer
		constraint account_resequence_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_resequence_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_resequence_wizard is 'Remake the sequence of Journal Entries.';

comment on column account_resequence_wizard.first_date is 'First Date';

comment on column account_resequence_wizard.end_date is 'End Date';

comment on column account_resequence_wizard.first_name is 'First New Sequence';

comment on column account_resequence_wizard.ordering is 'Ordering';

comment on column account_resequence_wizard.create_uid is 'Created by';

comment on column account_resequence_wizard.create_date is 'Created on';

comment on column account_resequence_wizard.write_uid is 'Last Updated by';

comment on column account_resequence_wizard.write_date is 'Last Updated on';

alter table account_resequence_wizard owner to postgres;

create table account_move_account_resequence_wizard_rel
(
	account_resequence_wizard_id integer not null
		constraint account_move_account_resequen_account_resequence_wizard_id_fkey
			references account_resequence_wizard
				on delete cascade,
	account_move_id integer not null
		constraint account_move_account_resequence_wizard_rel_account_move_id_fkey
			references account_move
				on delete cascade,
	constraint account_move_account_resequence_wizard_rel_pkey
		primary key (account_resequence_wizard_id, account_move_id)
);

comment on table account_move_account_resequence_wizard_rel is 'RELATION BETWEEN account_resequence_wizard AND account_move';

alter table account_move_account_resequence_wizard_rel owner to postgres;

create index account_move_account_resequen_account_move_id_account_reseq_idx
	on account_move_account_resequence_wizard_rel (account_move_id, account_resequence_wizard_id);

create table account_tax_group
(
	id integer default nextval('account_tax_group_id_seq'::regclass) not null
		constraint account_tax_group_pkey
			primary key,
	name varchar not null,
	sequence integer,
	create_uid integer
		constraint account_tax_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tax_group is 'Tax Group';

comment on column account_tax_group.name is 'Name';

comment on column account_tax_group.sequence is 'Sequence';

comment on column account_tax_group.create_uid is 'Created by';

comment on column account_tax_group.create_date is 'Created on';

comment on column account_tax_group.write_uid is 'Last Updated by';

comment on column account_tax_group.write_date is 'Last Updated on';

alter table account_tax_group owner to postgres;

create table account_tax
(
	id integer default nextval('account_tax_id_seq'::regclass) not null
		constraint account_tax_pkey
			primary key,
	name varchar not null,
	type_tax_use varchar not null,
	tax_scope varchar,
	amount_type varchar not null,
	active boolean,
	company_id integer not null,
	sequence integer not null,
	amount numeric not null,
	description varchar,
	price_include boolean,
	include_base_amount boolean,
	analytic boolean,
	tax_group_id integer not null
		constraint account_tax_tax_group_id_fkey
			references account_tax_group
				on delete restrict,
	tax_exigibility varchar,
	cash_basis_transition_account_id integer
		constraint account_tax_cash_basis_transition_account_id_fkey
			references account_account
				on delete set null,
	create_uid integer
		constraint account_tax_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_tax_name_company_uniq
		unique (name, company_id, type_tax_use, tax_scope)
);

comment on table account_tax is 'Tax';

comment on column account_tax.name is 'Tax Name';

comment on column account_tax.type_tax_use is 'Tax Type';

comment on column account_tax.tax_scope is 'Tax Scope';

comment on column account_tax.amount_type is 'Tax Computation';

comment on column account_tax.active is 'Active';

comment on column account_tax.company_id is 'Company';

comment on column account_tax.sequence is 'Sequence';

comment on column account_tax.amount is 'Amount';

comment on column account_tax.description is 'Label on Invoices';

comment on column account_tax.price_include is 'Included in Price';

comment on column account_tax.include_base_amount is 'Affect Base of Subsequent Taxes';

comment on column account_tax.analytic is 'Include in Analytic Cost';

comment on column account_tax.tax_group_id is 'Tax Group';

comment on column account_tax.tax_exigibility is 'Tax Due';

comment on column account_tax.cash_basis_transition_account_id is 'Cash Basis Transition Account';

comment on column account_tax.create_uid is 'Created by';

comment on column account_tax.create_date is 'Created on';

comment on column account_tax.write_uid is 'Last Updated by';

comment on column account_tax.write_date is 'Last Updated on';

alter table account_tax owner to postgres;

create table account_account_tax_default_rel
(
	account_id integer not null
		constraint account_account_tax_default_rel_account_id_fkey
			references account_account
				on delete cascade,
	tax_id integer not null
		constraint account_account_tax_default_rel_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint account_account_tax_default_rel_pkey
		primary key (account_id, tax_id)
);

comment on table account_account_tax_default_rel is 'RELATION BETWEEN account_account AND account_tax';

alter table account_account_tax_default_rel owner to postgres;

create index account_account_tax_default_rel_tax_id_account_id_idx
	on account_account_tax_default_rel (tax_id, account_id);

create table account_fiscal_position_tax
(
	id integer default nextval('account_fiscal_position_tax_id_seq'::regclass) not null
		constraint account_fiscal_position_tax_pkey
			primary key,
	position_id integer not null
		constraint account_fiscal_position_tax_position_id_fkey
			references account_fiscal_position
				on delete cascade,
	company_id integer,
	tax_src_id integer not null
		constraint account_fiscal_position_tax_tax_src_id_fkey
			references account_tax
				on delete restrict,
	tax_dest_id integer
		constraint account_fiscal_position_tax_tax_dest_id_fkey
			references account_tax
				on delete set null,
	create_uid integer
		constraint account_fiscal_position_tax_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_position_tax_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_fiscal_position_tax_tax_src_dest_uniq
		unique (position_id, tax_src_id, tax_dest_id)
);

comment on table account_fiscal_position_tax is 'Tax Mapping of Fiscal Position';

comment on column account_fiscal_position_tax.position_id is 'Fiscal Position';

comment on column account_fiscal_position_tax.company_id is 'Company';

comment on column account_fiscal_position_tax.tax_src_id is 'Tax on Product';

comment on column account_fiscal_position_tax.tax_dest_id is 'Tax to Apply';

comment on column account_fiscal_position_tax.create_uid is 'Created by';

comment on column account_fiscal_position_tax.create_date is 'Created on';

comment on column account_fiscal_position_tax.write_uid is 'Last Updated by';

comment on column account_fiscal_position_tax.write_date is 'Last Updated on';

alter table account_fiscal_position_tax owner to postgres;

create table account_tax_filiation_rel
(
	parent_tax integer not null
		constraint account_tax_filiation_rel_parent_tax_fkey
			references account_tax
				on delete cascade,
	child_tax integer not null
		constraint account_tax_filiation_rel_child_tax_fkey
			references account_tax
				on delete cascade,
	constraint account_tax_filiation_rel_pkey
		primary key (parent_tax, child_tax)
);

comment on table account_tax_filiation_rel is 'RELATION BETWEEN account_tax AND account_tax';

alter table account_tax_filiation_rel owner to postgres;

create index account_tax_filiation_rel_child_tax_parent_tax_idx
	on account_tax_filiation_rel (child_tax, parent_tax);

create table account_tax_repartition_line
(
	id integer default nextval('account_tax_repartition_line_id_seq'::regclass) not null
		constraint account_tax_repartition_line_pkey
			primary key,
	factor_percent double precision not null,
	repartition_type varchar not null,
	account_id integer
		constraint account_tax_repartition_line_account_id_fkey
			references account_account
				on delete set null,
	invoice_tax_id integer
		constraint account_tax_repartition_line_invoice_tax_id_fkey
			references account_tax
				on delete cascade,
	refund_tax_id integer
		constraint account_tax_repartition_line_refund_tax_id_fkey
			references account_tax
				on delete cascade,
	company_id integer,
	sequence integer,
	use_in_tax_closing boolean,
	create_uid integer
		constraint account_tax_repartition_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_repartition_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tax_repartition_line is 'Tax Repartition Line';

comment on column account_tax_repartition_line.factor_percent is '%';

comment on column account_tax_repartition_line.repartition_type is 'Based On';

comment on column account_tax_repartition_line.account_id is 'Account';

comment on column account_tax_repartition_line.invoice_tax_id is 'Invoice Tax';

comment on column account_tax_repartition_line.refund_tax_id is 'Refund Tax';

comment on column account_tax_repartition_line.company_id is 'Company';

comment on column account_tax_repartition_line.sequence is 'Sequence';

comment on column account_tax_repartition_line.use_in_tax_closing is 'Tax Closing Entry';

comment on column account_tax_repartition_line.create_uid is 'Created by';

comment on column account_tax_repartition_line.create_date is 'Created on';

comment on column account_tax_repartition_line.write_uid is 'Last Updated by';

comment on column account_tax_repartition_line.write_date is 'Last Updated on';

alter table account_tax_repartition_line owner to postgres;

create table account_account_tag_account_tax_repartition_line_rel
(
	account_tax_repartition_line_id integer not null
		constraint account_account_tag_account_t_account_tax_repartition_line_fkey
			references account_tax_repartition_line
				on delete cascade,
	account_account_tag_id integer not null
		constraint account_account_tag_account_tax_rep_account_account_tag_id_fkey
			references account_account_tag
				on delete cascade,
	constraint account_account_tag_account_tax_repartition_line_rel_pkey
		primary key (account_tax_repartition_line_id, account_account_tag_id)
);

comment on table account_account_tag_account_tax_repartition_line_rel is 'RELATION BETWEEN account_tax_repartition_line AND account_account_tag';

alter table account_account_tag_account_tax_repartition_line_rel owner to postgres;

create index account_account_tag_account_t_account_account_tag_id_accoun_idx
	on account_account_tag_account_tax_repartition_line_rel (account_account_tag_id, account_tax_repartition_line_id);

create table account_tax_report
(
	id integer default nextval('account_tax_report_id_seq'::regclass) not null
		constraint account_tax_report_pkey
			primary key,
	name varchar not null,
	country_id integer not null
		constraint account_tax_report_country_id_fkey
			references res_country
				on delete restrict,
	create_uid integer
		constraint account_tax_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tax_report is 'Account Tax Report';

comment on column account_tax_report.name is 'Name';

comment on column account_tax_report.country_id is 'Country';

comment on column account_tax_report.create_uid is 'Created by';

comment on column account_tax_report.create_date is 'Created on';

comment on column account_tax_report.write_uid is 'Last Updated by';

comment on column account_tax_report.write_date is 'Last Updated on';

alter table account_tax_report owner to postgres;

create table account_tour_upload_bill_email_confirm
(
	id integer default nextval('account_tour_upload_bill_email_confirm_id_seq'::regclass) not null
		constraint account_tour_upload_bill_email_confirm_pkey
			primary key,
	email_alias varchar,
	create_uid integer
		constraint account_tour_upload_bill_email_confirm_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tour_upload_bill_email_confirm_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tour_upload_bill_email_confirm is 'Account tour upload bill email confirm';

comment on column account_tour_upload_bill_email_confirm.email_alias is 'Email Alias';

comment on column account_tour_upload_bill_email_confirm.create_uid is 'Created by';

comment on column account_tour_upload_bill_email_confirm.create_date is 'Created on';

comment on column account_tour_upload_bill_email_confirm.write_uid is 'Last Updated by';

comment on column account_tour_upload_bill_email_confirm.write_date is 'Last Updated on';

alter table account_tour_upload_bill_email_confirm owner to postgres;

create table account_transfer_model
(
	id integer default nextval('account_transfer_model_id_seq'::regclass) not null
		constraint account_transfer_model_pkey
			primary key,
	name varchar not null,
	journal_id integer not null
		constraint account_transfer_model_journal_id_fkey
			references account_journal
				on delete restrict,
	date_start date not null,
	date_stop date,
	frequency varchar not null,
	state varchar not null,
	create_uid integer
		constraint account_transfer_model_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_transfer_model_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_transfer_model is 'Account Transfer Model';

comment on column account_transfer_model.name is 'Name';

comment on column account_transfer_model.journal_id is 'Destination Journal';

comment on column account_transfer_model.date_start is 'Start Date';

comment on column account_transfer_model.date_stop is 'Stop Date';

comment on column account_transfer_model.frequency is 'Frequency';

comment on column account_transfer_model.state is 'State';

comment on column account_transfer_model.create_uid is 'Created by';

comment on column account_transfer_model.create_date is 'Created on';

comment on column account_transfer_model.write_uid is 'Last Updated by';

comment on column account_transfer_model.write_date is 'Last Updated on';

alter table account_transfer_model owner to postgres;

create table account_model_rel
(
	account_transfer_model_id integer not null
		constraint account_model_rel_account_transfer_model_id_fkey
			references account_transfer_model
				on delete cascade,
	account_account_id integer not null
		constraint account_model_rel_account_account_id_fkey
			references account_account
				on delete cascade,
	constraint account_model_rel_pkey
		primary key (account_transfer_model_id, account_account_id)
);

comment on table account_model_rel is 'RELATION BETWEEN account_transfer_model AND account_account';

alter table account_model_rel owner to postgres;

create index account_model_rel_account_account_id_account_transfer_model_idx
	on account_model_rel (account_account_id, account_transfer_model_id);

alter table account_move
	add constraint account_move_transfer_model_id_fkey
		foreign key (transfer_model_id) references account_transfer_model
			on delete set null;

create table account_transfer_model_line
(
	id integer default nextval('account_transfer_model_line_id_seq'::regclass) not null
		constraint account_transfer_model_line_pkey
			primary key,
	transfer_model_id integer not null
		constraint account_transfer_model_line_transfer_model_id_fkey
			references account_transfer_model
				on delete restrict,
	account_id integer not null
		constraint account_transfer_model_line_account_id_fkey
			references account_account
				on delete restrict,
	percent double precision not null,
	sequence integer,
	create_uid integer
		constraint account_transfer_model_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_transfer_model_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_transfer_model_line_unique_account_by_transfer_model
		unique (transfer_model_id, account_id)
);

comment on table account_transfer_model_line is 'Account Transfer Model Line';

comment on column account_transfer_model_line.transfer_model_id is 'Transfer Model';

comment on column account_transfer_model_line.account_id is 'Destination Account';

comment on column account_transfer_model_line.percent is 'Percent';

comment on column account_transfer_model_line.sequence is 'Sequence';

comment on column account_transfer_model_line.create_uid is 'Created by';

comment on column account_transfer_model_line.create_date is 'Created on';

comment on column account_transfer_model_line.write_uid is 'Last Updated by';

comment on column account_transfer_model_line.write_date is 'Last Updated on';

alter table account_transfer_model_line owner to postgres;

create table account_analytic_account_account_transfer_model_line_rel
(
	account_transfer_model_line_id integer not null
		constraint account_analytic_account_acco_account_transfer_model_line__fkey
			references account_transfer_model_line
				on delete cascade,
	account_analytic_account_id integer not null
		constraint account_analytic_account_accou_account_analytic_account_id_fkey
			references account_analytic_account
				on delete cascade,
	constraint account_analytic_account_account_transfer_model_line_rel_pkey
		primary key (account_transfer_model_line_id, account_analytic_account_id)
);

comment on table account_analytic_account_account_transfer_model_line_rel is 'RELATION BETWEEN account_transfer_model_line AND account_analytic_account';

alter table account_analytic_account_account_transfer_model_line_rel owner to postgres;

create index account_analytic_account_acco_account_analytic_account_id_a_idx
	on account_analytic_account_account_transfer_model_line_rel (account_analytic_account_id, account_transfer_model_line_id);

create table account_transfer_model_line_res_partner_rel
(
	account_transfer_model_line_id integer not null
		constraint account_transfer_model_line_r_account_transfer_model_line__fkey
			references account_transfer_model_line
				on delete cascade,
	res_partner_id integer not null
		constraint account_transfer_model_line_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint account_transfer_model_line_res_partner_rel_pkey
		primary key (account_transfer_model_line_id, res_partner_id)
);

comment on table account_transfer_model_line_res_partner_rel is 'RELATION BETWEEN account_transfer_model_line AND res_partner';

alter table account_transfer_model_line_res_partner_rel owner to postgres;

create index account_transfer_model_line_r_res_partner_id_account_transf_idx
	on account_transfer_model_line_res_partner_rel (res_partner_id, account_transfer_model_line_id);

create table account_unreconcile
(
	id integer default nextval('account_unreconcile_id_seq'::regclass) not null
		constraint account_unreconcile_pkey
			primary key,
	create_uid integer
		constraint account_unreconcile_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_unreconcile_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_unreconcile is 'Account Unreconcile';

comment on column account_unreconcile.create_uid is 'Created by';

comment on column account_unreconcile.create_date is 'Created on';

comment on column account_unreconcile.write_uid is 'Last Updated by';

comment on column account_unreconcile.write_date is 'Last Updated on';

alter table account_unreconcile owner to postgres;

create table asset_modify
(
	id integer default nextval('asset_modify_id_seq'::regclass) not null
		constraint asset_modify_pkey
			primary key,
	name text,
	asset_id integer not null
		constraint asset_modify_asset_id_fkey
			references account_asset
				on delete cascade,
	method_number integer not null,
	method_period varchar,
	value_residual numeric,
	salvage_value numeric,
	date date,
	account_asset_id integer
		constraint asset_modify_account_asset_id_fkey
			references account_account
				on delete set null,
	account_asset_counterpart_id integer
		constraint asset_modify_account_asset_counterpart_id_fkey
			references account_account
				on delete set null,
	account_depreciation_id integer
		constraint asset_modify_account_depreciation_id_fkey
			references account_account
				on delete set null,
	account_depreciation_expense_id integer
		constraint asset_modify_account_depreciation_expense_id_fkey
			references account_account
				on delete set null,
	create_uid integer
		constraint asset_modify_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint asset_modify_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table asset_modify is 'Modify Asset';

comment on column asset_modify.name is 'Reason';

comment on column asset_modify.asset_id is 'Asset';

comment on column asset_modify.method_number is 'Number of Depreciations';

comment on column asset_modify.method_period is 'Number of Months in a Period';

comment on column asset_modify.value_residual is 'Depreciable Amount';

comment on column asset_modify.salvage_value is 'Not Depreciable Amount';

comment on column asset_modify.date is 'Date';

comment on column asset_modify.account_asset_id is 'Asset Gross Increase Account';

comment on column asset_modify.account_asset_counterpart_id is 'Account Asset Counterpart';

comment on column asset_modify.account_depreciation_id is 'Account Depreciation';

comment on column asset_modify.account_depreciation_expense_id is 'Account Depreciation Expense';

comment on column asset_modify.create_uid is 'Created by';

comment on column asset_modify.create_date is 'Created on';

comment on column asset_modify.write_uid is 'Last Updated by';

comment on column asset_modify.write_date is 'Last Updated on';

alter table asset_modify owner to postgres;

create table auth_totp_wizard
(
	id integer default nextval('auth_totp_wizard_id_seq'::regclass) not null
		constraint auth_totp_wizard_pkey
			primary key,
	user_id integer not null
		constraint auth_totp_wizard_user_id_fkey
			references res_users
				on delete cascade,
	secret varchar not null,
	url varchar,
	qrcode bytea,
	code varchar(7),
	create_uid integer
		constraint auth_totp_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint auth_totp_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table auth_totp_wizard is 'Two-Factor Setup Wizard';

comment on column auth_totp_wizard.user_id is 'User';

comment on column auth_totp_wizard.secret is 'Secret';

comment on column auth_totp_wizard.url is 'Url';

comment on column auth_totp_wizard.qrcode is 'Qrcode';

comment on column auth_totp_wizard.code is 'Verification Code';

comment on column auth_totp_wizard.create_uid is 'Created by';

comment on column auth_totp_wizard.create_date is 'Created on';

comment on column auth_totp_wizard.write_uid is 'Last Updated by';

comment on column auth_totp_wizard.write_date is 'Last Updated on';

alter table auth_totp_wizard owner to postgres;

create table barcode_nomenclature
(
	id integer default nextval('barcode_nomenclature_id_seq'::regclass) not null
		constraint barcode_nomenclature_pkey
			primary key,
	name varchar(32) not null,
	upc_ean_conv varchar not null,
	create_uid integer
		constraint barcode_nomenclature_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint barcode_nomenclature_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table barcode_nomenclature is 'Barcode Nomenclature';

comment on column barcode_nomenclature.name is 'Barcode Nomenclature';

comment on column barcode_nomenclature.upc_ean_conv is 'UPC/EAN Conversion';

comment on column barcode_nomenclature.create_uid is 'Created by';

comment on column barcode_nomenclature.create_date is 'Created on';

comment on column barcode_nomenclature.write_uid is 'Last Updated by';

comment on column barcode_nomenclature.write_date is 'Last Updated on';

alter table barcode_nomenclature owner to postgres;

create table barcode_rule
(
	id integer default nextval('barcode_rule_id_seq'::regclass) not null
		constraint barcode_rule_pkey
			primary key,
	name varchar(32) not null,
	barcode_nomenclature_id integer
		constraint barcode_rule_barcode_nomenclature_id_fkey
			references barcode_nomenclature
				on delete set null,
	sequence integer,
	encoding varchar not null,
	type varchar not null,
	pattern varchar(32) not null,
	alias varchar(32) not null,
	create_uid integer
		constraint barcode_rule_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint barcode_rule_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table barcode_rule is 'Barcode Rule';

comment on column barcode_rule.name is 'Rule Name';

comment on column barcode_rule.barcode_nomenclature_id is 'Barcode Nomenclature';

comment on column barcode_rule.sequence is 'Sequence';

comment on column barcode_rule.encoding is 'Encoding';

comment on column barcode_rule.type is 'Type';

comment on column barcode_rule.pattern is 'Barcode Pattern';

comment on column barcode_rule.alias is 'Alias';

comment on column barcode_rule.create_uid is 'Created by';

comment on column barcode_rule.create_date is 'Created on';

comment on column barcode_rule.write_uid is 'Last Updated by';

comment on column barcode_rule.write_date is 'Last Updated on';

alter table barcode_rule owner to postgres;

create table base_import_import
(
	id integer default nextval('base_import_import_id_seq'::regclass) not null
		constraint base_import_import_pkey
			primary key,
	res_model varchar,
	file bytea,
	file_name varchar,
	file_type varchar,
	create_uid integer
		constraint base_import_import_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_import_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_import is 'Base Import';

comment on column base_import_import.res_model is 'Model';

comment on column base_import_import.file is 'File';

comment on column base_import_import.file_name is 'File Name';

comment on column base_import_import.file_type is 'File Type';

comment on column base_import_import.create_uid is 'Created by';

comment on column base_import_import.create_date is 'Created on';

comment on column base_import_import.write_uid is 'Last Updated by';

comment on column base_import_import.write_date is 'Last Updated on';

alter table base_import_import owner to postgres;

create table base_import_mapping
(
	id integer default nextval('base_import_mapping_id_seq'::regclass) not null
		constraint base_import_mapping_pkey
			primary key,
	res_model varchar,
	column_name varchar,
	field_name varchar,
	create_uid integer
		constraint base_import_mapping_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_mapping_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_mapping is 'Base Import Mapping';

comment on column base_import_mapping.res_model is 'Res Model';

comment on column base_import_mapping.column_name is 'Column Name';

comment on column base_import_mapping.field_name is 'Field Name';

comment on column base_import_mapping.create_uid is 'Created by';

comment on column base_import_mapping.create_date is 'Created on';

comment on column base_import_mapping.write_uid is 'Last Updated by';

comment on column base_import_mapping.write_date is 'Last Updated on';

alter table base_import_mapping owner to postgres;

create index base_import_mapping_res_model_index
	on base_import_mapping (res_model);

create table base_import_tests_models_char
(
	id integer default nextval('base_import_tests_models_char_id_seq'::regclass) not null
		constraint base_import_tests_models_char_pkey
			primary key,
	value varchar,
	create_uid integer
		constraint base_import_tests_models_char_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char is 'Tests : Base Import Model, Character';

comment on column base_import_tests_models_char.value is 'Value';

comment on column base_import_tests_models_char.create_uid is 'Created by';

comment on column base_import_tests_models_char.create_date is 'Created on';

comment on column base_import_tests_models_char.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char.write_date is 'Last Updated on';

alter table base_import_tests_models_char owner to postgres;

create table base_import_tests_models_char_noreadonly
(
	id integer default nextval('base_import_tests_models_char_noreadonly_id_seq'::regclass) not null
		constraint base_import_tests_models_char_noreadonly_pkey
			primary key,
	value varchar,
	create_uid integer
		constraint base_import_tests_models_char_noreadonly_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_noreadonly_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char_noreadonly is 'Tests : Base Import Model, Character No readonly';

comment on column base_import_tests_models_char_noreadonly.value is 'Value';

comment on column base_import_tests_models_char_noreadonly.create_uid is 'Created by';

comment on column base_import_tests_models_char_noreadonly.create_date is 'Created on';

comment on column base_import_tests_models_char_noreadonly.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char_noreadonly.write_date is 'Last Updated on';

alter table base_import_tests_models_char_noreadonly owner to postgres;

create table base_import_tests_models_char_readonly
(
	id integer default nextval('base_import_tests_models_char_readonly_id_seq'::regclass) not null
		constraint base_import_tests_models_char_readonly_pkey
			primary key,
	value varchar,
	create_uid integer
		constraint base_import_tests_models_char_readonly_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_readonly_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char_readonly is 'Tests : Base Import Model, Character readonly';

comment on column base_import_tests_models_char_readonly.value is 'Value';

comment on column base_import_tests_models_char_readonly.create_uid is 'Created by';

comment on column base_import_tests_models_char_readonly.create_date is 'Created on';

comment on column base_import_tests_models_char_readonly.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char_readonly.write_date is 'Last Updated on';

alter table base_import_tests_models_char_readonly owner to postgres;

create table base_import_tests_models_char_required
(
	id integer default nextval('base_import_tests_models_char_required_id_seq'::regclass) not null
		constraint base_import_tests_models_char_required_pkey
			primary key,
	value varchar not null,
	create_uid integer
		constraint base_import_tests_models_char_required_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_required_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char_required is 'Tests : Base Import Model, Character required';

comment on column base_import_tests_models_char_required.value is 'Value';

comment on column base_import_tests_models_char_required.create_uid is 'Created by';

comment on column base_import_tests_models_char_required.create_date is 'Created on';

comment on column base_import_tests_models_char_required.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char_required.write_date is 'Last Updated on';

alter table base_import_tests_models_char_required owner to postgres;

create table base_import_tests_models_char_states
(
	id integer default nextval('base_import_tests_models_char_states_id_seq'::regclass) not null
		constraint base_import_tests_models_char_states_pkey
			primary key,
	value varchar,
	create_uid integer
		constraint base_import_tests_models_char_states_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_states_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char_states is 'Tests : Base Import Model, Character states';

comment on column base_import_tests_models_char_states.value is 'Value';

comment on column base_import_tests_models_char_states.create_uid is 'Created by';

comment on column base_import_tests_models_char_states.create_date is 'Created on';

comment on column base_import_tests_models_char_states.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char_states.write_date is 'Last Updated on';

alter table base_import_tests_models_char_states owner to postgres;

create table base_import_tests_models_char_stillreadonly
(
	id integer default nextval('base_import_tests_models_char_stillreadonly_id_seq'::regclass) not null
		constraint base_import_tests_models_char_stillreadonly_pkey
			primary key,
	value varchar,
	create_uid integer
		constraint base_import_tests_models_char_stillreadonly_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_stillreadonly_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char_stillreadonly is 'Tests : Base Import Model, Character still readonly';

comment on column base_import_tests_models_char_stillreadonly.value is 'Value';

comment on column base_import_tests_models_char_stillreadonly.create_uid is 'Created by';

comment on column base_import_tests_models_char_stillreadonly.create_date is 'Created on';

comment on column base_import_tests_models_char_stillreadonly.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char_stillreadonly.write_date is 'Last Updated on';

alter table base_import_tests_models_char_stillreadonly owner to postgres;

create table base_import_tests_models_m2o_related
(
	id integer default nextval('base_import_tests_models_m2o_related_id_seq'::regclass) not null
		constraint base_import_tests_models_m2o_related_pkey
			primary key,
	value integer,
	create_uid integer
		constraint base_import_tests_models_m2o_related_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_m2o_related_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_m2o_related is 'Tests : Base Import Model, Many to One related';

comment on column base_import_tests_models_m2o_related.value is 'Value';

comment on column base_import_tests_models_m2o_related.create_uid is 'Created by';

comment on column base_import_tests_models_m2o_related.create_date is 'Created on';

comment on column base_import_tests_models_m2o_related.write_uid is 'Last Updated by';

comment on column base_import_tests_models_m2o_related.write_date is 'Last Updated on';

alter table base_import_tests_models_m2o_related owner to postgres;

create table base_import_tests_models_m2o
(
	id integer default nextval('base_import_tests_models_m2o_id_seq'::regclass) not null
		constraint base_import_tests_models_m2o_pkey
			primary key,
	value integer
		constraint base_import_tests_models_m2o_value_fkey
			references base_import_tests_models_m2o_related
				on delete set null,
	create_uid integer
		constraint base_import_tests_models_m2o_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_m2o_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_m2o is 'Tests : Base Import Model, Many to One';

comment on column base_import_tests_models_m2o.value is 'Value';

comment on column base_import_tests_models_m2o.create_uid is 'Created by';

comment on column base_import_tests_models_m2o.create_date is 'Created on';

comment on column base_import_tests_models_m2o.write_uid is 'Last Updated by';

comment on column base_import_tests_models_m2o.write_date is 'Last Updated on';

alter table base_import_tests_models_m2o owner to postgres;

create table base_import_tests_models_m2o_required_related
(
	id integer default nextval('base_import_tests_models_m2o_required_related_id_seq'::regclass) not null
		constraint base_import_tests_models_m2o_required_related_pkey
			primary key,
	value integer,
	create_uid integer
		constraint base_import_tests_models_m2o_required_related_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_m2o_required_related_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_m2o_required_related is 'Tests : Base Import Model, Many to One required related';

comment on column base_import_tests_models_m2o_required_related.value is 'Value';

comment on column base_import_tests_models_m2o_required_related.create_uid is 'Created by';

comment on column base_import_tests_models_m2o_required_related.create_date is 'Created on';

comment on column base_import_tests_models_m2o_required_related.write_uid is 'Last Updated by';

comment on column base_import_tests_models_m2o_required_related.write_date is 'Last Updated on';

alter table base_import_tests_models_m2o_required_related owner to postgres;

create table base_import_tests_models_m2o_required
(
	id integer default nextval('base_import_tests_models_m2o_required_id_seq'::regclass) not null
		constraint base_import_tests_models_m2o_required_pkey
			primary key,
	value integer not null
		constraint base_import_tests_models_m2o_required_value_fkey
			references base_import_tests_models_m2o_required_related
				on delete restrict,
	create_uid integer
		constraint base_import_tests_models_m2o_required_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_m2o_required_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_m2o_required is 'Tests : Base Import Model, Many to One required';

comment on column base_import_tests_models_m2o_required.value is 'Value';

comment on column base_import_tests_models_m2o_required.create_uid is 'Created by';

comment on column base_import_tests_models_m2o_required.create_date is 'Created on';

comment on column base_import_tests_models_m2o_required.write_uid is 'Last Updated by';

comment on column base_import_tests_models_m2o_required.write_date is 'Last Updated on';

alter table base_import_tests_models_m2o_required owner to postgres;

create table base_import_tests_models_o2m
(
	id integer default nextval('base_import_tests_models_o2m_id_seq'::regclass) not null
		constraint base_import_tests_models_o2m_pkey
			primary key,
	name varchar,
	create_uid integer
		constraint base_import_tests_models_o2m_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_o2m_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_o2m is 'Tests : Base Import Model, One to Many';

comment on column base_import_tests_models_o2m.name is 'Name';

comment on column base_import_tests_models_o2m.create_uid is 'Created by';

comment on column base_import_tests_models_o2m.create_date is 'Created on';

comment on column base_import_tests_models_o2m.write_uid is 'Last Updated by';

comment on column base_import_tests_models_o2m.write_date is 'Last Updated on';

alter table base_import_tests_models_o2m owner to postgres;

create table base_import_tests_models_o2m_child
(
	id integer default nextval('base_import_tests_models_o2m_child_id_seq'::regclass) not null
		constraint base_import_tests_models_o2m_child_pkey
			primary key,
	parent_id integer
		constraint base_import_tests_models_o2m_child_parent_id_fkey
			references base_import_tests_models_o2m
				on delete set null,
	value integer,
	create_uid integer
		constraint base_import_tests_models_o2m_child_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_o2m_child_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_o2m_child is 'Tests : Base Import Model, One to Many child';

comment on column base_import_tests_models_o2m_child.parent_id is 'Parent';

comment on column base_import_tests_models_o2m_child.value is 'Value';

comment on column base_import_tests_models_o2m_child.create_uid is 'Created by';

comment on column base_import_tests_models_o2m_child.create_date is 'Created on';

comment on column base_import_tests_models_o2m_child.write_uid is 'Last Updated by';

comment on column base_import_tests_models_o2m_child.write_date is 'Last Updated on';

alter table base_import_tests_models_o2m_child owner to postgres;

create table base_import_tests_models_preview
(
	id integer default nextval('base_import_tests_models_preview_id_seq'::regclass) not null
		constraint base_import_tests_models_preview_pkey
			primary key,
	name varchar,
	somevalue integer not null,
	othervalue integer,
	create_uid integer
		constraint base_import_tests_models_preview_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_preview_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_preview is 'Tests : Base Import Model Preview';

comment on column base_import_tests_models_preview.name is 'Name';

comment on column base_import_tests_models_preview.somevalue is 'Some Value';

comment on column base_import_tests_models_preview.othervalue is 'Other Variable';

comment on column base_import_tests_models_preview.create_uid is 'Created by';

comment on column base_import_tests_models_preview.create_date is 'Created on';

comment on column base_import_tests_models_preview.write_uid is 'Last Updated by';

comment on column base_import_tests_models_preview.write_date is 'Last Updated on';

alter table base_import_tests_models_preview owner to postgres;

create table base_language_export
(
	id integer default nextval('base_language_export_id_seq'::regclass) not null
		constraint base_language_export_pkey
			primary key,
	name varchar,
	lang varchar not null,
	format varchar not null,
	data bytea,
	state varchar,
	create_uid integer
		constraint base_language_export_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_language_export_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_language_export is 'Language Export';

comment on column base_language_export.name is 'File Name';

comment on column base_language_export.lang is 'Language';

comment on column base_language_export.format is 'File Format';

comment on column base_language_export.data is 'File';

comment on column base_language_export.state is 'State';

comment on column base_language_export.create_uid is 'Created by';

comment on column base_language_export.create_date is 'Created on';

comment on column base_language_export.write_uid is 'Last Updated by';

comment on column base_language_export.write_date is 'Last Updated on';

alter table base_language_export owner to postgres;

create table base_language_import
(
	id integer default nextval('base_language_import_id_seq'::regclass) not null
		constraint base_language_import_pkey
			primary key,
	name varchar not null,
	code varchar(6) not null,
	data bytea not null,
	filename varchar not null,
	overwrite boolean,
	create_uid integer
		constraint base_language_import_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_language_import_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_language_import is 'Language Import';

comment on column base_language_import.name is 'Language Name';

comment on column base_language_import.code is 'ISO Code';

comment on column base_language_import.data is 'File';

comment on column base_language_import.filename is 'File Name';

comment on column base_language_import.overwrite is 'Overwrite Existing Terms';

comment on column base_language_import.create_uid is 'Created by';

comment on column base_language_import.create_date is 'Created on';

comment on column base_language_import.write_uid is 'Last Updated by';

comment on column base_language_import.write_date is 'Last Updated on';

alter table base_language_import owner to postgres;

create table base_language_install
(
	id integer default nextval('base_language_install_id_seq'::regclass) not null
		constraint base_language_install_pkey
			primary key,
	lang varchar not null,
	overwrite boolean,
	state varchar,
	create_uid integer
		constraint base_language_install_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_language_install_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_language_install is 'Install Language';

comment on column base_language_install.lang is 'Language';

comment on column base_language_install.overwrite is 'Overwrite Existing Terms';

comment on column base_language_install.state is 'Status';

comment on column base_language_install.create_uid is 'Created by';

comment on column base_language_install.create_date is 'Created on';

comment on column base_language_install.write_uid is 'Last Updated by';

comment on column base_language_install.write_date is 'Last Updated on';

alter table base_language_install owner to postgres;

create table base_module_update
(
	id integer default nextval('base_module_update_id_seq'::regclass) not null
		constraint base_module_update_pkey
			primary key,
	updated integer,
	added integer,
	state varchar,
	create_uid integer
		constraint base_module_update_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_module_update_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_module_update is 'Update Module';

comment on column base_module_update.updated is 'Number of modules updated';

comment on column base_module_update.added is 'Number of modules added';

comment on column base_module_update.state is 'Status';

comment on column base_module_update.create_uid is 'Created by';

comment on column base_module_update.create_date is 'Created on';

comment on column base_module_update.write_uid is 'Last Updated by';

comment on column base_module_update.write_date is 'Last Updated on';

alter table base_module_update owner to postgres;

create table base_module_upgrade
(
	id integer default nextval('base_module_upgrade_id_seq'::regclass) not null
		constraint base_module_upgrade_pkey
			primary key,
	module_info text,
	create_uid integer
		constraint base_module_upgrade_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_module_upgrade_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_module_upgrade is 'Upgrade Module';

comment on column base_module_upgrade.module_info is 'Apps to Update';

comment on column base_module_upgrade.create_uid is 'Created by';

comment on column base_module_upgrade.create_date is 'Created on';

comment on column base_module_upgrade.write_uid is 'Last Updated by';

comment on column base_module_upgrade.write_date is 'Last Updated on';

alter table base_module_upgrade owner to postgres;

create table base_partner_merge_automatic_wizard
(
	id integer default nextval('base_partner_merge_automatic_wizard_id_seq'::regclass) not null
		constraint base_partner_merge_automatic_wizard_pkey
			primary key,
	group_by_email boolean,
	group_by_name boolean,
	group_by_is_company boolean,
	group_by_vat boolean,
	group_by_parent_id boolean,
	state varchar not null,
	number_group integer,
	current_line_id integer,
	dst_partner_id integer
		constraint base_partner_merge_automatic_wizard_dst_partner_id_fkey
			references res_partner
				on delete set null,
	exclude_contact boolean,
	exclude_journal_item boolean,
	maximum_group integer,
	create_uid integer
		constraint base_partner_merge_automatic_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_partner_merge_automatic_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_partner_merge_automatic_wizard is 'Merge Partner Wizard';

comment on column base_partner_merge_automatic_wizard.group_by_email is 'Email';

comment on column base_partner_merge_automatic_wizard.group_by_name is 'Name';

comment on column base_partner_merge_automatic_wizard.group_by_is_company is 'Is Company';

comment on column base_partner_merge_automatic_wizard.group_by_vat is 'VAT';

comment on column base_partner_merge_automatic_wizard.group_by_parent_id is 'Parent Company';

comment on column base_partner_merge_automatic_wizard.state is 'State';

comment on column base_partner_merge_automatic_wizard.number_group is 'Group of Contacts';

comment on column base_partner_merge_automatic_wizard.current_line_id is 'Current Line';

comment on column base_partner_merge_automatic_wizard.dst_partner_id is 'Destination Contact';

comment on column base_partner_merge_automatic_wizard.exclude_contact is 'A user associated to the contact';

comment on column base_partner_merge_automatic_wizard.exclude_journal_item is 'Journal Items associated to the contact';

comment on column base_partner_merge_automatic_wizard.maximum_group is 'Maximum of Group of Contacts';

comment on column base_partner_merge_automatic_wizard.create_uid is 'Created by';

comment on column base_partner_merge_automatic_wizard.create_date is 'Created on';

comment on column base_partner_merge_automatic_wizard.write_uid is 'Last Updated by';

comment on column base_partner_merge_automatic_wizard.write_date is 'Last Updated on';

alter table base_partner_merge_automatic_wizard owner to postgres;

create table base_partner_merge_automatic_wizard_res_partner_rel
(
	base_partner_merge_automatic_wizard_id integer not null
		constraint base_partner_merge_automatic__base_partner_merge_automatic_fkey
			references base_partner_merge_automatic_wizard
				on delete cascade,
	res_partner_id integer not null
		constraint base_partner_merge_automatic_wizard_res_par_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint base_partner_merge_automatic_wizard_res_partner_rel_pkey
		primary key (base_partner_merge_automatic_wizard_id, res_partner_id)
);

comment on table base_partner_merge_automatic_wizard_res_partner_rel is 'RELATION BETWEEN base_partner_merge_automatic_wizard AND res_partner';

alter table base_partner_merge_automatic_wizard_res_partner_rel owner to postgres;

create index base_partner_merge_automatic__res_partner_id_base_partner_m_idx
	on base_partner_merge_automatic_wizard_res_partner_rel (res_partner_id, base_partner_merge_automatic_wizard_id);

create table base_partner_merge_line
(
	id integer default nextval('base_partner_merge_line_id_seq'::regclass) not null
		constraint base_partner_merge_line_pkey
			primary key,
	wizard_id integer
		constraint base_partner_merge_line_wizard_id_fkey
			references base_partner_merge_automatic_wizard
				on delete set null,
	min_id integer,
	aggr_ids varchar not null,
	create_uid integer
		constraint base_partner_merge_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_partner_merge_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_partner_merge_line is 'Merge Partner Line';

comment on column base_partner_merge_line.wizard_id is 'Wizard';

comment on column base_partner_merge_line.min_id is 'MinID';

comment on column base_partner_merge_line.aggr_ids is 'Ids';

comment on column base_partner_merge_line.create_uid is 'Created by';

comment on column base_partner_merge_line.create_date is 'Created on';

comment on column base_partner_merge_line.write_uid is 'Last Updated by';

comment on column base_partner_merge_line.write_date is 'Last Updated on';

alter table base_partner_merge_line owner to postgres;

alter table base_partner_merge_automatic_wizard
	add constraint base_partner_merge_automatic_wizard_current_line_id_fkey
		foreign key (current_line_id) references base_partner_merge_line
			on delete set null;

create table base_update_translations
(
	id integer default nextval('base_update_translations_id_seq'::regclass) not null
		constraint base_update_translations_pkey
			primary key,
	lang varchar not null,
	create_uid integer
		constraint base_update_translations_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_update_translations_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_update_translations is 'Update Translations';

comment on column base_update_translations.lang is 'Language';

comment on column base_update_translations.create_uid is 'Created by';

comment on column base_update_translations.create_date is 'Created on';

comment on column base_update_translations.write_uid is 'Last Updated by';

comment on column base_update_translations.write_date is 'Last Updated on';

alter table base_update_translations owner to postgres;

create table bus_bus
(
	id integer default nextval('bus_bus_id_seq'::regclass) not null
		constraint bus_bus_pkey
			primary key,
	channel varchar,
	message varchar,
	create_uid integer
		constraint bus_bus_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint bus_bus_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table bus_bus is 'Communication Bus';

comment on column bus_bus.channel is 'Channel';

comment on column bus_bus.message is 'Message';

comment on column bus_bus.create_uid is 'Created by';

comment on column bus_bus.create_date is 'Created on';

comment on column bus_bus.write_uid is 'Last Updated by';

comment on column bus_bus.write_date is 'Last Updated on';

alter table bus_bus owner to postgres;

create table bus_presence
(
	id integer default nextval('bus_presence_id_seq'::regclass) not null
		constraint bus_presence_pkey
			primary key,
	user_id integer not null
		constraint bus_presence_bus_user_presence_unique
			unique
		constraint bus_presence_user_id_fkey
			references res_users
				on delete cascade,
	last_poll timestamp,
	last_presence timestamp,
	status varchar
);

comment on table bus_presence is 'User Presence';

comment on column bus_presence.user_id is 'Users';

comment on column bus_presence.last_poll is 'Last Poll';

comment on column bus_presence.last_presence is 'Last Presence';

comment on column bus_presence.status is 'IM Status';

alter table bus_presence owner to postgres;

create index bus_presence_user_id_index
	on bus_presence (user_id);

create table cash_box_out
(
	id integer default nextval('cash_box_out_id_seq'::regclass) not null
		constraint cash_box_out_pkey
			primary key,
	name varchar not null,
	amount numeric not null,
	create_uid integer
		constraint cash_box_out_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint cash_box_out_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table cash_box_out is 'Cash Box Out';

comment on column cash_box_out.name is 'Reason';

comment on column cash_box_out.amount is 'Amount';

comment on column cash_box_out.create_uid is 'Created by';

comment on column cash_box_out.create_date is 'Created on';

comment on column cash_box_out.write_uid is 'Last Updated by';

comment on column cash_box_out.write_date is 'Last Updated on';

alter table cash_box_out owner to postgres;

create table cash_flow_wizard
(
	id integer default nextval('cash_flow_wizard_id_seq'::regclass) not null
		constraint cash_flow_wizard_pkey
			primary key,
	start_date date,
	end_date date,
	period varchar,
	is_custom boolean,
	type varchar,
	create_uid integer
		constraint cash_flow_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint cash_flow_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table cash_flow_wizard is 'Wizard for generating cash flow report view';

comment on column cash_flow_wizard.start_date is 'Start date';

comment on column cash_flow_wizard.end_date is 'End date';

comment on column cash_flow_wizard.period is 'Period';

comment on column cash_flow_wizard.is_custom is 'Is Custom';

comment on column cash_flow_wizard.type is 'Type';

comment on column cash_flow_wizard.create_uid is 'Created by';

comment on column cash_flow_wizard.create_date is 'Created on';

comment on column cash_flow_wizard.write_uid is 'Last Updated by';

comment on column cash_flow_wizard.write_date is 'Last Updated on';

alter table cash_flow_wizard owner to postgres;

alter table cesa_location
	add constraint cesa_location_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table cesa_location
	add constraint cesa_location_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table change_password_wizard
(
	id integer default nextval('change_password_wizard_id_seq'::regclass) not null
		constraint change_password_wizard_pkey
			primary key,
	create_uid integer
		constraint change_password_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint change_password_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table change_password_wizard is 'Change Password Wizard';

comment on column change_password_wizard.create_uid is 'Created by';

comment on column change_password_wizard.create_date is 'Created on';

comment on column change_password_wizard.write_uid is 'Last Updated by';

comment on column change_password_wizard.write_date is 'Last Updated on';

alter table change_password_wizard owner to postgres;

create table change_password_user
(
	id integer default nextval('change_password_user_id_seq'::regclass) not null
		constraint change_password_user_pkey
			primary key,
	wizard_id integer not null
		constraint change_password_user_wizard_id_fkey
			references change_password_wizard
				on delete cascade,
	user_id integer not null
		constraint change_password_user_user_id_fkey
			references res_users
				on delete cascade,
	user_login varchar,
	new_passwd varchar,
	create_uid integer
		constraint change_password_user_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint change_password_user_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table change_password_user is 'User, Change Password Wizard';

comment on column change_password_user.wizard_id is 'Wizard';

comment on column change_password_user.user_id is 'User';

comment on column change_password_user.user_login is 'User Login';

comment on column change_password_user.new_passwd is 'New Password';

comment on column change_password_user.create_uid is 'Created by';

comment on column change_password_user.create_date is 'Created on';

comment on column change_password_user.write_uid is 'Last Updated by';

comment on column change_password_user.write_date is 'Last Updated on';

alter table change_password_user owner to postgres;

create table confirm_stock_sms
(
	id integer default nextval('confirm_stock_sms_id_seq'::regclass) not null
		constraint confirm_stock_sms_pkey
			primary key,
	create_uid integer
		constraint confirm_stock_sms_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint confirm_stock_sms_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table confirm_stock_sms is 'Confirm Stock SMS';

comment on column confirm_stock_sms.create_uid is 'Created by';

comment on column confirm_stock_sms.create_date is 'Created on';

comment on column confirm_stock_sms.write_uid is 'Last Updated by';

comment on column confirm_stock_sms.write_date is 'Last Updated on';

alter table confirm_stock_sms owner to postgres;

create table crm_tag
(
	id integer default nextval('crm_tag_id_seq'::regclass) not null
		constraint crm_tag_pkey
			primary key,
	name varchar not null
		constraint crm_tag_name_uniq
			unique,
	color integer,
	create_uid integer
		constraint crm_tag_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint crm_tag_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table crm_tag is 'CRM Tag';

comment on column crm_tag.name is 'Tag Name';

comment on column crm_tag.color is 'Color';

comment on column crm_tag.create_uid is 'Created by';

comment on column crm_tag.create_date is 'Created on';

comment on column crm_tag.write_uid is 'Last Updated by';

comment on column crm_tag.write_date is 'Last Updated on';

alter table crm_tag owner to postgres;

alter table crm_team
	add constraint crm_team_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table crm_team
	add constraint crm_team_user_id_fkey
		foreign key (user_id) references res_users
			on delete set null;

alter table crm_team
	add constraint crm_team_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table decimal_precision
(
	id integer default nextval('decimal_precision_id_seq'::regclass) not null
		constraint decimal_precision_pkey
			primary key,
	name varchar not null
		constraint decimal_precision_name_uniq
			unique,
	digits integer not null,
	create_uid integer
		constraint decimal_precision_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint decimal_precision_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table decimal_precision is 'Decimal Precision';

comment on column decimal_precision.name is 'Usage';

comment on column decimal_precision.digits is 'Digits';

comment on column decimal_precision.create_uid is 'Created by';

comment on column decimal_precision.create_date is 'Created on';

comment on column decimal_precision.write_uid is 'Last Updated by';

comment on column decimal_precision.write_date is 'Last Updated on';

alter table decimal_precision owner to postgres;

create index decimal_precision_name_index
	on decimal_precision (name);

create table delivery_type
(
	id integer default nextval('delivery_type_id_seq'::regclass) not null
		constraint delivery_type_pkey
			primary key,
	name varchar not null,
	create_uid integer
		constraint delivery_type_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint delivery_type_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table delivery_type is 'delivery.type';

comment on column delivery_type.name is 'Delivery Type';

comment on column delivery_type.create_uid is 'Created by';

comment on column delivery_type.create_date is 'Created on';

comment on column delivery_type.write_uid is 'Last Updated by';

comment on column delivery_type.write_date is 'Last Updated on';

alter table delivery_type owner to postgres;

create table digest_digest
(
	id integer default nextval('digest_digest_id_seq'::regclass) not null
		constraint digest_digest_pkey
			primary key,
	name varchar not null,
	periodicity varchar not null,
	next_run_date date,
	company_id integer,
	state varchar,
	kpi_res_users_connected boolean,
	kpi_mail_message_total boolean,
	create_uid integer
		constraint digest_digest_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint digest_digest_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	kpi_account_total_revenue boolean,
	kpi_account_bank_cash boolean,
	kpi_all_sale_total boolean
);

comment on table digest_digest is 'Digest';

comment on column digest_digest.name is 'Name';

comment on column digest_digest.periodicity is 'Periodicity';

comment on column digest_digest.next_run_date is 'Next Send Date';

comment on column digest_digest.company_id is 'Company';

comment on column digest_digest.state is 'Status';

comment on column digest_digest.kpi_res_users_connected is 'Connected Users';

comment on column digest_digest.kpi_mail_message_total is 'Messages';

comment on column digest_digest.create_uid is 'Created by';

comment on column digest_digest.create_date is 'Created on';

comment on column digest_digest.write_uid is 'Last Updated by';

comment on column digest_digest.write_date is 'Last Updated on';

comment on column digest_digest.kpi_account_total_revenue is 'Revenue';

comment on column digest_digest.kpi_account_bank_cash is 'Bank & Cash Moves';

comment on column digest_digest.kpi_all_sale_total is 'All Sales';

alter table digest_digest owner to postgres;

create table digest_digest_res_users_rel
(
	digest_digest_id integer not null
		constraint digest_digest_res_users_rel_digest_digest_id_fkey
			references digest_digest
				on delete cascade,
	res_users_id integer not null
		constraint digest_digest_res_users_rel_res_users_id_fkey
			references res_users
				on delete cascade,
	constraint digest_digest_res_users_rel_pkey
		primary key (digest_digest_id, res_users_id)
);

comment on table digest_digest_res_users_rel is 'RELATION BETWEEN digest_digest AND res_users';

alter table digest_digest_res_users_rel owner to postgres;

create index digest_digest_res_users_rel_res_users_id_digest_digest_id_idx
	on digest_digest_res_users_rel (res_users_id, digest_digest_id);

alter table discount
	add constraint discount_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table discount
	add constraint discount_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table dms_acc_rep_export_wizard_format_rel
(
	account_reports_export_wizard_id integer not null
		constraint dms_acc_rep_export_wizard_for_account_reports_export_wizar_fkey
			references account_reports_export_wizard
				on delete cascade,
	account_reports_export_wizard_format_id integer not null
		constraint dms_acc_rep_export_wizard_fo_account_reports_export_wizar_fkey1
			references account_reports_export_wizard_format
				on delete cascade,
	constraint dms_acc_rep_export_wizard_format_rel_pkey
		primary key (account_reports_export_wizard_id, account_reports_export_wizard_format_id)
);

comment on table dms_acc_rep_export_wizard_format_rel is 'RELATION BETWEEN account_reports_export_wizard AND account_reports_export_wizard_format';

alter table dms_acc_rep_export_wizard_format_rel owner to postgres;

create index dms_acc_rep_export_wizard_for_account_reports_export_wizard_idx
	on dms_acc_rep_export_wizard_format_rel (account_reports_export_wizard_format_id, account_reports_export_wizard_id);

create table evcp_view
(
	id integer default nextval('evcp_view_id_seq'::regclass) not null
		constraint evcp_view_pkey
			primary key,
	start_date date,
	end_date date,
	date_start varchar,
	period varchar,
	is_custom boolean,
	create_uid integer
		constraint evcp_view_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint evcp_view_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table evcp_view is 'Wizard for generating EVCP report view';

comment on column evcp_view.start_date is 'Start date';

comment on column evcp_view.end_date is 'End date';

comment on column evcp_view.date_start is 'Date';

comment on column evcp_view.period is 'Period';

comment on column evcp_view.is_custom is 'Is Custom';

comment on column evcp_view.create_uid is 'Created by';

comment on column evcp_view.create_date is 'Created on';

comment on column evcp_view.write_uid is 'Last Updated by';

comment on column evcp_view.write_date is 'Last Updated on';

alter table evcp_view owner to postgres;

create table followup_send
(
	id integer default nextval('followup_send_id_seq'::regclass) not null
		constraint followup_send_pkey
			primary key,
	create_uid integer
		constraint followup_send_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint followup_send_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table followup_send is 'Send Follow-ups';

comment on column followup_send.create_uid is 'Created by';

comment on column followup_send.create_date is 'Created on';

comment on column followup_send.write_uid is 'Last Updated by';

comment on column followup_send.write_date is 'Last Updated on';

alter table followup_send owner to postgres;

create table followup_send_res_partner_rel
(
	followup_send_id integer not null
		constraint followup_send_res_partner_rel_followup_send_id_fkey
			references followup_send
				on delete cascade,
	res_partner_id integer not null
		constraint followup_send_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint followup_send_res_partner_rel_pkey
		primary key (followup_send_id, res_partner_id)
);

comment on table followup_send_res_partner_rel is 'RELATION BETWEEN followup_send AND res_partner';

alter table followup_send_res_partner_rel owner to postgres;

create index followup_send_res_partner_rel_res_partner_id_followup_send__idx
	on followup_send_res_partner_rel (res_partner_id, followup_send_id);

create table iap_account
(
	id integer default nextval('iap_account_id_seq'::regclass) not null
		constraint iap_account_pkey
			primary key,
	service_name varchar,
	account_token varchar,
	create_uid integer
		constraint iap_account_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint iap_account_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table iap_account is 'IAP Account';

comment on column iap_account.service_name is 'Service Name';

comment on column iap_account.account_token is 'Account Token';

comment on column iap_account.create_uid is 'Created by';

comment on column iap_account.create_date is 'Created on';

comment on column iap_account.write_uid is 'Last Updated by';

comment on column iap_account.write_date is 'Last Updated on';

alter table iap_account owner to postgres;

create table id_zone
(
	id integer default nextval('id_zone_id_seq'::regclass) not null
		constraint id_zone_pkey
			primary key,
	name varchar,
	code varchar(2),
	create_uid integer
		constraint id_zone_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint id_zone_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table id_zone is 'id.zone';

comment on column id_zone.name is 'Label';

comment on column id_zone.code is 'ID Zone';

comment on column id_zone.create_uid is 'Created by';

comment on column id_zone.create_date is 'Created on';

comment on column id_zone.write_uid is 'Last Updated by';

comment on column id_zone.write_date is 'Last Updated on';

alter table id_zone owner to postgres;

alter table cesa_location
	add constraint cesa_location_zone_id_fkey
		foreign key (zone_id) references id_zone
			on delete set null;

create table ir_actions_todo
(
	id integer default nextval('ir_actions_todo_id_seq'::regclass) not null
		constraint ir_actions_todo_pkey
			primary key,
	action_id integer not null,
	sequence integer,
	state varchar not null,
	name varchar,
	create_uid integer
		constraint ir_actions_todo_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_actions_todo_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_actions_todo is 'Configuration Wizards';

comment on column ir_actions_todo.action_id is 'Action';

comment on column ir_actions_todo.sequence is 'Sequence';

comment on column ir_actions_todo.state is 'Status';

comment on column ir_actions_todo.name is 'Name';

comment on column ir_actions_todo.create_uid is 'Created by';

comment on column ir_actions_todo.create_date is 'Created on';

comment on column ir_actions_todo.write_uid is 'Last Updated by';

comment on column ir_actions_todo.write_date is 'Last Updated on';

alter table ir_actions_todo owner to postgres;

create index ir_actions_todo_action_id_index
	on ir_actions_todo (action_id);

alter table ir_attachment
	add constraint ir_attachment_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table ir_attachment
	add constraint ir_attachment_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table ir_config_parameter
(
	id integer default nextval('ir_config_parameter_id_seq'::regclass) not null
		constraint ir_config_parameter_pkey
			primary key,
	key varchar not null
		constraint ir_config_parameter_key_uniq
			unique,
	value text not null,
	create_uid integer
		constraint ir_config_parameter_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_config_parameter_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_config_parameter is 'System Parameter';

comment on column ir_config_parameter.key is 'Key';

comment on column ir_config_parameter.value is 'Value';

comment on column ir_config_parameter.create_uid is 'Created by';

comment on column ir_config_parameter.create_date is 'Created on';

comment on column ir_config_parameter.write_uid is 'Last Updated by';

comment on column ir_config_parameter.write_date is 'Last Updated on';

alter table ir_config_parameter owner to postgres;

create index ir_config_parameter_key_index
	on ir_config_parameter (key);

create table ir_demo
(
	id integer default nextval('ir_demo_id_seq'::regclass) not null
		constraint ir_demo_pkey
			primary key,
	create_uid integer
		constraint ir_demo_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_demo_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_demo is 'Demo';

comment on column ir_demo.create_uid is 'Created by';

comment on column ir_demo.create_date is 'Created on';

comment on column ir_demo.write_uid is 'Last Updated by';

comment on column ir_demo.write_date is 'Last Updated on';

alter table ir_demo owner to postgres;

create table ir_demo_failure_wizard
(
	id integer default nextval('ir_demo_failure_wizard_id_seq'::regclass) not null
		constraint ir_demo_failure_wizard_pkey
			primary key,
	create_uid integer
		constraint ir_demo_failure_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_demo_failure_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_demo_failure_wizard is 'Demo Failure wizard';

comment on column ir_demo_failure_wizard.create_uid is 'Created by';

comment on column ir_demo_failure_wizard.create_date is 'Created on';

comment on column ir_demo_failure_wizard.write_uid is 'Last Updated by';

comment on column ir_demo_failure_wizard.write_date is 'Last Updated on';

alter table ir_demo_failure_wizard owner to postgres;

create table ir_exports
(
	id integer default nextval('ir_exports_id_seq'::regclass) not null
		constraint ir_exports_pkey
			primary key,
	name varchar,
	resource varchar,
	create_uid integer
		constraint ir_exports_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_exports_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_exports is 'Exports';

comment on column ir_exports.name is 'Export Name';

comment on column ir_exports.resource is 'Resource';

comment on column ir_exports.create_uid is 'Created by';

comment on column ir_exports.create_date is 'Created on';

comment on column ir_exports.write_uid is 'Last Updated by';

comment on column ir_exports.write_date is 'Last Updated on';

alter table ir_exports owner to postgres;

create index ir_exports_resource_index
	on ir_exports (resource);

create table ir_exports_line
(
	id integer default nextval('ir_exports_line_id_seq'::regclass) not null
		constraint ir_exports_line_pkey
			primary key,
	name varchar,
	export_id integer
		constraint ir_exports_line_export_id_fkey
			references ir_exports
				on delete cascade,
	create_uid integer
		constraint ir_exports_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_exports_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_exports_line is 'Exports Line';

comment on column ir_exports_line.name is 'Field Name';

comment on column ir_exports_line.export_id is 'Export';

comment on column ir_exports_line.create_uid is 'Created by';

comment on column ir_exports_line.create_date is 'Created on';

comment on column ir_exports_line.write_uid is 'Last Updated by';

comment on column ir_exports_line.write_date is 'Last Updated on';

alter table ir_exports_line owner to postgres;

create index ir_exports_line_export_id_index
	on ir_exports_line (export_id);

create table ir_mail_server
(
	id integer default nextval('ir_mail_server_id_seq'::regclass) not null
		constraint ir_mail_server_pkey
			primary key,
	name varchar not null,
	smtp_host varchar not null,
	smtp_port integer not null,
	smtp_user varchar,
	smtp_pass varchar,
	smtp_encryption varchar not null,
	smtp_debug boolean,
	sequence integer,
	active boolean,
	create_uid integer
		constraint ir_mail_server_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_mail_server_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_mail_server is 'Mail Server';

comment on column ir_mail_server.name is 'Description';

comment on column ir_mail_server.smtp_host is 'SMTP Server';

comment on column ir_mail_server.smtp_port is 'SMTP Port';

comment on column ir_mail_server.smtp_user is 'Username';

comment on column ir_mail_server.smtp_pass is 'Password';

comment on column ir_mail_server.smtp_encryption is 'Connection Security';

comment on column ir_mail_server.smtp_debug is 'Debugging';

comment on column ir_mail_server.sequence is 'Priority';

comment on column ir_mail_server.active is 'Active';

comment on column ir_mail_server.create_uid is 'Created by';

comment on column ir_mail_server.create_date is 'Created on';

comment on column ir_mail_server.write_uid is 'Last Updated by';

comment on column ir_mail_server.write_date is 'Last Updated on';

alter table ir_mail_server owner to postgres;

create index ir_mail_server_name_index
	on ir_mail_server (name);

create table ir_model
(
	id integer default nextval('ir_model_id_seq'::regclass) not null
		constraint ir_model_pkey
			primary key,
	name varchar not null,
	model varchar not null
		constraint ir_model_obj_name_uniq
			unique,
	"order" varchar not null,
	info text,
	state varchar,
	transient boolean,
	create_uid integer
		constraint ir_model_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_model_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	is_mail_thread boolean,
	is_mail_activity boolean,
	is_mail_blacklist boolean
);

comment on table ir_model is 'Models';

comment on column ir_model.name is 'Model Description';

comment on column ir_model.model is 'Model';

comment on column ir_model."order" is 'Order';

comment on column ir_model.info is 'Information';

comment on column ir_model.state is 'Type';

comment on column ir_model.transient is 'Transient Model';

comment on column ir_model.create_uid is 'Created by';

comment on column ir_model.create_date is 'Created on';

comment on column ir_model.write_uid is 'Last Updated by';

comment on column ir_model.write_date is 'Last Updated on';

comment on column ir_model.is_mail_thread is 'Mail Thread';

comment on column ir_model.is_mail_activity is 'Mail Activity';

comment on column ir_model.is_mail_blacklist is 'Mail Blacklist';

alter table ir_model owner to postgres;

create table fetchmail_server
(
	id integer default nextval('fetchmail_server_id_seq'::regclass) not null
		constraint fetchmail_server_pkey
			primary key,
	name varchar not null,
	active boolean,
	state varchar,
	server varchar,
	port integer,
	server_type varchar not null,
	is_ssl boolean,
	attach boolean,
	original boolean,
	date timestamp,
	"user" varchar,
	password varchar,
	object_id integer
		constraint fetchmail_server_object_id_fkey
			references ir_model
				on delete set null,
	priority integer,
	configuration text,
	script varchar,
	create_uid integer
		constraint fetchmail_server_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint fetchmail_server_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table fetchmail_server is 'Incoming Mail Server';

comment on column fetchmail_server.name is 'Name';

comment on column fetchmail_server.active is 'Active';

comment on column fetchmail_server.state is 'Status';

comment on column fetchmail_server.server is 'Server Name';

comment on column fetchmail_server.port is 'Port';

comment on column fetchmail_server.server_type is 'Server Type';

comment on column fetchmail_server.is_ssl is 'SSL/TLS';

comment on column fetchmail_server.attach is 'Keep Attachments';

comment on column fetchmail_server.original is 'Keep Original';

comment on column fetchmail_server.date is 'Last Fetch Date';

comment on column fetchmail_server."user" is 'Username';

comment on column fetchmail_server.password is 'Password';

comment on column fetchmail_server.object_id is 'Create a New Record';

comment on column fetchmail_server.priority is 'Server Priority';

comment on column fetchmail_server.configuration is 'Configuration';

comment on column fetchmail_server.script is 'Script';

comment on column fetchmail_server.create_uid is 'Created by';

comment on column fetchmail_server.create_date is 'Created on';

comment on column fetchmail_server.write_uid is 'Last Updated by';

comment on column fetchmail_server.write_date is 'Last Updated on';

alter table fetchmail_server owner to postgres;

create index fetchmail_server_server_type_index
	on fetchmail_server (server_type);

create index fetchmail_server_state_index
	on fetchmail_server (state);

create table ir_act_client
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_act_client_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_act_client_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_act_client_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_client_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	tag varchar not null,
	target varchar,
	res_model varchar,
	context varchar not null,
	params_store bytea
);

comment on column ir_act_client.tag is 'Client action tag';

comment on column ir_act_client.target is 'Target Window';

comment on column ir_act_client.res_model is 'Destination Model';

comment on column ir_act_client.context is 'Context Value';

comment on column ir_act_client.params_store is 'Params storage';

alter table ir_act_client owner to postgres;

create table ir_act_url
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_act_url_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_act_url_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_act_url_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_url_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	url text not null,
	target varchar not null
);

comment on column ir_act_url.url is 'Action URL';

comment on column ir_act_url.target is 'Action Target';

alter table ir_act_url owner to postgres;

create table ir_act_window
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_act_window_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_act_window_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_act_window_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_window_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	view_id integer
		constraint ir_act_window_view_id_fkey
			references ir_ui_view
				on delete set null,
	domain varchar,
	context varchar not null,
	res_id integer,
	res_model varchar not null,
	target varchar,
	view_mode varchar not null,
	usage varchar,
	"limit" integer,
	search_view_id integer
		constraint ir_act_window_search_view_id_fkey
			references ir_ui_view
				on delete set null,
	filter boolean
);

comment on column ir_act_window.view_id is 'View Ref.';

comment on column ir_act_window.domain is 'Domain Value';

comment on column ir_act_window.context is 'Context Value';

comment on column ir_act_window.res_id is 'Record ID';

comment on column ir_act_window.res_model is 'Destination Model';

comment on column ir_act_window.target is 'Target Window';

comment on column ir_act_window.view_mode is 'View Mode';

comment on column ir_act_window.usage is 'Action Usage';

comment on column ir_act_window."limit" is 'Limit';

comment on column ir_act_window.search_view_id is 'Search View Ref.';

comment on column ir_act_window.filter is 'Filter';

alter table ir_act_window owner to postgres;

create table account_tax_report_line
(
	id integer default nextval('account_tax_report_line_id_seq'::regclass) not null
		constraint account_tax_report_line_pkey
			primary key,
	name varchar not null,
	report_action_id integer
		constraint account_tax_report_line_report_action_id_fkey
			references ir_act_window
				on delete set null,
	parent_id integer
		constraint account_tax_report_line_parent_id_fkey
			references account_tax_report_line
				on delete set null,
	sequence integer not null,
	parent_path varchar,
	report_id integer not null
		constraint account_tax_report_line_report_id_fkey
			references account_tax_report
				on delete cascade,
	tag_name varchar,
	code varchar,
	formula varchar,
	create_uid integer
		constraint account_tax_report_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_report_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tax_report_line is 'Account Tax Report Line';

comment on column account_tax_report_line.name is 'Name';

comment on column account_tax_report_line.report_action_id is 'Report Action';

comment on column account_tax_report_line.parent_id is 'Parent Line';

comment on column account_tax_report_line.sequence is 'Sequence';

comment on column account_tax_report_line.parent_path is 'Parent Path';

comment on column account_tax_report_line.report_id is 'Tax Report';

comment on column account_tax_report_line.tag_name is 'Tag Name';

comment on column account_tax_report_line.code is 'Code';

comment on column account_tax_report_line.formula is 'Formula';

comment on column account_tax_report_line.create_uid is 'Created by';

comment on column account_tax_report_line.create_date is 'Created on';

comment on column account_tax_report_line.write_uid is 'Last Updated by';

comment on column account_tax_report_line.write_date is 'Last Updated on';

alter table account_tax_report_line owner to postgres;

create index account_tax_report_line_parent_path_index
	on account_tax_report_line (parent_path);

create table account_tax_report_line_tags_rel
(
	account_account_tag_id integer not null
		constraint account_tax_report_line_tags_rel_account_account_tag_id_fkey
			references account_account_tag
				on delete cascade,
	account_tax_report_line_id integer not null
		constraint account_tax_report_line_tags_re_account_tax_report_line_id_fkey
			references account_tax_report_line
				on delete cascade,
	constraint account_tax_report_line_tags_rel_pkey
		primary key (account_account_tag_id, account_tax_report_line_id)
);

comment on table account_tax_report_line_tags_rel is 'RELATION BETWEEN account_account_tag AND account_tax_report_line';

alter table account_tax_report_line_tags_rel owner to postgres;

create index account_tax_report_line_tags__account_tax_report_line_id_ac_idx
	on account_tax_report_line_tags_rel (account_tax_report_line_id, account_account_tag_id);

create table ir_act_window_view
(
	id integer default nextval('ir_act_window_view_id_seq'::regclass) not null
		constraint ir_act_window_view_pkey
			primary key,
	sequence integer,
	view_id integer
		constraint ir_act_window_view_view_id_fkey
			references ir_ui_view
				on delete set null,
	view_mode varchar not null,
	act_window_id integer
		constraint ir_act_window_view_act_window_id_fkey
			references ir_act_window
				on delete cascade,
	multi boolean,
	create_uid integer
		constraint ir_act_window_view_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_window_view_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint act_window_view_unique_mode_per_action
		unique (act_window_id, view_mode)
);

comment on table ir_act_window_view is 'Action Window View';

comment on column ir_act_window_view.sequence is 'Sequence';

comment on column ir_act_window_view.view_id is 'View';

comment on column ir_act_window_view.view_mode is 'View Type';

comment on column ir_act_window_view.act_window_id is 'Action';

comment on column ir_act_window_view.multi is 'On Multiple Doc.';

comment on column ir_act_window_view.create_uid is 'Created by';

comment on column ir_act_window_view.create_date is 'Created on';

comment on column ir_act_window_view.write_uid is 'Last Updated by';

comment on column ir_act_window_view.write_date is 'Last Updated on';

alter table ir_act_window_view owner to postgres;

create table ir_actions
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_actions_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_actions_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_actions_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_actions_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on column ir_actions.name is 'Name';

comment on column ir_actions.type is 'Action Type';

comment on column ir_actions.help is 'Action Description';

comment on column ir_actions.binding_model_id is 'Binding Model';

comment on column ir_actions.binding_type is 'Binding Type';

comment on column ir_actions.binding_view_types is 'Binding View Types';

comment on column ir_actions.create_uid is 'Created by';

comment on column ir_actions.create_date is 'Created on';

comment on column ir_actions.write_uid is 'Last Updated by';

comment on column ir_actions.write_date is 'Last Updated on';

alter table ir_actions owner to postgres;

create index ir_model_model_index
	on ir_model (model);

create table ir_model_data
(
	id integer default nextval('ir_model_data_id_seq'::regclass) not null
		constraint ir_model_data_pkey
			primary key,
	create_uid integer
		constraint ir_model_data_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp default timezone('UTC'::text, now()),
	write_date timestamp default timezone('UTC'::text, now()),
	write_uid integer
		constraint ir_model_data_write_uid_fkey
			references res_users
				on delete set null,
	noupdate boolean default false,
	name varchar not null,
	module varchar not null,
	model varchar not null,
	res_id integer,
	constraint ir_model_data_module_name_uniq_index
		unique (module, name)
);

alter table ir_model_data owner to postgres;

create index ir_model_data_model_res_id_index
	on ir_model_data (model, res_id);

create table ir_model_fields
(
	id integer default nextval('ir_model_fields_id_seq'::regclass) not null
		constraint ir_model_fields_pkey
			primary key,
	name varchar not null,
	complete_name varchar,
	model varchar not null,
	relation varchar,
	relation_field varchar,
	relation_field_id integer
		constraint ir_model_fields_relation_field_id_fkey
			references ir_model_fields
				on delete cascade,
	model_id integer not null
		constraint ir_model_fields_model_id_fkey
			references ir_model
				on delete cascade,
	field_description varchar not null,
	help text,
	ttype varchar not null,
	copied boolean,
	related varchar,
	related_field_id integer
		constraint ir_model_fields_related_field_id_fkey
			references ir_model_fields
				on delete cascade,
	required boolean,
	readonly boolean,
	index boolean,
	translate boolean,
	size integer,
	state varchar not null,
	on_delete varchar,
	domain varchar,
	group_expand boolean,
	selectable boolean,
	relation_table varchar,
	column1 varchar,
	column2 varchar,
	compute text,
	depends varchar,
	store boolean,
	create_uid integer
		constraint ir_model_fields_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_model_fields_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	tracking integer,
	constraint ir_model_fields_name_unique
		unique (model, name)
);

comment on table ir_model_fields is 'Fields';

comment on column ir_model_fields.name is 'Field Name';

comment on column ir_model_fields.complete_name is 'Complete Name';

comment on column ir_model_fields.model is 'Model Name';

comment on column ir_model_fields.relation is 'Related Model';

comment on column ir_model_fields.relation_field is 'Relation Field';

comment on column ir_model_fields.relation_field_id is 'Relation field';

comment on column ir_model_fields.model_id is 'Model';

comment on column ir_model_fields.field_description is 'Field Label';

comment on column ir_model_fields.help is 'Field Help';

comment on column ir_model_fields.ttype is 'Field Type';

comment on column ir_model_fields.copied is 'Copied';

comment on column ir_model_fields.related is 'Related Field';

comment on column ir_model_fields.related_field_id is 'Related field';

comment on column ir_model_fields.required is 'Required';

comment on column ir_model_fields.readonly is 'Readonly';

comment on column ir_model_fields.index is 'Indexed';

comment on column ir_model_fields.translate is 'Translatable';

comment on column ir_model_fields.size is 'Size';

comment on column ir_model_fields.state is 'Type';

comment on column ir_model_fields.on_delete is 'On Delete';

comment on column ir_model_fields.domain is 'Domain';

comment on column ir_model_fields.group_expand is 'Expand Groups';

comment on column ir_model_fields.selectable is 'Selectable';

comment on column ir_model_fields.relation_table is 'Relation Table';

comment on column ir_model_fields.column1 is 'Column 1';

comment on column ir_model_fields.column2 is 'Column 2';

comment on column ir_model_fields.compute is 'Compute';

comment on column ir_model_fields.depends is 'Dependencies';

comment on column ir_model_fields.store is 'Stored';

comment on column ir_model_fields.create_uid is 'Created by';

comment on column ir_model_fields.create_date is 'Created on';

comment on column ir_model_fields.write_uid is 'Last Updated by';

comment on column ir_model_fields.write_date is 'Last Updated on';

comment on column ir_model_fields.tracking is 'Enable Ordered Tracking';

alter table ir_model_fields owner to postgres;

create table ir_default
(
	id integer default nextval('ir_default_id_seq'::regclass) not null
		constraint ir_default_pkey
			primary key,
	field_id integer not null
		constraint ir_default_field_id_fkey
			references ir_model_fields
				on delete cascade,
	user_id integer
		constraint ir_default_user_id_fkey
			references res_users
				on delete cascade,
	company_id integer,
	condition varchar,
	json_value varchar not null,
	create_uid integer
		constraint ir_default_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_default_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_default is 'Default Values';

comment on column ir_default.field_id is 'Field';

comment on column ir_default.user_id is 'User';

comment on column ir_default.company_id is 'Company';

comment on column ir_default.condition is 'Condition';

comment on column ir_default.json_value is 'Default Value (JSON format)';

comment on column ir_default.create_uid is 'Created by';

comment on column ir_default.create_date is 'Created on';

comment on column ir_default.write_uid is 'Last Updated by';

comment on column ir_default.write_date is 'Last Updated on';

alter table ir_default owner to postgres;

create index ir_default_company_id_index
	on ir_default (company_id);

create index ir_default_field_id_index
	on ir_default (field_id);

create index ir_default_user_id_index
	on ir_default (user_id);

create index ir_model_fields_complete_name_index
	on ir_model_fields (complete_name);

create index ir_model_fields_model_id_index
	on ir_model_fields (model_id);

create index ir_model_fields_model_index
	on ir_model_fields (model);

create index ir_model_fields_name_index
	on ir_model_fields (name);

create index ir_model_fields_state_index
	on ir_model_fields (state);

create table ir_model_fields_selection
(
	id integer default nextval('ir_model_fields_selection_id_seq'::regclass) not null
		constraint ir_model_fields_selection_pkey
			primary key,
	field_id integer not null
		constraint ir_model_fields_selection_field_id_fkey
			references ir_model_fields
				on delete cascade,
	value varchar not null,
	name varchar not null,
	sequence integer,
	create_uid integer
		constraint ir_model_fields_selection_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_model_fields_selection_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint ir_model_fields_selection_selection_field_uniq
		unique (field_id, value)
);

comment on table ir_model_fields_selection is 'Fields Selection';

comment on column ir_model_fields_selection.field_id is 'Field';

comment on column ir_model_fields_selection.value is 'Value';

comment on column ir_model_fields_selection.name is 'Name';

comment on column ir_model_fields_selection.sequence is 'Sequence';

comment on column ir_model_fields_selection.create_uid is 'Created by';

comment on column ir_model_fields_selection.create_date is 'Created on';

comment on column ir_model_fields_selection.write_uid is 'Last Updated by';

comment on column ir_model_fields_selection.write_date is 'Last Updated on';

alter table ir_model_fields_selection owner to postgres;

create index ir_model_fields_selection_field_id_index
	on ir_model_fields_selection (field_id);

create table ir_module_category
(
	id integer default nextval('ir_module_category_id_seq'::regclass) not null
		constraint ir_module_category_pkey
			primary key,
	create_uid integer
		constraint ir_module_category_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_date timestamp,
	write_uid integer
		constraint ir_module_category_write_uid_fkey
			references res_users
				on delete set null,
	parent_id integer
		constraint ir_module_category_parent_id_fkey
			references ir_module_category
				on delete set null,
	name varchar not null,
	description text,
	sequence integer,
	visible boolean,
	exclusive boolean
);

comment on column ir_module_category.description is 'Description';

comment on column ir_module_category.sequence is 'Sequence';

comment on column ir_module_category.visible is 'Visible';

comment on column ir_module_category.exclusive is 'Exclusive';

alter table ir_module_category owner to postgres;

create index ir_module_category_name_index
	on ir_module_category (name);

create index ir_module_category_parent_id_index
	on ir_module_category (parent_id);

create table ir_module_module
(
	id integer default nextval('ir_module_module_id_seq'::regclass) not null
		constraint ir_module_module_pkey
			primary key,
	create_uid integer
		constraint ir_module_module_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_date timestamp,
	write_uid integer
		constraint ir_module_module_write_uid_fkey
			references res_users
				on delete set null,
	website varchar,
	summary varchar,
	name varchar not null
		constraint ir_module_module_name_uniq
			unique,
	author varchar,
	icon varchar,
	state varchar(16),
	latest_version varchar,
	shortdesc varchar,
	category_id integer
		constraint ir_module_module_category_id_fkey
			references ir_module_category
				on delete set null,
	description text,
	application boolean default false,
	demo boolean default false,
	web boolean default false,
	license varchar(32),
	sequence integer default 100,
	auto_install boolean default false,
	to_buy boolean default false,
	maintainer varchar,
	contributors text,
	published_version varchar,
	url varchar,
	menus_by_module text,
	reports_by_module text,
	views_by_module text
);

comment on column ir_module_module.maintainer is 'Maintainer';

comment on column ir_module_module.contributors is 'Contributors';

comment on column ir_module_module.published_version is 'Published Version';

comment on column ir_module_module.url is 'URL';

comment on column ir_module_module.menus_by_module is 'Menus';

comment on column ir_module_module.reports_by_module is 'Reports';

comment on column ir_module_module.views_by_module is 'Views';

alter table ir_module_module owner to postgres;

create table base_module_uninstall
(
	id integer default nextval('base_module_uninstall_id_seq'::regclass) not null
		constraint base_module_uninstall_pkey
			primary key,
	show_all boolean,
	module_id integer not null
		constraint base_module_uninstall_module_id_fkey
			references ir_module_module
				on delete cascade,
	create_uid integer
		constraint base_module_uninstall_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_module_uninstall_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_module_uninstall is 'Module Uninstall';

comment on column base_module_uninstall.show_all is 'Show All';

comment on column base_module_uninstall.module_id is 'Module';

comment on column base_module_uninstall.create_uid is 'Created by';

comment on column base_module_uninstall.create_date is 'Created on';

comment on column base_module_uninstall.write_uid is 'Last Updated by';

comment on column base_module_uninstall.write_date is 'Last Updated on';

alter table base_module_uninstall owner to postgres;

create table ir_demo_failure
(
	id integer default nextval('ir_demo_failure_id_seq'::regclass) not null
		constraint ir_demo_failure_pkey
			primary key,
	module_id integer not null
		constraint ir_demo_failure_module_id_fkey
			references ir_module_module
				on delete cascade,
	error varchar,
	wizard_id integer
		constraint ir_demo_failure_wizard_id_fkey
			references ir_demo_failure_wizard
				on delete set null,
	create_uid integer
		constraint ir_demo_failure_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_demo_failure_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_demo_failure is 'Demo failure';

comment on column ir_demo_failure.module_id is 'Module';

comment on column ir_demo_failure.error is 'Error';

comment on column ir_demo_failure.wizard_id is 'Wizard';

comment on column ir_demo_failure.create_uid is 'Created by';

comment on column ir_demo_failure.create_date is 'Created on';

comment on column ir_demo_failure.write_uid is 'Last Updated by';

comment on column ir_demo_failure.write_date is 'Last Updated on';

alter table ir_demo_failure owner to postgres;

create table ir_model_constraint
(
	id integer default nextval('ir_model_constraint_id_seq'::regclass) not null
		constraint ir_model_constraint_pkey
			primary key,
	name varchar not null,
	definition varchar,
	message varchar,
	model integer not null
		constraint ir_model_constraint_model_fkey
			references ir_model
				on delete cascade,
	module integer not null
		constraint ir_model_constraint_module_fkey
			references ir_module_module
				on delete cascade,
	type varchar(1) not null,
	write_date timestamp,
	create_date timestamp,
	create_uid integer
		constraint ir_model_constraint_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint ir_model_constraint_write_uid_fkey
			references res_users
				on delete set null,
	constraint ir_model_constraint_module_name_uniq
		unique (name, module)
);

comment on table ir_model_constraint is 'Model Constraint';

comment on column ir_model_constraint.name is 'Constraint';

comment on column ir_model_constraint.definition is 'Definition';

comment on column ir_model_constraint.message is 'Message';

comment on column ir_model_constraint.model is 'Model';

comment on column ir_model_constraint.module is 'Module';

comment on column ir_model_constraint.type is 'Constraint Type';

comment on column ir_model_constraint.write_date is 'Write Date';

comment on column ir_model_constraint.create_date is 'Create Date';

comment on column ir_model_constraint.create_uid is 'Created by';

comment on column ir_model_constraint.write_uid is 'Last Updated by';

alter table ir_model_constraint owner to postgres;

create index ir_model_constraint_model_index
	on ir_model_constraint (model);

create index ir_model_constraint_module_index
	on ir_model_constraint (module);

create index ir_model_constraint_name_index
	on ir_model_constraint (name);

create index ir_model_constraint_type_index
	on ir_model_constraint (type);

create table ir_model_relation
(
	id integer default nextval('ir_model_relation_id_seq'::regclass) not null
		constraint ir_model_relation_pkey
			primary key,
	name varchar not null,
	model integer not null
		constraint ir_model_relation_model_fkey
			references ir_model
				on delete cascade,
	module integer not null
		constraint ir_model_relation_module_fkey
			references ir_module_module
				on delete cascade,
	write_date timestamp,
	create_date timestamp,
	create_uid integer
		constraint ir_model_relation_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint ir_model_relation_write_uid_fkey
			references res_users
				on delete set null
);

comment on table ir_model_relation is 'Relation Model';

comment on column ir_model_relation.name is 'Relation Name';

comment on column ir_model_relation.model is 'Model';

comment on column ir_model_relation.module is 'Module';

comment on column ir_model_relation.write_date is 'Write Date';

comment on column ir_model_relation.create_date is 'Create Date';

comment on column ir_model_relation.create_uid is 'Created by';

comment on column ir_model_relation.write_uid is 'Last Updated by';

alter table ir_model_relation owner to postgres;

create index ir_model_relation_model_index
	on ir_model_relation (model);

create index ir_model_relation_module_index
	on ir_model_relation (module);

create index ir_model_relation_name_index
	on ir_model_relation (name);

create index ir_module_module_category_id_index
	on ir_module_module (category_id);

create index ir_module_module_name_index
	on ir_module_module (name);

create index ir_module_module_state_index
	on ir_module_module (state);

create table ir_module_module_dependency
(
	id integer default nextval('ir_module_module_dependency_id_seq'::regclass) not null
		constraint ir_module_module_dependency_pkey
			primary key,
	create_uid integer
		constraint ir_module_module_dependency_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_date timestamp,
	write_uid integer
		constraint ir_module_module_dependency_write_uid_fkey
			references res_users
				on delete set null,
	name varchar,
	module_id integer
		constraint ir_module_module_dependency_module_id_fkey
			references ir_module_module
				on delete cascade,
	auto_install_required boolean default true
);

alter table ir_module_module_dependency owner to postgres;

create index ir_module_module_dependency_name_index
	on ir_module_module_dependency (name);

create table ir_module_module_exclusion
(
	id integer default nextval('ir_module_module_exclusion_id_seq'::regclass) not null
		constraint ir_module_module_exclusion_pkey
			primary key,
	name varchar,
	module_id integer
		constraint ir_module_module_exclusion_module_id_fkey
			references ir_module_module
				on delete cascade,
	create_uid integer
		constraint ir_module_module_exclusion_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_module_module_exclusion_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_module_module_exclusion is 'Module exclusion';

comment on column ir_module_module_exclusion.name is 'Name';

comment on column ir_module_module_exclusion.module_id is 'Module';

comment on column ir_module_module_exclusion.create_uid is 'Created by';

comment on column ir_module_module_exclusion.create_date is 'Created on';

comment on column ir_module_module_exclusion.write_uid is 'Last Updated by';

comment on column ir_module_module_exclusion.write_date is 'Last Updated on';

alter table ir_module_module_exclusion owner to postgres;

create index ir_module_module_exclusion_name_index
	on ir_module_module_exclusion (name);

create table ir_rule
(
	id integer default nextval('ir_rule_id_seq'::regclass) not null
		constraint ir_rule_pkey
			primary key,
	name varchar,
	active boolean,
	model_id integer not null
		constraint ir_rule_model_id_fkey
			references ir_model
				on delete cascade,
	domain_force text,
	perm_read boolean,
	perm_write boolean,
	perm_create boolean,
	perm_unlink boolean,
	global boolean,
	create_uid integer
		constraint ir_rule_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_rule_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_rule is 'Record Rule';

comment on column ir_rule.name is 'Name';

comment on column ir_rule.active is 'Active';

comment on column ir_rule.model_id is 'Model';

comment on column ir_rule.domain_force is 'Domain';

comment on column ir_rule.perm_read is 'Apply for Read';

comment on column ir_rule.perm_write is 'Apply for Write';

comment on column ir_rule.perm_create is 'Apply for Create';

comment on column ir_rule.perm_unlink is 'Apply for Delete';

comment on column ir_rule.global is 'Global';

comment on column ir_rule.create_uid is 'Created by';

comment on column ir_rule.create_date is 'Created on';

comment on column ir_rule.write_uid is 'Last Updated by';

comment on column ir_rule.write_date is 'Last Updated on';

alter table ir_rule owner to postgres;

create index ir_rule_model_id_index
	on ir_rule (model_id);

create index ir_rule_name_index
	on ir_rule (name);

create table ir_sequence
(
	id integer default nextval('ir_sequence_id_seq'::regclass) not null
		constraint ir_sequence_pkey
			primary key,
	name varchar not null,
	code varchar,
	implementation varchar not null,
	active boolean,
	prefix varchar,
	suffix varchar,
	number_next integer not null,
	number_increment integer not null,
	padding integer not null,
	company_id integer,
	use_date_range boolean,
	create_uid integer
		constraint ir_sequence_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_sequence_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_sequence is 'Sequence';

comment on column ir_sequence.name is 'Name';

comment on column ir_sequence.code is 'Sequence Code';

comment on column ir_sequence.implementation is 'Implementation';

comment on column ir_sequence.active is 'Active';

comment on column ir_sequence.prefix is 'Prefix';

comment on column ir_sequence.suffix is 'Suffix';

comment on column ir_sequence.number_next is 'Next Number';

comment on column ir_sequence.number_increment is 'Step';

comment on column ir_sequence.padding is 'Sequence Size';

comment on column ir_sequence.company_id is 'Company';

comment on column ir_sequence.use_date_range is 'Use subsequences per date_range';

comment on column ir_sequence.create_uid is 'Created by';

comment on column ir_sequence.create_date is 'Created on';

comment on column ir_sequence.write_uid is 'Last Updated by';

comment on column ir_sequence.write_date is 'Last Updated on';

alter table ir_sequence owner to postgres;

alter table account_journal
	add constraint account_journal_secure_sequence_id_fkey
		foreign key (secure_sequence_id) references ir_sequence
			on delete set null;

create table ir_sequence_date_range
(
	id integer default nextval('ir_sequence_date_range_id_seq'::regclass) not null
		constraint ir_sequence_date_range_pkey
			primary key,
	date_from date not null,
	date_to date not null,
	sequence_id integer not null
		constraint ir_sequence_date_range_sequence_id_fkey
			references ir_sequence
				on delete cascade,
	number_next integer not null,
	create_uid integer
		constraint ir_sequence_date_range_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_sequence_date_range_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_sequence_date_range is 'Sequence Date Range';

comment on column ir_sequence_date_range.date_from is 'From';

comment on column ir_sequence_date_range.date_to is 'To';

comment on column ir_sequence_date_range.sequence_id is 'Main Sequence';

comment on column ir_sequence_date_range.number_next is 'Next Number';

comment on column ir_sequence_date_range.create_uid is 'Created by';

comment on column ir_sequence_date_range.create_date is 'Created on';

comment on column ir_sequence_date_range.write_uid is 'Last Updated by';

comment on column ir_sequence_date_range.write_date is 'Last Updated on';

alter table ir_sequence_date_range owner to postgres;

create table ir_ui_menu
(
	id integer default nextval('ir_ui_menu_id_seq'::regclass) not null
		constraint ir_ui_menu_pkey
			primary key,
	name varchar not null,
	active boolean,
	sequence integer,
	parent_id integer
		constraint ir_ui_menu_parent_id_fkey
			references ir_ui_menu
				on delete restrict,
	parent_path varchar,
	web_icon varchar,
	action varchar,
	create_uid integer
		constraint ir_ui_menu_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_ui_menu_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_ui_menu is 'Menu';

comment on column ir_ui_menu.name is 'Menu';

comment on column ir_ui_menu.active is 'Active';

comment on column ir_ui_menu.sequence is 'Sequence';

comment on column ir_ui_menu.parent_id is 'Parent Menu';

comment on column ir_ui_menu.parent_path is 'Parent Path';

comment on column ir_ui_menu.web_icon is 'Web Icon File';

comment on column ir_ui_menu.action is 'Action';

comment on column ir_ui_menu.create_uid is 'Created by';

comment on column ir_ui_menu.create_date is 'Created on';

comment on column ir_ui_menu.write_uid is 'Last Updated by';

comment on column ir_ui_menu.write_date is 'Last Updated on';

alter table ir_ui_menu owner to postgres;

create index ir_ui_menu_parent_id_index
	on ir_ui_menu (parent_id);

create index ir_ui_menu_parent_path_index
	on ir_ui_menu (parent_path);

alter table ir_ui_view
	add constraint ir_ui_view_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table ir_ui_view
	add constraint ir_ui_view_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table ir_ui_view_custom
(
	id integer default nextval('ir_ui_view_custom_id_seq'::regclass) not null
		constraint ir_ui_view_custom_pkey
			primary key,
	ref_id integer not null
		constraint ir_ui_view_custom_ref_id_fkey
			references ir_ui_view
				on delete cascade,
	user_id integer not null
		constraint ir_ui_view_custom_user_id_fkey
			references res_users
				on delete cascade,
	arch text not null,
	create_uid integer
		constraint ir_ui_view_custom_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_ui_view_custom_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_ui_view_custom is 'Custom View';

comment on column ir_ui_view_custom.ref_id is 'Original View';

comment on column ir_ui_view_custom.user_id is 'User';

comment on column ir_ui_view_custom.arch is 'View Architecture';

comment on column ir_ui_view_custom.create_uid is 'Created by';

comment on column ir_ui_view_custom.create_date is 'Created on';

comment on column ir_ui_view_custom.write_uid is 'Last Updated by';

comment on column ir_ui_view_custom.write_date is 'Last Updated on';

alter table ir_ui_view_custom owner to postgres;

create index ir_ui_view_custom_ref_id_index
	on ir_ui_view_custom (ref_id);

create index ir_ui_view_custom_user_id_index
	on ir_ui_view_custom (user_id);

create index ir_ui_view_custom_user_id_ref_id
	on ir_ui_view_custom (user_id, ref_id);

create table journal_account_type_control_rel
(
	journal_id integer not null
		constraint journal_account_type_control_rel_journal_id_fkey
			references account_journal
				on delete cascade,
	type_id integer not null
		constraint journal_account_type_control_rel_type_id_fkey
			references account_account_type
				on delete cascade,
	constraint journal_account_type_control_rel_pkey
		primary key (journal_id, type_id)
);

comment on table journal_account_type_control_rel is 'RELATION BETWEEN account_journal AND account_account_type';

alter table journal_account_type_control_rel owner to postgres;

create index journal_account_type_control_rel_type_id_journal_id_idx
	on journal_account_type_control_rel (type_id, journal_id);

create table mail_activity_type
(
	id integer default nextval('mail_activity_type_id_seq'::regclass) not null
		constraint mail_activity_type_pkey
			primary key,
	name varchar not null,
	summary varchar,
	sequence integer,
	active boolean,
	create_uid integer
		constraint mail_activity_type_create_uid_fkey
			references res_users
				on delete set null,
	delay_count integer,
	delay_unit varchar not null,
	delay_from varchar not null,
	icon varchar,
	decoration_type varchar,
	res_model_id integer
		constraint mail_activity_type_res_model_id_fkey
			references ir_model
				on delete set null,
	default_next_type_id integer
		constraint mail_activity_type_default_next_type_id_fkey
			references mail_activity_type
				on delete restrict,
	force_next boolean,
	category varchar,
	default_user_id integer
		constraint mail_activity_type_default_user_id_fkey
			references res_users
				on delete set null,
	default_description text,
	create_date timestamp,
	write_uid integer
		constraint mail_activity_type_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_activity_type is 'Activity Type';

comment on column mail_activity_type.name is 'Name';

comment on column mail_activity_type.summary is 'Default Summary';

comment on column mail_activity_type.sequence is 'Sequence';

comment on column mail_activity_type.active is 'Active';

comment on column mail_activity_type.create_uid is 'Create Uid';

comment on column mail_activity_type.delay_count is 'Scheduled Date';

comment on column mail_activity_type.delay_unit is 'Delay units';

comment on column mail_activity_type.delay_from is 'Delay Type';

comment on column mail_activity_type.icon is 'Icon';

comment on column mail_activity_type.decoration_type is 'Decoration Type';

comment on column mail_activity_type.res_model_id is 'Model';

comment on column mail_activity_type.default_next_type_id is 'Default Next Activity';

comment on column mail_activity_type.force_next is 'Trigger Next Activity';

comment on column mail_activity_type.category is 'Action to Perform';

comment on column mail_activity_type.default_user_id is 'Default User';

comment on column mail_activity_type.default_description is 'Default Description';

comment on column mail_activity_type.create_date is 'Created on';

comment on column mail_activity_type.write_uid is 'Last Updated by';

comment on column mail_activity_type.write_date is 'Last Updated on';

alter table mail_activity_type owner to postgres;

create table account_followup_followup_line
(
	id integer default nextval('account_followup_followup_line_id_seq'::regclass) not null
		constraint account_followup_followup_line_pkey
			primary key,
	name varchar not null,
	delay integer not null,
	company_id integer not null,
	sms_description varchar,
	description text,
	send_email boolean,
	print_letter boolean,
	send_sms boolean,
	join_invoices boolean,
	manual_action boolean,
	manual_action_note text,
	manual_action_type_id integer
		constraint account_followup_followup_line_manual_action_type_id_fkey
			references mail_activity_type
				on delete set null,
	manual_action_responsible_id integer
		constraint account_followup_followup_lin_manual_action_responsible_id_fkey
			references res_users
				on delete set null,
	auto_execute boolean,
	create_uid integer
		constraint account_followup_followup_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_followup_followup_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	send_letter boolean,
	constraint account_followup_followup_line_days_uniq
		unique (company_id, delay)
);

comment on table account_followup_followup_line is 'Follow-up Criteria';

comment on column account_followup_followup_line.name is 'Follow-Up Action';

comment on column account_followup_followup_line.delay is 'Due Days';

comment on column account_followup_followup_line.company_id is 'Company';

comment on column account_followup_followup_line.sms_description is 'SMS Text Message';

comment on column account_followup_followup_line.description is 'Printed Message';

comment on column account_followup_followup_line.send_email is 'Send an Email';

comment on column account_followup_followup_line.print_letter is 'Print a Letter';

comment on column account_followup_followup_line.send_sms is 'Send an SMS Message';

comment on column account_followup_followup_line.join_invoices is 'Join open Invoices';

comment on column account_followup_followup_line.manual_action is 'Manual Action';

comment on column account_followup_followup_line.manual_action_note is 'Action To Do';

comment on column account_followup_followup_line.manual_action_type_id is 'Manual Action Type';

comment on column account_followup_followup_line.manual_action_responsible_id is 'Assign a Responsible';

comment on column account_followup_followup_line.auto_execute is 'Auto Execute';

comment on column account_followup_followup_line.create_uid is 'Created by';

comment on column account_followup_followup_line.create_date is 'Created on';

comment on column account_followup_followup_line.write_uid is 'Last Updated by';

comment on column account_followup_followup_line.write_date is 'Last Updated on';

comment on column account_followup_followup_line.send_letter is 'Send a Letter';

alter table account_followup_followup_line owner to postgres;

alter table account_journal
	add constraint account_journal_sale_activity_type_id_fkey
		foreign key (sale_activity_type_id) references mail_activity_type
			on delete set null;

create table mail_activity
(
	id integer default nextval('mail_activity_id_seq'::regclass) not null
		constraint mail_activity_pkey
			primary key,
	res_model_id integer not null
		constraint mail_activity_res_model_id_fkey
			references ir_model
				on delete cascade,
	res_model varchar,
	res_id integer not null,
	res_name varchar,
	activity_type_id integer
		constraint mail_activity_activity_type_id_fkey
			references mail_activity_type
				on delete restrict,
	summary varchar,
	note text,
	date_deadline date not null,
	automated boolean,
	user_id integer not null
		constraint mail_activity_user_id_fkey
			references res_users
				on delete restrict,
	request_partner_id integer
		constraint mail_activity_request_partner_id_fkey
			references res_partner
				on delete set null,
	recommended_activity_type_id integer
		constraint mail_activity_recommended_activity_type_id_fkey
			references mail_activity_type
				on delete set null,
	previous_activity_type_id integer
		constraint mail_activity_previous_activity_type_id_fkey
			references mail_activity_type
				on delete set null,
	create_uid integer
		constraint mail_activity_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_activity_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_activity is 'Activity';

comment on column mail_activity.res_model_id is 'Document Model';

comment on column mail_activity.res_model is 'Related Document Model';

comment on column mail_activity.res_id is 'Related Document ID';

comment on column mail_activity.res_name is 'Document Name';

comment on column mail_activity.activity_type_id is 'Activity Type';

comment on column mail_activity.summary is 'Summary';

comment on column mail_activity.note is 'Note';

comment on column mail_activity.date_deadline is 'Due Date';

comment on column mail_activity.automated is 'Automated activity';

comment on column mail_activity.user_id is 'Assigned to';

comment on column mail_activity.request_partner_id is 'Requesting Partner';

comment on column mail_activity.recommended_activity_type_id is 'Recommended Activity Type';

comment on column mail_activity.previous_activity_type_id is 'Previous Activity Type';

comment on column mail_activity.create_uid is 'Created by';

comment on column mail_activity.create_date is 'Created on';

comment on column mail_activity.write_uid is 'Last Updated by';

comment on column mail_activity.write_date is 'Last Updated on';

alter table mail_activity owner to postgres;

create index mail_activity_date_deadline_index
	on mail_activity (date_deadline);

create index mail_activity_res_id_index
	on mail_activity (res_id);

create index mail_activity_res_model_id_index
	on mail_activity (res_model_id);

create index mail_activity_res_model_index
	on mail_activity (res_model);

create index mail_activity_user_id_index
	on mail_activity (user_id);

create table mail_activity_rel
(
	activity_id integer not null
		constraint mail_activity_rel_activity_id_fkey
			references mail_activity_type
				on delete cascade,
	recommended_id integer not null
		constraint mail_activity_rel_recommended_id_fkey
			references mail_activity_type
				on delete cascade,
	constraint mail_activity_rel_pkey
		primary key (activity_id, recommended_id)
);

comment on table mail_activity_rel is 'RELATION BETWEEN mail_activity_type AND mail_activity_type';

alter table mail_activity_rel owner to postgres;

create index mail_activity_rel_recommended_id_activity_id_idx
	on mail_activity_rel (recommended_id, activity_id);

create index mail_activity_type_create_uid_index
	on mail_activity_type (create_uid);

create index mail_activity_type_res_model_id_index
	on mail_activity_type (res_model_id);

create table mail_alias
(
	id integer default nextval('mail_alias_id_seq'::regclass) not null
		constraint mail_alias_pkey
			primary key,
	alias_name varchar
		constraint mail_alias_alias_unique
			unique,
	alias_model_id integer not null
		constraint mail_alias_alias_model_id_fkey
			references ir_model
				on delete cascade,
	alias_user_id integer
		constraint mail_alias_alias_user_id_fkey
			references res_users
				on delete set null,
	alias_defaults text not null,
	alias_force_thread_id integer,
	alias_parent_model_id integer
		constraint mail_alias_alias_parent_model_id_fkey
			references ir_model
				on delete set null,
	alias_parent_thread_id integer,
	alias_contact varchar not null,
	alias_bounced_content text,
	create_uid integer
		constraint mail_alias_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_alias_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_alias is 'Email Aliases';

comment on column mail_alias.alias_name is 'Alias Name';

comment on column mail_alias.alias_model_id is 'Aliased Model';

comment on column mail_alias.alias_user_id is 'Owner';

comment on column mail_alias.alias_defaults is 'Default Values';

comment on column mail_alias.alias_force_thread_id is 'Record Thread ID';

comment on column mail_alias.alias_parent_model_id is 'Parent Model';

comment on column mail_alias.alias_parent_thread_id is 'Parent Record Thread ID';

comment on column mail_alias.alias_contact is 'Alias Contact Security';

comment on column mail_alias.alias_bounced_content is 'Custom Bounced Message';

comment on column mail_alias.create_uid is 'Created by';

comment on column mail_alias.create_date is 'Created on';

comment on column mail_alias.write_uid is 'Last Updated by';

comment on column mail_alias.write_date is 'Last Updated on';

alter table mail_alias owner to postgres;

alter table account_journal
	add constraint account_journal_alias_id_fkey
		foreign key (alias_id) references mail_alias
			on delete set null;

create table mail_blacklist
(
	id integer default nextval('mail_blacklist_id_seq'::regclass) not null
		constraint mail_blacklist_pkey
			primary key,
	email varchar not null
		constraint mail_blacklist_unique_email
			unique,
	active boolean,
	message_main_attachment_id integer
		constraint mail_blacklist_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint mail_blacklist_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_blacklist_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_blacklist is 'Mail Blacklist';

comment on column mail_blacklist.email is 'Email Address';

comment on column mail_blacklist.active is 'Active';

comment on column mail_blacklist.message_main_attachment_id is 'Main Attachment';

comment on column mail_blacklist.create_uid is 'Created by';

comment on column mail_blacklist.create_date is 'Created on';

comment on column mail_blacklist.write_uid is 'Last Updated by';

comment on column mail_blacklist.write_date is 'Last Updated on';

alter table mail_blacklist owner to postgres;

create index mail_blacklist_email_index
	on mail_blacklist (email);

create index mail_blacklist_message_main_attachment_id_index
	on mail_blacklist (message_main_attachment_id);

create table mail_blacklist_remove
(
	id integer default nextval('mail_blacklist_remove_id_seq'::regclass) not null
		constraint mail_blacklist_remove_pkey
			primary key,
	email varchar not null,
	reason varchar,
	create_uid integer
		constraint mail_blacklist_remove_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_blacklist_remove_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_blacklist_remove is 'Remove email from blacklist wizard';

comment on column mail_blacklist_remove.email is 'Email';

comment on column mail_blacklist_remove.reason is 'Reason';

comment on column mail_blacklist_remove.create_uid is 'Created by';

comment on column mail_blacklist_remove.create_date is 'Created on';

comment on column mail_blacklist_remove.write_uid is 'Last Updated by';

comment on column mail_blacklist_remove.write_date is 'Last Updated on';

alter table mail_blacklist_remove owner to postgres;

create table mail_message_subtype
(
	id integer default nextval('mail_message_subtype_id_seq'::regclass) not null
		constraint mail_message_subtype_pkey
			primary key,
	name varchar not null,
	description text,
	internal boolean,
	parent_id integer
		constraint mail_message_subtype_parent_id_fkey
			references mail_message_subtype
				on delete set null,
	relation_field varchar,
	res_model varchar,
	"default" boolean,
	sequence integer,
	hidden boolean,
	create_uid integer
		constraint mail_message_subtype_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_message_subtype_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_message_subtype is 'Message subtypes';

comment on column mail_message_subtype.name is 'Message Type';

comment on column mail_message_subtype.description is 'Description';

comment on column mail_message_subtype.internal is 'Internal Only';

comment on column mail_message_subtype.parent_id is 'Parent';

comment on column mail_message_subtype.relation_field is 'Relation field';

comment on column mail_message_subtype.res_model is 'Model';

comment on column mail_message_subtype."default" is 'Default';

comment on column mail_message_subtype.sequence is 'Sequence';

comment on column mail_message_subtype.hidden is 'Hidden';

comment on column mail_message_subtype.create_uid is 'Created by';

comment on column mail_message_subtype.create_date is 'Created on';

comment on column mail_message_subtype.write_uid is 'Last Updated by';

comment on column mail_message_subtype.write_date is 'Last Updated on';

alter table mail_message_subtype owner to postgres;

create table mail_message
(
	id integer default nextval('mail_message_id_seq'::regclass) not null
		constraint mail_message_pkey
			primary key,
	subject varchar,
	date timestamp,
	body text,
	parent_id integer
		constraint mail_message_parent_id_fkey
			references mail_message
				on delete set null,
	model varchar,
	res_id integer,
	record_name varchar,
	message_type varchar not null,
	subtype_id integer
		constraint mail_message_subtype_id_fkey
			references mail_message_subtype
				on delete set null,
	mail_activity_type_id integer
		constraint mail_message_mail_activity_type_id_fkey
			references mail_activity_type
				on delete set null,
	is_internal boolean,
	email_from varchar,
	author_id integer
		constraint mail_message_author_id_fkey
			references res_partner
				on delete set null,
	no_auto_thread boolean,
	message_id varchar,
	reply_to varchar,
	mail_server_id integer
		constraint mail_message_mail_server_id_fkey
			references ir_mail_server
				on delete set null,
	moderation_status varchar,
	moderator_id integer
		constraint mail_message_moderator_id_fkey
			references res_users
				on delete set null,
	email_layout_xmlid varchar,
	add_sign boolean,
	create_uid integer
		constraint mail_message_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_message_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_message is 'Message';

comment on column mail_message.subject is 'Subject';

comment on column mail_message.date is 'Date';

comment on column mail_message.body is 'Contents';

comment on column mail_message.parent_id is 'Parent Message';

comment on column mail_message.model is 'Related Document Model';

comment on column mail_message.res_id is 'Related Document ID';

comment on column mail_message.record_name is 'Message Record Name';

comment on column mail_message.message_type is 'Type';

comment on column mail_message.subtype_id is 'Subtype';

comment on column mail_message.mail_activity_type_id is 'Mail Activity Type';

comment on column mail_message.is_internal is 'Employee Only';

comment on column mail_message.email_from is 'From';

comment on column mail_message.author_id is 'Author';

comment on column mail_message.no_auto_thread is 'No threading for answers';

comment on column mail_message.message_id is 'Message-Id';

comment on column mail_message.reply_to is 'Reply-To';

comment on column mail_message.mail_server_id is 'Outgoing mail server';

comment on column mail_message.moderation_status is 'Moderation Status';

comment on column mail_message.moderator_id is 'Moderated By';

comment on column mail_message.email_layout_xmlid is 'Layout';

comment on column mail_message.add_sign is 'Add Sign';

comment on column mail_message.create_uid is 'Created by';

comment on column mail_message.create_date is 'Created on';

comment on column mail_message.write_uid is 'Last Updated by';

comment on column mail_message.write_date is 'Last Updated on';

alter table mail_message owner to postgres;

create table mail_mail
(
	id integer default nextval('mail_mail_id_seq'::regclass) not null
		constraint mail_mail_pkey
			primary key,
	mail_message_id integer not null
		constraint mail_mail_mail_message_id_fkey
			references mail_message
				on delete cascade,
	body_html text,
	"references" text,
	headers text,
	notification boolean,
	email_to text,
	email_cc varchar,
	state varchar,
	auto_delete boolean,
	failure_reason text,
	scheduled_date varchar,
	create_uid integer
		constraint mail_mail_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_mail_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	fetchmail_server_id integer
		constraint mail_mail_fetchmail_server_id_fkey
			references fetchmail_server
				on delete set null
);

comment on table mail_mail is 'Outgoing Mails';

comment on column mail_mail.mail_message_id is 'Message';

comment on column mail_mail.body_html is 'Rich-text Contents';

comment on column mail_mail."references" is 'References';

comment on column mail_mail.headers is 'Headers';

comment on column mail_mail.notification is 'Is Notification';

comment on column mail_mail.email_to is 'To';

comment on column mail_mail.email_cc is 'Cc';

comment on column mail_mail.state is 'Status';

comment on column mail_mail.auto_delete is 'Auto Delete';

comment on column mail_mail.failure_reason is 'Failure Reason';

comment on column mail_mail.scheduled_date is 'Scheduled Send Date';

comment on column mail_mail.create_uid is 'Created by';

comment on column mail_mail.create_date is 'Created on';

comment on column mail_mail.write_uid is 'Last Updated by';

comment on column mail_mail.write_date is 'Last Updated on';

comment on column mail_mail.fetchmail_server_id is 'Inbound Mail Server';

alter table mail_mail owner to postgres;

create index mail_mail_fetchmail_server_id_index
	on mail_mail (fetchmail_server_id);

create index mail_mail_mail_message_id_index
	on mail_mail (mail_message_id);

create table mail_mail_res_partner_rel
(
	mail_mail_id integer not null
		constraint mail_mail_res_partner_rel_mail_mail_id_fkey
			references mail_mail
				on delete cascade,
	res_partner_id integer not null
		constraint mail_mail_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint mail_mail_res_partner_rel_pkey
		primary key (mail_mail_id, res_partner_id)
);

comment on table mail_mail_res_partner_rel is 'RELATION BETWEEN mail_mail AND res_partner';

alter table mail_mail_res_partner_rel owner to postgres;

create index mail_mail_res_partner_rel_res_partner_id_mail_mail_id_idx
	on mail_mail_res_partner_rel (res_partner_id, mail_mail_id);

create index mail_message_author_id_index
	on mail_message (author_id);

create index mail_message_mail_activity_type_id_index
	on mail_message (mail_activity_type_id);

create index mail_message_message_id_index
	on mail_message (message_id);

create index mail_message_model_index
	on mail_message (model);

create index mail_message_model_res_id_idx
	on mail_message (model, res_id);

create index mail_message_moderation_status_index
	on mail_message (moderation_status);

create index mail_message_moderator_id_index
	on mail_message (moderator_id);

create index mail_message_parent_id_index
	on mail_message (parent_id);

create index mail_message_res_id_index
	on mail_message (res_id);

create index mail_message_subtype_id_index
	on mail_message (subtype_id);

create table mail_message_res_partner_rel
(
	mail_message_id integer not null
		constraint mail_message_res_partner_rel_mail_message_id_fkey
			references mail_message
				on delete cascade,
	res_partner_id integer not null
		constraint mail_message_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint mail_message_res_partner_rel_pkey
		primary key (mail_message_id, res_partner_id)
);

comment on table mail_message_res_partner_rel is 'RELATION BETWEEN mail_message AND res_partner';

alter table mail_message_res_partner_rel owner to postgres;

create index mail_message_res_partner_rel_res_partner_id_mail_message_id_idx
	on mail_message_res_partner_rel (res_partner_id, mail_message_id);

create table mail_message_res_partner_starred_rel
(
	mail_message_id integer not null
		constraint mail_message_res_partner_starred_rel_mail_message_id_fkey
			references mail_message
				on delete cascade,
	res_partner_id integer not null
		constraint mail_message_res_partner_starred_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint mail_message_res_partner_starred_rel_pkey
		primary key (mail_message_id, res_partner_id)
);

comment on table mail_message_res_partner_starred_rel is 'RELATION BETWEEN mail_message AND res_partner';

alter table mail_message_res_partner_starred_rel owner to postgres;

create index mail_message_res_partner_star_res_partner_id_mail_message_i_idx
	on mail_message_res_partner_starred_rel (res_partner_id, mail_message_id);

create table mail_resend_cancel
(
	id integer default nextval('mail_resend_cancel_id_seq'::regclass) not null
		constraint mail_resend_cancel_pkey
			primary key,
	model varchar,
	create_uid integer
		constraint mail_resend_cancel_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_resend_cancel_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_resend_cancel is 'Dismiss notification for resend by model';

comment on column mail_resend_cancel.model is 'Model';

comment on column mail_resend_cancel.create_uid is 'Created by';

comment on column mail_resend_cancel.create_date is 'Created on';

comment on column mail_resend_cancel.write_uid is 'Last Updated by';

comment on column mail_resend_cancel.write_date is 'Last Updated on';

alter table mail_resend_cancel owner to postgres;

create table mail_resend_message
(
	id integer default nextval('mail_resend_message_id_seq'::regclass) not null
		constraint mail_resend_message_pkey
			primary key,
	mail_message_id integer
		constraint mail_resend_message_mail_message_id_fkey
			references mail_message
				on delete set null,
	create_uid integer
		constraint mail_resend_message_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_resend_message_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_resend_message is 'Email resend wizard';

comment on column mail_resend_message.mail_message_id is 'Message';

comment on column mail_resend_message.create_uid is 'Created by';

comment on column mail_resend_message.create_date is 'Created on';

comment on column mail_resend_message.write_uid is 'Last Updated by';

comment on column mail_resend_message.write_date is 'Last Updated on';

alter table mail_resend_message owner to postgres;

create table mail_resend_partner
(
	id integer default nextval('mail_resend_partner_id_seq'::regclass) not null
		constraint mail_resend_partner_pkey
			primary key,
	partner_id integer not null
		constraint mail_resend_partner_partner_id_fkey
			references res_partner
				on delete cascade,
	resend boolean,
	resend_wizard_id integer
		constraint mail_resend_partner_resend_wizard_id_fkey
			references mail_resend_message
				on delete set null,
	message varchar,
	create_uid integer
		constraint mail_resend_partner_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_resend_partner_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_resend_partner is 'Partner with additional information for mail resend';

comment on column mail_resend_partner.partner_id is 'Partner';

comment on column mail_resend_partner.resend is 'Send Again';

comment on column mail_resend_partner.resend_wizard_id is 'Resend wizard';

comment on column mail_resend_partner.message is 'Help message';

comment on column mail_resend_partner.create_uid is 'Created by';

comment on column mail_resend_partner.create_date is 'Created on';

comment on column mail_resend_partner.write_uid is 'Last Updated by';

comment on column mail_resend_partner.write_date is 'Last Updated on';

alter table mail_resend_partner owner to postgres;

create table mail_shortcode
(
	id integer default nextval('mail_shortcode_id_seq'::regclass) not null
		constraint mail_shortcode_pkey
			primary key,
	source varchar not null,
	substitution text not null,
	description varchar,
	create_uid integer
		constraint mail_shortcode_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_shortcode_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_shortcode is 'Canned Response / Shortcode';

comment on column mail_shortcode.source is 'Shortcut';

comment on column mail_shortcode.substitution is 'Substitution';

comment on column mail_shortcode.description is 'Description';

comment on column mail_shortcode.create_uid is 'Created by';

comment on column mail_shortcode.create_date is 'Created on';

comment on column mail_shortcode.write_uid is 'Last Updated by';

comment on column mail_shortcode.write_date is 'Last Updated on';

alter table mail_shortcode owner to postgres;

create index mail_shortcode_source_index
	on mail_shortcode (source);

create index mail_shortcode_substitution_index
	on mail_shortcode (substitution);

create table mail_tracking_value
(
	id integer default nextval('mail_tracking_value_id_seq'::regclass) not null
		constraint mail_tracking_value_pkey
			primary key,
	field integer not null
		constraint mail_tracking_value_field_fkey
			references ir_model_fields
				on delete cascade,
	field_desc varchar not null,
	field_type varchar,
	old_value_integer integer,
	old_value_float double precision,
	old_value_monetary double precision,
	old_value_char varchar,
	old_value_text text,
	old_value_datetime timestamp,
	new_value_integer integer,
	new_value_float double precision,
	new_value_monetary double precision,
	new_value_char varchar,
	new_value_text text,
	new_value_datetime timestamp,
	mail_message_id integer not null
		constraint mail_tracking_value_mail_message_id_fkey
			references mail_message
				on delete cascade,
	tracking_sequence integer,
	create_uid integer
		constraint mail_tracking_value_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_tracking_value_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_tracking_value is 'Mail Tracking Value';

comment on column mail_tracking_value.field is 'Field';

comment on column mail_tracking_value.field_desc is 'Field Description';

comment on column mail_tracking_value.field_type is 'Field Type';

comment on column mail_tracking_value.old_value_integer is 'Old Value Integer';

comment on column mail_tracking_value.old_value_float is 'Old Value Float';

comment on column mail_tracking_value.old_value_monetary is 'Old Value Monetary';

comment on column mail_tracking_value.old_value_char is 'Old Value Char';

comment on column mail_tracking_value.old_value_text is 'Old Value Text';

comment on column mail_tracking_value.old_value_datetime is 'Old Value DateTime';

comment on column mail_tracking_value.new_value_integer is 'New Value Integer';

comment on column mail_tracking_value.new_value_float is 'New Value Float';

comment on column mail_tracking_value.new_value_monetary is 'New Value Monetary';

comment on column mail_tracking_value.new_value_char is 'New Value Char';

comment on column mail_tracking_value.new_value_text is 'New Value Text';

comment on column mail_tracking_value.new_value_datetime is 'New Value Datetime';

comment on column mail_tracking_value.mail_message_id is 'Message ID';

comment on column mail_tracking_value.tracking_sequence is 'Tracking field sequence';

comment on column mail_tracking_value.create_uid is 'Created by';

comment on column mail_tracking_value.create_date is 'Created on';

comment on column mail_tracking_value.write_uid is 'Last Updated by';

comment on column mail_tracking_value.write_date is 'Last Updated on';

alter table mail_tracking_value owner to postgres;

create index mail_tracking_value_mail_message_id_index
	on mail_tracking_value (mail_message_id);

create table mail_wizard_invite
(
	id integer default nextval('mail_wizard_invite_id_seq'::regclass) not null
		constraint mail_wizard_invite_pkey
			primary key,
	res_model varchar not null,
	res_id integer,
	message text,
	send_mail boolean,
	create_uid integer
		constraint mail_wizard_invite_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_wizard_invite_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_wizard_invite is 'Invite wizard';

comment on column mail_wizard_invite.res_model is 'Related Document Model';

comment on column mail_wizard_invite.res_id is 'Related Document ID';

comment on column mail_wizard_invite.message is 'Message';

comment on column mail_wizard_invite.send_mail is 'Send Email';

comment on column mail_wizard_invite.create_uid is 'Created by';

comment on column mail_wizard_invite.create_date is 'Created on';

comment on column mail_wizard_invite.write_uid is 'Last Updated by';

comment on column mail_wizard_invite.write_date is 'Last Updated on';

alter table mail_wizard_invite owner to postgres;

create index mail_wizard_invite_res_id_index
	on mail_wizard_invite (res_id);

create index mail_wizard_invite_res_model_index
	on mail_wizard_invite (res_model);

create table mail_wizard_invite_res_partner_rel
(
	mail_wizard_invite_id integer not null
		constraint mail_wizard_invite_res_partner_rel_mail_wizard_invite_id_fkey
			references mail_wizard_invite
				on delete cascade,
	res_partner_id integer not null
		constraint mail_wizard_invite_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint mail_wizard_invite_res_partner_rel_pkey
		primary key (mail_wizard_invite_id, res_partner_id)
);

comment on table mail_wizard_invite_res_partner_rel is 'RELATION BETWEEN mail_wizard_invite AND res_partner';

alter table mail_wizard_invite_res_partner_rel owner to postgres;

create index mail_wizard_invite_res_partne_res_partner_id_mail_wizard_in_idx
	on mail_wizard_invite_res_partner_rel (res_partner_id, mail_wizard_invite_id);

create table message_attachment_rel
(
	message_id integer not null
		constraint message_attachment_rel_message_id_fkey
			references mail_message
				on delete cascade,
	attachment_id integer not null
		constraint message_attachment_rel_attachment_id_fkey
			references ir_attachment
				on delete cascade,
	constraint message_attachment_rel_pkey
		primary key (message_id, attachment_id)
);

comment on table message_attachment_rel is 'RELATION BETWEEN mail_message AND ir_attachment';

alter table message_attachment_rel owner to postgres;

create index message_attachment_rel_attachment_id_message_id_idx
	on message_attachment_rel (attachment_id, message_id);

create table order_weighing
(
	id integer default nextval('order_weighing_id_seq'::regclass) not null
		constraint order_weighing_pkey
			primary key,
	order_line_id integer,
	real_weight double precision,
	length double precision,
	width double precision,
	height double precision,
	create_uid integer
		constraint order_weighing_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint order_weighing_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table order_weighing is 'order.weighing';

comment on column order_weighing.order_line_id is 'Order Line';

comment on column order_weighing.real_weight is 'Real Weight';

comment on column order_weighing.length is 'Length in cm';

comment on column order_weighing.width is 'Width in cm';

comment on column order_weighing.height is 'Height in cm';

comment on column order_weighing.create_uid is 'Created by';

comment on column order_weighing.create_date is 'Created on';

comment on column order_weighing.write_uid is 'Last Updated by';

comment on column order_weighing.write_date is 'Last Updated on';

alter table order_weighing owner to postgres;

create table payment_acquirer
(
	id integer default nextval('payment_acquirer_id_seq'::regclass) not null
		constraint payment_acquirer_pkey
			primary key,
	name varchar not null,
	color integer,
	display_as varchar,
	description text,
	sequence integer,
	provider varchar not null,
	company_id integer not null,
	view_template_id integer
		constraint payment_acquirer_view_template_id_fkey
			references ir_ui_view
				on delete set null,
	registration_view_template_id integer
		constraint payment_acquirer_registration_view_template_id_fkey
			references ir_ui_view
				on delete set null,
	state varchar not null,
	capture_manually boolean,
	journal_id integer
		constraint payment_acquirer_journal_id_fkey
			references account_journal
				on delete set null,
	check_validity boolean,
	pre_msg text,
	auth_msg text,
	pending_msg text,
	done_msg text,
	cancel_msg text,
	save_token varchar,
	fees_active boolean,
	fees_dom_fixed double precision,
	fees_dom_var double precision,
	fees_int_fixed double precision,
	fees_int_var double precision,
	qr_code boolean,
	module_id integer
		constraint payment_acquirer_module_id_fkey
			references ir_module_module
				on delete set null,
	module_state varchar,
	payment_flow varchar not null,
	create_uid integer
		constraint payment_acquirer_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_acquirer_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	so_reference_type varchar
);

comment on table payment_acquirer is 'Payment Acquirer';

comment on column payment_acquirer.name is 'Name';

comment on column payment_acquirer.color is 'Color';

comment on column payment_acquirer.display_as is 'Displayed as';

comment on column payment_acquirer.description is 'Description';

comment on column payment_acquirer.sequence is 'Sequence';

comment on column payment_acquirer.provider is 'Provider';

comment on column payment_acquirer.company_id is 'Company';

comment on column payment_acquirer.view_template_id is 'Form Button Template';

comment on column payment_acquirer.registration_view_template_id is 'S2S Form Template';

comment on column payment_acquirer.state is 'State';

comment on column payment_acquirer.capture_manually is 'Capture Amount Manually';

comment on column payment_acquirer.journal_id is 'Payment Journal';

comment on column payment_acquirer.check_validity is 'Verify Card Validity';

comment on column payment_acquirer.pre_msg is 'Help Message';

comment on column payment_acquirer.auth_msg is 'Authorize Message';

comment on column payment_acquirer.pending_msg is 'Pending Message';

comment on column payment_acquirer.done_msg is 'Done Message';

comment on column payment_acquirer.cancel_msg is 'Cancel Message';

comment on column payment_acquirer.save_token is 'Save Cards';

comment on column payment_acquirer.fees_active is 'Add Extra Fees';

comment on column payment_acquirer.fees_dom_fixed is 'Fixed domestic fees';

comment on column payment_acquirer.fees_dom_var is 'Variable domestic fees (in percents)';

comment on column payment_acquirer.fees_int_fixed is 'Fixed international fees';

comment on column payment_acquirer.fees_int_var is 'Variable international fees (in percents)';

comment on column payment_acquirer.qr_code is 'Enable QR Codes';

comment on column payment_acquirer.module_id is 'Corresponding Module';

comment on column payment_acquirer.module_state is 'Installation State';

comment on column payment_acquirer.payment_flow is 'Payment Flow';

comment on column payment_acquirer.create_uid is 'Created by';

comment on column payment_acquirer.create_date is 'Created on';

comment on column payment_acquirer.write_uid is 'Last Updated by';

comment on column payment_acquirer.write_date is 'Last Updated on';

comment on column payment_acquirer.so_reference_type is 'Communication';

alter table payment_acquirer owner to postgres;

create table payment_acquirer_onboarding_wizard
(
	id integer default nextval('payment_acquirer_onboarding_wizard_id_seq'::regclass) not null
		constraint payment_acquirer_onboarding_wizard_pkey
			primary key,
	payment_method varchar,
	paypal_user_type varchar,
	paypal_email_account varchar,
	paypal_seller_account varchar,
	paypal_pdt_token varchar,
	stripe_secret_key varchar,
	stripe_publishable_key varchar,
	manual_name varchar,
	journal_name varchar,
	acc_number varchar,
	manual_post_msg text,
	create_uid integer
		constraint payment_acquirer_onboarding_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_acquirer_onboarding_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table payment_acquirer_onboarding_wizard is 'Payment acquire onboarding wizard';

comment on column payment_acquirer_onboarding_wizard.payment_method is 'Payment Method';

comment on column payment_acquirer_onboarding_wizard.paypal_user_type is 'Paypal User Type';

comment on column payment_acquirer_onboarding_wizard.paypal_email_account is 'Email';

comment on column payment_acquirer_onboarding_wizard.paypal_seller_account is 'Merchant Account ID';

comment on column payment_acquirer_onboarding_wizard.paypal_pdt_token is 'PDT Identity Token';

comment on column payment_acquirer_onboarding_wizard.stripe_secret_key is 'Stripe Secret Key';

comment on column payment_acquirer_onboarding_wizard.stripe_publishable_key is 'Stripe Publishable Key';

comment on column payment_acquirer_onboarding_wizard.manual_name is 'Method';

comment on column payment_acquirer_onboarding_wizard.journal_name is 'Bank Name';

comment on column payment_acquirer_onboarding_wizard.acc_number is 'Account Number';

comment on column payment_acquirer_onboarding_wizard.manual_post_msg is 'Payment Instructions';

comment on column payment_acquirer_onboarding_wizard.create_uid is 'Created by';

comment on column payment_acquirer_onboarding_wizard.create_date is 'Created on';

comment on column payment_acquirer_onboarding_wizard.write_uid is 'Last Updated by';

comment on column payment_acquirer_onboarding_wizard.write_date is 'Last Updated on';

alter table payment_acquirer_onboarding_wizard owner to postgres;

create table payment_country_rel
(
	payment_id integer not null
		constraint payment_country_rel_payment_id_fkey
			references payment_acquirer
				on delete cascade,
	country_id integer not null
		constraint payment_country_rel_country_id_fkey
			references res_country
				on delete cascade,
	constraint payment_country_rel_pkey
		primary key (payment_id, country_id)
);

comment on table payment_country_rel is 'RELATION BETWEEN payment_acquirer AND res_country';

alter table payment_country_rel owner to postgres;

create index payment_country_rel_country_id_payment_id_idx
	on payment_country_rel (country_id, payment_id);

create table payment_icon
(
	id integer default nextval('payment_icon_id_seq'::regclass) not null
		constraint payment_icon_pkey
			primary key,
	name varchar,
	create_uid integer
		constraint payment_icon_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_icon_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table payment_icon is 'Payment Icon';

comment on column payment_icon.name is 'Name';

comment on column payment_icon.create_uid is 'Created by';

comment on column payment_icon.create_date is 'Created on';

comment on column payment_icon.write_uid is 'Last Updated by';

comment on column payment_icon.write_date is 'Last Updated on';

alter table payment_icon owner to postgres;

create table payment_acquirer_payment_icon_rel
(
	payment_acquirer_id integer not null
		constraint payment_acquirer_payment_icon_rel_payment_acquirer_id_fkey
			references payment_acquirer
				on delete cascade,
	payment_icon_id integer not null
		constraint payment_acquirer_payment_icon_rel_payment_icon_id_fkey
			references payment_icon
				on delete cascade,
	constraint payment_acquirer_payment_icon_rel_pkey
		primary key (payment_acquirer_id, payment_icon_id)
);

comment on table payment_acquirer_payment_icon_rel is 'RELATION BETWEEN payment_acquirer AND payment_icon';

alter table payment_acquirer_payment_icon_rel owner to postgres;

create index payment_acquirer_payment_icon_payment_icon_id_payment_acqui_idx
	on payment_acquirer_payment_icon_rel (payment_icon_id, payment_acquirer_id);

create table phone_blacklist
(
	id integer default nextval('phone_blacklist_id_seq'::regclass) not null
		constraint phone_blacklist_pkey
			primary key,
	number varchar not null
		constraint phone_blacklist_unique_number
			unique,
	active boolean,
	message_main_attachment_id integer
		constraint phone_blacklist_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint phone_blacklist_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint phone_blacklist_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table phone_blacklist is 'Phone Blacklist';

comment on column phone_blacklist.number is 'Phone Number';

comment on column phone_blacklist.active is 'Active';

comment on column phone_blacklist.message_main_attachment_id is 'Main Attachment';

comment on column phone_blacklist.create_uid is 'Created by';

comment on column phone_blacklist.create_date is 'Created on';

comment on column phone_blacklist.write_uid is 'Last Updated by';

comment on column phone_blacklist.write_date is 'Last Updated on';

alter table phone_blacklist owner to postgres;

create index phone_blacklist_message_main_attachment_id_index
	on phone_blacklist (message_main_attachment_id);

create index phone_blacklist_number_index
	on phone_blacklist (number);

create table phone_blacklist_remove
(
	id integer default nextval('phone_blacklist_remove_id_seq'::regclass) not null
		constraint phone_blacklist_remove_pkey
			primary key,
	phone varchar not null,
	reason varchar,
	create_uid integer
		constraint phone_blacklist_remove_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint phone_blacklist_remove_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table phone_blacklist_remove is 'Remove phone from blacklist';

comment on column phone_blacklist_remove.phone is 'Phone Number';

comment on column phone_blacklist_remove.reason is 'Reason';

comment on column phone_blacklist_remove.create_uid is 'Created by';

comment on column phone_blacklist_remove.create_date is 'Created on';

comment on column phone_blacklist_remove.write_uid is 'Last Updated by';

comment on column phone_blacklist_remove.write_date is 'Last Updated on';

alter table phone_blacklist_remove owner to postgres;

create table portal_share
(
	id integer default nextval('portal_share_id_seq'::regclass) not null
		constraint portal_share_pkey
			primary key,
	res_model varchar not null,
	res_id integer not null,
	note text,
	create_uid integer
		constraint portal_share_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint portal_share_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table portal_share is 'Portal Sharing';

comment on column portal_share.res_model is 'Related Document Model';

comment on column portal_share.res_id is 'Related Document ID';

comment on column portal_share.note is 'Note';

comment on column portal_share.create_uid is 'Created by';

comment on column portal_share.create_date is 'Created on';

comment on column portal_share.write_uid is 'Last Updated by';

comment on column portal_share.write_date is 'Last Updated on';

alter table portal_share owner to postgres;

create table portal_share_res_partner_rel
(
	portal_share_id integer not null
		constraint portal_share_res_partner_rel_portal_share_id_fkey
			references portal_share
				on delete cascade,
	res_partner_id integer not null
		constraint portal_share_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint portal_share_res_partner_rel_pkey
		primary key (portal_share_id, res_partner_id)
);

comment on table portal_share_res_partner_rel is 'RELATION BETWEEN portal_share AND res_partner';

alter table portal_share_res_partner_rel owner to postgres;

create index portal_share_res_partner_rel_res_partner_id_portal_share_id_idx
	on portal_share_res_partner_rel (res_partner_id, portal_share_id);

create table portal_wizard
(
	id integer default nextval('portal_wizard_id_seq'::regclass) not null
		constraint portal_wizard_pkey
			primary key,
	welcome_message text,
	create_uid integer
		constraint portal_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint portal_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table portal_wizard is 'Grant Portal Access';

comment on column portal_wizard.welcome_message is 'Invitation Message';

comment on column portal_wizard.create_uid is 'Created by';

comment on column portal_wizard.create_date is 'Created on';

comment on column portal_wizard.write_uid is 'Last Updated by';

comment on column portal_wizard.write_date is 'Last Updated on';

alter table portal_wizard owner to postgres;

create table portal_wizard_user
(
	id integer default nextval('portal_wizard_user_id_seq'::regclass) not null
		constraint portal_wizard_user_pkey
			primary key,
	wizard_id integer not null
		constraint portal_wizard_user_wizard_id_fkey
			references portal_wizard
				on delete cascade,
	partner_id integer not null
		constraint portal_wizard_user_partner_id_fkey
			references res_partner
				on delete cascade,
	email varchar,
	in_portal boolean,
	user_id integer
		constraint portal_wizard_user_user_id_fkey
			references res_users
				on delete set null,
	create_uid integer
		constraint portal_wizard_user_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint portal_wizard_user_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table portal_wizard_user is 'Portal User Config';

comment on column portal_wizard_user.wizard_id is 'Wizard';

comment on column portal_wizard_user.partner_id is 'Contact';

comment on column portal_wizard_user.email is 'Email';

comment on column portal_wizard_user.in_portal is 'In Portal';

comment on column portal_wizard_user.user_id is 'Login User';

comment on column portal_wizard_user.create_uid is 'Created by';

comment on column portal_wizard_user.create_date is 'Created on';

comment on column portal_wizard_user.write_uid is 'Last Updated by';

comment on column portal_wizard_user.write_date is 'Last Updated on';

alter table portal_wizard_user owner to postgres;

create table procurement_group
(
	id integer default nextval('procurement_group_id_seq'::regclass) not null
		constraint procurement_group_pkey
			primary key,
	partner_id integer
		constraint procurement_group_partner_id_fkey
			references res_partner
				on delete set null,
	name varchar not null,
	move_type varchar not null,
	create_uid integer
		constraint procurement_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint procurement_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	sale_id integer
);

comment on table procurement_group is 'Procurement Group';

comment on column procurement_group.partner_id is 'Partner';

comment on column procurement_group.name is 'Reference';

comment on column procurement_group.move_type is 'Delivery Type';

comment on column procurement_group.create_uid is 'Created by';

comment on column procurement_group.create_date is 'Created on';

comment on column procurement_group.write_uid is 'Last Updated by';

comment on column procurement_group.write_date is 'Last Updated on';

comment on column procurement_group.sale_id is 'Sale Order';

alter table procurement_group owner to postgres;

create table product_attribute
(
	id integer default nextval('product_attribute_id_seq'::regclass) not null
		constraint product_attribute_pkey
			primary key,
	name varchar not null,
	sequence integer,
	create_variant varchar not null,
	display_type varchar not null,
	create_uid integer
		constraint product_attribute_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_attribute_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_attribute is 'Product Attribute';

comment on column product_attribute.name is 'Attribute';

comment on column product_attribute.sequence is 'Sequence';

comment on column product_attribute.create_variant is 'Variants Creation Mode';

comment on column product_attribute.display_type is 'Display Type';

comment on column product_attribute.create_uid is 'Created by';

comment on column product_attribute.create_date is 'Created on';

comment on column product_attribute.write_uid is 'Last Updated by';

comment on column product_attribute.write_date is 'Last Updated on';

alter table product_attribute owner to postgres;

create index product_attribute_sequence_index
	on product_attribute (sequence);

create table product_attribute_value
(
	id integer default nextval('product_attribute_value_id_seq'::regclass) not null
		constraint product_attribute_value_pkey
			primary key,
	name varchar not null,
	sequence integer,
	attribute_id integer not null
		constraint product_attribute_value_attribute_id_fkey
			references product_attribute
				on delete cascade,
	is_custom boolean,
	html_color varchar,
	create_uid integer
		constraint product_attribute_value_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_attribute_value_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint product_attribute_value_value_company_uniq
		unique (name, attribute_id)
);

comment on table product_attribute_value is 'Attribute Value';

comment on column product_attribute_value.name is 'Value';

comment on column product_attribute_value.sequence is 'Sequence';

comment on column product_attribute_value.attribute_id is 'Attribute';

comment on column product_attribute_value.is_custom is 'Is custom value';

comment on column product_attribute_value.html_color is 'Color';

comment on column product_attribute_value.create_uid is 'Created by';

comment on column product_attribute_value.create_date is 'Created on';

comment on column product_attribute_value.write_uid is 'Last Updated by';

comment on column product_attribute_value.write_date is 'Last Updated on';

alter table product_attribute_value owner to postgres;

create index product_attribute_value_attribute_id_index
	on product_attribute_value (attribute_id);

create index product_attribute_value_sequence_index
	on product_attribute_value (sequence);

create table product_removal
(
	id integer default nextval('product_removal_id_seq'::regclass) not null
		constraint product_removal_pkey
			primary key,
	name varchar not null,
	method varchar not null,
	create_uid integer
		constraint product_removal_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_removal_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_removal is 'Removal Strategy';

comment on column product_removal.name is 'Name';

comment on column product_removal.method is 'Method';

comment on column product_removal.create_uid is 'Created by';

comment on column product_removal.create_date is 'Created on';

comment on column product_removal.write_uid is 'Last Updated by';

comment on column product_removal.write_date is 'Last Updated on';

alter table product_removal owner to postgres;

create table product_category
(
	id integer default nextval('product_category_id_seq'::regclass) not null
		constraint product_category_pkey
			primary key,
	name varchar not null,
	complete_name varchar,
	parent_id integer
		constraint product_category_parent_id_fkey
			references product_category
				on delete cascade,
	parent_path varchar,
	create_uid integer
		constraint product_category_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_category_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	removal_strategy_id integer
		constraint product_category_removal_strategy_id_fkey
			references product_removal
				on delete set null
);

comment on table product_category is 'Product Category';

comment on column product_category.name is 'Name';

comment on column product_category.complete_name is 'Complete Name';

comment on column product_category.parent_id is 'Parent Category';

comment on column product_category.parent_path is 'Parent Path';

comment on column product_category.create_uid is 'Created by';

comment on column product_category.create_date is 'Created on';

comment on column product_category.write_uid is 'Last Updated by';

comment on column product_category.write_date is 'Last Updated on';

comment on column product_category.removal_strategy_id is 'Force Removal Strategy';

alter table product_category owner to postgres;

create index product_category_name_index
	on product_category (name);

create index product_category_parent_id_index
	on product_category (parent_id);

create index product_category_parent_path_index
	on product_category (parent_path);

create table rel_modules_langexport
(
	wiz_id integer not null
		constraint rel_modules_langexport_wiz_id_fkey
			references base_language_export
				on delete cascade,
	module_id integer not null
		constraint rel_modules_langexport_module_id_fkey
			references ir_module_module
				on delete cascade,
	constraint rel_modules_langexport_pkey
		primary key (wiz_id, module_id)
);

comment on table rel_modules_langexport is 'RELATION BETWEEN base_language_export AND ir_module_module';

alter table rel_modules_langexport owner to postgres;

create index rel_modules_langexport_module_id_wiz_id_idx
	on rel_modules_langexport (module_id, wiz_id);

create table report_layout
(
	id integer default nextval('report_layout_id_seq'::regclass) not null
		constraint report_layout_pkey
			primary key,
	view_id integer not null
		constraint report_layout_view_id_fkey
			references ir_ui_view
				on delete restrict,
	image varchar,
	pdf varchar,
	sequence integer,
	name varchar,
	create_uid integer
		constraint report_layout_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint report_layout_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table report_layout is 'Report Layout';

comment on column report_layout.view_id is 'Document Template';

comment on column report_layout.image is 'Preview image src';

comment on column report_layout.pdf is 'Preview pdf src';

comment on column report_layout.sequence is 'Sequence';

comment on column report_layout.name is 'Name';

comment on column report_layout.create_uid is 'Created by';

comment on column report_layout.create_date is 'Created on';

comment on column report_layout.write_uid is 'Last Updated by';

comment on column report_layout.write_date is 'Last Updated on';

alter table report_layout owner to postgres;

create table report_paperformat
(
	id integer default nextval('report_paperformat_id_seq'::regclass) not null
		constraint report_paperformat_pkey
			primary key,
	name varchar not null,
	"default" boolean,
	format varchar,
	margin_top double precision,
	margin_bottom double precision,
	margin_left double precision,
	margin_right double precision,
	page_height integer,
	page_width integer,
	orientation varchar,
	header_line boolean,
	header_spacing integer,
	dpi integer not null,
	create_uid integer
		constraint report_paperformat_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint report_paperformat_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table report_paperformat is 'Paper Format Config';

comment on column report_paperformat.name is 'Name';

comment on column report_paperformat."default" is 'Default paper format ?';

comment on column report_paperformat.format is 'Paper size';

comment on column report_paperformat.margin_top is 'Top Margin (mm)';

comment on column report_paperformat.margin_bottom is 'Bottom Margin (mm)';

comment on column report_paperformat.margin_left is 'Left Margin (mm)';

comment on column report_paperformat.margin_right is 'Right Margin (mm)';

comment on column report_paperformat.page_height is 'Page height (mm)';

comment on column report_paperformat.page_width is 'Page width (mm)';

comment on column report_paperformat.orientation is 'Orientation';

comment on column report_paperformat.header_line is 'Display a header line';

comment on column report_paperformat.header_spacing is 'Header spacing';

comment on column report_paperformat.dpi is 'Output DPI';

comment on column report_paperformat.create_uid is 'Created by';

comment on column report_paperformat.create_date is 'Created on';

comment on column report_paperformat.write_uid is 'Last Updated by';

comment on column report_paperformat.write_date is 'Last Updated on';

alter table report_paperformat owner to postgres;

create table ir_act_report_xml
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_act_report_xml_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_act_report_xml_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_act_report_xml_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_report_xml_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	model varchar not null,
	report_type varchar not null,
	report_name varchar not null,
	report_file varchar,
	multi boolean,
	paperformat_id integer
		constraint ir_act_report_xml_paperformat_id_fkey
			references report_paperformat
				on delete set null,
	print_report_name varchar,
	attachment_use boolean,
	attachment varchar
);

comment on column ir_act_report_xml.model is 'Model Name';

comment on column ir_act_report_xml.report_type is 'Report Type';

comment on column ir_act_report_xml.report_name is 'Template Name';

comment on column ir_act_report_xml.report_file is 'Report File';

comment on column ir_act_report_xml.multi is 'On Multiple Doc.';

comment on column ir_act_report_xml.paperformat_id is 'Paper Format';

comment on column ir_act_report_xml.print_report_name is 'Printed Report Name';

comment on column ir_act_report_xml.attachment_use is 'Reload from Attachment';

comment on column ir_act_report_xml.attachment is 'Save as Attachment Prefix';

alter table ir_act_report_xml owner to postgres;

create table mail_template
(
	id integer default nextval('mail_template_id_seq'::regclass) not null
		constraint mail_template_pkey
			primary key,
	name varchar,
	model_id integer
		constraint mail_template_model_id_fkey
			references ir_model
				on delete set null,
	model varchar,
	subject varchar,
	email_from varchar,
	use_default_to boolean,
	email_to varchar,
	partner_to varchar,
	email_cc varchar,
	reply_to varchar,
	body_html text,
	report_name varchar,
	report_template integer
		constraint mail_template_report_template_fkey
			references ir_act_report_xml
				on delete set null,
	mail_server_id integer
		constraint mail_template_mail_server_id_fkey
			references ir_mail_server
				on delete set null,
	scheduled_date varchar,
	auto_delete boolean,
	ref_ir_act_window integer
		constraint mail_template_ref_ir_act_window_fkey
			references ir_act_window
				on delete set null,
	lang varchar,
	create_uid integer
		constraint mail_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_template is 'Email Templates';

comment on column mail_template.name is 'Name';

comment on column mail_template.model_id is 'Applies to';

comment on column mail_template.model is 'Related Document Model';

comment on column mail_template.subject is 'Subject';

comment on column mail_template.email_from is 'From';

comment on column mail_template.use_default_to is 'Default recipients';

comment on column mail_template.email_to is 'To (Emails)';

comment on column mail_template.partner_to is 'To (Partners)';

comment on column mail_template.email_cc is 'Cc';

comment on column mail_template.reply_to is 'Reply-To';

comment on column mail_template.body_html is 'Body';

comment on column mail_template.report_name is 'Report Filename';

comment on column mail_template.report_template is 'Optional report to print and attach';

comment on column mail_template.mail_server_id is 'Outgoing Mail Server';

comment on column mail_template.scheduled_date is 'Scheduled Date';

comment on column mail_template.auto_delete is 'Auto Delete';

comment on column mail_template.ref_ir_act_window is 'Sidebar action';

comment on column mail_template.lang is 'Language';

comment on column mail_template.create_uid is 'Created by';

comment on column mail_template.create_date is 'Created on';

comment on column mail_template.write_uid is 'Last Updated by';

comment on column mail_template.write_date is 'Last Updated on';

alter table mail_template owner to postgres;

create table email_template_attachment_rel
(
	email_template_id integer not null
		constraint email_template_attachment_rel_email_template_id_fkey
			references mail_template
				on delete cascade,
	attachment_id integer not null
		constraint email_template_attachment_rel_attachment_id_fkey
			references ir_attachment
				on delete cascade,
	constraint email_template_attachment_rel_pkey
		primary key (email_template_id, attachment_id)
);

comment on table email_template_attachment_rel is 'RELATION BETWEEN mail_template AND ir_attachment';

alter table email_template_attachment_rel owner to postgres;

create index email_template_attachment_rel_attachment_id_email_template__idx
	on email_template_attachment_rel (attachment_id, email_template_id);

create table mail_activity_type_mail_template_rel
(
	mail_activity_type_id integer not null
		constraint mail_activity_type_mail_template_rel_mail_activity_type_id_fkey
			references mail_activity_type
				on delete cascade,
	mail_template_id integer not null
		constraint mail_activity_type_mail_template_rel_mail_template_id_fkey
			references mail_template
				on delete cascade,
	constraint mail_activity_type_mail_template_rel_pkey
		primary key (mail_activity_type_id, mail_template_id)
);

comment on table mail_activity_type_mail_template_rel is 'RELATION BETWEEN mail_activity_type AND mail_template';

alter table mail_activity_type_mail_template_rel owner to postgres;

create index mail_activity_type_mail_templ_mail_template_id_mail_activit_idx
	on mail_activity_type_mail_template_rel (mail_template_id, mail_activity_type_id);

create table mail_compose_message
(
	id integer default nextval('mail_compose_message_id_seq'::regclass) not null
		constraint mail_compose_message_pkey
			primary key,
	subject varchar,
	body text,
	parent_id integer
		constraint mail_compose_message_parent_id_fkey
			references mail_message
				on delete set null,
	template_id integer
		constraint mail_compose_message_template_id_fkey
			references mail_template
				on delete set null,
	layout varchar,
	add_sign boolean,
	email_from varchar,
	author_id integer
		constraint mail_compose_message_author_id_fkey
			references res_partner
				on delete set null,
	composition_mode varchar,
	model varchar,
	res_id integer,
	record_name varchar,
	use_active_domain boolean,
	active_domain text,
	message_type varchar not null,
	subtype_id integer
		constraint mail_compose_message_subtype_id_fkey
			references mail_message_subtype
				on delete set null,
	mail_activity_type_id integer
		constraint mail_compose_message_mail_activity_type_id_fkey
			references mail_activity_type
				on delete set null,
	reply_to varchar,
	no_auto_thread boolean,
	is_log boolean,
	notify boolean,
	auto_delete boolean,
	auto_delete_message boolean,
	mail_server_id integer
		constraint mail_compose_message_mail_server_id_fkey
			references ir_mail_server
				on delete set null,
	create_uid integer
		constraint mail_compose_message_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_compose_message_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_compose_message is 'Email composition wizard';

comment on column mail_compose_message.subject is 'Subject';

comment on column mail_compose_message.body is 'Contents';

comment on column mail_compose_message.parent_id is 'Parent Message';

comment on column mail_compose_message.template_id is 'Use template';

comment on column mail_compose_message.layout is 'Layout';

comment on column mail_compose_message.add_sign is 'Add Sign';

comment on column mail_compose_message.email_from is 'From';

comment on column mail_compose_message.author_id is 'Author';

comment on column mail_compose_message.composition_mode is 'Composition mode';

comment on column mail_compose_message.model is 'Related Document Model';

comment on column mail_compose_message.res_id is 'Related Document ID';

comment on column mail_compose_message.record_name is 'Message Record Name';

comment on column mail_compose_message.use_active_domain is 'Use active domain';

comment on column mail_compose_message.active_domain is 'Active domain';

comment on column mail_compose_message.message_type is 'Type';

comment on column mail_compose_message.subtype_id is 'Subtype';

comment on column mail_compose_message.mail_activity_type_id is 'Mail Activity Type';

comment on column mail_compose_message.reply_to is 'Reply-To';

comment on column mail_compose_message.no_auto_thread is 'No threading for answers';

comment on column mail_compose_message.is_log is 'Log an Internal Note';

comment on column mail_compose_message.notify is 'Notify followers';

comment on column mail_compose_message.auto_delete is 'Delete Emails';

comment on column mail_compose_message.auto_delete_message is 'Delete Message Copy';

comment on column mail_compose_message.mail_server_id is 'Outgoing mail server';

comment on column mail_compose_message.create_uid is 'Created by';

comment on column mail_compose_message.create_date is 'Created on';

comment on column mail_compose_message.write_uid is 'Last Updated by';

comment on column mail_compose_message.write_date is 'Last Updated on';

alter table mail_compose_message owner to postgres;

create table account_invoice_send
(
	id integer default nextval('account_invoice_send_id_seq'::regclass) not null
		constraint account_invoice_send_pkey
			primary key,
	is_email boolean,
	is_print boolean,
	printed boolean,
	composer_id integer not null
		constraint account_invoice_send_composer_id_fkey
			references mail_compose_message
				on delete cascade,
	template_id integer
		constraint account_invoice_send_template_id_fkey
			references mail_template
				on delete set null,
	create_uid integer
		constraint account_invoice_send_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_invoice_send_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	snailmail_is_letter boolean
);

comment on table account_invoice_send is 'Account Invoice Send';

comment on column account_invoice_send.is_email is 'Email';

comment on column account_invoice_send.is_print is 'Print';

comment on column account_invoice_send.printed is 'Is Printed';

comment on column account_invoice_send.composer_id is 'Composer';

comment on column account_invoice_send.template_id is 'Use template';

comment on column account_invoice_send.create_uid is 'Created by';

comment on column account_invoice_send.create_date is 'Created on';

comment on column account_invoice_send.write_uid is 'Last Updated by';

comment on column account_invoice_send.write_date is 'Last Updated on';

comment on column account_invoice_send.snailmail_is_letter is 'Send by Post';

alter table account_invoice_send owner to postgres;

create index account_invoice_send_template_id_index
	on account_invoice_send (template_id);

create table account_move_account_invoice_send_rel
(
	account_invoice_send_id integer not null
		constraint account_move_account_invoice_send__account_invoice_send_id_fkey
			references account_invoice_send
				on delete cascade,
	account_move_id integer not null
		constraint account_move_account_invoice_send_rel_account_move_id_fkey
			references account_move
				on delete cascade,
	constraint account_move_account_invoice_send_rel_pkey
		primary key (account_invoice_send_id, account_move_id)
);

comment on table account_move_account_invoice_send_rel is 'RELATION BETWEEN account_invoice_send AND account_move';

alter table account_move_account_invoice_send_rel owner to postgres;

create index account_move_account_invoice__account_move_id_account_invoi_idx
	on account_move_account_invoice_send_rel (account_move_id, account_invoice_send_id);

create table account_tour_upload_bill
(
	id integer default nextval('account_tour_upload_bill_id_seq'::regclass) not null
		constraint account_tour_upload_bill_pkey
			primary key,
	composer_id integer not null
		constraint account_tour_upload_bill_composer_id_fkey
			references mail_compose_message
				on delete cascade,
	selection varchar,
	create_uid integer
		constraint account_tour_upload_bill_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tour_upload_bill_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tour_upload_bill is 'Account tour upload bill';

comment on column account_tour_upload_bill.composer_id is 'Composer';

comment on column account_tour_upload_bill.selection is 'Selection';

comment on column account_tour_upload_bill.create_uid is 'Created by';

comment on column account_tour_upload_bill.create_date is 'Created on';

comment on column account_tour_upload_bill.write_uid is 'Last Updated by';

comment on column account_tour_upload_bill.write_date is 'Last Updated on';

alter table account_tour_upload_bill owner to postgres;

create index mail_compose_message_author_id_index
	on mail_compose_message (author_id);

create index mail_compose_message_mail_activity_type_id_index
	on mail_compose_message (mail_activity_type_id);

create index mail_compose_message_model_index
	on mail_compose_message (model);

create index mail_compose_message_parent_id_index
	on mail_compose_message (parent_id);

create index mail_compose_message_res_id_index
	on mail_compose_message (res_id);

create index mail_compose_message_subtype_id_index
	on mail_compose_message (subtype_id);

create index mail_compose_message_template_id_index
	on mail_compose_message (template_id);

create table mail_compose_message_ir_attachments_rel
(
	wizard_id integer not null
		constraint mail_compose_message_ir_attachments_rel_wizard_id_fkey
			references mail_compose_message
				on delete cascade,
	attachment_id integer not null
		constraint mail_compose_message_ir_attachments_rel_attachment_id_fkey
			references ir_attachment
				on delete cascade,
	constraint mail_compose_message_ir_attachments_rel_pkey
		primary key (wizard_id, attachment_id)
);

comment on table mail_compose_message_ir_attachments_rel is 'RELATION BETWEEN mail_compose_message AND ir_attachment';

alter table mail_compose_message_ir_attachments_rel owner to postgres;

create index mail_compose_message_ir_attachments_attachment_id_wizard_id_idx
	on mail_compose_message_ir_attachments_rel (attachment_id, wizard_id);

create table mail_compose_message_res_partner_rel
(
	wizard_id integer not null
		constraint mail_compose_message_res_partner_rel_wizard_id_fkey
			references mail_compose_message
				on delete cascade,
	partner_id integer not null
		constraint mail_compose_message_res_partner_rel_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint mail_compose_message_res_partner_rel_pkey
		primary key (wizard_id, partner_id)
);

comment on table mail_compose_message_res_partner_rel is 'RELATION BETWEEN mail_compose_message AND res_partner';

alter table mail_compose_message_res_partner_rel owner to postgres;

create index mail_compose_message_res_partner_rel_partner_id_wizard_id_idx
	on mail_compose_message_res_partner_rel (partner_id, wizard_id);

create index mail_template_model_index
	on mail_template (model);

create table mail_template_preview
(
	id integer default nextval('mail_template_preview_id_seq'::regclass) not null
		constraint mail_template_preview_pkey
			primary key,
	mail_template_id integer not null
		constraint mail_template_preview_mail_template_id_fkey
			references mail_template
				on delete cascade,
	resource_ref varchar,
	lang varchar,
	error_msg varchar,
	create_uid integer
		constraint mail_template_preview_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_template_preview_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_template_preview is 'Email Template Preview';

comment on column mail_template_preview.mail_template_id is 'Related Mail Template';

comment on column mail_template_preview.resource_ref is 'Record';

comment on column mail_template_preview.lang is 'Template Preview Language';

comment on column mail_template_preview.error_msg is 'Error Message';

comment on column mail_template_preview.create_uid is 'Created by';

comment on column mail_template_preview.create_date is 'Created on';

comment on column mail_template_preview.write_uid is 'Last Updated by';

comment on column mail_template_preview.write_date is 'Last Updated on';

alter table mail_template_preview owner to postgres;

create table res_bank
(
	id integer default nextval('res_bank_id_seq'::regclass) not null
		constraint res_bank_pkey
			primary key,
	name varchar not null,
	street varchar,
	street2 varchar,
	zip varchar,
	city varchar,
	state integer
		constraint res_bank_state_fkey
			references res_country_state
				on delete set null,
	country integer
		constraint res_bank_country_fkey
			references res_country
				on delete set null,
	email varchar,
	phone varchar,
	active boolean,
	bic varchar,
	create_uid integer
		constraint res_bank_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_bank_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_bank is 'Bank';

comment on column res_bank.name is 'Name';

comment on column res_bank.street is 'Street';

comment on column res_bank.street2 is 'Street2';

comment on column res_bank.zip is 'Zip';

comment on column res_bank.city is 'City';

comment on column res_bank.state is 'Fed. State';

comment on column res_bank.country is 'Country';

comment on column res_bank.email is 'Email';

comment on column res_bank.phone is 'Phone';

comment on column res_bank.active is 'Active';

comment on column res_bank.bic is 'Bank Identifier Code';

comment on column res_bank.create_uid is 'Created by';

comment on column res_bank.create_date is 'Created on';

comment on column res_bank.write_uid is 'Last Updated by';

comment on column res_bank.write_date is 'Last Updated on';

alter table res_bank owner to postgres;

create index res_bank_bic_index
	on res_bank (bic);

create table res_company_users_rel
(
	cid integer not null,
	user_id integer not null
		constraint res_company_users_rel_user_id_fkey
			references res_users
				on delete cascade,
	constraint res_company_users_rel_pkey
		primary key (cid, user_id)
);

comment on table res_company_users_rel is 'RELATION BETWEEN res_company AND res_users';

alter table res_company_users_rel owner to postgres;

create index res_company_users_rel_user_id_cid_idx
	on res_company_users_rel (user_id, cid);

create table res_config
(
	id integer default nextval('res_config_id_seq'::regclass) not null
		constraint res_config_pkey
			primary key,
	create_uid integer
		constraint res_config_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_config_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_config is 'Config';

comment on column res_config.create_uid is 'Created by';

comment on column res_config.create_date is 'Created on';

comment on column res_config.write_uid is 'Last Updated by';

comment on column res_config.write_date is 'Last Updated on';

alter table res_config owner to postgres;

create table res_config_installer
(
	id integer default nextval('res_config_installer_id_seq'::regclass) not null
		constraint res_config_installer_pkey
			primary key,
	create_uid integer
		constraint res_config_installer_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_config_installer_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_config_installer is 'Config Installer';

comment on column res_config_installer.create_uid is 'Created by';

comment on column res_config_installer.create_date is 'Created on';

comment on column res_config_installer.write_uid is 'Last Updated by';

comment on column res_config_installer.write_date is 'Last Updated on';

alter table res_config_installer owner to postgres;

alter table res_country
	add constraint res_country_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table res_country
	add constraint res_country_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table res_country_group
(
	id integer default nextval('res_country_group_id_seq'::regclass) not null
		constraint res_country_group_pkey
			primary key,
	name varchar not null,
	create_uid integer
		constraint res_country_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_country_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_country_group is 'Country Group';

comment on column res_country_group.name is 'Name';

comment on column res_country_group.create_uid is 'Created by';

comment on column res_country_group.create_date is 'Created on';

comment on column res_country_group.write_uid is 'Last Updated by';

comment on column res_country_group.write_date is 'Last Updated on';

alter table res_country_group owner to postgres;

alter table account_fiscal_position
	add constraint account_fiscal_position_country_group_id_fkey
		foreign key (country_group_id) references res_country_group
			on delete set null;

create table res_country_res_country_group_rel
(
	res_country_id integer not null
		constraint res_country_res_country_group_rel_res_country_id_fkey
			references res_country
				on delete cascade,
	res_country_group_id integer not null
		constraint res_country_res_country_group_rel_res_country_group_id_fkey
			references res_country_group
				on delete cascade,
	constraint res_country_res_country_group_rel_pkey
		primary key (res_country_id, res_country_group_id)
);

comment on table res_country_res_country_group_rel is 'RELATION BETWEEN res_country AND res_country_group';

alter table res_country_res_country_group_rel owner to postgres;

create index res_country_res_country_group_res_country_group_id_res_coun_idx
	on res_country_res_country_group_rel (res_country_group_id, res_country_id);

alter table res_country_state
	add constraint res_country_state_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table res_country_state
	add constraint res_country_state_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table res_currency
(
	id integer default nextval('res_currency_id_seq'::regclass) not null
		constraint res_currency_pkey
			primary key,
	name varchar not null
		constraint res_currency_unique_name
			unique,
	symbol varchar not null,
	rounding numeric,
	decimal_places integer,
	active boolean,
	position varchar,
	currency_unit_label varchar,
	currency_subunit_label varchar,
	create_uid integer
		constraint res_currency_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_currency_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on column res_currency.rounding is 'Rounding Factor';

comment on column res_currency.decimal_places is 'Decimal Places';

comment on column res_currency.active is 'Active';

comment on column res_currency.position is 'Symbol Position';

comment on column res_currency.currency_unit_label is 'Currency Unit';

comment on column res_currency.currency_subunit_label is 'Currency Subunit';

comment on column res_currency.create_uid is 'Created by';

comment on column res_currency.create_date is 'Created on';

comment on column res_currency.write_uid is 'Last Updated by';

comment on column res_currency.write_date is 'Last Updated on';

alter table res_currency owner to postgres;

alter table account_account
	add constraint account_account_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete set null;

create table account_account_exclude_res_currency_provision
(
	account_account_id integer not null
		constraint account_account_exclude_res_currency_pr_account_account_id_fkey
			references account_account
				on delete cascade,
	res_currency_id integer not null
		constraint account_account_exclude_res_currency_provi_res_currency_id_fkey
			references res_currency
				on delete cascade,
	constraint account_account_exclude_res_currency_provision_pkey
		primary key (account_account_id, res_currency_id)
);

comment on table account_account_exclude_res_currency_provision is 'RELATION BETWEEN account_account AND res_currency';

alter table account_account_exclude_res_currency_provision owner to postgres;

create index account_account_exclude_res_c_res_currency_id_account_accou_idx
	on account_account_exclude_res_currency_provision (res_currency_id, account_account_id);

create table account_account_template
(
	id integer default nextval('account_account_template_id_seq'::regclass) not null
		constraint account_account_template_pkey
			primary key,
	name varchar not null,
	currency_id integer
		constraint account_account_template_currency_id_fkey
			references res_currency
				on delete set null,
	code varchar(64) not null,
	user_type_id integer not null
		constraint account_account_template_user_type_id_fkey
			references account_account_type
				on delete restrict,
	reconcile boolean,
	note text,
	nocreate boolean,
	chart_template_id integer,
	create_uid integer
		constraint account_account_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_account_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_account_template is 'Templates for Accounts';

comment on column account_account_template.name is 'Name';

comment on column account_account_template.currency_id is 'Account Currency';

comment on column account_account_template.code is 'Code';

comment on column account_account_template.user_type_id is 'Type';

comment on column account_account_template.reconcile is 'Allow Invoices & payments Matching';

comment on column account_account_template.note is 'Note';

comment on column account_account_template.nocreate is 'Optional Create';

comment on column account_account_template.chart_template_id is 'Chart Template';

comment on column account_account_template.create_uid is 'Created by';

comment on column account_account_template.create_date is 'Created on';

comment on column account_account_template.write_uid is 'Last Updated by';

comment on column account_account_template.write_date is 'Last Updated on';

alter table account_account_template owner to postgres;

create index account_account_template_code_index
	on account_account_template (code);

create index account_account_template_name_index
	on account_account_template (name);

create table account_account_template_account_tag
(
	account_account_template_id integer not null
		constraint account_account_template_accou_account_account_template_id_fkey
			references account_account_template
				on delete cascade,
	account_account_tag_id integer not null
		constraint account_account_template_account_ta_account_account_tag_id_fkey
			references account_account_tag
				on delete cascade,
	constraint account_account_template_account_tag_pkey
		primary key (account_account_template_id, account_account_tag_id)
);

comment on table account_account_template_account_tag is 'RELATION BETWEEN account_account_template AND account_account_tag';

alter table account_account_template_account_tag owner to postgres;

create index account_account_template_acco_account_account_tag_id_accoun_idx
	on account_account_template_account_tag (account_account_tag_id, account_account_template_id);

alter table account_asset
	add constraint account_asset_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete restrict;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete set null;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_foreign_currency_id_fkey
		foreign key (foreign_currency_id) references res_currency
			on delete set null;

create table account_chart_template
(
	id integer default nextval('account_chart_template_id_seq'::regclass) not null
		constraint account_chart_template_pkey
			primary key,
	name varchar not null,
	parent_id integer
		constraint account_chart_template_parent_id_fkey
			references account_chart_template
				on delete set null,
	code_digits integer not null,
	visible boolean,
	currency_id integer not null
		constraint account_chart_template_currency_id_fkey
			references res_currency
				on delete restrict,
	use_anglo_saxon boolean,
	complete_tax_set boolean,
	bank_account_code_prefix varchar not null,
	cash_account_code_prefix varchar not null,
	transfer_account_code_prefix varchar not null,
	income_currency_exchange_account_id integer
		constraint account_chart_template_income_currency_exchange_account_id_fkey
			references account_account_template
				on delete set null,
	expense_currency_exchange_account_id integer
		constraint account_chart_template_expense_currency_exchange_account_i_fkey
			references account_account_template
				on delete set null,
	account_journal_suspense_account_id integer
		constraint account_chart_template_account_journal_suspense_account_id_fkey
			references account_account_template
				on delete set null,
	default_cash_difference_income_account_id integer
		constraint account_chart_template_default_cash_difference_income_acco_fkey
			references account_account_template
				on delete set null,
	default_cash_difference_expense_account_id integer
		constraint account_chart_template_default_cash_difference_expense_acc_fkey
			references account_account_template
				on delete set null,
	default_pos_receivable_account_id integer
		constraint account_chart_template_default_pos_receivable_account_id_fkey
			references account_account_template
				on delete set null,
	property_account_receivable_id integer
		constraint account_chart_template_property_account_receivable_id_fkey
			references account_account_template
				on delete set null,
	property_account_payable_id integer
		constraint account_chart_template_property_account_payable_id_fkey
			references account_account_template
				on delete set null,
	property_account_expense_categ_id integer
		constraint account_chart_template_property_account_expense_categ_id_fkey
			references account_account_template
				on delete set null,
	property_account_income_categ_id integer
		constraint account_chart_template_property_account_income_categ_id_fkey
			references account_account_template
				on delete set null,
	property_account_expense_id integer
		constraint account_chart_template_property_account_expense_id_fkey
			references account_account_template
				on delete set null,
	property_account_income_id integer
		constraint account_chart_template_property_account_income_id_fkey
			references account_account_template
				on delete set null,
	property_stock_account_input_categ_id integer
		constraint account_chart_template_property_stock_account_input_categ__fkey
			references account_account_template
				on delete set null,
	property_stock_account_output_categ_id integer
		constraint account_chart_template_property_stock_account_output_categ_fkey
			references account_account_template
				on delete set null,
	property_stock_valuation_account_id integer
		constraint account_chart_template_property_stock_valuation_account_id_fkey
			references account_account_template
				on delete set null,
	property_tax_payable_account_id integer
		constraint account_chart_template_property_tax_payable_account_id_fkey
			references account_account_template
				on delete set null,
	property_tax_receivable_account_id integer
		constraint account_chart_template_property_tax_receivable_account_id_fkey
			references account_account_template
				on delete set null,
	property_advance_tax_payment_account_id integer
		constraint account_chart_template_property_advance_tax_payment_accoun_fkey
			references account_account_template
				on delete set null,
	property_cash_basis_base_account_id integer
		constraint account_chart_template_property_cash_basis_base_account_id_fkey
			references account_account_template
				on delete set null,
	create_uid integer
		constraint account_chart_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_chart_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_chart_template is 'Account Chart Template';

comment on column account_chart_template.name is 'Name';

comment on column account_chart_template.parent_id is 'Parent Chart Template';

comment on column account_chart_template.code_digits is '# of Digits';

comment on column account_chart_template.visible is 'Can be Visible?';

comment on column account_chart_template.currency_id is 'Currency';

comment on column account_chart_template.use_anglo_saxon is 'Use Anglo-Saxon accounting';

comment on column account_chart_template.complete_tax_set is 'Complete Set of Taxes';

comment on column account_chart_template.bank_account_code_prefix is 'Prefix of the bank accounts';

comment on column account_chart_template.cash_account_code_prefix is 'Prefix of the main cash accounts';

comment on column account_chart_template.transfer_account_code_prefix is 'Prefix of the main transfer accounts';

comment on column account_chart_template.income_currency_exchange_account_id is 'Gain Exchange Rate Account';

comment on column account_chart_template.expense_currency_exchange_account_id is 'Loss Exchange Rate Account';

comment on column account_chart_template.account_journal_suspense_account_id is 'Journal Suspense Account';

comment on column account_chart_template.default_cash_difference_income_account_id is 'Cash Difference Income Account';

comment on column account_chart_template.default_cash_difference_expense_account_id is 'Cash Difference Expense Account';

comment on column account_chart_template.default_pos_receivable_account_id is 'PoS receivable account';

comment on column account_chart_template.property_account_receivable_id is 'Receivable Account';

comment on column account_chart_template.property_account_payable_id is 'Payable Account';

comment on column account_chart_template.property_account_expense_categ_id is 'Category of Expense Account';

comment on column account_chart_template.property_account_income_categ_id is 'Category of Income Account';

comment on column account_chart_template.property_account_expense_id is 'Expense Account on Product Template';

comment on column account_chart_template.property_account_income_id is 'Income Account on Product Template';

comment on column account_chart_template.property_stock_account_input_categ_id is 'Input Account for Stock Valuation';

comment on column account_chart_template.property_stock_account_output_categ_id is 'Output Account for Stock Valuation';

comment on column account_chart_template.property_stock_valuation_account_id is 'Account Template for Stock Valuation';

comment on column account_chart_template.property_tax_payable_account_id is 'Tax current account (payable)';

comment on column account_chart_template.property_tax_receivable_account_id is 'Tax current account (receivable)';

comment on column account_chart_template.property_advance_tax_payment_account_id is 'Advance tax payment account';

comment on column account_chart_template.property_cash_basis_base_account_id is 'Base Tax Received Account';

comment on column account_chart_template.create_uid is 'Created by';

comment on column account_chart_template.create_date is 'Created on';

comment on column account_chart_template.write_uid is 'Last Updated by';

comment on column account_chart_template.write_date is 'Last Updated on';

alter table account_chart_template owner to postgres;

alter table account_account_template
	add constraint account_account_template_chart_template_id_fkey
		foreign key (chart_template_id) references account_chart_template
			on delete set null;

create table account_fiscal_position_template
(
	id integer default nextval('account_fiscal_position_template_id_seq'::regclass) not null
		constraint account_fiscal_position_template_pkey
			primary key,
	sequence integer,
	name varchar not null,
	chart_template_id integer not null
		constraint account_fiscal_position_template_chart_template_id_fkey
			references account_chart_template
				on delete restrict,
	note text,
	auto_apply boolean,
	vat_required boolean,
	country_id integer
		constraint account_fiscal_position_template_country_id_fkey
			references res_country
				on delete set null,
	country_group_id integer
		constraint account_fiscal_position_template_country_group_id_fkey
			references res_country_group
				on delete set null,
	zip_from varchar,
	zip_to varchar,
	create_uid integer
		constraint account_fiscal_position_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_position_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_fiscal_position_template is 'Template for Fiscal Position';

comment on column account_fiscal_position_template.sequence is 'Sequence';

comment on column account_fiscal_position_template.name is 'Fiscal Position Template';

comment on column account_fiscal_position_template.chart_template_id is 'Chart Template';

comment on column account_fiscal_position_template.note is 'Notes';

comment on column account_fiscal_position_template.auto_apply is 'Detect Automatically';

comment on column account_fiscal_position_template.vat_required is 'VAT required';

comment on column account_fiscal_position_template.country_id is 'Country';

comment on column account_fiscal_position_template.country_group_id is 'Country Group';

comment on column account_fiscal_position_template.zip_from is 'Zip Range From';

comment on column account_fiscal_position_template.zip_to is 'Zip Range To';

comment on column account_fiscal_position_template.create_uid is 'Created by';

comment on column account_fiscal_position_template.create_date is 'Created on';

comment on column account_fiscal_position_template.write_uid is 'Last Updated by';

comment on column account_fiscal_position_template.write_date is 'Last Updated on';

alter table account_fiscal_position_template owner to postgres;

create table account_fiscal_position_account_template
(
	id integer default nextval('account_fiscal_position_account_template_id_seq'::regclass) not null
		constraint account_fiscal_position_account_template_pkey
			primary key,
	position_id integer not null
		constraint account_fiscal_position_account_template_position_id_fkey
			references account_fiscal_position_template
				on delete cascade,
	account_src_id integer not null
		constraint account_fiscal_position_account_template_account_src_id_fkey
			references account_account_template
				on delete restrict,
	account_dest_id integer not null
		constraint account_fiscal_position_account_template_account_dest_id_fkey
			references account_account_template
				on delete restrict,
	create_uid integer
		constraint account_fiscal_position_account_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_position_account_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_fiscal_position_account_template is 'Accounts Mapping Template of Fiscal Position';

comment on column account_fiscal_position_account_template.position_id is 'Fiscal Mapping';

comment on column account_fiscal_position_account_template.account_src_id is 'Account Source';

comment on column account_fiscal_position_account_template.account_dest_id is 'Account Destination';

comment on column account_fiscal_position_account_template.create_uid is 'Created by';

comment on column account_fiscal_position_account_template.create_date is 'Created on';

comment on column account_fiscal_position_account_template.write_uid is 'Last Updated by';

comment on column account_fiscal_position_account_template.write_date is 'Last Updated on';

alter table account_fiscal_position_account_template owner to postgres;

create table account_fiscal_position_template_res_country_state_rel
(
	account_fiscal_position_template_id integer not null
		constraint account_fiscal_position_templ_account_fiscal_position_temp_fkey
			references account_fiscal_position_template
				on delete cascade,
	res_country_state_id integer not null
		constraint account_fiscal_position_template_res__res_country_state_id_fkey
			references res_country_state
				on delete cascade,
	constraint account_fiscal_position_template_res_country_state_rel_pkey
		primary key (account_fiscal_position_template_id, res_country_state_id)
);

comment on table account_fiscal_position_template_res_country_state_rel is 'RELATION BETWEEN account_fiscal_position_template AND res_country_state';

alter table account_fiscal_position_template_res_country_state_rel owner to postgres;

create index account_fiscal_position_templ_res_country_state_id_account__idx
	on account_fiscal_position_template_res_country_state_rel (res_country_state_id, account_fiscal_position_template_id);

create table account_group_template
(
	id integer default nextval('account_group_template_id_seq'::regclass) not null
		constraint account_group_template_pkey
			primary key,
	parent_id integer
		constraint account_group_template_parent_id_fkey
			references account_group_template
				on delete cascade,
	name varchar not null,
	code_prefix_start varchar,
	code_prefix_end varchar,
	chart_template_id integer not null
		constraint account_group_template_chart_template_id_fkey
			references account_chart_template
				on delete restrict,
	create_uid integer
		constraint account_group_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_group_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_group_template is 'Template for Account Groups';

comment on column account_group_template.parent_id is 'Parent';

comment on column account_group_template.name is 'Name';

comment on column account_group_template.code_prefix_start is 'Code Prefix Start';

comment on column account_group_template.code_prefix_end is 'Code Prefix End';

comment on column account_group_template.chart_template_id is 'Chart Template';

comment on column account_group_template.create_uid is 'Created by';

comment on column account_group_template.create_date is 'Created on';

comment on column account_group_template.write_uid is 'Last Updated by';

comment on column account_group_template.write_date is 'Last Updated on';

alter table account_group_template owner to postgres;

create index account_group_template_parent_id_index
	on account_group_template (parent_id);

alter table account_journal
	add constraint account_journal_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete set null;

create table account_link_journal_line
(
	id integer default nextval('account_link_journal_line_id_seq'::regclass) not null
		constraint account_link_journal_line_pkey
			primary key,
	action varchar,
	journal_id integer
		constraint account_link_journal_line_journal_id_fkey
			references account_journal
				on delete set null,
	currency_id integer
		constraint account_link_journal_line_currency_id_fkey
			references res_currency
				on delete set null,
	online_account_id integer
		constraint account_link_journal_line_online_account_id_fkey
			references account_online_account
				on delete set null,
	account_online_wizard_id integer
		constraint account_link_journal_line_account_online_wizard_id_fkey
			references account_link_journal
				on delete set null,
	journal_statements_creation varchar not null,
	create_uid integer
		constraint account_link_journal_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_link_journal_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_link_journal_line is 'Link one bank account to a journal';

comment on column account_link_journal_line.action is 'Action';

comment on column account_link_journal_line.journal_id is 'Journal';

comment on column account_link_journal_line.currency_id is 'Currency';

comment on column account_link_journal_line.online_account_id is 'Online Account';

comment on column account_link_journal_line.account_online_wizard_id is 'Account Online Wizard';

comment on column account_link_journal_line.journal_statements_creation is 'Synchronization frequency';

comment on column account_link_journal_line.create_uid is 'Created by';

comment on column account_link_journal_line.create_date is 'Created on';

comment on column account_link_journal_line.write_uid is 'Last Updated by';

comment on column account_link_journal_line.write_date is 'Last Updated on';

alter table account_link_journal_line owner to postgres;

alter table account_move
	add constraint account_move_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete restrict;

create table account_reconcile_model_template
(
	id integer default nextval('account_reconcile_model_template_id_seq'::regclass) not null
		constraint account_reconcile_model_template_pkey
			primary key,
	chart_template_id integer not null
		constraint account_reconcile_model_template_chart_template_id_fkey
			references account_chart_template
				on delete restrict,
	name varchar not null,
	sequence integer not null,
	rule_type varchar not null,
	auto_reconcile boolean,
	to_check boolean,
	matching_order varchar,
	match_text_location_label boolean,
	match_text_location_note boolean,
	match_text_location_reference boolean,
	match_nature varchar not null,
	match_amount varchar,
	match_amount_min double precision,
	match_amount_max double precision,
	match_label varchar,
	match_label_param varchar,
	match_note varchar,
	match_note_param varchar,
	match_transaction_type varchar,
	match_transaction_type_param varchar,
	match_same_currency boolean,
	match_total_amount boolean,
	match_total_amount_param double precision,
	match_partner boolean,
	decimal_separator varchar,
	create_uid integer
		constraint account_reconcile_model_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reconcile_model_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reconcile_model_template is 'Reconcile Model Template';

comment on column account_reconcile_model_template.chart_template_id is 'Chart Template';

comment on column account_reconcile_model_template.name is 'Button Label';

comment on column account_reconcile_model_template.sequence is 'Sequence';

comment on column account_reconcile_model_template.rule_type is 'Type';

comment on column account_reconcile_model_template.auto_reconcile is 'Auto-validate';

comment on column account_reconcile_model_template.to_check is 'To Check';

comment on column account_reconcile_model_template.matching_order is 'Matching Order';

comment on column account_reconcile_model_template.match_text_location_label is 'Match Text Location Label';

comment on column account_reconcile_model_template.match_text_location_note is 'Match Text Location Note';

comment on column account_reconcile_model_template.match_text_location_reference is 'Match Text Location Reference';

comment on column account_reconcile_model_template.match_nature is 'Amount Nature';

comment on column account_reconcile_model_template.match_amount is 'Amount';

comment on column account_reconcile_model_template.match_amount_min is 'Amount Min Parameter';

comment on column account_reconcile_model_template.match_amount_max is 'Amount Max Parameter';

comment on column account_reconcile_model_template.match_label is 'Label';

comment on column account_reconcile_model_template.match_label_param is 'Label Parameter';

comment on column account_reconcile_model_template.match_note is 'Note';

comment on column account_reconcile_model_template.match_note_param is 'Note Parameter';

comment on column account_reconcile_model_template.match_transaction_type is 'Transaction Type';

comment on column account_reconcile_model_template.match_transaction_type_param is 'Transaction Type Parameter';

comment on column account_reconcile_model_template.match_same_currency is 'Same Currency Matching';

comment on column account_reconcile_model_template.match_total_amount is 'Amount Matching';

comment on column account_reconcile_model_template.match_total_amount_param is 'Amount Matching %';

comment on column account_reconcile_model_template.match_partner is 'Partner Is Set';

comment on column account_reconcile_model_template.decimal_separator is 'Decimal Separator';

comment on column account_reconcile_model_template.create_uid is 'Created by';

comment on column account_reconcile_model_template.create_date is 'Created on';

comment on column account_reconcile_model_template.write_uid is 'Last Updated by';

comment on column account_reconcile_model_template.write_date is 'Last Updated on';

alter table account_reconcile_model_template owner to postgres;

create table account_journal_account_reconcile_model_template_rel
(
	account_reconcile_model_template_id integer not null
		constraint account_journal_account_recon_account_reconcile_model_temp_fkey
			references account_reconcile_model_template
				on delete cascade,
	account_journal_id integer not null
		constraint account_journal_account_reconcile_mode_account_journal_id_fkey1
			references account_journal
				on delete cascade,
	constraint account_journal_account_reconcile_model_template_rel_pkey
		primary key (account_reconcile_model_template_id, account_journal_id)
);

comment on table account_journal_account_reconcile_model_template_rel is 'RELATION BETWEEN account_reconcile_model_template AND account_journal';

alter table account_journal_account_reconcile_model_template_rel owner to postgres;

create index account_journal_account_recon_account_journal_id_account_r_idx1
	on account_journal_account_reconcile_model_template_rel (account_journal_id, account_reconcile_model_template_id);

create table account_reconcile_model_line_template
(
	id integer default nextval('account_reconcile_model_line_template_id_seq'::regclass) not null
		constraint account_reconcile_model_line_template_pkey
			primary key,
	model_id integer
		constraint account_reconcile_model_line_template_model_id_fkey
			references account_reconcile_model_template
				on delete set null,
	sequence integer not null,
	account_id integer
		constraint account_reconcile_model_line_template_account_id_fkey
			references account_account_template
				on delete cascade,
	label varchar,
	amount_type varchar not null,
	amount_string varchar,
	force_tax_included boolean,
	create_uid integer
		constraint account_reconcile_model_line_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reconcile_model_line_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reconcile_model_line_template is 'Reconcile Model Line Template';

comment on column account_reconcile_model_line_template.model_id is 'Model';

comment on column account_reconcile_model_line_template.sequence is 'Sequence';

comment on column account_reconcile_model_line_template.account_id is 'Account';

comment on column account_reconcile_model_line_template.label is 'Journal Item Label';

comment on column account_reconcile_model_line_template.amount_type is 'Amount Type';

comment on column account_reconcile_model_line_template.amount_string is 'Amount';

comment on column account_reconcile_model_line_template.force_tax_included is 'Tax Included in Price';

comment on column account_reconcile_model_line_template.create_uid is 'Created by';

comment on column account_reconcile_model_line_template.create_date is 'Created on';

comment on column account_reconcile_model_line_template.write_uid is 'Last Updated by';

comment on column account_reconcile_model_line_template.write_date is 'Last Updated on';

alter table account_reconcile_model_line_template owner to postgres;

create table account_reconcile_model_template_res_partner_rel
(
	account_reconcile_model_template_id integer not null
		constraint account_reconcile_model_templ_account_reconcile_model_temp_fkey
			references account_reconcile_model_template
				on delete cascade,
	res_partner_id integer not null
		constraint account_reconcile_model_template_res_partne_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint account_reconcile_model_template_res_partner_rel_pkey
		primary key (account_reconcile_model_template_id, res_partner_id)
);

comment on table account_reconcile_model_template_res_partner_rel is 'RELATION BETWEEN account_reconcile_model_template AND res_partner';

alter table account_reconcile_model_template_res_partner_rel owner to postgres;

create index account_reconcile_model_templ_res_partner_id_account_reconc_idx
	on account_reconcile_model_template_res_partner_rel (res_partner_id, account_reconcile_model_template_id);

create table account_tax_template
(
	id integer default nextval('account_tax_template_id_seq'::regclass) not null
		constraint account_tax_template_pkey
			primary key,
	chart_template_id integer not null
		constraint account_tax_template_chart_template_id_fkey
			references account_chart_template
				on delete restrict,
	name varchar not null,
	type_tax_use varchar not null,
	tax_scope varchar,
	amount_type varchar not null,
	active boolean,
	sequence integer not null,
	amount numeric not null,
	description varchar,
	price_include boolean,
	include_base_amount boolean,
	analytic boolean,
	tax_group_id integer
		constraint account_tax_template_tax_group_id_fkey
			references account_tax_group
				on delete set null,
	tax_exigibility varchar,
	cash_basis_transition_account_id integer
		constraint account_tax_template_cash_basis_transition_account_id_fkey
			references account_account_template
				on delete set null,
	create_uid integer
		constraint account_tax_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_tax_template_name_company_uniq
		unique (name, type_tax_use, tax_scope, chart_template_id)
);

comment on table account_tax_template is 'Templates for Taxes';

comment on column account_tax_template.chart_template_id is 'Chart Template';

comment on column account_tax_template.name is 'Tax Name';

comment on column account_tax_template.type_tax_use is 'Tax Type';

comment on column account_tax_template.tax_scope is 'Tax Scope';

comment on column account_tax_template.amount_type is 'Tax Computation';

comment on column account_tax_template.active is 'Active';

comment on column account_tax_template.sequence is 'Sequence';

comment on column account_tax_template.amount is 'Amount';

comment on column account_tax_template.description is 'Display on Invoices';

comment on column account_tax_template.price_include is 'Included in Price';

comment on column account_tax_template.include_base_amount is 'Affect Subsequent Taxes';

comment on column account_tax_template.analytic is 'Analytic Cost';

comment on column account_tax_template.tax_group_id is 'Tax Group';

comment on column account_tax_template.tax_exigibility is 'Tax Due';

comment on column account_tax_template.cash_basis_transition_account_id is 'Cash Basis Transition Account';

comment on column account_tax_template.create_uid is 'Created by';

comment on column account_tax_template.create_date is 'Created on';

comment on column account_tax_template.write_uid is 'Last Updated by';

comment on column account_tax_template.write_date is 'Last Updated on';

alter table account_tax_template owner to postgres;

create table account_account_template_tax_rel
(
	account_id integer not null
		constraint account_account_template_tax_rel_account_id_fkey
			references account_account_template
				on delete cascade,
	tax_id integer not null
		constraint account_account_template_tax_rel_tax_id_fkey
			references account_tax_template
				on delete cascade,
	constraint account_account_template_tax_rel_pkey
		primary key (account_id, tax_id)
);

comment on table account_account_template_tax_rel is 'RELATION BETWEEN account_account_template AND account_tax_template';

alter table account_account_template_tax_rel owner to postgres;

create index account_account_template_tax_rel_tax_id_account_id_idx
	on account_account_template_tax_rel (tax_id, account_id);

create table account_fiscal_position_tax_template
(
	id integer default nextval('account_fiscal_position_tax_template_id_seq'::regclass) not null
		constraint account_fiscal_position_tax_template_pkey
			primary key,
	position_id integer not null
		constraint account_fiscal_position_tax_template_position_id_fkey
			references account_fiscal_position_template
				on delete cascade,
	tax_src_id integer not null
		constraint account_fiscal_position_tax_template_tax_src_id_fkey
			references account_tax_template
				on delete restrict,
	tax_dest_id integer
		constraint account_fiscal_position_tax_template_tax_dest_id_fkey
			references account_tax_template
				on delete set null,
	create_uid integer
		constraint account_fiscal_position_tax_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_position_tax_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_fiscal_position_tax_template is 'Tax Mapping Template of Fiscal Position';

comment on column account_fiscal_position_tax_template.position_id is 'Fiscal Position';

comment on column account_fiscal_position_tax_template.tax_src_id is 'Tax Source';

comment on column account_fiscal_position_tax_template.tax_dest_id is 'Replacement Tax';

comment on column account_fiscal_position_tax_template.create_uid is 'Created by';

comment on column account_fiscal_position_tax_template.create_date is 'Created on';

comment on column account_fiscal_position_tax_template.write_uid is 'Last Updated by';

comment on column account_fiscal_position_tax_template.write_date is 'Last Updated on';

alter table account_fiscal_position_tax_template owner to postgres;

create table account_reconcile_model_line_template_account_tax_template_rel
(
	account_reconcile_model_line_template_id integer not null
		constraint account_reconcile_model_line_account_reconcile_model_line_fkey1
			references account_reconcile_model_line_template
				on delete cascade,
	account_tax_template_id integer not null
		constraint account_reconcile_model_line_templ_account_tax_template_id_fkey
			references account_tax_template
				on delete restrict,
	constraint account_reconcile_model_line_template_account_tax_template_pkey
		primary key (account_reconcile_model_line_template_id, account_tax_template_id)
);

comment on table account_reconcile_model_line_template_account_tax_template_rel is 'RELATION BETWEEN account_reconcile_model_line_template AND account_tax_template';

alter table account_reconcile_model_line_template_account_tax_template_rel owner to postgres;

create index account_reconcile_model_line__account_tax_template_id_accou_idx
	on account_reconcile_model_line_template_account_tax_template_rel (account_tax_template_id, account_reconcile_model_line_template_id);

create table account_tax_repartition_line_template
(
	id integer default nextval('account_tax_repartition_line_template_id_seq'::regclass) not null
		constraint account_tax_repartition_line_template_pkey
			primary key,
	factor_percent double precision not null,
	repartition_type varchar not null,
	account_id integer
		constraint account_tax_repartition_line_template_account_id_fkey
			references account_account_template
				on delete set null,
	invoice_tax_id integer
		constraint account_tax_repartition_line_template_invoice_tax_id_fkey
			references account_tax_template
				on delete set null,
	refund_tax_id integer
		constraint account_tax_repartition_line_template_refund_tax_id_fkey
			references account_tax_template
				on delete set null,
	use_in_tax_closing boolean,
	create_uid integer
		constraint account_tax_repartition_line_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_repartition_line_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tax_repartition_line_template is 'Tax Repartition Line Template';

comment on column account_tax_repartition_line_template.factor_percent is '%';

comment on column account_tax_repartition_line_template.repartition_type is 'Based On';

comment on column account_tax_repartition_line_template.account_id is 'Account';

comment on column account_tax_repartition_line_template.invoice_tax_id is 'Invoice Tax';

comment on column account_tax_repartition_line_template.refund_tax_id is 'Refund Tax';

comment on column account_tax_repartition_line_template.use_in_tax_closing is 'Tax Closing Entry';

comment on column account_tax_repartition_line_template.create_uid is 'Created by';

comment on column account_tax_repartition_line_template.create_date is 'Created on';

comment on column account_tax_repartition_line_template.write_uid is 'Last Updated by';

comment on column account_tax_repartition_line_template.write_date is 'Last Updated on';

alter table account_tax_repartition_line_template owner to postgres;

create table account_tax_repartition_financial_tags
(
	account_tax_repartition_line_template_id integer not null
		constraint account_tax_repartition_finan_account_tax_repartition_line_fkey
			references account_tax_repartition_line_template
				on delete cascade,
	account_account_tag_id integer not null
		constraint account_tax_repartition_financial_t_account_account_tag_id_fkey
			references account_account_tag
				on delete cascade,
	constraint account_tax_repartition_financial_tags_pkey
		primary key (account_tax_repartition_line_template_id, account_account_tag_id)
);

comment on table account_tax_repartition_financial_tags is 'RELATION BETWEEN account_tax_repartition_line_template AND account_account_tag';

alter table account_tax_repartition_financial_tags owner to postgres;

create index account_tax_repartition_finan_account_account_tag_id_accoun_idx
	on account_tax_repartition_financial_tags (account_account_tag_id, account_tax_repartition_line_template_id);

create table account_tax_repartition_minus_report_line
(
	account_tax_repartition_line_template_id integer not null
		constraint account_tax_repartition_minus_account_tax_repartition_line_fkey
			references account_tax_repartition_line_template
				on delete cascade,
	account_tax_report_line_id integer not null
		constraint account_tax_repartition_minus_r_account_tax_report_line_id_fkey
			references account_tax_report_line
				on delete cascade,
	constraint account_tax_repartition_minus_report_line_pkey
		primary key (account_tax_repartition_line_template_id, account_tax_report_line_id)
);

comment on table account_tax_repartition_minus_report_line is 'RELATION BETWEEN account_tax_repartition_line_template AND account_tax_report_line';

alter table account_tax_repartition_minus_report_line owner to postgres;

create index account_tax_repartition_minus_account_tax_report_line_id_ac_idx
	on account_tax_repartition_minus_report_line (account_tax_report_line_id, account_tax_repartition_line_template_id);

create table account_tax_repartition_plus_report_line
(
	account_tax_repartition_line_template_id integer not null
		constraint account_tax_repartition_plus__account_tax_repartition_line_fkey
			references account_tax_repartition_line_template
				on delete cascade,
	account_tax_report_line_id integer not null
		constraint account_tax_repartition_plus_re_account_tax_report_line_id_fkey
			references account_tax_report_line
				on delete cascade,
	constraint account_tax_repartition_plus_report_line_pkey
		primary key (account_tax_repartition_line_template_id, account_tax_report_line_id)
);

comment on table account_tax_repartition_plus_report_line is 'RELATION BETWEEN account_tax_repartition_line_template AND account_tax_report_line';

alter table account_tax_repartition_plus_report_line owner to postgres;

create index account_tax_repartition_plus__account_tax_report_line_id_ac_idx
	on account_tax_repartition_plus_report_line (account_tax_report_line_id, account_tax_repartition_line_template_id);

create table account_tax_template_filiation_rel
(
	parent_tax integer not null
		constraint account_tax_template_filiation_rel_parent_tax_fkey
			references account_tax_template
				on delete cascade,
	child_tax integer not null
		constraint account_tax_template_filiation_rel_child_tax_fkey
			references account_tax_template
				on delete cascade,
	constraint account_tax_template_filiation_rel_pkey
		primary key (parent_tax, child_tax)
);

comment on table account_tax_template_filiation_rel is 'RELATION BETWEEN account_tax_template AND account_tax_template';

alter table account_tax_template_filiation_rel owner to postgres;

create index account_tax_template_filiation_rel_child_tax_parent_tax_idx
	on account_tax_template_filiation_rel (child_tax, parent_tax);

create table base_import_tests_models_complex
(
	id integer default nextval('base_import_tests_models_complex_id_seq'::regclass) not null
		constraint base_import_tests_models_complex_pkey
			primary key,
	f double precision,
	m numeric,
	c varchar,
	currency_id integer
		constraint base_import_tests_models_complex_currency_id_fkey
			references res_currency
				on delete set null,
	d date,
	dt timestamp,
	create_uid integer
		constraint base_import_tests_models_complex_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_complex_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_complex is 'Tests: Base Import Model Complex';

comment on column base_import_tests_models_complex.f is 'F';

comment on column base_import_tests_models_complex.m is 'M';

comment on column base_import_tests_models_complex.c is 'C';

comment on column base_import_tests_models_complex.currency_id is 'Currency';

comment on column base_import_tests_models_complex.d is 'D';

comment on column base_import_tests_models_complex.dt is 'Dt';

comment on column base_import_tests_models_complex.create_uid is 'Created by';

comment on column base_import_tests_models_complex.create_date is 'Created on';

comment on column base_import_tests_models_complex.write_uid is 'Last Updated by';

comment on column base_import_tests_models_complex.write_date is 'Last Updated on';

alter table base_import_tests_models_complex owner to postgres;

create table base_import_tests_models_float
(
	id integer default nextval('base_import_tests_models_float_id_seq'::regclass) not null
		constraint base_import_tests_models_float_pkey
			primary key,
	value double precision,
	value2 numeric,
	currency_id integer
		constraint base_import_tests_models_float_currency_id_fkey
			references res_currency
				on delete set null,
	create_uid integer
		constraint base_import_tests_models_float_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_float_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_float is 'Tests: Base Import Model Float';

comment on column base_import_tests_models_float.value is 'Value';

comment on column base_import_tests_models_float.value2 is 'Value2';

comment on column base_import_tests_models_float.currency_id is 'Currency';

comment on column base_import_tests_models_float.create_uid is 'Created by';

comment on column base_import_tests_models_float.create_date is 'Created on';

comment on column base_import_tests_models_float.write_uid is 'Last Updated by';

comment on column base_import_tests_models_float.write_date is 'Last Updated on';

alter table base_import_tests_models_float owner to postgres;

create table payment_link_wizard
(
	id integer default nextval('payment_link_wizard_id_seq'::regclass) not null
		constraint payment_link_wizard_pkey
			primary key,
	res_model varchar not null,
	res_id integer not null,
	amount numeric not null,
	amount_max numeric,
	currency_id integer
		constraint payment_link_wizard_currency_id_fkey
			references res_currency
				on delete set null,
	partner_id integer
		constraint payment_link_wizard_partner_id_fkey
			references res_partner
				on delete set null,
	description varchar,
	create_uid integer
		constraint payment_link_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_link_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table payment_link_wizard is 'Generate Payment Link';

comment on column payment_link_wizard.res_model is 'Related Document Model';

comment on column payment_link_wizard.res_id is 'Related Document ID';

comment on column payment_link_wizard.amount is 'Amount';

comment on column payment_link_wizard.amount_max is 'Amount Max';

comment on column payment_link_wizard.currency_id is 'Currency';

comment on column payment_link_wizard.partner_id is 'Partner';

comment on column payment_link_wizard.description is 'Payment Ref';

comment on column payment_link_wizard.create_uid is 'Created by';

comment on column payment_link_wizard.create_date is 'Created on';

comment on column payment_link_wizard.write_uid is 'Last Updated by';

comment on column payment_link_wizard.write_date is 'Last Updated on';

alter table payment_link_wizard owner to postgres;

alter table res_country
	add constraint res_country_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete set null;

create table res_groups
(
	id integer default nextval('res_groups_id_seq'::regclass) not null
		constraint res_groups_pkey
			primary key,
	name varchar not null,
	comment text,
	category_id integer
		constraint res_groups_category_id_fkey
			references ir_module_category
				on delete set null,
	color integer,
	share boolean,
	create_uid integer
		constraint res_groups_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_groups_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint res_groups_name_uniq
		unique (category_id, name)
);

comment on column res_groups.comment is 'Comment';

comment on column res_groups.category_id is 'Application';

comment on column res_groups.color is 'Color Index';

comment on column res_groups.share is 'Share Group';

comment on column res_groups.create_uid is 'Created by';

comment on column res_groups.create_date is 'Created on';

comment on column res_groups.write_uid is 'Last Updated by';

comment on column res_groups.write_date is 'Last Updated on';

alter table res_groups owner to postgres;

create table digest_tip
(
	id integer default nextval('digest_tip_id_seq'::regclass) not null
		constraint digest_tip_pkey
			primary key,
	sequence integer,
	name varchar,
	tip_description text,
	group_id integer
		constraint digest_tip_group_id_fkey
			references res_groups
				on delete set null,
	create_uid integer
		constraint digest_tip_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint digest_tip_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table digest_tip is 'Digest Tips';

comment on column digest_tip.sequence is 'Sequence';

comment on column digest_tip.name is 'Name';

comment on column digest_tip.tip_description is 'Tip description';

comment on column digest_tip.group_id is 'Authorized Group';

comment on column digest_tip.create_uid is 'Created by';

comment on column digest_tip.create_date is 'Created on';

comment on column digest_tip.write_uid is 'Last Updated by';

comment on column digest_tip.write_date is 'Last Updated on';

alter table digest_tip owner to postgres;

create table digest_tip_res_users_rel
(
	digest_tip_id integer not null
		constraint digest_tip_res_users_rel_digest_tip_id_fkey
			references digest_tip
				on delete cascade,
	res_users_id integer not null
		constraint digest_tip_res_users_rel_res_users_id_fkey
			references res_users
				on delete cascade,
	constraint digest_tip_res_users_rel_pkey
		primary key (digest_tip_id, res_users_id)
);

comment on table digest_tip_res_users_rel is 'RELATION BETWEEN digest_tip AND res_users';

alter table digest_tip_res_users_rel owner to postgres;

create index digest_tip_res_users_rel_res_users_id_digest_tip_id_idx
	on digest_tip_res_users_rel (res_users_id, digest_tip_id);

create table ir_act_window_group_rel
(
	act_id integer not null
		constraint ir_act_window_group_rel_act_id_fkey
			references ir_act_window
				on delete cascade,
	gid integer not null
		constraint ir_act_window_group_rel_gid_fkey
			references res_groups
				on delete cascade,
	constraint ir_act_window_group_rel_pkey
		primary key (act_id, gid)
);

comment on table ir_act_window_group_rel is 'RELATION BETWEEN ir_act_window AND res_groups';

alter table ir_act_window_group_rel owner to postgres;

create index ir_act_window_group_rel_gid_act_id_idx
	on ir_act_window_group_rel (gid, act_id);

create table ir_model_access
(
	id integer default nextval('ir_model_access_id_seq'::regclass) not null
		constraint ir_model_access_pkey
			primary key,
	name varchar not null,
	active boolean,
	model_id integer not null
		constraint ir_model_access_model_id_fkey
			references ir_model
				on delete cascade,
	group_id integer
		constraint ir_model_access_group_id_fkey
			references res_groups
				on delete restrict,
	perm_read boolean,
	perm_write boolean,
	perm_create boolean,
	perm_unlink boolean,
	create_uid integer
		constraint ir_model_access_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_model_access_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_model_access is 'Model Access';

comment on column ir_model_access.name is 'Name';

comment on column ir_model_access.active is 'Active';

comment on column ir_model_access.model_id is 'Model';

comment on column ir_model_access.group_id is 'Group';

comment on column ir_model_access.perm_read is 'Read Access';

comment on column ir_model_access.perm_write is 'Write Access';

comment on column ir_model_access.perm_create is 'Create Access';

comment on column ir_model_access.perm_unlink is 'Delete Access';

comment on column ir_model_access.create_uid is 'Created by';

comment on column ir_model_access.create_date is 'Created on';

comment on column ir_model_access.write_uid is 'Last Updated by';

comment on column ir_model_access.write_date is 'Last Updated on';

alter table ir_model_access owner to postgres;

create index ir_model_access_group_id_index
	on ir_model_access (group_id);

create index ir_model_access_model_id_index
	on ir_model_access (model_id);

create index ir_model_access_name_index
	on ir_model_access (name);

create table ir_model_fields_group_rel
(
	field_id integer not null
		constraint ir_model_fields_group_rel_field_id_fkey
			references ir_model_fields
				on delete cascade,
	group_id integer not null
		constraint ir_model_fields_group_rel_group_id_fkey
			references res_groups
				on delete cascade,
	constraint ir_model_fields_group_rel_pkey
		primary key (field_id, group_id)
);

comment on table ir_model_fields_group_rel is 'RELATION BETWEEN ir_model_fields AND res_groups';

alter table ir_model_fields_group_rel owner to postgres;

create index ir_model_fields_group_rel_group_id_field_id_idx
	on ir_model_fields_group_rel (group_id, field_id);

create table ir_ui_menu_group_rel
(
	menu_id integer not null
		constraint ir_ui_menu_group_rel_menu_id_fkey
			references ir_ui_menu
				on delete cascade,
	gid integer not null
		constraint ir_ui_menu_group_rel_gid_fkey
			references res_groups
				on delete cascade,
	constraint ir_ui_menu_group_rel_pkey
		primary key (menu_id, gid)
);

comment on table ir_ui_menu_group_rel is 'RELATION BETWEEN ir_ui_menu AND res_groups';

alter table ir_ui_menu_group_rel owner to postgres;

create index ir_ui_menu_group_rel_gid_menu_id_idx
	on ir_ui_menu_group_rel (gid, menu_id);

create table ir_ui_view_group_rel
(
	view_id integer not null
		constraint ir_ui_view_group_rel_view_id_fkey
			references ir_ui_view
				on delete cascade,
	group_id integer not null
		constraint ir_ui_view_group_rel_group_id_fkey
			references res_groups
				on delete cascade,
	constraint ir_ui_view_group_rel_pkey
		primary key (view_id, group_id)
);

comment on table ir_ui_view_group_rel is 'RELATION BETWEEN ir_ui_view AND res_groups';

alter table ir_ui_view_group_rel owner to postgres;

create index ir_ui_view_group_rel_group_id_view_id_idx
	on ir_ui_view_group_rel (group_id, view_id);

create table mail_channel
(
	id integer default nextval('mail_channel_id_seq'::regclass) not null
		constraint mail_channel_pkey
			primary key,
	name varchar not null,
	active boolean,
	channel_type varchar,
	description text,
	uuid varchar(50),
	email_send boolean,
	public varchar not null,
	group_public_id integer
		constraint mail_channel_group_public_id_fkey
			references res_groups
				on delete set null,
	moderation boolean,
	moderation_notify boolean,
	moderation_notify_msg text,
	moderation_guidelines boolean,
	moderation_guidelines_msg text,
	alias_id integer not null
		constraint mail_channel_alias_id_fkey
			references mail_alias
				on delete restrict,
	message_main_attachment_id integer
		constraint mail_channel_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint mail_channel_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_channel_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_channel is 'Discussion Channel';

comment on column mail_channel.name is 'Name';

comment on column mail_channel.active is 'Active';

comment on column mail_channel.channel_type is 'Channel Type';

comment on column mail_channel.description is 'Description';

comment on column mail_channel.uuid is 'UUID';

comment on column mail_channel.email_send is 'Send messages by email';

comment on column mail_channel.public is 'Privacy';

comment on column mail_channel.group_public_id is 'Authorized Group';

comment on column mail_channel.moderation is 'Moderate this channel';

comment on column mail_channel.moderation_notify is 'Automatic notification';

comment on column mail_channel.moderation_notify_msg is 'Notification message';

comment on column mail_channel.moderation_guidelines is 'Send guidelines to new subscribers';

comment on column mail_channel.moderation_guidelines_msg is 'Guidelines';

comment on column mail_channel.alias_id is 'Alias';

comment on column mail_channel.message_main_attachment_id is 'Main Attachment';

comment on column mail_channel.create_uid is 'Created by';

comment on column mail_channel.create_date is 'Created on';

comment on column mail_channel.write_uid is 'Last Updated by';

comment on column mail_channel.write_date is 'Last Updated on';

alter table mail_channel owner to postgres;

create index mail_channel_message_main_attachment_id_index
	on mail_channel (message_main_attachment_id);

create index mail_channel_uuid_index
	on mail_channel (uuid);

create table mail_channel_mail_wizard_invite_rel
(
	mail_wizard_invite_id integer not null
		constraint mail_channel_mail_wizard_invite_rel_mail_wizard_invite_id_fkey
			references mail_wizard_invite
				on delete cascade,
	mail_channel_id integer not null
		constraint mail_channel_mail_wizard_invite_rel_mail_channel_id_fkey
			references mail_channel
				on delete cascade,
	constraint mail_channel_mail_wizard_invite_rel_pkey
		primary key (mail_wizard_invite_id, mail_channel_id)
);

comment on table mail_channel_mail_wizard_invite_rel is 'RELATION BETWEEN mail_wizard_invite AND mail_channel';

alter table mail_channel_mail_wizard_invite_rel owner to postgres;

create index mail_channel_mail_wizard_invi_mail_channel_id_mail_wizard_i_idx
	on mail_channel_mail_wizard_invite_rel (mail_channel_id, mail_wizard_invite_id);

create table mail_channel_moderator_rel
(
	mail_channel_id integer not null
		constraint mail_channel_moderator_rel_mail_channel_id_fkey
			references mail_channel
				on delete cascade,
	res_users_id integer not null
		constraint mail_channel_moderator_rel_res_users_id_fkey
			references res_users
				on delete cascade,
	constraint mail_channel_moderator_rel_pkey
		primary key (mail_channel_id, res_users_id)
);

comment on table mail_channel_moderator_rel is 'RELATION BETWEEN mail_channel AND res_users';

alter table mail_channel_moderator_rel owner to postgres;

create index mail_channel_moderator_rel_res_users_id_mail_channel_id_idx
	on mail_channel_moderator_rel (res_users_id, mail_channel_id);

create table mail_channel_partner
(
	id integer default nextval('mail_channel_partner_id_seq'::regclass) not null
		constraint mail_channel_partner_pkey
			primary key,
	custom_channel_name varchar,
	partner_id integer
		constraint mail_channel_partner_partner_id_fkey
			references res_partner
				on delete cascade,
	channel_id integer
		constraint mail_channel_partner_channel_id_fkey
			references mail_channel
				on delete cascade,
	fetched_message_id integer
		constraint mail_channel_partner_fetched_message_id_fkey
			references mail_message
				on delete set null,
	seen_message_id integer
		constraint mail_channel_partner_seen_message_id_fkey
			references mail_message
				on delete set null,
	fold_state varchar,
	is_minimized boolean,
	is_pinned boolean,
	create_uid integer
		constraint mail_channel_partner_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_channel_partner_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_channel_partner is 'Listeners of a Channel';

comment on column mail_channel_partner.custom_channel_name is 'Custom channel name';

comment on column mail_channel_partner.partner_id is 'Recipient';

comment on column mail_channel_partner.channel_id is 'Channel';

comment on column mail_channel_partner.fetched_message_id is 'Last Fetched';

comment on column mail_channel_partner.seen_message_id is 'Last Seen';

comment on column mail_channel_partner.fold_state is 'Conversation Fold State';

comment on column mail_channel_partner.is_minimized is 'Conversation is minimized';

comment on column mail_channel_partner.is_pinned is 'Is pinned on the interface';

comment on column mail_channel_partner.create_uid is 'Created by';

comment on column mail_channel_partner.create_date is 'Created on';

comment on column mail_channel_partner.write_uid is 'Last Updated by';

comment on column mail_channel_partner.write_date is 'Last Updated on';

alter table mail_channel_partner owner to postgres;

create index mail_channel_partner_seen_message_id_idx
	on mail_channel_partner (channel_id, partner_id, seen_message_id);

create table mail_channel_res_groups_rel
(
	mail_channel_id integer not null
		constraint mail_channel_res_groups_rel_mail_channel_id_fkey
			references mail_channel
				on delete cascade,
	res_groups_id integer not null
		constraint mail_channel_res_groups_rel_res_groups_id_fkey
			references res_groups
				on delete cascade,
	constraint mail_channel_res_groups_rel_pkey
		primary key (mail_channel_id, res_groups_id)
);

comment on table mail_channel_res_groups_rel is 'RELATION BETWEEN mail_channel AND res_groups';

alter table mail_channel_res_groups_rel owner to postgres;

create index mail_channel_res_groups_rel_res_groups_id_mail_channel_id_idx
	on mail_channel_res_groups_rel (res_groups_id, mail_channel_id);

create table mail_followers
(
	id integer default nextval('mail_followers_id_seq'::regclass) not null
		constraint mail_followers_pkey
			primary key,
	res_model varchar not null,
	res_id integer,
	partner_id integer
		constraint mail_followers_partner_id_fkey
			references res_partner
				on delete cascade,
	channel_id integer
		constraint mail_followers_channel_id_fkey
			references mail_channel
				on delete cascade,
	constraint mail_followers_mail_followers_res_channel_res_model_id_uniq
		unique (res_model, res_id, channel_id),
	constraint mail_followers_mail_followers_res_partner_res_model_id_uniq
		unique (res_model, res_id, partner_id)
);

comment on table mail_followers is 'Document Followers';

comment on column mail_followers.res_model is 'Related Document Model Name';

comment on column mail_followers.res_id is 'Related Document ID';

comment on column mail_followers.partner_id is 'Related Partner';

comment on column mail_followers.channel_id is 'Listener';

alter table mail_followers owner to postgres;

create index mail_followers_channel_id_index
	on mail_followers (channel_id);

create index mail_followers_partner_id_index
	on mail_followers (partner_id);

create index mail_followers_res_id_index
	on mail_followers (res_id);

create index mail_followers_res_model_index
	on mail_followers (res_model);

create table mail_followers_mail_message_subtype_rel
(
	mail_followers_id integer not null
		constraint mail_followers_mail_message_subtype_rel_mail_followers_id_fkey
			references mail_followers
				on delete cascade,
	mail_message_subtype_id integer not null
		constraint mail_followers_mail_message_subtyp_mail_message_subtype_id_fkey
			references mail_message_subtype
				on delete cascade,
	constraint mail_followers_mail_message_subtype_rel_pkey
		primary key (mail_followers_id, mail_message_subtype_id)
);

comment on table mail_followers_mail_message_subtype_rel is 'RELATION BETWEEN mail_followers AND mail_message_subtype';

alter table mail_followers_mail_message_subtype_rel owner to postgres;

create index mail_followers_mail_message_s_mail_message_subtype_id_mail__idx
	on mail_followers_mail_message_subtype_rel (mail_message_subtype_id, mail_followers_id);

create table mail_message_mail_channel_rel
(
	mail_message_id integer not null
		constraint mail_message_mail_channel_rel_mail_message_id_fkey
			references mail_message
				on delete cascade,
	mail_channel_id integer not null
		constraint mail_message_mail_channel_rel_mail_channel_id_fkey
			references mail_channel
				on delete cascade,
	constraint mail_message_mail_channel_rel_pkey
		primary key (mail_message_id, mail_channel_id)
);

comment on table mail_message_mail_channel_rel is 'RELATION BETWEEN mail_message AND mail_channel';

alter table mail_message_mail_channel_rel owner to postgres;

create index mail_message_mail_channel_rel_mail_channel_id_mail_message__idx
	on mail_message_mail_channel_rel (mail_channel_id, mail_message_id);

create table mail_moderation
(
	id integer default nextval('mail_moderation_id_seq'::regclass) not null
		constraint mail_moderation_pkey
			primary key,
	email varchar not null,
	status varchar not null,
	channel_id integer not null
		constraint mail_moderation_channel_id_fkey
			references mail_channel
				on delete restrict,
	create_uid integer
		constraint mail_moderation_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_moderation_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint mail_moderation_channel_email_uniq
		unique (email, channel_id)
);

comment on table mail_moderation is 'Channel black/white list';

comment on column mail_moderation.email is 'Email';

comment on column mail_moderation.status is 'Status';

comment on column mail_moderation.channel_id is 'Channel';

comment on column mail_moderation.create_uid is 'Created by';

comment on column mail_moderation.create_date is 'Created on';

comment on column mail_moderation.write_uid is 'Last Updated by';

comment on column mail_moderation.write_date is 'Last Updated on';

alter table mail_moderation owner to postgres;

create index mail_moderation_channel_id_index
	on mail_moderation (channel_id);

create index mail_moderation_email_index
	on mail_moderation (email);

create index res_groups_category_id_index
	on res_groups (category_id);

create table res_groups_implied_rel
(
	gid integer not null
		constraint res_groups_implied_rel_gid_fkey
			references res_groups
				on delete cascade,
	hid integer not null
		constraint res_groups_implied_rel_hid_fkey
			references res_groups
				on delete cascade,
	constraint res_groups_implied_rel_pkey
		primary key (gid, hid)
);

comment on table res_groups_implied_rel is 'RELATION BETWEEN res_groups AND res_groups';

alter table res_groups_implied_rel owner to postgres;

create index res_groups_implied_rel_hid_gid_idx
	on res_groups_implied_rel (hid, gid);

create table res_groups_report_rel
(
	uid integer not null
		constraint res_groups_report_rel_uid_fkey
			references ir_act_report_xml
				on delete cascade,
	gid integer not null
		constraint res_groups_report_rel_gid_fkey
			references res_groups
				on delete cascade,
	constraint res_groups_report_rel_pkey
		primary key (uid, gid)
);

comment on table res_groups_report_rel is 'RELATION BETWEEN ir_act_report_xml AND res_groups';

alter table res_groups_report_rel owner to postgres;

create index res_groups_report_rel_gid_uid_idx
	on res_groups_report_rel (gid, uid);

create table res_groups_users_rel
(
	gid integer not null
		constraint res_groups_users_rel_gid_fkey
			references res_groups
				on delete cascade,
	uid integer not null
		constraint res_groups_users_rel_uid_fkey
			references res_users
				on delete cascade,
	constraint res_groups_users_rel_pkey
		primary key (gid, uid)
);

comment on table res_groups_users_rel is 'RELATION BETWEEN res_groups AND res_users';

alter table res_groups_users_rel owner to postgres;

create index res_groups_users_rel_uid_gid_idx
	on res_groups_users_rel (uid, gid);

create table res_lang
(
	id integer default nextval('res_lang_id_seq'::regclass) not null
		constraint res_lang_pkey
			primary key,
	name varchar not null
		constraint res_lang_name_uniq
			unique,
	code varchar not null
		constraint res_lang_code_uniq
			unique,
	iso_code varchar,
	url_code varchar not null
		constraint res_lang_url_code_uniq
			unique,
	active boolean,
	direction varchar not null,
	date_format varchar not null,
	time_format varchar not null,
	week_start varchar not null,
	grouping varchar not null,
	decimal_point varchar not null,
	thousands_sep varchar,
	create_uid integer
		constraint res_lang_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_lang_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_lang is 'Languages';

comment on column res_lang.name is 'Name';

comment on column res_lang.code is 'Locale Code';

comment on column res_lang.iso_code is 'ISO code';

comment on column res_lang.url_code is 'URL Code';

comment on column res_lang.active is 'Active';

comment on column res_lang.direction is 'Direction';

comment on column res_lang.date_format is 'Date Format';

comment on column res_lang.time_format is 'Time Format';

comment on column res_lang.week_start is 'First Day of Week';

comment on column res_lang.grouping is 'Separator Format';

comment on column res_lang.decimal_point is 'Decimal Separator';

comment on column res_lang.thousands_sep is 'Thousands Separator';

comment on column res_lang.create_uid is 'Created by';

comment on column res_lang.create_date is 'Created on';

comment on column res_lang.write_uid is 'Last Updated by';

comment on column res_lang.write_date is 'Last Updated on';

alter table res_lang owner to postgres;

alter table res_partner
	add constraint res_partner_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table res_partner
	add constraint res_partner_user_id_fkey
		foreign key (user_id) references res_users
			on delete set null;

alter table res_partner
	add constraint res_partner_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table res_partner_autocomplete_sync
(
	id integer default nextval('res_partner_autocomplete_sync_id_seq'::regclass) not null
		constraint res_partner_autocomplete_sync_pkey
			primary key,
	partner_id integer
		constraint res_partner_autocomplete_sync_partner_id_fkey
			references res_partner
				on delete cascade,
	synched boolean,
	create_uid integer
		constraint res_partner_autocomplete_sync_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_partner_autocomplete_sync_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_partner_autocomplete_sync is 'Partner Autocomplete Sync';

comment on column res_partner_autocomplete_sync.partner_id is 'Partner';

comment on column res_partner_autocomplete_sync.synched is 'Is synched';

comment on column res_partner_autocomplete_sync.create_uid is 'Created by';

comment on column res_partner_autocomplete_sync.create_date is 'Created on';

comment on column res_partner_autocomplete_sync.write_uid is 'Last Updated by';

comment on column res_partner_autocomplete_sync.write_date is 'Last Updated on';

alter table res_partner_autocomplete_sync owner to postgres;

create table res_partner_bank
(
	id integer default nextval('res_partner_bank_id_seq'::regclass) not null
		constraint res_partner_bank_pkey
			primary key,
	active boolean,
	acc_number varchar not null,
	sanitized_acc_number varchar,
	acc_holder_name varchar,
	partner_id integer not null
		constraint res_partner_bank_partner_id_fkey
			references res_partner
				on delete cascade,
	bank_id integer
		constraint res_partner_bank_bank_id_fkey
			references res_bank
				on delete set null,
	sequence integer,
	currency_id integer
		constraint res_partner_bank_currency_id_fkey
			references res_currency
				on delete set null,
	company_id integer,
	create_uid integer
		constraint res_partner_bank_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_partner_bank_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint res_partner_bank_unique_number
		unique (sanitized_acc_number, company_id)
);

comment on table res_partner_bank is 'Bank Accounts';

comment on column res_partner_bank.active is 'Active';

comment on column res_partner_bank.acc_number is 'Account Number';

comment on column res_partner_bank.sanitized_acc_number is 'Sanitized Account Number';

comment on column res_partner_bank.acc_holder_name is 'Account Holder Name';

comment on column res_partner_bank.partner_id is 'Account Holder';

comment on column res_partner_bank.bank_id is 'Bank';

comment on column res_partner_bank.sequence is 'Sequence';

comment on column res_partner_bank.currency_id is 'Currency';

comment on column res_partner_bank.company_id is 'Company';

comment on column res_partner_bank.create_uid is 'Created by';

comment on column res_partner_bank.create_date is 'Created on';

comment on column res_partner_bank.write_uid is 'Last Updated by';

comment on column res_partner_bank.write_date is 'Last Updated on';

alter table res_partner_bank owner to postgres;

alter table account_journal
	add constraint account_journal_bank_account_id_fkey
		foreign key (bank_account_id) references res_partner_bank
			on delete restrict;

alter table account_move
	add constraint account_move_partner_bank_id_fkey
		foreign key (partner_bank_id) references res_partner_bank
			on delete set null;

create table account_setup_bank_manual_config
(
	id integer default nextval('account_setup_bank_manual_config_id_seq'::regclass) not null
		constraint account_setup_bank_manual_config_pkey
			primary key,
	res_partner_bank_id integer not null
		constraint account_setup_bank_manual_config_res_partner_bank_id_fkey
			references res_partner_bank
				on delete cascade,
	new_journal_name varchar not null,
	num_journals_without_account integer,
	create_uid integer
		constraint account_setup_bank_manual_config_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_setup_bank_manual_config_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_setup_bank_manual_config is 'Bank setup manual config';

comment on column account_setup_bank_manual_config.res_partner_bank_id is 'Res Partner Bank';

comment on column account_setup_bank_manual_config.new_journal_name is 'New Journal Name';

comment on column account_setup_bank_manual_config.num_journals_without_account is 'Num Journals Without Account';

comment on column account_setup_bank_manual_config.create_uid is 'Created by';

comment on column account_setup_bank_manual_config.create_date is 'Created on';

comment on column account_setup_bank_manual_config.write_uid is 'Last Updated by';

comment on column account_setup_bank_manual_config.write_date is 'Last Updated on';

alter table account_setup_bank_manual_config owner to postgres;

create index res_partner_bank_partner_id_index
	on res_partner_bank (partner_id);

create table res_partner_category
(
	id integer default nextval('res_partner_category_id_seq'::regclass) not null
		constraint res_partner_category_pkey
			primary key,
	name varchar not null,
	color integer,
	parent_id integer
		constraint res_partner_category_parent_id_fkey
			references res_partner_category
				on delete cascade,
	active boolean,
	parent_path varchar,
	create_uid integer
		constraint res_partner_category_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_partner_category_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_partner_category is 'Partner Tags';

comment on column res_partner_category.name is 'Tag Name';

comment on column res_partner_category.color is 'Color Index';

comment on column res_partner_category.parent_id is 'Parent Category';

comment on column res_partner_category.active is 'Active';

comment on column res_partner_category.parent_path is 'Parent Path';

comment on column res_partner_category.create_uid is 'Created by';

comment on column res_partner_category.create_date is 'Created on';

comment on column res_partner_category.write_uid is 'Last Updated by';

comment on column res_partner_category.write_date is 'Last Updated on';

alter table res_partner_category owner to postgres;

create table account_reconcile_model_res_partner_category_rel
(
	account_reconcile_model_id integer not null
		constraint account_reconcile_model_res_pa_account_reconcile_model_id_fkey1
			references account_reconcile_model
				on delete cascade,
	res_partner_category_id integer not null
		constraint account_reconcile_model_res_partne_res_partner_category_id_fkey
			references res_partner_category
				on delete cascade,
	constraint account_reconcile_model_res_partner_category_rel_pkey
		primary key (account_reconcile_model_id, res_partner_category_id)
);

comment on table account_reconcile_model_res_partner_category_rel is 'RELATION BETWEEN account_reconcile_model AND res_partner_category';

alter table account_reconcile_model_res_partner_category_rel owner to postgres;

create index account_reconcile_model_res_p_res_partner_category_id_accou_idx
	on account_reconcile_model_res_partner_category_rel (res_partner_category_id, account_reconcile_model_id);

create table account_reconcile_model_template_res_partner_category_rel
(
	account_reconcile_model_template_id integer not null
		constraint account_reconcile_model_temp_account_reconcile_model_temp_fkey1
			references account_reconcile_model_template
				on delete cascade,
	res_partner_category_id integer not null
		constraint account_reconcile_model_template_r_res_partner_category_id_fkey
			references res_partner_category
				on delete cascade,
	constraint account_reconcile_model_template_res_partner_category_rel_pkey
		primary key (account_reconcile_model_template_id, res_partner_category_id)
);

comment on table account_reconcile_model_template_res_partner_category_rel is 'RELATION BETWEEN account_reconcile_model_template AND res_partner_category';

alter table account_reconcile_model_template_res_partner_category_rel owner to postgres;

create index account_reconcile_model_templ_res_partner_category_id_accou_idx
	on account_reconcile_model_template_res_partner_category_rel (res_partner_category_id, account_reconcile_model_template_id);

create index res_partner_category_parent_id_index
	on res_partner_category (parent_id);

create index res_partner_category_parent_path_index
	on res_partner_category (parent_path);

create table res_partner_industry
(
	id integer default nextval('res_partner_industry_id_seq'::regclass) not null
		constraint res_partner_industry_pkey
			primary key,
	name varchar,
	full_name varchar,
	active boolean,
	create_uid integer
		constraint res_partner_industry_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_partner_industry_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_partner_industry is 'Industry';

comment on column res_partner_industry.name is 'Name';

comment on column res_partner_industry.full_name is 'Full Name';

comment on column res_partner_industry.active is 'Active';

comment on column res_partner_industry.create_uid is 'Created by';

comment on column res_partner_industry.create_date is 'Created on';

comment on column res_partner_industry.write_uid is 'Last Updated by';

comment on column res_partner_industry.write_date is 'Last Updated on';

alter table res_partner_industry owner to postgres;

alter table res_partner
	add constraint res_partner_industry_id_fkey
		foreign key (industry_id) references res_partner_industry
			on delete set null;

create table res_partner_res_partner_category_rel
(
	category_id integer not null
		constraint res_partner_res_partner_category_rel_category_id_fkey
			references res_partner_category
				on delete cascade,
	partner_id integer not null
		constraint res_partner_res_partner_category_rel_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint res_partner_res_partner_category_rel_pkey
		primary key (category_id, partner_id)
);

comment on table res_partner_res_partner_category_rel is 'RELATION BETWEEN res_partner_category AND res_partner';

alter table res_partner_res_partner_category_rel owner to postgres;

create index res_partner_res_partner_category_rel_partner_id_category_id_idx
	on res_partner_res_partner_category_rel (partner_id, category_id);

create table res_partner_title
(
	id integer default nextval('res_partner_title_id_seq'::regclass) not null
		constraint res_partner_title_pkey
			primary key,
	name varchar not null,
	shortcut varchar,
	create_uid integer
		constraint res_partner_title_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_partner_title_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_partner_title is 'Partner Title';

comment on column res_partner_title.name is 'Title';

comment on column res_partner_title.shortcut is 'Abbreviation';

comment on column res_partner_title.create_uid is 'Created by';

comment on column res_partner_title.create_date is 'Created on';

comment on column res_partner_title.write_uid is 'Last Updated by';

comment on column res_partner_title.write_date is 'Last Updated on';

alter table res_partner_title owner to postgres;

alter table res_partner
	add constraint res_partner_title_fkey
		foreign key (title) references res_partner_title
			on delete set null;

create table res_users_apikeys
(
	id integer default nextval('res_users_apikeys_id_seq'::regclass) not null
		constraint res_users_apikeys_pkey
			primary key,
	name varchar not null,
	user_id integer not null
		constraint res_users_apikeys_user_id_fkey
			references res_users,
	scope varchar,
	index varchar(8),
	key varchar,
	create_date timestamp default timezone('utc'::text, now())
);

alter table res_users_apikeys owner to postgres;

create index res_users_apikeys_user_id_index_idx
	on res_users_apikeys (user_id, index);

create table res_users_apikeys_description
(
	id integer default nextval('res_users_apikeys_description_id_seq'::regclass) not null
		constraint res_users_apikeys_description_pkey
			primary key,
	name varchar not null,
	create_uid integer
		constraint res_users_apikeys_description_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_users_apikeys_description_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_users_apikeys_description is 'res.users.apikeys.description';

comment on column res_users_apikeys_description.name is 'Description';

comment on column res_users_apikeys_description.create_uid is 'Created by';

comment on column res_users_apikeys_description.create_date is 'Created on';

comment on column res_users_apikeys_description.write_uid is 'Last Updated by';

comment on column res_users_apikeys_description.write_date is 'Last Updated on';

alter table res_users_apikeys_description owner to postgres;

create table res_users_identitycheck
(
	id integer default nextval('res_users_identitycheck_id_seq'::regclass) not null
		constraint res_users_identitycheck_pkey
			primary key,
	request varchar,
	password varchar,
	create_uid integer
		constraint res_users_identitycheck_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_users_identitycheck_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_users_identitycheck is 'Password Check Wizard';

comment on column res_users_identitycheck.request is 'Request';

comment on column res_users_identitycheck.password is 'Password';

comment on column res_users_identitycheck.create_uid is 'Created by';

comment on column res_users_identitycheck.create_date is 'Created on';

comment on column res_users_identitycheck.write_uid is 'Last Updated by';

comment on column res_users_identitycheck.write_date is 'Last Updated on';

alter table res_users_identitycheck owner to postgres;

create table res_users_log
(
	id integer default nextval('res_users_log_id_seq'::regclass) not null
		constraint res_users_log_pkey
			primary key,
	create_uid integer
		constraint res_users_log_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_users_log_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_users_log is 'Users Log';

comment on column res_users_log.create_uid is 'Created by';

comment on column res_users_log.create_date is 'Created on';

comment on column res_users_log.write_uid is 'Last Updated by';

comment on column res_users_log.write_date is 'Last Updated on';

alter table res_users_log owner to postgres;

create table reset_view_arch_wizard
(
	id integer default nextval('reset_view_arch_wizard_id_seq'::regclass) not null
		constraint reset_view_arch_wizard_pkey
			primary key,
	view_id integer
		constraint reset_view_arch_wizard_view_id_fkey
			references ir_ui_view
				on delete set null,
	reset_mode varchar not null,
	compare_view_id integer
		constraint reset_view_arch_wizard_compare_view_id_fkey
			references ir_ui_view
				on delete set null,
	create_uid integer
		constraint reset_view_arch_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint reset_view_arch_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table reset_view_arch_wizard is 'Reset View Architecture Wizard';

comment on column reset_view_arch_wizard.view_id is 'View';

comment on column reset_view_arch_wizard.reset_mode is 'Reset Mode';

comment on column reset_view_arch_wizard.compare_view_id is 'Compare To View';

comment on column reset_view_arch_wizard.create_uid is 'Created by';

comment on column reset_view_arch_wizard.create_date is 'Created on';

comment on column reset_view_arch_wizard.write_uid is 'Last Updated by';

comment on column reset_view_arch_wizard.write_date is 'Last Updated on';

alter table reset_view_arch_wizard owner to postgres;

create table resource_calendar
(
	id integer default nextval('resource_calendar_id_seq'::regclass) not null
		constraint resource_calendar_pkey
			primary key,
	name varchar not null,
	active boolean,
	company_id integer,
	hours_per_day double precision,
	tz varchar not null,
	two_weeks_calendar boolean,
	create_uid integer
		constraint resource_calendar_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint resource_calendar_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table resource_calendar is 'Resource Working Time';

comment on column resource_calendar.name is 'Name';

comment on column resource_calendar.active is 'Active';

comment on column resource_calendar.company_id is 'Company';

comment on column resource_calendar.hours_per_day is 'Average Hour per Day';

comment on column resource_calendar.tz is 'Timezone';

comment on column resource_calendar.two_weeks_calendar is 'Calendar in 2 weeks mode';

comment on column resource_calendar.create_uid is 'Created by';

comment on column resource_calendar.create_date is 'Created on';

comment on column resource_calendar.write_uid is 'Last Updated by';

comment on column resource_calendar.write_date is 'Last Updated on';

alter table resource_calendar owner to postgres;

create table rule_group_rel
(
	rule_group_id integer not null
		constraint rule_group_rel_rule_group_id_fkey
			references ir_rule
				on delete cascade,
	group_id integer not null
		constraint rule_group_rel_group_id_fkey
			references res_groups
				on delete restrict,
	constraint rule_group_rel_pkey
		primary key (rule_group_id, group_id)
);

comment on table rule_group_rel is 'RELATION BETWEEN ir_rule AND res_groups';

alter table rule_group_rel owner to postgres;

create index rule_group_rel_group_id_rule_group_id_idx
	on rule_group_rel (group_id, rule_group_id);

create table sale_payment_acquirer_onboarding_wizard
(
	id integer default nextval('sale_payment_acquirer_onboarding_wizard_id_seq'::regclass) not null
		constraint sale_payment_acquirer_onboarding_wizard_pkey
			primary key,
	payment_method varchar,
	paypal_user_type varchar,
	paypal_email_account varchar,
	paypal_seller_account varchar,
	paypal_pdt_token varchar,
	stripe_secret_key varchar,
	stripe_publishable_key varchar,
	manual_name varchar,
	journal_name varchar,
	acc_number varchar,
	manual_post_msg text,
	create_uid integer
		constraint sale_payment_acquirer_onboarding_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_payment_acquirer_onboarding_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_payment_acquirer_onboarding_wizard is 'Sale Payment acquire onboarding wizard';

comment on column sale_payment_acquirer_onboarding_wizard.payment_method is 'Payment Method';

comment on column sale_payment_acquirer_onboarding_wizard.paypal_user_type is 'Paypal User Type';

comment on column sale_payment_acquirer_onboarding_wizard.paypal_email_account is 'Email';

comment on column sale_payment_acquirer_onboarding_wizard.paypal_seller_account is 'Merchant Account ID';

comment on column sale_payment_acquirer_onboarding_wizard.paypal_pdt_token is 'PDT Identity Token';

comment on column sale_payment_acquirer_onboarding_wizard.stripe_secret_key is 'Stripe Secret Key';

comment on column sale_payment_acquirer_onboarding_wizard.stripe_publishable_key is 'Stripe Publishable Key';

comment on column sale_payment_acquirer_onboarding_wizard.manual_name is 'Method';

comment on column sale_payment_acquirer_onboarding_wizard.journal_name is 'Bank Name';

comment on column sale_payment_acquirer_onboarding_wizard.acc_number is 'Account Number';

comment on column sale_payment_acquirer_onboarding_wizard.manual_post_msg is 'Payment Instructions';

comment on column sale_payment_acquirer_onboarding_wizard.create_uid is 'Created by';

comment on column sale_payment_acquirer_onboarding_wizard.create_date is 'Created on';

comment on column sale_payment_acquirer_onboarding_wizard.write_uid is 'Last Updated by';

comment on column sale_payment_acquirer_onboarding_wizard.write_date is 'Last Updated on';

alter table sale_payment_acquirer_onboarding_wizard owner to postgres;

create table sms_cancel
(
	id integer default nextval('sms_cancel_id_seq'::regclass) not null
		constraint sms_cancel_pkey
			primary key,
	model varchar not null,
	create_uid integer
		constraint sms_cancel_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_cancel_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_cancel is 'Dismiss notification for resend by model';

comment on column sms_cancel.model is 'Model';

comment on column sms_cancel.create_uid is 'Created by';

comment on column sms_cancel.create_date is 'Created on';

comment on column sms_cancel.write_uid is 'Last Updated by';

comment on column sms_cancel.write_date is 'Last Updated on';

alter table sms_cancel owner to postgres;

create table sms_resend
(
	id integer default nextval('sms_resend_id_seq'::regclass) not null
		constraint sms_resend_pkey
			primary key,
	mail_message_id integer not null
		constraint sms_resend_mail_message_id_fkey
			references mail_message
				on delete cascade,
	create_uid integer
		constraint sms_resend_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_resend_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_resend is 'SMS Resend';

comment on column sms_resend.mail_message_id is 'Message';

comment on column sms_resend.create_uid is 'Created by';

comment on column sms_resend.create_date is 'Created on';

comment on column sms_resend.write_uid is 'Last Updated by';

comment on column sms_resend.write_date is 'Last Updated on';

alter table sms_resend owner to postgres;

create table sms_sms
(
	id integer default nextval('sms_sms_id_seq'::regclass) not null
		constraint sms_sms_pkey
			primary key,
	number varchar,
	body text,
	partner_id integer
		constraint sms_sms_partner_id_fkey
			references res_partner
				on delete set null,
	mail_message_id integer
		constraint sms_sms_mail_message_id_fkey
			references mail_message
				on delete set null,
	state varchar not null,
	error_code varchar,
	create_uid integer
		constraint sms_sms_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_sms_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_sms is 'Outgoing SMS';

comment on column sms_sms.number is 'Number';

comment on column sms_sms.body is 'Body';

comment on column sms_sms.partner_id is 'Customer';

comment on column sms_sms.mail_message_id is 'Mail Message';

comment on column sms_sms.state is 'SMS Status';

comment on column sms_sms.error_code is 'Error Code';

comment on column sms_sms.create_uid is 'Created by';

comment on column sms_sms.create_date is 'Created on';

comment on column sms_sms.write_uid is 'Last Updated by';

comment on column sms_sms.write_date is 'Last Updated on';

alter table sms_sms owner to postgres;

create index sms_sms_mail_message_id_index
	on sms_sms (mail_message_id);

create table sms_template
(
	id integer default nextval('sms_template_id_seq'::regclass) not null
		constraint sms_template_pkey
			primary key,
	name varchar,
	model_id integer not null
		constraint sms_template_model_id_fkey
			references ir_model
				on delete cascade,
	model varchar,
	body varchar not null,
	sidebar_action_id integer
		constraint sms_template_sidebar_action_id_fkey
			references ir_act_window
				on delete set null,
	lang varchar,
	create_uid integer
		constraint sms_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_template is 'SMS Templates';

comment on column sms_template.name is 'Name';

comment on column sms_template.model_id is 'Applies to';

comment on column sms_template.model is 'Related Document Model';

comment on column sms_template.body is 'Body';

comment on column sms_template.sidebar_action_id is 'Sidebar action';

comment on column sms_template.lang is 'Language';

comment on column sms_template.create_uid is 'Created by';

comment on column sms_template.create_date is 'Created on';

comment on column sms_template.write_uid is 'Last Updated by';

comment on column sms_template.write_date is 'Last Updated on';

alter table sms_template owner to postgres;

create table ir_act_server
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_act_server_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_act_server_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_act_server_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_server_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	usage varchar not null,
	state varchar not null,
	sequence integer,
	model_id integer not null
		constraint ir_act_server_model_id_fkey
			references ir_model
				on delete cascade,
	model_name varchar,
	code text,
	crud_model_id integer
		constraint ir_act_server_crud_model_id_fkey
			references ir_model
				on delete set null,
	link_field_id integer
		constraint ir_act_server_link_field_id_fkey
			references ir_model_fields
				on delete set null,
	template_id integer
		constraint ir_act_server_template_id_fkey
			references mail_template
				on delete set null,
	activity_type_id integer
		constraint ir_act_server_activity_type_id_fkey
			references mail_activity_type
				on delete restrict,
	activity_summary varchar,
	activity_note text,
	activity_date_deadline_range integer,
	activity_date_deadline_range_type varchar,
	activity_user_type varchar not null,
	activity_user_id integer
		constraint ir_act_server_activity_user_id_fkey
			references res_users
				on delete set null,
	activity_user_field_name varchar,
	sms_template_id integer
		constraint ir_act_server_sms_template_id_fkey
			references sms_template
				on delete set null,
	sms_mass_keep_log boolean
);

comment on column ir_act_server.usage is 'Usage';

comment on column ir_act_server.state is 'Action To Do';

comment on column ir_act_server.sequence is 'Sequence';

comment on column ir_act_server.model_id is 'Model';

comment on column ir_act_server.model_name is 'Model Name';

comment on column ir_act_server.code is 'Python Code';

comment on column ir_act_server.crud_model_id is 'Target Model';

comment on column ir_act_server.link_field_id is 'Link Field';

comment on column ir_act_server.template_id is 'Email Template';

comment on column ir_act_server.activity_type_id is 'Activity';

comment on column ir_act_server.activity_summary is 'Summary';

comment on column ir_act_server.activity_note is 'Note';

comment on column ir_act_server.activity_date_deadline_range is 'Due Date In';

comment on column ir_act_server.activity_date_deadline_range_type is 'Due type';

comment on column ir_act_server.activity_user_type is 'Activity User Type';

comment on column ir_act_server.activity_user_id is 'Responsible';

comment on column ir_act_server.activity_user_field_name is 'User field name';

comment on column ir_act_server.sms_template_id is 'SMS Template';

comment on column ir_act_server.sms_mass_keep_log is 'Log as Note';

alter table ir_act_server owner to postgres;

create table ir_act_server_group_rel
(
	act_id integer not null
		constraint ir_act_server_group_rel_act_id_fkey
			references ir_act_server
				on delete cascade,
	gid integer not null
		constraint ir_act_server_group_rel_gid_fkey
			references res_groups
				on delete cascade,
	constraint ir_act_server_group_rel_pkey
		primary key (act_id, gid)
);

comment on table ir_act_server_group_rel is 'RELATION BETWEEN ir_act_server AND res_groups';

alter table ir_act_server_group_rel owner to postgres;

create index ir_act_server_group_rel_gid_act_id_idx
	on ir_act_server_group_rel (gid, act_id);

create table ir_act_server_mail_channel_rel
(
	ir_act_server_id integer not null
		constraint ir_act_server_mail_channel_rel_ir_act_server_id_fkey
			references ir_act_server
				on delete cascade,
	mail_channel_id integer not null
		constraint ir_act_server_mail_channel_rel_mail_channel_id_fkey
			references mail_channel
				on delete cascade,
	constraint ir_act_server_mail_channel_rel_pkey
		primary key (ir_act_server_id, mail_channel_id)
);

comment on table ir_act_server_mail_channel_rel is 'RELATION BETWEEN ir_act_server AND mail_channel';

alter table ir_act_server_mail_channel_rel owner to postgres;

create index ir_act_server_mail_channel_re_mail_channel_id_ir_act_server_idx
	on ir_act_server_mail_channel_rel (mail_channel_id, ir_act_server_id);

create table ir_act_server_res_partner_rel
(
	ir_act_server_id integer not null
		constraint ir_act_server_res_partner_rel_ir_act_server_id_fkey
			references ir_act_server
				on delete cascade,
	res_partner_id integer not null
		constraint ir_act_server_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint ir_act_server_res_partner_rel_pkey
		primary key (ir_act_server_id, res_partner_id)
);

comment on table ir_act_server_res_partner_rel is 'RELATION BETWEEN ir_act_server AND res_partner';

alter table ir_act_server_res_partner_rel owner to postgres;

create index ir_act_server_res_partner_rel_res_partner_id_ir_act_server__idx
	on ir_act_server_res_partner_rel (res_partner_id, ir_act_server_id);

create table ir_cron
(
	id integer default nextval('ir_cron_id_seq'::regclass) not null
		constraint ir_cron_pkey
			primary key,
	ir_actions_server_id integer not null
		constraint ir_cron_ir_actions_server_id_fkey
			references ir_act_server
				on delete restrict,
	cron_name varchar,
	user_id integer not null
		constraint ir_cron_user_id_fkey
			references res_users
				on delete restrict,
	active boolean,
	interval_number integer,
	interval_type varchar,
	numbercall integer,
	doall boolean,
	nextcall timestamp not null,
	lastcall timestamp,
	priority integer,
	create_uid integer
		constraint ir_cron_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_cron_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_cron is 'Scheduled Actions';

comment on column ir_cron.ir_actions_server_id is 'Server action';

comment on column ir_cron.cron_name is 'Name';

comment on column ir_cron.user_id is 'Scheduler User';

comment on column ir_cron.active is 'Active';

comment on column ir_cron.interval_number is 'Interval Number';

comment on column ir_cron.interval_type is 'Interval Unit';

comment on column ir_cron.numbercall is 'Number of Calls';

comment on column ir_cron.doall is 'Repeat Missed';

comment on column ir_cron.nextcall is 'Next Execution Date';

comment on column ir_cron.lastcall is 'Last Execution Date';

comment on column ir_cron.priority is 'Priority';

comment on column ir_cron.create_uid is 'Created by';

comment on column ir_cron.create_date is 'Created on';

comment on column ir_cron.write_uid is 'Last Updated by';

comment on column ir_cron.write_date is 'Last Updated on';

alter table ir_cron owner to postgres;

create table ir_server_object_lines
(
	id integer default nextval('ir_server_object_lines_id_seq'::regclass) not null
		constraint ir_server_object_lines_pkey
			primary key,
	server_id integer
		constraint ir_server_object_lines_server_id_fkey
			references ir_act_server
				on delete cascade,
	col1 integer not null
		constraint ir_server_object_lines_col1_fkey
			references ir_model_fields
				on delete cascade,
	value text not null,
	evaluation_type varchar not null,
	create_uid integer
		constraint ir_server_object_lines_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_server_object_lines_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_server_object_lines is 'Server Action value mapping';

comment on column ir_server_object_lines.server_id is 'Related Server Action';

comment on column ir_server_object_lines.col1 is 'Field';

comment on column ir_server_object_lines.value is 'Value';

comment on column ir_server_object_lines.evaluation_type is 'Evaluation Type';

comment on column ir_server_object_lines.create_uid is 'Created by';

comment on column ir_server_object_lines.create_date is 'Created on';

comment on column ir_server_object_lines.write_uid is 'Last Updated by';

comment on column ir_server_object_lines.write_date is 'Last Updated on';

alter table ir_server_object_lines owner to postgres;

create table rel_server_actions
(
	server_id integer not null
		constraint rel_server_actions_server_id_fkey
			references ir_act_server
				on delete cascade,
	action_id integer not null
		constraint rel_server_actions_action_id_fkey
			references ir_act_server
				on delete cascade,
	constraint rel_server_actions_pkey
		primary key (server_id, action_id)
);

comment on table rel_server_actions is 'RELATION BETWEEN ir_act_server AND ir_act_server';

alter table rel_server_actions owner to postgres;

create index rel_server_actions_action_id_server_id_idx
	on rel_server_actions (action_id, server_id);

create table sms_composer
(
	id integer default nextval('sms_composer_id_seq'::regclass) not null
		constraint sms_composer_pkey
			primary key,
	composition_mode varchar not null,
	res_model varchar,
	res_id integer,
	res_ids varchar,
	use_active_domain boolean,
	active_domain text,
	mass_keep_log boolean,
	mass_force_send boolean,
	mass_use_blacklist boolean,
	recipient_single_number_itf varchar,
	number_field_name varchar,
	numbers varchar,
	template_id integer
		constraint sms_composer_template_id_fkey
			references sms_template
				on delete set null,
	body text not null,
	create_uid integer
		constraint sms_composer_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_composer_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_composer is 'Send SMS Wizard';

comment on column sms_composer.composition_mode is 'Composition Mode';

comment on column sms_composer.res_model is 'Document Model Name';

comment on column sms_composer.res_id is 'Document ID';

comment on column sms_composer.res_ids is 'Document IDs';

comment on column sms_composer.use_active_domain is 'Use active domain';

comment on column sms_composer.active_domain is 'Active domain';

comment on column sms_composer.mass_keep_log is 'Keep a note on document';

comment on column sms_composer.mass_force_send is 'Send directly';

comment on column sms_composer.mass_use_blacklist is 'Use blacklist';

comment on column sms_composer.recipient_single_number_itf is 'Recipient Number';

comment on column sms_composer.number_field_name is 'Number Field';

comment on column sms_composer.numbers is 'Recipients (Numbers)';

comment on column sms_composer.template_id is 'Use Template';

comment on column sms_composer.body is 'Message';

comment on column sms_composer.create_uid is 'Created by';

comment on column sms_composer.create_date is 'Created on';

comment on column sms_composer.write_uid is 'Last Updated by';

comment on column sms_composer.write_date is 'Last Updated on';

alter table sms_composer owner to postgres;

create index sms_template_model_index
	on sms_template (model);

create table sms_template_preview
(
	id integer default nextval('sms_template_preview_id_seq'::regclass) not null
		constraint sms_template_preview_pkey
			primary key,
	sms_template_id integer not null
		constraint sms_template_preview_sms_template_id_fkey
			references sms_template
				on delete cascade,
	lang varchar,
	resource_ref varchar,
	create_uid integer
		constraint sms_template_preview_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_template_preview_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_template_preview is 'SMS Template Preview';

comment on column sms_template_preview.sms_template_id is 'Sms Template';

comment on column sms_template_preview.lang is 'Template Preview Language';

comment on column sms_template_preview.resource_ref is 'Record reference';

comment on column sms_template_preview.create_uid is 'Created by';

comment on column sms_template_preview.create_date is 'Created on';

comment on column sms_template_preview.write_uid is 'Last Updated by';

comment on column sms_template_preview.write_date is 'Last Updated on';

alter table sms_template_preview owner to postgres;

create table snailmail_confirm_followup
(
	id integer default nextval('snailmail_confirm_followup_id_seq'::regclass) not null
		constraint snailmail_confirm_followup_pkey
			primary key,
	followup_id integer
		constraint snailmail_confirm_followup_followup_id_fkey
			references followup_send
				on delete set null,
	model_name varchar,
	create_uid integer
		constraint snailmail_confirm_followup_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_confirm_followup_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_confirm_followup is 'Snailmail Confirm Followup';

comment on column snailmail_confirm_followup.followup_id is 'Followup';

comment on column snailmail_confirm_followup.model_name is 'Model Name';

comment on column snailmail_confirm_followup.create_uid is 'Created by';

comment on column snailmail_confirm_followup.create_date is 'Created on';

comment on column snailmail_confirm_followup.write_uid is 'Last Updated by';

comment on column snailmail_confirm_followup.write_date is 'Last Updated on';

alter table snailmail_confirm_followup owner to postgres;

create table snailmail_confirm_invoice
(
	id integer default nextval('snailmail_confirm_invoice_id_seq'::regclass) not null
		constraint snailmail_confirm_invoice_pkey
			primary key,
	invoice_send_id integer
		constraint snailmail_confirm_invoice_invoice_send_id_fkey
			references account_invoice_send
				on delete set null,
	model_name varchar,
	create_uid integer
		constraint snailmail_confirm_invoice_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_confirm_invoice_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_confirm_invoice is 'Snailmail Confirm Invoice';

comment on column snailmail_confirm_invoice.invoice_send_id is 'Invoice Send';

comment on column snailmail_confirm_invoice.model_name is 'Model Name';

comment on column snailmail_confirm_invoice.create_uid is 'Created by';

comment on column snailmail_confirm_invoice.create_date is 'Created on';

comment on column snailmail_confirm_invoice.write_uid is 'Last Updated by';

comment on column snailmail_confirm_invoice.write_date is 'Last Updated on';

alter table snailmail_confirm_invoice owner to postgres;

create table snailmail_letter_cancel
(
	id integer default nextval('snailmail_letter_cancel_id_seq'::regclass) not null
		constraint snailmail_letter_cancel_pkey
			primary key,
	model varchar,
	create_uid integer
		constraint snailmail_letter_cancel_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_letter_cancel_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_letter_cancel is 'Dismiss notification for resend by model';

comment on column snailmail_letter_cancel.model is 'Model';

comment on column snailmail_letter_cancel.create_uid is 'Created by';

comment on column snailmail_letter_cancel.create_date is 'Created on';

comment on column snailmail_letter_cancel.write_uid is 'Last Updated by';

comment on column snailmail_letter_cancel.write_date is 'Last Updated on';

alter table snailmail_letter_cancel owner to postgres;

create table snailmail_letter_format_error
(
	id integer default nextval('snailmail_letter_format_error_id_seq'::regclass) not null
		constraint snailmail_letter_format_error_pkey
			primary key,
	message_id integer
		constraint snailmail_letter_format_error_message_id_fkey
			references mail_message
				on delete set null,
	snailmail_cover boolean,
	create_uid integer
		constraint snailmail_letter_format_error_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_letter_format_error_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_letter_format_error is 'Format Error Sending a Snailmail Letter';

comment on column snailmail_letter_format_error.message_id is 'Message';

comment on column snailmail_letter_format_error.snailmail_cover is 'Add a Cover Page';

comment on column snailmail_letter_format_error.create_uid is 'Created by';

comment on column snailmail_letter_format_error.create_date is 'Created on';

comment on column snailmail_letter_format_error.write_uid is 'Last Updated by';

comment on column snailmail_letter_format_error.write_date is 'Last Updated on';

alter table snailmail_letter_format_error owner to postgres;

create table stock_backorder_confirmation
(
	id integer default nextval('stock_backorder_confirmation_id_seq'::regclass) not null
		constraint stock_backorder_confirmation_pkey
			primary key,
	show_transfers boolean,
	create_uid integer
		constraint stock_backorder_confirmation_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_backorder_confirmation_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_backorder_confirmation is 'Backorder Confirmation';

comment on column stock_backorder_confirmation.show_transfers is 'Show Transfers';

comment on column stock_backorder_confirmation.create_uid is 'Created by';

comment on column stock_backorder_confirmation.create_date is 'Created on';

comment on column stock_backorder_confirmation.write_uid is 'Last Updated by';

comment on column stock_backorder_confirmation.write_date is 'Last Updated on';

alter table stock_backorder_confirmation owner to postgres;

create table stock_immediate_transfer
(
	id integer default nextval('stock_immediate_transfer_id_seq'::regclass) not null
		constraint stock_immediate_transfer_pkey
			primary key,
	show_transfers boolean,
	create_uid integer
		constraint stock_immediate_transfer_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_immediate_transfer_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_immediate_transfer is 'Immediate Transfer';

comment on column stock_immediate_transfer.show_transfers is 'Show Transfers';

comment on column stock_immediate_transfer.create_uid is 'Created by';

comment on column stock_immediate_transfer.create_date is 'Created on';

comment on column stock_immediate_transfer.write_uid is 'Last Updated by';

comment on column stock_immediate_transfer.write_date is 'Last Updated on';

alter table stock_immediate_transfer owner to postgres;

create table stock_inventory
(
	id integer default nextval('stock_inventory_id_seq'::regclass) not null
		constraint stock_inventory_pkey
			primary key,
	message_main_attachment_id integer
		constraint stock_inventory_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	name varchar not null,
	date timestamp not null,
	state varchar,
	company_id integer not null,
	start_empty boolean,
	prefill_counted_quantity varchar,
	exhausted boolean,
	create_uid integer
		constraint stock_inventory_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_inventory_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	accounting_date date
);

comment on table stock_inventory is 'Inventory';

comment on column stock_inventory.message_main_attachment_id is 'Main Attachment';

comment on column stock_inventory.name is 'Inventory Reference';

comment on column stock_inventory.date is 'Inventory Date';

comment on column stock_inventory.state is 'Status';

comment on column stock_inventory.company_id is 'Company';

comment on column stock_inventory.start_empty is 'Empty Inventory';

comment on column stock_inventory.prefill_counted_quantity is 'Counted Quantities';

comment on column stock_inventory.exhausted is 'Include Exhausted Products';

comment on column stock_inventory.create_uid is 'Created by';

comment on column stock_inventory.create_date is 'Created on';

comment on column stock_inventory.write_uid is 'Last Updated by';

comment on column stock_inventory.write_date is 'Last Updated on';

comment on column stock_inventory.accounting_date is 'Accounting Date';

alter table stock_inventory owner to postgres;

create index stock_inventory_company_id_index
	on stock_inventory (company_id);

create index stock_inventory_message_main_attachment_id_index
	on stock_inventory (message_main_attachment_id);

create index stock_inventory_state_index
	on stock_inventory (state);

create table stock_location
(
	id integer default nextval('stock_location_id_seq'::regclass) not null
		constraint stock_location_pkey
			primary key,
	name varchar not null,
	complete_name varchar,
	active boolean,
	usage varchar not null,
	location_id integer
		constraint stock_location_location_id_fkey
			references stock_location
				on delete cascade,
	comment text,
	posx integer,
	posy integer,
	posz integer,
	parent_path varchar,
	company_id integer,
	scrap_location boolean,
	return_location boolean,
	removal_strategy_id integer
		constraint stock_location_removal_strategy_id_fkey
			references product_removal
				on delete set null,
	barcode varchar,
	create_uid integer
		constraint stock_location_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_location_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	valuation_in_account_id integer
		constraint stock_location_valuation_in_account_id_fkey
			references account_account
				on delete set null,
	valuation_out_account_id integer
		constraint stock_location_valuation_out_account_id_fkey
			references account_account
				on delete set null,
	constraint stock_location_barcode_company_uniq
		unique (barcode, company_id)
);

comment on table stock_location is 'Inventory Locations';

comment on column stock_location.name is 'Location Name';

comment on column stock_location.complete_name is 'Full Location Name';

comment on column stock_location.active is 'Active';

comment on column stock_location.usage is 'Location Type';

comment on column stock_location.location_id is 'Parent Location';

comment on column stock_location.comment is 'Additional Information';

comment on column stock_location.posx is 'Corridor (X)';

comment on column stock_location.posy is 'Shelves (Y)';

comment on column stock_location.posz is 'Height (Z)';

comment on column stock_location.parent_path is 'Parent Path';

comment on column stock_location.company_id is 'Company';

comment on column stock_location.scrap_location is 'Is a Scrap Location?';

comment on column stock_location.return_location is 'Is a Return Location?';

comment on column stock_location.removal_strategy_id is 'Removal Strategy';

comment on column stock_location.barcode is 'Barcode';

comment on column stock_location.create_uid is 'Created by';

comment on column stock_location.create_date is 'Created on';

comment on column stock_location.write_uid is 'Last Updated by';

comment on column stock_location.write_date is 'Last Updated on';

comment on column stock_location.valuation_in_account_id is 'Stock Valuation Account (Incoming)';

comment on column stock_location.valuation_out_account_id is 'Stock Valuation Account (Outgoing)';

alter table stock_location owner to postgres;

create table res_company
(
	id integer default nextval('res_company_id_seq'::regclass) not null
		constraint res_company_pkey
			primary key,
	name varchar not null
		constraint res_company_name_uniq
			unique,
	partner_id integer not null
		constraint res_company_partner_id_fkey
			references res_partner
				on delete restrict,
	currency_id integer not null
		constraint res_company_currency_id_fkey
			references res_currency
				on delete restrict,
	sequence integer,
	create_date timestamp,
	parent_id integer
		constraint res_company_parent_id_fkey
			references res_company
				on delete set null,
	report_header text,
	report_footer text,
	logo_web bytea,
	email varchar,
	phone varchar,
	company_registry varchar,
	paperformat_id integer
		constraint res_company_paperformat_id_fkey
			references report_paperformat
				on delete set null,
	external_report_layout_id integer
		constraint res_company_external_report_layout_id_fkey
			references ir_ui_view
				on delete set null,
	base_onboarding_company_state varchar,
	font varchar,
	primary_color varchar,
	secondary_color varchar,
	create_uid integer
		constraint res_company_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint res_company_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	resource_calendar_id integer
		constraint res_company_resource_calendar_id_fkey
			references resource_calendar
				on delete restrict,
	partner_gid integer,
	snailmail_color boolean,
	snailmail_cover boolean,
	snailmail_duplex boolean,
	fiscalyear_last_day integer not null,
	fiscalyear_last_month varchar not null,
	period_lock_date date,
	fiscalyear_lock_date date,
	tax_lock_date date,
	transfer_account_id integer
		constraint res_company_transfer_account_id_fkey
			references account_account
				on delete set null,
	expects_chart_of_accounts boolean,
	chart_template_id integer
		constraint res_company_chart_template_id_fkey
			references account_chart_template
				on delete set null,
	bank_account_code_prefix varchar,
	cash_account_code_prefix varchar,
	default_cash_difference_income_account_id integer
		constraint res_company_default_cash_difference_income_account_id_fkey
			references account_account
				on delete set null,
	default_cash_difference_expense_account_id integer
		constraint res_company_default_cash_difference_expense_account_id_fkey
			references account_account
				on delete set null,
	account_journal_suspense_account_id integer
		constraint res_company_account_journal_suspense_account_id_fkey
			references account_account
				on delete set null,
	transfer_account_code_prefix varchar,
	account_sale_tax_id integer
		constraint res_company_account_sale_tax_id_fkey
			references account_tax
				on delete set null,
	account_purchase_tax_id integer
		constraint res_company_account_purchase_tax_id_fkey
			references account_tax
				on delete set null,
	tax_calculation_rounding_method varchar,
	currency_exchange_journal_id integer
		constraint res_company_currency_exchange_journal_id_fkey
			references account_journal
				on delete set null,
	income_currency_exchange_account_id integer
		constraint res_company_income_currency_exchange_account_id_fkey
			references account_account
				on delete set null,
	expense_currency_exchange_account_id integer
		constraint res_company_expense_currency_exchange_account_id_fkey
			references account_account
				on delete set null,
	anglo_saxon_accounting boolean,
	property_stock_account_input_categ_id integer
		constraint res_company_property_stock_account_input_categ_id_fkey
			references account_account
				on delete set null,
	property_stock_account_output_categ_id integer
		constraint res_company_property_stock_account_output_categ_id_fkey
			references account_account
				on delete set null,
	property_stock_valuation_account_id integer
		constraint res_company_property_stock_valuation_account_id_fkey
			references account_account
				on delete set null,
	tax_exigibility boolean,
	account_tax_fiscal_country_id integer
		constraint res_company_account_tax_fiscal_country_id_fkey
			references res_country
				on delete set null,
	incoterm_id integer
		constraint res_company_incoterm_id_fkey
			references account_incoterms
				on delete set null,
	qr_code boolean,
	invoice_is_email boolean,
	invoice_is_print boolean,
	account_opening_move_id integer
		constraint res_company_account_opening_move_id_fkey
			references account_move
				on delete set null,
	account_opening_date date not null,
	account_setup_bank_data_state varchar,
	account_setup_fy_data_state varchar,
	account_setup_coa_state varchar,
	account_onboarding_invoice_layout_state varchar,
	account_onboarding_create_invoice_state varchar,
	account_onboarding_sale_tax_state varchar,
	account_invoice_onboarding_state varchar,
	account_dashboard_onboarding_state varchar,
	invoice_terms text,
	account_setup_bill_state varchar,
	account_default_pos_receivable_account_id integer
		constraint res_company_account_default_pos_receivable_account_id_fkey
			references account_account
				on delete set null,
	expense_accrual_account_id integer
		constraint res_company_expense_accrual_account_id_fkey
			references account_account
				on delete set null,
	revenue_accrual_account_id integer
		constraint res_company_revenue_accrual_account_id_fkey
			references account_account
				on delete set null,
	automatic_entry_default_journal_id integer
		constraint res_company_automatic_entry_default_journal_id_fkey
			references account_journal
				on delete set null,
	tax_cash_basis_journal_id integer
		constraint res_company_tax_cash_basis_journal_id_fkey
			references account_journal
				on delete set null,
	account_cash_basis_base_account_id integer
		constraint res_company_account_cash_basis_base_account_id_fkey
			references account_account
				on delete set null,
	invoicing_switch_threshold date,
	extract_show_ocr_option_selection varchar,
	extract_single_line_per_tax boolean,
	currency_interval_unit varchar,
	currency_next_execution_date date,
	currency_provider varchar,
	payment_acquirer_onboarding_state varchar,
	payment_onboarding_payment_method varchar,
	invoice_is_snailmail boolean,
	totals_below_sections boolean,
	account_tax_periodicity varchar,
	account_tax_periodicity_reminder_day integer,
	account_tax_original_periodicity_reminder_day integer,
	account_tax_periodicity_journal_id integer
		constraint res_company_account_tax_periodicity_journal_id_fkey
			references account_journal
				on delete set null,
	account_tax_next_activity_type integer
		constraint res_company_account_tax_next_activity_type_fkey
			references mail_activity_type
				on delete set null,
	account_revaluation_journal_id integer
		constraint res_company_account_revaluation_journal_id_fkey
			references account_journal
				on delete set null,
	account_revaluation_expense_provision_account_id integer
		constraint res_company_account_revaluation_expense_provision_account__fkey
			references account_account
				on delete set null,
	account_revaluation_income_provision_account_id integer
		constraint res_company_account_revaluation_income_provision_account_i_fkey
			references account_account
				on delete set null,
	yodlee_access_token varchar,
	yodlee_user_login varchar,
	yodlee_user_password varchar,
	yodlee_user_access_token varchar,
	gain_account_id integer
		constraint res_company_gain_account_id_fkey
			references account_account
				on delete set null,
	loss_account_id integer
		constraint res_company_loss_account_id_fkey
			references account_account
				on delete set null,
	portal_confirmation_sign boolean,
	portal_confirmation_pay boolean,
	quotation_validity_days integer,
	sale_quotation_onboarding_state varchar,
	sale_onboarding_order_confirmation_state varchar,
	sale_onboarding_sample_quotation_state varchar,
	sale_onboarding_payment_method varchar,
	sale_order_template_id integer,
	nomenclature_id integer
		constraint res_company_nomenclature_id_fkey
			references barcode_nomenclature
				on delete set null,
	internal_transit_location_id integer
		constraint res_company_internal_transit_location_id_fkey
			references stock_location
				on delete restrict,
	stock_move_email_validation boolean,
	stock_mail_confirmation_template_id integer
		constraint res_company_stock_mail_confirmation_template_id_fkey
			references mail_template
				on delete set null,
	stock_move_sms_validation boolean,
	stock_sms_confirmation_template_id integer
		constraint res_company_stock_sms_confirmation_template_id_fkey
			references sms_template
				on delete set null,
	has_received_warning_stock_sms boolean,
	security_lead double precision not null,
	po_lead double precision not null,
	po_lock varchar,
	po_double_validation varchar,
	po_double_validation_amount numeric,
	days_to_purchase double precision,
	social_twitter varchar,
	social_facebook varchar,
	social_github varchar,
	social_linkedin varchar,
	social_youtube varchar,
	social_instagram varchar
);

comment on column res_company.parent_id is 'Parent Company';

comment on column res_company.report_header is 'Company Tagline';

comment on column res_company.report_footer is 'Report Footer';

comment on column res_company.logo_web is 'Logo Web';

comment on column res_company.email is 'Email';

comment on column res_company.phone is 'Phone';

comment on column res_company.company_registry is 'Company Registry';

comment on column res_company.paperformat_id is 'Paper format';

comment on column res_company.external_report_layout_id is 'Document Template';

comment on column res_company.base_onboarding_company_state is 'State of the onboarding company step';

comment on column res_company.font is 'Font';

comment on column res_company.primary_color is 'Primary Color';

comment on column res_company.secondary_color is 'Secondary Color';

comment on column res_company.create_uid is 'Created by';

comment on column res_company.write_uid is 'Last Updated by';

comment on column res_company.write_date is 'Last Updated on';

comment on column res_company.resource_calendar_id is 'Default Working Hours';

comment on column res_company.partner_gid is 'Company database ID';

comment on column res_company.snailmail_color is 'Color';

comment on column res_company.snailmail_cover is 'Add a Cover Page';

comment on column res_company.snailmail_duplex is 'Both sides';

comment on column res_company.fiscalyear_last_day is 'Fiscalyear Last Day';

comment on column res_company.fiscalyear_last_month is 'Fiscalyear Last Month';

comment on column res_company.period_lock_date is 'Lock Date for Non-Advisers';

comment on column res_company.fiscalyear_lock_date is 'Lock Date';

comment on column res_company.tax_lock_date is 'Tax Lock Date';

comment on column res_company.transfer_account_id is 'Inter-Banks Transfer Account';

comment on column res_company.expects_chart_of_accounts is 'Expects a Chart of Accounts';

comment on column res_company.chart_template_id is 'Chart Template';

comment on column res_company.bank_account_code_prefix is 'Prefix of the bank accounts';

comment on column res_company.cash_account_code_prefix is 'Prefix of the cash accounts';

comment on column res_company.default_cash_difference_income_account_id is 'Cash Difference Income Account';

comment on column res_company.default_cash_difference_expense_account_id is 'Cash Difference Expense Account';

comment on column res_company.account_journal_suspense_account_id is 'Journal Suspense Account';

comment on column res_company.transfer_account_code_prefix is 'Prefix of the transfer accounts';

comment on column res_company.account_sale_tax_id is 'Default Sale Tax';

comment on column res_company.account_purchase_tax_id is 'Default Purchase Tax';

comment on column res_company.tax_calculation_rounding_method is 'Tax Calculation Rounding Method';

comment on column res_company.currency_exchange_journal_id is 'Exchange Gain or Loss Journal';

comment on column res_company.income_currency_exchange_account_id is 'Gain Exchange Rate Account';

comment on column res_company.expense_currency_exchange_account_id is 'Loss Exchange Rate Account';

comment on column res_company.anglo_saxon_accounting is 'Use anglo-saxon accounting';

comment on column res_company.property_stock_account_input_categ_id is 'Input Account for Stock Valuation';

comment on column res_company.property_stock_account_output_categ_id is 'Output Account for Stock Valuation';

comment on column res_company.property_stock_valuation_account_id is 'Account Template for Stock Valuation';

comment on column res_company.tax_exigibility is 'Use Cash Basis';

comment on column res_company.account_tax_fiscal_country_id is 'Fiscal Country';

comment on column res_company.incoterm_id is 'Default incoterm';

comment on column res_company.qr_code is 'Display QR-code on invoices';

comment on column res_company.invoice_is_email is 'Email by default';

comment on column res_company.invoice_is_print is 'Print by default';

comment on column res_company.account_opening_move_id is 'Opening Journal Entry';

comment on column res_company.account_opening_date is 'Opening Entry';

comment on column res_company.account_setup_bank_data_state is 'State of the onboarding bank data step';

comment on column res_company.account_setup_fy_data_state is 'State of the onboarding fiscal year step';

comment on column res_company.account_setup_coa_state is 'State of the onboarding charts of account step';

comment on column res_company.account_onboarding_invoice_layout_state is 'State of the onboarding invoice layout step';

comment on column res_company.account_onboarding_create_invoice_state is 'State of the onboarding create invoice step';

comment on column res_company.account_onboarding_sale_tax_state is 'State of the onboarding sale tax step';

comment on column res_company.account_invoice_onboarding_state is 'State of the account invoice onboarding panel';

comment on column res_company.account_dashboard_onboarding_state is 'State of the account dashboard onboarding panel';

comment on column res_company.invoice_terms is 'Default Terms and Conditions';

comment on column res_company.account_setup_bill_state is 'State of the onboarding bill step';

comment on column res_company.account_default_pos_receivable_account_id is 'Default PoS Receivable Account';

comment on column res_company.expense_accrual_account_id is 'Expense Accrual Account';

comment on column res_company.revenue_accrual_account_id is 'Revenue Accrual Account';

comment on column res_company.automatic_entry_default_journal_id is 'Automatic Entry Default Journal';

comment on column res_company.tax_cash_basis_journal_id is 'Cash Basis Journal';

comment on column res_company.account_cash_basis_base_account_id is 'Base Tax Received Account';

comment on column res_company.invoicing_switch_threshold is 'Invoicing Switch Threshold';

comment on column res_company.extract_show_ocr_option_selection is 'Send mode on invoices attachments';

comment on column res_company.extract_single_line_per_tax is 'OCR Single Invoice Line Per Tax';

comment on column res_company.currency_interval_unit is 'Interval Unit';

comment on column res_company.currency_next_execution_date is 'Next Execution Date';

comment on column res_company.currency_provider is 'Service Provider';

comment on column res_company.payment_acquirer_onboarding_state is 'State of the onboarding payment acquirer step';

comment on column res_company.payment_onboarding_payment_method is 'Selected onboarding payment method';

comment on column res_company.invoice_is_snailmail is 'Send by Post';

comment on column res_company.totals_below_sections is 'Add totals below sections';

comment on column res_company.account_tax_periodicity is 'Delay units';

comment on column res_company.account_tax_periodicity_reminder_day is 'Start from';

comment on column res_company.account_tax_original_periodicity_reminder_day is 'Start from original';

comment on column res_company.account_tax_periodicity_journal_id is 'Journal';

comment on column res_company.account_tax_next_activity_type is 'Account Tax Next Activity Type';

comment on column res_company.account_revaluation_journal_id is 'Account Revaluation Journal';

comment on column res_company.account_revaluation_expense_provision_account_id is 'Expense Provision Account';

comment on column res_company.account_revaluation_income_provision_account_id is 'Income Provision Account';

comment on column res_company.yodlee_access_token is 'access_token';

comment on column res_company.yodlee_user_login is 'Yodlee login';

comment on column res_company.yodlee_user_password is 'Yodlee password';

comment on column res_company.yodlee_user_access_token is 'Yodlee access token';

comment on column res_company.gain_account_id is 'Gain Account';

comment on column res_company.loss_account_id is 'Loss Account';

comment on column res_company.portal_confirmation_sign is 'Online Signature';

comment on column res_company.portal_confirmation_pay is 'Online Payment';

comment on column res_company.quotation_validity_days is 'Default Quotation Validity (Days)';

comment on column res_company.sale_quotation_onboarding_state is 'State of the sale onboarding panel';

comment on column res_company.sale_onboarding_order_confirmation_state is 'State of the onboarding confirmation order step';

comment on column res_company.sale_onboarding_sample_quotation_state is 'State of the onboarding sample quotation step';

comment on column res_company.sale_onboarding_payment_method is 'Sale onboarding selected payment method';

comment on column res_company.sale_order_template_id is 'Default Sale Template';

comment on column res_company.nomenclature_id is 'Nomenclature';

comment on column res_company.internal_transit_location_id is 'Internal Transit Location';

comment on column res_company.stock_move_email_validation is 'Email Confirmation picking';

comment on column res_company.stock_mail_confirmation_template_id is 'Email Template confirmation picking';

comment on column res_company.stock_move_sms_validation is 'SMS Confirmation';

comment on column res_company.stock_sms_confirmation_template_id is 'SMS Template';

comment on column res_company.has_received_warning_stock_sms is 'Has Received Warning Stock Sms';

comment on column res_company.security_lead is 'Sales Safety Days';

comment on column res_company.po_lead is 'Purchase Lead Time';

comment on column res_company.po_lock is 'Purchase Order Modification';

comment on column res_company.po_double_validation is 'Levels of Approvals';

comment on column res_company.po_double_validation_amount is 'Double validation amount';

comment on column res_company.days_to_purchase is 'Days to Purchase';

comment on column res_company.social_twitter is 'Twitter Account';

comment on column res_company.social_facebook is 'Facebook Account';

comment on column res_company.social_github is 'GitHub Account';

comment on column res_company.social_linkedin is 'LinkedIn Account';

comment on column res_company.social_youtube is 'Youtube Account';

comment on column res_company.social_instagram is 'Instagram Account';

alter table res_company owner to postgres;

create table account_analytic_tag
(
	id integer default nextval('account_analytic_tag_id_seq'::regclass) not null
		constraint account_analytic_tag_pkey
			primary key,
	name varchar not null,
	color integer,
	active boolean,
	active_analytic_distribution boolean,
	company_id integer
		constraint account_analytic_tag_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint account_analytic_tag_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_analytic_tag_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_analytic_tag is 'Analytic Tags';

comment on column account_analytic_tag.name is 'Analytic Tag';

comment on column account_analytic_tag.color is 'Color Index';

comment on column account_analytic_tag.active is 'Active';

comment on column account_analytic_tag.active_analytic_distribution is 'Analytic Distribution';

comment on column account_analytic_tag.company_id is 'Company';

comment on column account_analytic_tag.create_uid is 'Created by';

comment on column account_analytic_tag.create_date is 'Created on';

comment on column account_analytic_tag.write_uid is 'Last Updated by';

comment on column account_analytic_tag.write_date is 'Last Updated on';

alter table account_analytic_tag owner to postgres;

create table account_analytic_distribution
(
	id integer default nextval('account_analytic_distribution_id_seq'::regclass) not null
		constraint account_analytic_distribution_pkey
			primary key,
	account_id integer not null
		constraint account_analytic_distribution_account_id_fkey
			references account_analytic_account
				on delete restrict,
	percentage double precision not null,
	tag_id integer not null
		constraint account_analytic_distribution_tag_id_fkey
			references account_analytic_tag
				on delete restrict,
	create_uid integer
		constraint account_analytic_distribution_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_analytic_distribution_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_analytic_distribution is 'Analytic Account Distribution';

comment on column account_analytic_distribution.account_id is 'Analytic Account';

comment on column account_analytic_distribution.percentage is 'Percentage';

comment on column account_analytic_distribution.tag_id is 'Parent tag';

comment on column account_analytic_distribution.create_uid is 'Created by';

comment on column account_analytic_distribution.create_date is 'Created on';

comment on column account_analytic_distribution.write_uid is 'Last Updated by';

comment on column account_analytic_distribution.write_date is 'Last Updated on';

alter table account_analytic_distribution owner to postgres;

create index account_analytic_tag_name_index
	on account_analytic_tag (name);

create table account_analytic_tag_account_asset_rel
(
	account_asset_id integer not null
		constraint account_analytic_tag_account_asset_rel_account_asset_id_fkey
			references account_asset
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_analytic_tag_account_asset_account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_tag_account_asset_rel_pkey
		primary key (account_asset_id, account_analytic_tag_id)
);

comment on table account_analytic_tag_account_asset_rel is 'RELATION BETWEEN account_asset AND account_analytic_tag';

alter table account_analytic_tag_account_asset_rel owner to postgres;

create index account_analytic_tag_account__account_analytic_tag_id_acco_idx1
	on account_analytic_tag_account_asset_rel (account_analytic_tag_id, account_asset_id);

create table account_automatic_entry_wizard
(
	id integer default nextval('account_automatic_entry_wizard_id_seq'::regclass) not null
		constraint account_automatic_entry_wizard_pkey
			primary key,
	action varchar not null,
	date date not null,
	company_id integer not null
		constraint account_automatic_entry_wizard_company_id_fkey
			references res_company
				on delete cascade,
	percentage double precision,
	total_amount numeric,
	account_type varchar,
	destination_account_id integer
		constraint account_automatic_entry_wizard_destination_account_id_fkey
			references account_account
				on delete set null,
	create_uid integer
		constraint account_automatic_entry_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_automatic_entry_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_automatic_entry_wizard is 'Create Automatic Entries';

comment on column account_automatic_entry_wizard.action is 'Action';

comment on column account_automatic_entry_wizard.date is 'Date';

comment on column account_automatic_entry_wizard.company_id is 'Company';

comment on column account_automatic_entry_wizard.percentage is 'Percentage';

comment on column account_automatic_entry_wizard.total_amount is 'Total Amount';

comment on column account_automatic_entry_wizard.account_type is 'Account Type';

comment on column account_automatic_entry_wizard.destination_account_id is 'To';

comment on column account_automatic_entry_wizard.create_uid is 'Created by';

comment on column account_automatic_entry_wizard.create_date is 'Created on';

comment on column account_automatic_entry_wizard.write_uid is 'Last Updated by';

comment on column account_automatic_entry_wizard.write_date is 'Last Updated on';

alter table account_automatic_entry_wizard owner to postgres;

create table account_common_journal_report
(
	id integer default nextval('account_common_journal_report_id_seq'::regclass) not null
		constraint account_common_journal_report_pkey
			primary key,
	amount_currency boolean,
	company_id integer not null
		constraint account_common_journal_report_company_id_fkey
			references res_company
				on delete cascade,
	date_from date,
	date_to date,
	target_move varchar not null,
	create_uid integer
		constraint account_common_journal_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_common_journal_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_common_journal_report is 'Common Journal Report';

comment on column account_common_journal_report.amount_currency is 'With Currency';

comment on column account_common_journal_report.company_id is 'Company';

comment on column account_common_journal_report.date_from is 'Start Date';

comment on column account_common_journal_report.date_to is 'End Date';

comment on column account_common_journal_report.target_move is 'Target Moves';

comment on column account_common_journal_report.create_uid is 'Created by';

comment on column account_common_journal_report.create_date is 'Created on';

comment on column account_common_journal_report.write_uid is 'Last Updated by';

comment on column account_common_journal_report.write_date is 'Last Updated on';

alter table account_common_journal_report owner to postgres;

create table account_common_journal_report_account_journal_rel
(
	account_common_journal_report_id integer not null
		constraint account_common_journal_report_account_common_journal_repor_fkey
			references account_common_journal_report
				on delete cascade,
	account_journal_id integer not null
		constraint account_common_journal_report_account_j_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_common_journal_report_account_journal_rel_pkey
		primary key (account_common_journal_report_id, account_journal_id)
);

comment on table account_common_journal_report_account_journal_rel is 'RELATION BETWEEN account_common_journal_report AND account_journal';

alter table account_common_journal_report_account_journal_rel owner to postgres;

create index account_common_journal_report_account_journal_id_account_co_idx
	on account_common_journal_report_account_journal_rel (account_journal_id, account_common_journal_report_id);

create table account_common_report
(
	id integer default nextval('account_common_report_id_seq'::regclass) not null
		constraint account_common_report_pkey
			primary key,
	company_id integer not null
		constraint account_common_report_company_id_fkey
			references res_company
				on delete cascade,
	date_from date,
	date_to date,
	target_move varchar not null,
	create_uid integer
		constraint account_common_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_common_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_common_report is 'Account Common Report';

comment on column account_common_report.company_id is 'Company';

comment on column account_common_report.date_from is 'Start Date';

comment on column account_common_report.date_to is 'End Date';

comment on column account_common_report.target_move is 'Target Moves';

comment on column account_common_report.create_uid is 'Created by';

comment on column account_common_report.create_date is 'Created on';

comment on column account_common_report.write_uid is 'Last Updated by';

comment on column account_common_report.write_date is 'Last Updated on';

alter table account_common_report owner to postgres;

create table account_common_report_account_journal_rel
(
	account_common_report_id integer not null
		constraint account_common_report_account_jou_account_common_report_id_fkey
			references account_common_report
				on delete cascade,
	account_journal_id integer not null
		constraint account_common_report_account_journal_r_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_common_report_account_journal_rel_pkey
		primary key (account_common_report_id, account_journal_id)
);

comment on table account_common_report_account_journal_rel is 'RELATION BETWEEN account_common_report AND account_journal';

alter table account_common_report_account_journal_rel owner to postgres;

create index account_common_report_account_account_journal_id_account_co_idx
	on account_common_report_account_journal_rel (account_journal_id, account_common_report_id);

create table account_financial_html_report
(
	id integer default nextval('account_financial_html_report_id_seq'::regclass) not null
		constraint account_financial_html_report_pkey
			primary key,
	name varchar,
	date_range boolean,
	comparison boolean,
	analytic boolean,
	show_journal_filter boolean,
	unfold_all_filter boolean,
	company_id integer
		constraint account_financial_html_report_company_id_fkey
			references res_company
				on delete set null,
	generated_menu_id integer
		constraint account_financial_html_report_generated_menu_id_fkey
			references ir_ui_menu
				on delete set null,
	tax_report boolean,
	create_uid integer
		constraint account_financial_html_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_financial_html_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	type_financial_report_mg varchar,
	monetary_unit_mg boolean,
	note_mg boolean,
	n_gross_mg boolean,
	n_amort_prov_mg boolean,
	last_year_mg boolean
);

comment on table account_financial_html_report is 'Account Report (HTML)';

comment on column account_financial_html_report.name is 'Name';

comment on column account_financial_html_report.date_range is 'Based on date ranges';

comment on column account_financial_html_report.comparison is 'Allow comparison';

comment on column account_financial_html_report.analytic is 'Allow analytic filters';

comment on column account_financial_html_report.show_journal_filter is 'Allow filtering by journals';

comment on column account_financial_html_report.unfold_all_filter is 'Show unfold all filter';

comment on column account_financial_html_report.company_id is 'Company';

comment on column account_financial_html_report.generated_menu_id is 'Menu Item';

comment on column account_financial_html_report.tax_report is 'Tax Report';

comment on column account_financial_html_report.create_uid is 'Created by';

comment on column account_financial_html_report.create_date is 'Created on';

comment on column account_financial_html_report.write_uid is 'Last Updated by';

comment on column account_financial_html_report.write_date is 'Last Updated on';

comment on column account_financial_html_report.type_financial_report_mg is 'Type de rapport financier';

comment on column account_financial_html_report.monetary_unit_mg is 'Unité monétaire';

comment on column account_financial_html_report.note_mg is 'Note';

comment on column account_financial_html_report.n_gross_mg is 'N Brut';

comment on column account_financial_html_report.n_amort_prov_mg is 'N Amort/prov';

comment on column account_financial_html_report.last_year_mg is 'N-1';

alter table account_financial_html_report owner to postgres;

create table account_financial_html_report_ir_filters_rel
(
	account_financial_html_report_id integer not null
		constraint account_financial_html_report_account_financial_html_repor_fkey
			references account_financial_html_report
				on delete cascade,
	ir_filters_id integer not null,
	constraint account_financial_html_report_ir_filters_rel_pkey
		primary key (account_financial_html_report_id, ir_filters_id)
);

comment on table account_financial_html_report_ir_filters_rel is 'RELATION BETWEEN account_financial_html_report AND ir_filters';

alter table account_financial_html_report_ir_filters_rel owner to postgres;

create index account_financial_html_report_ir_filters_id_account_financi_idx
	on account_financial_html_report_ir_filters_rel (ir_filters_id, account_financial_html_report_id);

create table account_financial_html_report_line
(
	id integer default nextval('account_financial_html_report_line_id_seq'::regclass) not null
		constraint account_financial_html_report_line_pkey
			primary key,
	name varchar,
	code varchar
		constraint account_financial_html_report_line_code_uniq
			unique,
	financial_report_id integer
		constraint account_financial_html_report_line_financial_report_id_fkey
			references account_financial_html_report
				on delete set null,
	parent_id integer
		constraint account_financial_html_report_line_parent_id_fkey
			references account_financial_html_report_line
				on delete cascade,
	parent_path varchar,
	sequence integer,
	domain varchar,
	formulas varchar,
	groupby varchar,
	figure_type varchar not null,
	print_on_new_page boolean,
	green_on_positive boolean,
	level integer not null,
	special_date_changer varchar,
	show_domain varchar,
	hide_if_zero boolean,
	hide_if_empty boolean,
	action_id integer,
	create_uid integer
		constraint account_financial_html_report_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_financial_html_report_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	is_hidden boolean
);

comment on table account_financial_html_report_line is 'Account Report (HTML Line)';

comment on column account_financial_html_report_line.name is 'Section Name';

comment on column account_financial_html_report_line.code is 'Code';

comment on column account_financial_html_report_line.financial_report_id is 'Financial Report';

comment on column account_financial_html_report_line.parent_id is 'Parent';

comment on column account_financial_html_report_line.parent_path is 'Parent Path';

comment on column account_financial_html_report_line.sequence is 'Sequence';

comment on column account_financial_html_report_line.domain is 'Domain';

comment on column account_financial_html_report_line.formulas is 'Formulas';

comment on column account_financial_html_report_line.groupby is 'Group by';

comment on column account_financial_html_report_line.figure_type is 'Type';

comment on column account_financial_html_report_line.print_on_new_page is 'Print On New Page';

comment on column account_financial_html_report_line.green_on_positive is 'Is growth good when positive';

comment on column account_financial_html_report_line.level is 'Level';

comment on column account_financial_html_report_line.special_date_changer is 'Special Date Changer';

comment on column account_financial_html_report_line.show_domain is 'Show Domain';

comment on column account_financial_html_report_line.hide_if_zero is 'Hide If Zero';

comment on column account_financial_html_report_line.hide_if_empty is 'Hide If Empty';

comment on column account_financial_html_report_line.action_id is 'Action';

comment on column account_financial_html_report_line.create_uid is 'Created by';

comment on column account_financial_html_report_line.create_date is 'Created on';

comment on column account_financial_html_report_line.write_uid is 'Last Updated by';

comment on column account_financial_html_report_line.write_date is 'Last Updated on';

comment on column account_financial_html_report_line.is_hidden is 'Hide line in report';

alter table account_financial_html_report_line owner to postgres;

create index account_financial_html_report_line_parent_path_index
	on account_financial_html_report_line (parent_path);

create table account_financial_year_op
(
	id integer default nextval('account_financial_year_op_id_seq'::regclass) not null
		constraint account_financial_year_op_pkey
			primary key,
	company_id integer not null
		constraint account_financial_year_op_company_id_fkey
			references res_company
				on delete cascade,
	create_uid integer
		constraint account_financial_year_op_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_financial_year_op_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_financial_year_op is 'Opening Balance of Financial Year';

comment on column account_financial_year_op.company_id is 'Company';

comment on column account_financial_year_op.create_uid is 'Created by';

comment on column account_financial_year_op.create_date is 'Created on';

comment on column account_financial_year_op.write_uid is 'Last Updated by';

comment on column account_financial_year_op.write_date is 'Last Updated on';

alter table account_financial_year_op owner to postgres;

create table account_fiscal_year
(
	id integer default nextval('account_fiscal_year_id_seq'::regclass) not null
		constraint account_fiscal_year_pkey
			primary key,
	name varchar not null,
	date_from date not null,
	date_to date not null,
	company_id integer not null
		constraint account_fiscal_year_company_id_fkey
			references res_company
				on delete restrict,
	create_uid integer
		constraint account_fiscal_year_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_year_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_fiscal_year is 'Fiscal Year';

comment on column account_fiscal_year.name is 'Name';

comment on column account_fiscal_year.date_from is 'Start Date';

comment on column account_fiscal_year.date_to is 'End Date';

comment on column account_fiscal_year.company_id is 'Company';

comment on column account_fiscal_year.create_uid is 'Created by';

comment on column account_fiscal_year.create_date is 'Created on';

comment on column account_fiscal_year.write_uid is 'Last Updated by';

comment on column account_fiscal_year.write_date is 'Last Updated on';

alter table account_fiscal_year owner to postgres;

create table account_group
(
	id integer default nextval('account_group_id_seq'::regclass) not null
		constraint account_group_pkey
			primary key,
	parent_id integer
		constraint account_group_parent_id_fkey
			references account_group
				on delete cascade,
	parent_path varchar,
	name varchar not null,
	code_prefix_start varchar,
	code_prefix_end varchar,
	company_id integer not null
		constraint account_group_company_id_fkey
			references res_company
				on delete restrict,
	create_uid integer
		constraint account_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_group is 'Account Group';

comment on column account_group.parent_id is 'Parent';

comment on column account_group.parent_path is 'Parent Path';

comment on column account_group.name is 'Name';

comment on column account_group.code_prefix_start is 'Code Prefix Start';

comment on column account_group.code_prefix_end is 'Code Prefix End';

comment on column account_group.company_id is 'Company';

comment on column account_group.create_uid is 'Created by';

comment on column account_group.create_date is 'Created on';

comment on column account_group.write_uid is 'Last Updated by';

comment on column account_group.write_date is 'Last Updated on';

alter table account_group owner to postgres;

alter table account_account
	add constraint account_account_group_id_fkey
		foreign key (group_id) references account_group
			on delete set null;

create index account_group_parent_id_index
	on account_group (parent_id);

create index account_group_parent_path_index
	on account_group (parent_path);

create table account_journal_group
(
	id integer default nextval('account_journal_group_id_seq'::regclass) not null
		constraint account_journal_group_pkey
			primary key,
	name varchar not null,
	company_id integer not null
		constraint account_journal_group_company_id_fkey
			references res_company
				on delete restrict,
	sequence integer,
	create_uid integer
		constraint account_journal_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_journal_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_journal_group is 'Account Journal Group';

comment on column account_journal_group.name is 'Journal Group';

comment on column account_journal_group.company_id is 'Company';

comment on column account_journal_group.sequence is 'Sequence';

comment on column account_journal_group.create_uid is 'Created by';

comment on column account_journal_group.create_date is 'Created on';

comment on column account_journal_group.write_uid is 'Last Updated by';

comment on column account_journal_group.write_date is 'Last Updated on';

alter table account_journal_group owner to postgres;

create table account_journal_account_journal_group_rel
(
	account_journal_group_id integer not null
		constraint account_journal_account_journal_g_account_journal_group_id_fkey
			references account_journal_group
				on delete cascade,
	account_journal_id integer not null
		constraint account_journal_account_journal_group_r_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_journal_account_journal_group_rel_pkey
		primary key (account_journal_group_id, account_journal_id)
);

comment on table account_journal_account_journal_group_rel is 'RELATION BETWEEN account_journal_group AND account_journal';

alter table account_journal_account_journal_group_rel owner to postgres;

create index account_journal_account_journ_account_journal_id_account_jo_idx
	on account_journal_account_journal_group_rel (account_journal_id, account_journal_group_id);

create table account_move_reversal
(
	id integer default nextval('account_move_reversal_id_seq'::regclass) not null
		constraint account_move_reversal_pkey
			primary key,
	date_mode varchar not null,
	date date,
	reason varchar,
	refund_method varchar not null,
	journal_id integer
		constraint account_move_reversal_journal_id_fkey
			references account_journal
				on delete set null,
	company_id integer not null
		constraint account_move_reversal_company_id_fkey
			references res_company
				on delete cascade,
	create_uid integer
		constraint account_move_reversal_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_move_reversal_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_move_reversal is 'Account Move Reversal';

comment on column account_move_reversal.date_mode is 'Date Mode';

comment on column account_move_reversal.date is 'Reversal date';

comment on column account_move_reversal.reason is 'Reason';

comment on column account_move_reversal.refund_method is 'Credit Method';

comment on column account_move_reversal.journal_id is 'Use Specific Journal';

comment on column account_move_reversal.company_id is 'Company';

comment on column account_move_reversal.create_uid is 'Created by';

comment on column account_move_reversal.create_date is 'Created on';

comment on column account_move_reversal.write_uid is 'Last Updated by';

comment on column account_move_reversal.write_date is 'Last Updated on';

alter table account_move_reversal owner to postgres;

create table account_move_reversal_move
(
	reversal_id integer not null
		constraint account_move_reversal_move_reversal_id_fkey
			references account_move_reversal
				on delete cascade,
	move_id integer not null
		constraint account_move_reversal_move_move_id_fkey
			references account_move
				on delete cascade,
	constraint account_move_reversal_move_pkey
		primary key (reversal_id, move_id)
);

comment on table account_move_reversal_move is 'RELATION BETWEEN account_move_reversal AND account_move';

alter table account_move_reversal_move owner to postgres;

create index account_move_reversal_move_move_id_reversal_id_idx
	on account_move_reversal_move (move_id, reversal_id);

create table account_move_reversal_new_move
(
	reversal_id integer not null
		constraint account_move_reversal_new_move_reversal_id_fkey
			references account_move_reversal
				on delete cascade,
	new_move_id integer not null
		constraint account_move_reversal_new_move_new_move_id_fkey
			references account_move
				on delete cascade,
	constraint account_move_reversal_new_move_pkey
		primary key (reversal_id, new_move_id)
);

comment on table account_move_reversal_new_move is 'RELATION BETWEEN account_move_reversal AND account_move';

alter table account_move_reversal_new_move owner to postgres;

create index account_move_reversal_new_move_new_move_id_reversal_id_idx
	on account_move_reversal_new_move (new_move_id, reversal_id);

create table account_multicurrency_revaluation_wizard
(
	id integer default nextval('account_multicurrency_revaluation_wizard_id_seq'::regclass) not null
		constraint account_multicurrency_revaluation_wizard_pkey
			primary key,
	company_id integer
		constraint account_multicurrency_revaluation_wizard_company_id_fkey
			references res_company
				on delete set null,
	date date not null,
	reversal_date date not null,
	create_uid integer
		constraint account_multicurrency_revaluation_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_multicurrency_revaluation_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_multicurrency_revaluation_wizard is 'Multicurrency Revaluation Wizard';

comment on column account_multicurrency_revaluation_wizard.company_id is 'Company';

comment on column account_multicurrency_revaluation_wizard.date is 'Date';

comment on column account_multicurrency_revaluation_wizard.reversal_date is 'Reversal Date';

comment on column account_multicurrency_revaluation_wizard.create_uid is 'Created by';

comment on column account_multicurrency_revaluation_wizard.create_date is 'Created on';

comment on column account_multicurrency_revaluation_wizard.write_uid is 'Last Updated by';

comment on column account_multicurrency_revaluation_wizard.write_date is 'Last Updated on';

alter table account_multicurrency_revaluation_wizard owner to postgres;

create table account_online_provider
(
	id integer default nextval('account_online_provider_id_seq'::regclass) not null
		constraint account_online_provider_pkey
			primary key,
	name varchar,
	provider_type varchar,
	provider_account_identifier varchar,
	provider_identifier varchar,
	status varchar,
	status_code varchar,
	message varchar,
	action_required boolean,
	last_refresh timestamp,
	company_id integer not null
		constraint account_online_provider_company_id_fkey
			references res_company
				on delete restrict,
	message_main_attachment_id integer
		constraint account_online_provider_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint account_online_provider_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_provider_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	plaid_error_type varchar,
	plaid_item_id varchar,
	ponto_token varchar
);

comment on table account_online_provider is 'Provider for online account synchronization';

comment on column account_online_provider.name is 'Institution';

comment on column account_online_provider.provider_type is 'Provider Type';

comment on column account_online_provider.provider_account_identifier is 'Provider Account Identifier';

comment on column account_online_provider.provider_identifier is 'Provider Identifier';

comment on column account_online_provider.status is 'Synchronization status';

comment on column account_online_provider.status_code is 'Status Code';

comment on column account_online_provider.message is 'Message';

comment on column account_online_provider.action_required is 'Action Required';

comment on column account_online_provider.last_refresh is 'Last Refresh';

comment on column account_online_provider.company_id is 'Company';

comment on column account_online_provider.message_main_attachment_id is 'Main Attachment';

comment on column account_online_provider.create_uid is 'Created by';

comment on column account_online_provider.create_date is 'Created on';

comment on column account_online_provider.write_uid is 'Last Updated by';

comment on column account_online_provider.write_date is 'Last Updated on';

comment on column account_online_provider.plaid_error_type is 'Plaid Error Type';

comment on column account_online_provider.plaid_item_id is 'Plaid Item';

comment on column account_online_provider.ponto_token is 'Ponto Token';

alter table account_online_provider owner to postgres;

create table account_online_journal
(
	id integer default nextval('account_online_journal_id_seq'::regclass) not null
		constraint account_online_journal_pkey
			primary key,
	name varchar not null,
	account_online_provider_id integer
		constraint account_online_journal_account_online_provider_id_fkey
			references account_online_provider
				on delete cascade,
	account_number varchar,
	last_sync date,
	online_identifier varchar,
	balance double precision,
	create_uid integer
		constraint account_online_journal_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_journal_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	ponto_last_synchronization_identifier varchar,
	yodlee_account_status varchar,
	yodlee_status_code integer
);

comment on table account_online_journal is 'Interface for Online Account Journal';

comment on column account_online_journal.name is 'Journal Name';

comment on column account_online_journal.account_online_provider_id is 'Account Online Provider';

comment on column account_online_journal.account_number is 'Account Number';

comment on column account_online_journal.last_sync is 'Last synchronization';

comment on column account_online_journal.online_identifier is 'Online Identifier';

comment on column account_online_journal.balance is 'Balance';

comment on column account_online_journal.create_uid is 'Created by';

comment on column account_online_journal.create_date is 'Created on';

comment on column account_online_journal.write_uid is 'Last Updated by';

comment on column account_online_journal.write_date is 'Last Updated on';

comment on column account_online_journal.ponto_last_synchronization_identifier is 'Ponto Last Synchronization Identifier';

comment on column account_online_journal.yodlee_account_status is 'Yodlee Account Status';

comment on column account_online_journal.yodlee_status_code is 'Yodlee Status Code';

alter table account_online_journal owner to postgres;

alter table account_journal
	add constraint account_journal_account_online_journal_id_fkey
		foreign key (account_online_journal_id) references account_online_journal
			on delete set null;

create table account_online_link_wizard
(
	id integer default nextval('account_online_link_wizard_id_seq'::regclass) not null
		constraint account_online_link_wizard_pkey
			primary key,
	journal_id integer
		constraint account_online_link_wizard_journal_id_fkey
			references account_journal
				on delete set null,
	online_account_id integer
		constraint account_online_link_wizard_online_account_id_fkey
			references account_online_journal
				on delete set null,
	action varchar,
	account_online_wizard_id integer
		constraint account_online_link_wizard_account_online_wizard_id_fkey
			references account_online_wizard
				on delete set null,
	journal_statements_creation varchar,
	create_uid integer
		constraint account_online_link_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_link_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_online_link_wizard is 'Link synchronized account to a journal';

comment on column account_online_link_wizard.journal_id is 'Journal';

comment on column account_online_link_wizard.online_account_id is 'Online Account';

comment on column account_online_link_wizard.action is 'Action';

comment on column account_online_link_wizard.account_online_wizard_id is 'Account Online Wizard';

comment on column account_online_link_wizard.journal_statements_creation is 'Synchronization frequency';

comment on column account_online_link_wizard.create_uid is 'Created by';

comment on column account_online_link_wizard.create_date is 'Created on';

comment on column account_online_link_wizard.write_uid is 'Last Updated by';

comment on column account_online_link_wizard.write_date is 'Last Updated on';

alter table account_online_link_wizard owner to postgres;

create index account_online_provider_message_main_attachment_id_index
	on account_online_provider (message_main_attachment_id);

create table account_payment_term
(
	id integer default nextval('account_payment_term_id_seq'::regclass) not null
		constraint account_payment_term_pkey
			primary key,
	name varchar not null,
	active boolean,
	note text,
	company_id integer
		constraint account_payment_term_company_id_fkey
			references res_company
				on delete set null,
	sequence integer not null,
	create_uid integer
		constraint account_payment_term_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_payment_term_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_payment_term is 'Payment Terms';

comment on column account_payment_term.name is 'Payment Terms';

comment on column account_payment_term.active is 'Active';

comment on column account_payment_term.note is 'Description on the Invoice';

comment on column account_payment_term.company_id is 'Company';

comment on column account_payment_term.sequence is 'Sequence';

comment on column account_payment_term.create_uid is 'Created by';

comment on column account_payment_term.create_date is 'Created on';

comment on column account_payment_term.write_uid is 'Last Updated by';

comment on column account_payment_term.write_date is 'Last Updated on';

alter table account_payment_term owner to postgres;

alter table account_move
	add constraint account_move_invoice_payment_term_id_fkey
		foreign key (invoice_payment_term_id) references account_payment_term
			on delete set null;

create table account_payment_term_line
(
	id integer default nextval('account_payment_term_line_id_seq'::regclass) not null
		constraint account_payment_term_line_pkey
			primary key,
	value varchar not null,
	value_amount numeric,
	days integer not null,
	day_of_the_month integer,
	option varchar not null,
	payment_id integer not null
		constraint account_payment_term_line_payment_id_fkey
			references account_payment_term
				on delete cascade,
	sequence integer,
	create_uid integer
		constraint account_payment_term_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_payment_term_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_payment_term_line is 'Payment Terms Line';

comment on column account_payment_term_line.value is 'Type';

comment on column account_payment_term_line.value_amount is 'Value';

comment on column account_payment_term_line.days is 'Number of Days';

comment on column account_payment_term_line.day_of_the_month is 'Day of the month';

comment on column account_payment_term_line.option is 'Options';

comment on column account_payment_term_line.payment_id is 'Payment Terms';

comment on column account_payment_term_line.sequence is 'Sequence';

comment on column account_payment_term_line.create_uid is 'Created by';

comment on column account_payment_term_line.create_date is 'Created on';

comment on column account_payment_term_line.write_uid is 'Last Updated by';

comment on column account_payment_term_line.write_date is 'Last Updated on';

alter table account_payment_term_line owner to postgres;

create index account_payment_term_line_payment_id_index
	on account_payment_term_line (payment_id);

create table account_print_journal
(
	id integer default nextval('account_print_journal_id_seq'::regclass) not null
		constraint account_print_journal_pkey
			primary key,
	sort_selection varchar not null,
	amount_currency boolean,
	company_id integer not null
		constraint account_print_journal_company_id_fkey
			references res_company
				on delete cascade,
	date_from date,
	date_to date,
	target_move varchar not null,
	create_uid integer
		constraint account_print_journal_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_print_journal_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_print_journal is 'Account Print Journal';

comment on column account_print_journal.sort_selection is 'Entries Sorted by';

comment on column account_print_journal.amount_currency is 'With Currency';

comment on column account_print_journal.company_id is 'Company';

comment on column account_print_journal.date_from is 'Start Date';

comment on column account_print_journal.date_to is 'End Date';

comment on column account_print_journal.target_move is 'Target Moves';

comment on column account_print_journal.create_uid is 'Created by';

comment on column account_print_journal.create_date is 'Created on';

comment on column account_print_journal.write_uid is 'Last Updated by';

comment on column account_print_journal.write_date is 'Last Updated on';

alter table account_print_journal owner to postgres;

create table account_journal_account_print_journal_rel
(
	account_print_journal_id integer not null
		constraint account_journal_account_print_jou_account_print_journal_id_fkey
			references account_print_journal
				on delete cascade,
	account_journal_id integer not null
		constraint account_journal_account_print_journal_r_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_journal_account_print_journal_rel_pkey
		primary key (account_print_journal_id, account_journal_id)
);

comment on table account_journal_account_print_journal_rel is 'RELATION BETWEEN account_print_journal AND account_journal';

alter table account_journal_account_print_journal_rel owner to postgres;

create index account_journal_account_print_account_journal_id_account_pr_idx
	on account_journal_account_print_journal_rel (account_journal_id, account_print_journal_id);

create table account_reconcile_model_line
(
	id integer default nextval('account_reconcile_model_line_id_seq'::regclass) not null
		constraint account_reconcile_model_line_pkey
			primary key,
	model_id integer
		constraint account_reconcile_model_line_model_id_fkey
			references account_reconcile_model
				on delete cascade,
	company_id integer
		constraint account_reconcile_model_line_company_id_fkey
			references res_company
				on delete set null,
	sequence integer not null,
	account_id integer not null
		constraint account_reconcile_model_line_account_id_fkey
			references account_account
				on delete cascade,
	journal_id integer
		constraint account_reconcile_model_line_journal_id_fkey
			references account_journal
				on delete cascade,
	label varchar,
	amount_type varchar not null,
	force_tax_included boolean,
	amount double precision,
	amount_string varchar not null,
	analytic_account_id integer
		constraint account_reconcile_model_line_analytic_account_id_fkey
			references account_analytic_account
				on delete set null,
	create_uid integer
		constraint account_reconcile_model_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reconcile_model_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reconcile_model_line is 'Rules for the reconciliation model';

comment on column account_reconcile_model_line.model_id is 'Model';

comment on column account_reconcile_model_line.company_id is 'Company';

comment on column account_reconcile_model_line.sequence is 'Sequence';

comment on column account_reconcile_model_line.account_id is 'Account';

comment on column account_reconcile_model_line.journal_id is 'Journal';

comment on column account_reconcile_model_line.label is 'Journal Item Label';

comment on column account_reconcile_model_line.amount_type is 'Amount Type';

comment on column account_reconcile_model_line.force_tax_included is 'Tax Included in Price';

comment on column account_reconcile_model_line.amount is 'Float Amount';

comment on column account_reconcile_model_line.amount_string is 'Amount';

comment on column account_reconcile_model_line.analytic_account_id is 'Analytic Account';

comment on column account_reconcile_model_line.create_uid is 'Created by';

comment on column account_reconcile_model_line.create_date is 'Created on';

comment on column account_reconcile_model_line.write_uid is 'Last Updated by';

comment on column account_reconcile_model_line.write_date is 'Last Updated on';

alter table account_reconcile_model_line owner to postgres;

create table account_reconcile_model_analytic_tag_rel
(
	account_reconcile_model_line_id integer not null
		constraint account_reconcile_model_analy_account_reconcile_model_line_fkey
			references account_reconcile_model_line
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_reconcile_model_analytic_t_account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_reconcile_model_analytic_tag_rel_pkey
		primary key (account_reconcile_model_line_id, account_analytic_tag_id)
);

comment on table account_reconcile_model_analytic_tag_rel is 'RELATION BETWEEN account_reconcile_model_line AND account_analytic_tag';

alter table account_reconcile_model_analytic_tag_rel owner to postgres;

create index account_reconcile_model_analy_account_analytic_tag_id_accou_idx
	on account_reconcile_model_analytic_tag_rel (account_analytic_tag_id, account_reconcile_model_line_id);

create table account_reconcile_model_line_account_tax_rel
(
	account_reconcile_model_line_id integer not null
		constraint account_reconcile_model_line__account_reconcile_model_line_fkey
			references account_reconcile_model_line
				on delete cascade,
	account_tax_id integer not null
		constraint account_reconcile_model_line_account_tax_re_account_tax_id_fkey
			references account_tax
				on delete restrict,
	constraint account_reconcile_model_line_account_tax_rel_pkey
		primary key (account_reconcile_model_line_id, account_tax_id)
);

comment on table account_reconcile_model_line_account_tax_rel is 'RELATION BETWEEN account_reconcile_model_line AND account_tax';

alter table account_reconcile_model_line_account_tax_rel owner to postgres;

create index account_reconcile_model_line__account_tax_id_account_reconc_idx
	on account_reconcile_model_line_account_tax_rel (account_tax_id, account_reconcile_model_line_id);

create table account_report_manager
(
	id integer default nextval('account_report_manager_id_seq'::regclass) not null
		constraint account_report_manager_pkey
			primary key,
	report_name varchar not null,
	summary varchar,
	company_id integer,
	financial_report_id integer
		constraint account_report_manager_financial_report_id_fkey
			references account_financial_html_report
				on delete set null,
	create_uid integer
		constraint account_report_manager_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_report_manager_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	partner_id integer
		constraint account_report_manager_partner_id_fkey
			references res_partner
				on delete set null
);

comment on table account_report_manager is 'Manage Summary and Footnotes of Reports';

comment on column account_report_manager.report_name is 'Report Name';

comment on column account_report_manager.summary is 'Summary';

comment on column account_report_manager.company_id is 'Company';

comment on column account_report_manager.financial_report_id is 'Financial Report';

comment on column account_report_manager.create_uid is 'Created by';

comment on column account_report_manager.create_date is 'Created on';

comment on column account_report_manager.write_uid is 'Last Updated by';

comment on column account_report_manager.write_date is 'Last Updated on';

comment on column account_report_manager.partner_id is 'Partner';

alter table account_report_manager owner to postgres;

create table account_report_footnote
(
	id integer default nextval('account_report_footnote_id_seq'::regclass) not null
		constraint account_report_footnote_pkey
			primary key,
	text varchar,
	line varchar,
	manager_id integer
		constraint account_report_footnote_manager_id_fkey
			references account_report_manager
				on delete set null,
	create_uid integer
		constraint account_report_footnote_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_report_footnote_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_report_footnote is 'Account Report Footnote';

comment on column account_report_footnote.text is 'Text';

comment on column account_report_footnote.line is 'Line';

comment on column account_report_footnote.manager_id is 'Manager';

comment on column account_report_footnote.create_uid is 'Created by';

comment on column account_report_footnote.create_date is 'Created on';

comment on column account_report_footnote.write_uid is 'Last Updated by';

comment on column account_report_footnote.write_date is 'Last Updated on';

alter table account_report_footnote owner to postgres;

create index account_report_footnote_line_index
	on account_report_footnote (line);

create table base_document_layout
(
	id integer default nextval('base_document_layout_id_seq'::regclass) not null
		constraint base_document_layout_pkey
			primary key,
	company_id integer not null
		constraint base_document_layout_company_id_fkey
			references res_company
				on delete cascade,
	report_layout_id integer
		constraint base_document_layout_report_layout_id_fkey
			references report_layout
				on delete set null,
	create_uid integer
		constraint base_document_layout_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_document_layout_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_document_layout is 'Company Document Layout';

comment on column base_document_layout.company_id is 'Company';

comment on column base_document_layout.report_layout_id is 'Report Layout';

comment on column base_document_layout.create_uid is 'Created by';

comment on column base_document_layout.create_date is 'Created on';

comment on column base_document_layout.write_uid is 'Last Updated by';

comment on column base_document_layout.write_date is 'Last Updated on';

alter table base_document_layout owner to postgres;

create table iap_account_res_company_rel
(
	iap_account_id integer not null
		constraint iap_account_res_company_rel_iap_account_id_fkey
			references iap_account
				on delete cascade,
	res_company_id integer not null
		constraint iap_account_res_company_rel_res_company_id_fkey
			references res_company
				on delete cascade,
	constraint iap_account_res_company_rel_pkey
		primary key (iap_account_id, res_company_id)
);

comment on table iap_account_res_company_rel is 'RELATION BETWEEN iap_account AND res_company';

alter table iap_account_res_company_rel owner to postgres;

create index iap_account_res_company_rel_res_company_id_iap_account_id_idx
	on iap_account_res_company_rel (res_company_id, iap_account_id);

create table payment_token
(
	id integer default nextval('payment_token_id_seq'::regclass) not null
		constraint payment_token_pkey
			primary key,
	name varchar,
	partner_id integer not null
		constraint payment_token_partner_id_fkey
			references res_partner
				on delete restrict,
	acquirer_id integer not null
		constraint payment_token_acquirer_id_fkey
			references payment_acquirer
				on delete restrict,
	company_id integer
		constraint payment_token_company_id_fkey
			references res_company
				on delete set null,
	acquirer_ref varchar not null,
	active boolean,
	verified boolean,
	create_uid integer
		constraint payment_token_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_token_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table payment_token is 'Payment Token';

comment on column payment_token.name is 'Name';

comment on column payment_token.partner_id is 'Partner';

comment on column payment_token.acquirer_id is 'Acquirer Account';

comment on column payment_token.company_id is 'Company';

comment on column payment_token.acquirer_ref is 'Acquirer Ref.';

comment on column payment_token.active is 'Active';

comment on column payment_token.verified is 'Verified';

comment on column payment_token.create_uid is 'Created by';

comment on column payment_token.create_date is 'Created on';

comment on column payment_token.write_uid is 'Last Updated by';

comment on column payment_token.write_date is 'Last Updated on';

alter table payment_token owner to postgres;

create table account_payment
(
	id integer default nextval('account_payment_id_seq'::regclass) not null
		constraint account_payment_pkey
			primary key,
	move_id integer not null
		constraint account_payment_move_id_fkey
			references account_move
				on delete cascade,
	is_reconciled boolean,
	is_matched boolean,
	partner_bank_id integer
		constraint account_payment_partner_bank_id_fkey
			references res_partner_bank
				on delete set null,
	is_internal_transfer boolean,
	payment_method_id integer
		constraint account_payment_payment_method_id_fkey
			references account_payment_method
				on delete set null,
	amount numeric,
	payment_type varchar not null,
	partner_type varchar not null,
	payment_reference varchar,
	currency_id integer
		constraint account_payment_currency_id_fkey
			references res_currency
				on delete set null,
	partner_id integer
		constraint account_payment_partner_id_fkey
			references res_partner
				on delete restrict,
	destination_account_id integer
		constraint account_payment_destination_account_id_fkey
			references account_account
				on delete set null,
	message_main_attachment_id integer
		constraint account_payment_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint account_payment_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_payment_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	payment_transaction_id integer,
	payment_token_id integer
		constraint account_payment_payment_token_id_fkey
			references payment_token
				on delete set null
);

comment on table account_payment is 'Payments';

comment on column account_payment.move_id is 'Journal Entry';

comment on column account_payment.is_reconciled is 'Is Reconciled';

comment on column account_payment.is_matched is 'Is Matched With a Bank Statement';

comment on column account_payment.partner_bank_id is 'Recipient Bank Account';

comment on column account_payment.is_internal_transfer is 'Is Internal Transfer';

comment on column account_payment.payment_method_id is 'Payment Method';

comment on column account_payment.amount is 'Amount';

comment on column account_payment.payment_type is 'Payment Type';

comment on column account_payment.partner_type is 'Partner Type';

comment on column account_payment.payment_reference is 'Payment Reference';

comment on column account_payment.currency_id is 'Currency';

comment on column account_payment.partner_id is 'Customer/Vendor';

comment on column account_payment.destination_account_id is 'Destination Account';

comment on column account_payment.message_main_attachment_id is 'Main Attachment';

comment on column account_payment.create_uid is 'Created by';

comment on column account_payment.create_date is 'Created on';

comment on column account_payment.write_uid is 'Last Updated by';

comment on column account_payment.write_date is 'Last Updated on';

comment on column account_payment.payment_transaction_id is 'Payment Transaction';

comment on column account_payment.payment_token_id is 'Saved payment token';

alter table account_payment owner to postgres;

alter table account_move
	add constraint account_move_payment_id_fkey
		foreign key (payment_id) references account_payment
			on delete set null;

create index account_payment_message_main_attachment_id_index
	on account_payment (message_main_attachment_id);

create table account_payment_account_bank_statement_line_rel
(
	account_bank_statement_line_id integer not null
		constraint account_payment_account_bank__account_bank_statement_line__fkey
			references account_bank_statement_line
				on delete cascade,
	account_payment_id integer not null
		constraint account_payment_account_bank_statement__account_payment_id_fkey
			references account_payment
				on delete cascade,
	constraint account_payment_account_bank_statement_line_rel_pkey
		primary key (account_bank_statement_line_id, account_payment_id)
);

comment on table account_payment_account_bank_statement_line_rel is 'RELATION BETWEEN account_bank_statement_line AND account_payment';

alter table account_payment_account_bank_statement_line_rel owner to postgres;

create index account_payment_account_bank__account_payment_id_account_ba_idx
	on account_payment_account_bank_statement_line_rel (account_payment_id, account_bank_statement_line_id);

create table account_payment_register
(
	id integer default nextval('account_payment_register_id_seq'::regclass) not null
		constraint account_payment_register_pkey
			primary key,
	payment_date date not null,
	amount numeric,
	communication varchar,
	group_payment boolean,
	currency_id integer
		constraint account_payment_register_currency_id_fkey
			references res_currency
				on delete set null,
	journal_id integer
		constraint account_payment_register_journal_id_fkey
			references account_journal
				on delete set null,
	partner_bank_id integer
		constraint account_payment_register_partner_bank_id_fkey
			references res_partner_bank
				on delete set null,
	payment_type varchar,
	partner_type varchar,
	source_amount numeric,
	source_amount_currency numeric,
	source_currency_id integer
		constraint account_payment_register_source_currency_id_fkey
			references res_currency
				on delete set null,
	can_edit_wizard boolean,
	can_group_payments boolean,
	company_id integer
		constraint account_payment_register_company_id_fkey
			references res_company
				on delete set null,
	partner_id integer
		constraint account_payment_register_partner_id_fkey
			references res_partner
				on delete restrict,
	payment_method_id integer
		constraint account_payment_register_payment_method_id_fkey
			references account_payment_method
				on delete set null,
	payment_difference_handling varchar,
	writeoff_account_id integer
		constraint account_payment_register_writeoff_account_id_fkey
			references account_account
				on delete set null,
	writeoff_label varchar,
	create_uid integer
		constraint account_payment_register_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_payment_register_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	payment_token_id integer
		constraint account_payment_register_payment_token_id_fkey
			references payment_token
				on delete set null
);

comment on table account_payment_register is 'Register Payment';

comment on column account_payment_register.payment_date is 'Payment Date';

comment on column account_payment_register.amount is 'Amount';

comment on column account_payment_register.communication is 'Memo';

comment on column account_payment_register.group_payment is 'Group Payments';

comment on column account_payment_register.currency_id is 'Currency';

comment on column account_payment_register.journal_id is 'Journal';

comment on column account_payment_register.partner_bank_id is 'Recipient Bank Account';

comment on column account_payment_register.payment_type is 'Payment Type';

comment on column account_payment_register.partner_type is 'Partner Type';

comment on column account_payment_register.source_amount is 'Amount to Pay (company currency)';

comment on column account_payment_register.source_amount_currency is 'Amount to Pay (foreign currency)';

comment on column account_payment_register.source_currency_id is 'Source Currency';

comment on column account_payment_register.can_edit_wizard is 'Can Edit Wizard';

comment on column account_payment_register.can_group_payments is 'Can Group Payments';

comment on column account_payment_register.company_id is 'Company';

comment on column account_payment_register.partner_id is 'Customer/Vendor';

comment on column account_payment_register.payment_method_id is 'Payment Method';

comment on column account_payment_register.payment_difference_handling is 'Payment Difference Handling';

comment on column account_payment_register.writeoff_account_id is 'Difference Account';

comment on column account_payment_register.writeoff_label is 'Journal Item Label';

comment on column account_payment_register.create_uid is 'Created by';

comment on column account_payment_register.create_date is 'Created on';

comment on column account_payment_register.write_uid is 'Last Updated by';

comment on column account_payment_register.write_date is 'Last Updated on';

comment on column account_payment_register.payment_token_id is 'Saved payment token';

alter table account_payment_register owner to postgres;

create index payment_token_company_id_index
	on payment_token (company_id);

create table payment_transaction
(
	id integer default nextval('payment_transaction_id_seq'::regclass) not null
		constraint payment_transaction_pkey
			primary key,
	date timestamp,
	acquirer_id integer not null
		constraint payment_transaction_acquirer_id_fkey
			references payment_acquirer
				on delete restrict,
	type varchar not null,
	state varchar not null,
	state_message text,
	amount numeric not null,
	fees numeric,
	currency_id integer not null
		constraint payment_transaction_currency_id_fkey
			references res_currency
				on delete restrict,
	reference varchar not null
		constraint payment_transaction_reference_uniq
			unique,
	acquirer_reference varchar,
	partner_id integer
		constraint payment_transaction_partner_id_fkey
			references res_partner
				on delete set null,
	partner_name varchar,
	partner_lang varchar,
	partner_email varchar,
	partner_zip varchar,
	partner_address varchar,
	partner_city varchar,
	partner_country_id integer not null
		constraint payment_transaction_partner_country_id_fkey
			references res_country
				on delete restrict,
	partner_phone varchar,
	html_3ds varchar,
	callback_model_id integer
		constraint payment_transaction_callback_model_id_fkey
			references ir_model
				on delete set null,
	callback_res_id integer,
	callback_method varchar,
	callback_hash varchar,
	return_url varchar,
	is_processed boolean,
	payment_token_id integer
		constraint payment_transaction_payment_token_id_fkey
			references payment_token
				on delete set null,
	payment_id integer
		constraint payment_transaction_payment_id_fkey
			references account_payment
				on delete set null,
	create_uid integer
		constraint payment_transaction_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_transaction_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table payment_transaction is 'Payment Transaction';

comment on column payment_transaction.date is 'Validation Date';

comment on column payment_transaction.acquirer_id is 'Acquirer';

comment on column payment_transaction.type is 'Type';

comment on column payment_transaction.state is 'Status';

comment on column payment_transaction.state_message is 'Message';

comment on column payment_transaction.amount is 'Amount';

comment on column payment_transaction.fees is 'Fees';

comment on column payment_transaction.currency_id is 'Currency';

comment on column payment_transaction.reference is 'Reference';

comment on column payment_transaction.acquirer_reference is 'Acquirer Reference';

comment on column payment_transaction.partner_id is 'Customer';

comment on column payment_transaction.partner_name is 'Partner Name';

comment on column payment_transaction.partner_lang is 'Language';

comment on column payment_transaction.partner_email is 'Email';

comment on column payment_transaction.partner_zip is 'Zip';

comment on column payment_transaction.partner_address is 'Address';

comment on column payment_transaction.partner_city is 'City';

comment on column payment_transaction.partner_country_id is 'Country';

comment on column payment_transaction.partner_phone is 'Phone';

comment on column payment_transaction.html_3ds is '3D Secure HTML';

comment on column payment_transaction.callback_model_id is 'Callback Document Model';

comment on column payment_transaction.callback_res_id is 'Callback Document ID';

comment on column payment_transaction.callback_method is 'Callback Method';

comment on column payment_transaction.callback_hash is 'Callback Hash';

comment on column payment_transaction.return_url is 'Return URL after payment';

comment on column payment_transaction.is_processed is 'Has the payment been post processed';

comment on column payment_transaction.payment_token_id is 'Payment Token';

comment on column payment_transaction.payment_id is 'Payment';

comment on column payment_transaction.create_uid is 'Created by';

comment on column payment_transaction.create_date is 'Created on';

comment on column payment_transaction.write_uid is 'Last Updated by';

comment on column payment_transaction.write_date is 'Last Updated on';

alter table payment_transaction owner to postgres;

create table account_invoice_transaction_rel
(
	transaction_id integer not null
		constraint account_invoice_transaction_rel_transaction_id_fkey
			references payment_transaction
				on delete cascade,
	invoice_id integer not null
		constraint account_invoice_transaction_rel_invoice_id_fkey
			references account_move
				on delete cascade,
	constraint account_invoice_transaction_rel_pkey
		primary key (transaction_id, invoice_id)
);

comment on table account_invoice_transaction_rel is 'RELATION BETWEEN payment_transaction AND account_move';

alter table account_invoice_transaction_rel owner to postgres;

create index account_invoice_transaction_rel_invoice_id_transaction_id_idx
	on account_invoice_transaction_rel (invoice_id, transaction_id);

alter table account_payment
	add constraint account_payment_payment_transaction_id_fkey
		foreign key (payment_transaction_id) references payment_transaction
			on delete set null;

create index payment_transaction_reference_index
	on payment_transaction (reference);

create table product_pricelist
(
	id integer default nextval('product_pricelist_id_seq'::regclass) not null
		constraint product_pricelist_pkey
			primary key,
	name varchar not null,
	active boolean,
	currency_id integer not null
		constraint product_pricelist_currency_id_fkey
			references res_currency
				on delete restrict,
	company_id integer
		constraint product_pricelist_company_id_fkey
			references res_company
				on delete set null,
	sequence integer,
	discount_policy varchar not null,
	create_uid integer
		constraint product_pricelist_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_pricelist_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_pricelist is 'Pricelist';

comment on column product_pricelist.name is 'Pricelist Name';

comment on column product_pricelist.active is 'Active';

comment on column product_pricelist.currency_id is 'Currency';

comment on column product_pricelist.company_id is 'Company';

comment on column product_pricelist.sequence is 'Sequence';

comment on column product_pricelist.discount_policy is 'Discount Policy';

comment on column product_pricelist.create_uid is 'Created by';

comment on column product_pricelist.create_date is 'Created on';

comment on column product_pricelist.write_uid is 'Last Updated by';

comment on column product_pricelist.write_date is 'Last Updated on';

alter table product_pricelist owner to postgres;

create index res_company_parent_id_index
	on res_company (parent_id);

create table res_country_group_pricelist_rel
(
	pricelist_id integer not null
		constraint res_country_group_pricelist_rel_pricelist_id_fkey
			references product_pricelist
				on delete cascade,
	res_country_group_id integer not null
		constraint res_country_group_pricelist_rel_res_country_group_id_fkey
			references res_country_group
				on delete cascade,
	constraint res_country_group_pricelist_rel_pkey
		primary key (pricelist_id, res_country_group_id)
);

comment on table res_country_group_pricelist_rel is 'RELATION BETWEEN product_pricelist AND res_country_group';

alter table res_country_group_pricelist_rel owner to postgres;

create index res_country_group_pricelist_r_res_country_group_id_pricelis_idx
	on res_country_group_pricelist_rel (res_country_group_id, pricelist_id);

create table res_currency_rate
(
	id integer default nextval('res_currency_rate_id_seq'::regclass) not null
		constraint res_currency_rate_pkey
			primary key,
	name date not null,
	rate numeric,
	currency_id integer not null
		constraint res_currency_rate_currency_id_fkey
			references res_currency
				on delete cascade,
	company_id integer
		constraint res_currency_rate_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint res_currency_rate_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_currency_rate_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint res_currency_rate_unique_name_per_day
		unique (name, currency_id, company_id)
);

comment on table res_currency_rate is 'Currency Rate';

comment on column res_currency_rate.name is 'Date';

comment on column res_currency_rate.rate is 'Rate';

comment on column res_currency_rate.currency_id is 'Currency';

comment on column res_currency_rate.company_id is 'Company';

comment on column res_currency_rate.create_uid is 'Created by';

comment on column res_currency_rate.create_date is 'Created on';

comment on column res_currency_rate.write_uid is 'Last Updated by';

comment on column res_currency_rate.write_date is 'Last Updated on';

alter table res_currency_rate owner to postgres;

create index res_currency_rate_name_index
	on res_currency_rate (name);

create table resource_resource
(
	id integer default nextval('resource_resource_id_seq'::regclass) not null
		constraint resource_resource_pkey
			primary key,
	name varchar not null,
	active boolean,
	company_id integer
		constraint resource_resource_company_id_fkey
			references res_company
				on delete set null,
	resource_type varchar not null,
	user_id integer
		constraint resource_resource_user_id_fkey
			references res_users
				on delete set null,
	time_efficiency double precision not null,
	calendar_id integer not null
		constraint resource_resource_calendar_id_fkey
			references resource_calendar
				on delete restrict,
	tz varchar not null,
	create_uid integer
		constraint resource_resource_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint resource_resource_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table resource_resource is 'Resources';

comment on column resource_resource.name is 'Name';

comment on column resource_resource.active is 'Active';

comment on column resource_resource.company_id is 'Company';

comment on column resource_resource.resource_type is 'Resource Type';

comment on column resource_resource.user_id is 'User';

comment on column resource_resource.time_efficiency is 'Efficiency Factor';

comment on column resource_resource.calendar_id is 'Working Time';

comment on column resource_resource.tz is 'Timezone';

comment on column resource_resource.create_uid is 'Created by';

comment on column resource_resource.create_date is 'Created on';

comment on column resource_resource.write_uid is 'Last Updated by';

comment on column resource_resource.write_date is 'Last Updated on';

alter table resource_resource owner to postgres;

create table resource_calendar_attendance
(
	id integer default nextval('resource_calendar_attendance_id_seq'::regclass) not null
		constraint resource_calendar_attendance_pkey
			primary key,
	name varchar not null,
	dayofweek varchar not null,
	date_from date,
	date_to date,
	hour_from double precision not null,
	hour_to double precision not null,
	calendar_id integer not null
		constraint resource_calendar_attendance_calendar_id_fkey
			references resource_calendar
				on delete cascade,
	day_period varchar not null,
	resource_id integer
		constraint resource_calendar_attendance_resource_id_fkey
			references resource_resource
				on delete set null,
	week_type varchar,
	display_type varchar,
	sequence integer,
	create_uid integer
		constraint resource_calendar_attendance_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint resource_calendar_attendance_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table resource_calendar_attendance is 'Work Detail';

comment on column resource_calendar_attendance.name is 'Name';

comment on column resource_calendar_attendance.dayofweek is 'Day of Week';

comment on column resource_calendar_attendance.date_from is 'Starting Date';

comment on column resource_calendar_attendance.date_to is 'End Date';

comment on column resource_calendar_attendance.hour_from is 'Work from';

comment on column resource_calendar_attendance.hour_to is 'Work to';

comment on column resource_calendar_attendance.calendar_id is 'Resource''s Calendar';

comment on column resource_calendar_attendance.day_period is 'Day Period';

comment on column resource_calendar_attendance.resource_id is 'Resource';

comment on column resource_calendar_attendance.week_type is 'Week Even/Odd';

comment on column resource_calendar_attendance.display_type is 'Display Type';

comment on column resource_calendar_attendance.sequence is 'Sequence';

comment on column resource_calendar_attendance.create_uid is 'Created by';

comment on column resource_calendar_attendance.create_date is 'Created on';

comment on column resource_calendar_attendance.write_uid is 'Last Updated by';

comment on column resource_calendar_attendance.write_date is 'Last Updated on';

alter table resource_calendar_attendance owner to postgres;

create index resource_calendar_attendance_dayofweek_index
	on resource_calendar_attendance (dayofweek);

create index resource_calendar_attendance_hour_from_index
	on resource_calendar_attendance (hour_from);

create table resource_calendar_leaves
(
	id integer default nextval('resource_calendar_leaves_id_seq'::regclass) not null
		constraint resource_calendar_leaves_pkey
			primary key,
	name varchar,
	company_id integer
		constraint resource_calendar_leaves_company_id_fkey
			references res_company
				on delete set null,
	calendar_id integer
		constraint resource_calendar_leaves_calendar_id_fkey
			references resource_calendar
				on delete set null,
	date_from timestamp not null,
	date_to timestamp not null,
	resource_id integer
		constraint resource_calendar_leaves_resource_id_fkey
			references resource_resource
				on delete set null,
	time_type varchar,
	create_uid integer
		constraint resource_calendar_leaves_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint resource_calendar_leaves_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table resource_calendar_leaves is 'Resource Time Off Detail';

comment on column resource_calendar_leaves.name is 'Reason';

comment on column resource_calendar_leaves.company_id is 'Company';

comment on column resource_calendar_leaves.calendar_id is 'Working Hours';

comment on column resource_calendar_leaves.date_from is 'Start Date';

comment on column resource_calendar_leaves.date_to is 'End Date';

comment on column resource_calendar_leaves.resource_id is 'Resource';

comment on column resource_calendar_leaves.time_type is 'Time Type';

comment on column resource_calendar_leaves.create_uid is 'Created by';

comment on column resource_calendar_leaves.create_date is 'Created on';

comment on column resource_calendar_leaves.write_uid is 'Last Updated by';

comment on column resource_calendar_leaves.write_date is 'Last Updated on';

alter table resource_calendar_leaves owner to postgres;

create index resource_calendar_leaves_calendar_id_index
	on resource_calendar_leaves (calendar_id);

create index resource_calendar_leaves_resource_id_index
	on resource_calendar_leaves (resource_id);

create table resource_test
(
	id integer default nextval('resource_test_id_seq'::regclass) not null
		constraint resource_test_pkey
			primary key,
	name varchar,
	resource_id integer not null
		constraint resource_test_resource_id_fkey
			references resource_resource
				on delete restrict,
	company_id integer
		constraint resource_test_company_id_fkey
			references res_company
				on delete set null,
	resource_calendar_id integer
		constraint resource_test_resource_calendar_id_fkey
			references resource_calendar
				on delete set null,
	create_uid integer
		constraint resource_test_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint resource_test_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table resource_test is 'Test Resource Model';

comment on column resource_test.name is 'Name';

comment on column resource_test.resource_id is 'Resource';

comment on column resource_test.company_id is 'Company';

comment on column resource_test.resource_calendar_id is 'Working Hours';

comment on column resource_test.create_uid is 'Created by';

comment on column resource_test.create_date is 'Created on';

comment on column resource_test.write_uid is 'Last Updated by';

comment on column resource_test.write_date is 'Last Updated on';

alter table resource_test owner to postgres;

create index resource_test_company_id_index
	on resource_test (company_id);

create index resource_test_resource_calendar_id_index
	on resource_test (resource_calendar_id);

create index resource_test_resource_id_index
	on resource_test (resource_id);

create table sale_order_template
(
	id integer default nextval('sale_order_template_id_seq'::regclass) not null
		constraint sale_order_template_pkey
			primary key,
	name varchar not null,
	note text,
	number_of_days integer,
	require_signature boolean,
	require_payment boolean,
	mail_template_id integer
		constraint sale_order_template_mail_template_id_fkey
			references mail_template
				on delete set null,
	active boolean,
	company_id integer
		constraint sale_order_template_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint sale_order_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_order_template is 'Quotation Template';

comment on column sale_order_template.name is 'Quotation Template';

comment on column sale_order_template.note is 'Terms and conditions';

comment on column sale_order_template.number_of_days is 'Quotation Duration';

comment on column sale_order_template.require_signature is 'Online Signature';

comment on column sale_order_template.require_payment is 'Online Payment';

comment on column sale_order_template.mail_template_id is 'Confirmation Mail';

comment on column sale_order_template.active is 'Active';

comment on column sale_order_template.company_id is 'Company';

comment on column sale_order_template.create_uid is 'Created by';

comment on column sale_order_template.create_date is 'Created on';

comment on column sale_order_template.write_uid is 'Last Updated by';

comment on column sale_order_template.write_date is 'Last Updated on';

alter table sale_order_template owner to postgres;

alter table res_company
	add constraint res_company_sale_order_template_id_fkey
		foreign key (sale_order_template_id) references sale_order_template
			on delete set null;

create table snailmail_letter
(
	id integer default nextval('snailmail_letter_id_seq'::regclass) not null
		constraint snailmail_letter_pkey
			primary key,
	user_id integer
		constraint snailmail_letter_user_id_fkey
			references res_users
				on delete set null,
	model varchar not null,
	res_id integer not null,
	partner_id integer not null
		constraint snailmail_letter_partner_id_fkey
			references res_partner
				on delete restrict,
	company_id integer not null
		constraint snailmail_letter_company_id_fkey
			references res_company
				on delete restrict,
	report_template integer
		constraint snailmail_letter_report_template_fkey
			references ir_act_report_xml
				on delete set null,
	attachment_id integer
		constraint snailmail_letter_attachment_id_fkey
			references ir_attachment
				on delete cascade,
	color boolean,
	cover boolean,
	duplex boolean,
	state varchar not null,
	error_code varchar,
	info_msg varchar,
	message_id integer
		constraint snailmail_letter_message_id_fkey
			references mail_message
				on delete set null,
	street varchar,
	street2 varchar,
	zip varchar,
	city varchar,
	state_id integer
		constraint snailmail_letter_state_id_fkey
			references res_country_state
				on delete set null,
	country_id integer
		constraint snailmail_letter_country_id_fkey
			references res_country
				on delete set null,
	create_uid integer
		constraint snailmail_letter_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_letter_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_letter is 'Snailmail Letter';

comment on column snailmail_letter.user_id is 'Sent by';

comment on column snailmail_letter.model is 'Model';

comment on column snailmail_letter.res_id is 'Document ID';

comment on column snailmail_letter.partner_id is 'Recipient';

comment on column snailmail_letter.company_id is 'Company';

comment on column snailmail_letter.report_template is 'Optional report to print and attach';

comment on column snailmail_letter.attachment_id is 'Attachment';

comment on column snailmail_letter.color is 'Color';

comment on column snailmail_letter.cover is 'Cover Page';

comment on column snailmail_letter.duplex is 'Both side';

comment on column snailmail_letter.state is 'Status';

comment on column snailmail_letter.error_code is 'Error';

comment on column snailmail_letter.info_msg is 'Information';

comment on column snailmail_letter.message_id is 'Snailmail Status Message';

comment on column snailmail_letter.street is 'Street';

comment on column snailmail_letter.street2 is 'Street2';

comment on column snailmail_letter.zip is 'Zip';

comment on column snailmail_letter.city is 'City';

comment on column snailmail_letter.state_id is 'State';

comment on column snailmail_letter.country_id is 'Country';

comment on column snailmail_letter.create_uid is 'Created by';

comment on column snailmail_letter.create_date is 'Created on';

comment on column snailmail_letter.write_uid is 'Last Updated by';

comment on column snailmail_letter.write_date is 'Last Updated on';

alter table snailmail_letter owner to postgres;

create table mail_message_res_partner_needaction_rel
(
	id integer default nextval('mail_message_res_partner_needaction_rel_id_seq'::regclass) not null
		constraint mail_message_res_partner_needaction_rel_pkey
			primary key,
	mail_message_id integer not null
		constraint mail_message_res_partner_needaction_rel_mail_message_id_fkey
			references mail_message
				on delete cascade,
	mail_id integer
		constraint mail_message_res_partner_needaction_rel_mail_id_fkey
			references mail_mail
				on delete set null,
	res_partner_id integer
		constraint mail_message_res_partner_needaction_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	notification_type varchar not null,
	notification_status varchar,
	is_read boolean,
	read_date timestamp,
	failure_type varchar,
	failure_reason text,
	sms_id integer
		constraint mail_message_res_partner_needaction_rel_sms_id_fkey
			references sms_sms
				on delete set null,
	sms_number varchar,
	letter_id integer
		constraint mail_message_res_partner_needaction_rel_letter_id_fkey
			references snailmail_letter
				on delete cascade
);

comment on table mail_message_res_partner_needaction_rel is 'Message Notifications';

comment on column mail_message_res_partner_needaction_rel.mail_message_id is 'Message';

comment on column mail_message_res_partner_needaction_rel.mail_id is 'Mail';

comment on column mail_message_res_partner_needaction_rel.res_partner_id is 'Recipient';

comment on column mail_message_res_partner_needaction_rel.notification_type is 'Notification Type';

comment on column mail_message_res_partner_needaction_rel.notification_status is 'Status';

comment on column mail_message_res_partner_needaction_rel.is_read is 'Is Read';

comment on column mail_message_res_partner_needaction_rel.read_date is 'Read Date';

comment on column mail_message_res_partner_needaction_rel.failure_type is 'Failure type';

comment on column mail_message_res_partner_needaction_rel.failure_reason is 'Failure reason';

comment on column mail_message_res_partner_needaction_rel.sms_id is 'SMS';

comment on column mail_message_res_partner_needaction_rel.sms_number is 'SMS Number';

comment on column mail_message_res_partner_needaction_rel.letter_id is 'Snailmail Letter';

alter table mail_message_res_partner_needaction_rel owner to postgres;

create index mail_message_res_partner_needaction_rel_is_read_index
	on mail_message_res_partner_needaction_rel (is_read);

create index mail_message_res_partner_needaction_rel_letter_id_index
	on mail_message_res_partner_needaction_rel (letter_id);

create index mail_message_res_partner_needaction_rel_mail_id_index
	on mail_message_res_partner_needaction_rel (mail_id);

create index mail_message_res_partner_needaction_rel_mail_message_id_index
	on mail_message_res_partner_needaction_rel (mail_message_id);

create index mail_message_res_partner_needaction_rel_notification_status_ind
	on mail_message_res_partner_needaction_rel (notification_status);

create index mail_message_res_partner_needaction_rel_notification_type_index
	on mail_message_res_partner_needaction_rel (notification_type);

create index mail_message_res_partner_needaction_rel_res_partner_id_index
	on mail_message_res_partner_needaction_rel (res_partner_id);

create index mail_message_res_partner_needaction_rel_sms_id_index
	on mail_message_res_partner_needaction_rel (sms_id);

create index mail_notification_res_partner_id_is_read_notification_status_ma
	on mail_message_res_partner_needaction_rel (res_partner_id, is_read, notification_status, mail_message_id);

create table mail_message_res_partner_needaction_rel_mail_resend_message_rel
(
	mail_resend_message_id integer not null
		constraint mail_message_res_partner_needaction_mail_resend_message_id_fkey
			references mail_resend_message
				on delete cascade,
	mail_message_res_partner_needaction_rel_id integer not null
		constraint mail_message_res_partner_need_mail_message_res_partner_nee_fkey
			references mail_message_res_partner_needaction_rel
				on delete cascade,
	constraint mail_message_res_partner_needaction_rel_mail_resend_messag_pkey
		primary key (mail_resend_message_id, mail_message_res_partner_needaction_rel_id)
);

comment on table mail_message_res_partner_needaction_rel_mail_resend_message_rel is 'RELATION BETWEEN mail_resend_message AND mail_message_res_partner_needaction_rel';

alter table mail_message_res_partner_needaction_rel_mail_resend_message_rel owner to postgres;

create index mail_message_res_partner_need_mail_message_res_partner_need_idx
	on mail_message_res_partner_needaction_rel_mail_resend_message_rel (mail_message_res_partner_needaction_rel_id, mail_resend_message_id);

create table sms_resend_recipient
(
	id integer default nextval('sms_resend_recipient_id_seq'::regclass) not null
		constraint sms_resend_recipient_pkey
			primary key,
	sms_resend_id integer not null
		constraint sms_resend_recipient_sms_resend_id_fkey
			references sms_resend
				on delete restrict,
	notification_id integer not null
		constraint sms_resend_recipient_notification_id_fkey
			references mail_message_res_partner_needaction_rel
				on delete cascade,
	resend boolean,
	partner_name varchar,
	sms_number varchar,
	create_uid integer
		constraint sms_resend_recipient_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_resend_recipient_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_resend_recipient is 'Resend Notification';

comment on column sms_resend_recipient.sms_resend_id is 'Sms Resend';

comment on column sms_resend_recipient.notification_id is 'Notification';

comment on column sms_resend_recipient.resend is 'Resend';

comment on column sms_resend_recipient.partner_name is 'Recipient';

comment on column sms_resend_recipient.sms_number is 'Number';

comment on column sms_resend_recipient.create_uid is 'Created by';

comment on column sms_resend_recipient.create_date is 'Created on';

comment on column sms_resend_recipient.write_uid is 'Last Updated by';

comment on column sms_resend_recipient.write_date is 'Last Updated on';

alter table sms_resend_recipient owner to postgres;

create table snailmail_letter_missing_required_fields
(
	id integer default nextval('snailmail_letter_missing_required_fields_id_seq'::regclass) not null
		constraint snailmail_letter_missing_required_fields_pkey
			primary key,
	partner_id integer
		constraint snailmail_letter_missing_required_fields_partner_id_fkey
			references res_partner
				on delete set null,
	letter_id integer
		constraint snailmail_letter_missing_required_fields_letter_id_fkey
			references snailmail_letter
				on delete set null,
	street varchar,
	street2 varchar,
	zip varchar,
	city varchar,
	state_id integer
		constraint snailmail_letter_missing_required_fields_state_id_fkey
			references res_country_state
				on delete set null,
	country_id integer
		constraint snailmail_letter_missing_required_fields_country_id_fkey
			references res_country
				on delete set null,
	create_uid integer
		constraint snailmail_letter_missing_required_fields_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_letter_missing_required_fields_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_letter_missing_required_fields is 'Update address of partner';

comment on column snailmail_letter_missing_required_fields.partner_id is 'Partner';

comment on column snailmail_letter_missing_required_fields.letter_id is 'Letter';

comment on column snailmail_letter_missing_required_fields.street is 'Street';

comment on column snailmail_letter_missing_required_fields.street2 is 'Street2';

comment on column snailmail_letter_missing_required_fields.zip is 'Zip';

comment on column snailmail_letter_missing_required_fields.city is 'City';

comment on column snailmail_letter_missing_required_fields.state_id is 'State';

comment on column snailmail_letter_missing_required_fields.country_id is 'Country';

comment on column snailmail_letter_missing_required_fields.create_uid is 'Created by';

comment on column snailmail_letter_missing_required_fields.create_date is 'Created on';

comment on column snailmail_letter_missing_required_fields.write_uid is 'Last Updated by';

comment on column snailmail_letter_missing_required_fields.write_date is 'Last Updated on';

alter table snailmail_letter_missing_required_fields owner to postgres;

create table stock_inventory_stock_location_rel
(
	stock_inventory_id integer not null
		constraint stock_inventory_stock_location_rel_stock_inventory_id_fkey
			references stock_inventory
				on delete cascade,
	stock_location_id integer not null
		constraint stock_inventory_stock_location_rel_stock_location_id_fkey
			references stock_location
				on delete cascade,
	constraint stock_inventory_stock_location_rel_pkey
		primary key (stock_inventory_id, stock_location_id)
);

comment on table stock_inventory_stock_location_rel is 'RELATION BETWEEN stock_inventory AND stock_location';

alter table stock_inventory_stock_location_rel owner to postgres;

create index stock_inventory_stock_locatio_stock_location_id_stock_inven_idx
	on stock_inventory_stock_location_rel (stock_location_id, stock_inventory_id);

create index stock_location_company_id_index
	on stock_location (company_id);

create index stock_location_location_id_index
	on stock_location (location_id);

create index stock_location_parent_path_index
	on stock_location (parent_path);

create index stock_location_usage_index
	on stock_location (usage);

create table stock_location_route
(
	id integer default nextval('stock_location_route_id_seq'::regclass) not null
		constraint stock_location_route_pkey
			primary key,
	name varchar not null,
	active boolean,
	sequence integer,
	product_selectable boolean,
	product_categ_selectable boolean,
	warehouse_selectable boolean,
	supplied_wh_id integer,
	supplier_wh_id integer,
	company_id integer,
	create_uid integer
		constraint stock_location_route_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_location_route_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	sale_selectable boolean
);

comment on table stock_location_route is 'Inventory Routes';

comment on column stock_location_route.name is 'Route';

comment on column stock_location_route.active is 'Active';

comment on column stock_location_route.sequence is 'Sequence';

comment on column stock_location_route.product_selectable is 'Applicable on Product';

comment on column stock_location_route.product_categ_selectable is 'Applicable on Product Category';

comment on column stock_location_route.warehouse_selectable is 'Applicable on Warehouse';

comment on column stock_location_route.supplied_wh_id is 'Supplied Warehouse';

comment on column stock_location_route.supplier_wh_id is 'Supplying Warehouse';

comment on column stock_location_route.company_id is 'Company';

comment on column stock_location_route.create_uid is 'Created by';

comment on column stock_location_route.create_date is 'Created on';

comment on column stock_location_route.write_uid is 'Last Updated by';

comment on column stock_location_route.write_date is 'Last Updated on';

comment on column stock_location_route.sale_selectable is 'Selectable on Sales Order Line';

alter table stock_location_route owner to postgres;

create index stock_location_route_company_id_index
	on stock_location_route (company_id);

create table stock_location_route_categ
(
	route_id integer not null
		constraint stock_location_route_categ_route_id_fkey
			references stock_location_route
				on delete cascade,
	categ_id integer not null
		constraint stock_location_route_categ_categ_id_fkey
			references product_category
				on delete cascade,
	constraint stock_location_route_categ_pkey
		primary key (route_id, categ_id)
);

comment on table stock_location_route_categ is 'RELATION BETWEEN stock_location_route AND product_category';

alter table stock_location_route_categ owner to postgres;

create index stock_location_route_categ_categ_id_route_id_idx
	on stock_location_route_categ (categ_id, route_id);

create table stock_orderpoint_snooze
(
	id integer default nextval('stock_orderpoint_snooze_id_seq'::regclass) not null
		constraint stock_orderpoint_snooze_pkey
			primary key,
	predefined_date varchar,
	snoozed_until date,
	create_uid integer
		constraint stock_orderpoint_snooze_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_orderpoint_snooze_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_orderpoint_snooze is 'Snooze Orderpoint';

comment on column stock_orderpoint_snooze.predefined_date is 'Snooze for';

comment on column stock_orderpoint_snooze.snoozed_until is 'Snooze Date';

comment on column stock_orderpoint_snooze.create_uid is 'Created by';

comment on column stock_orderpoint_snooze.create_date is 'Created on';

comment on column stock_orderpoint_snooze.write_uid is 'Last Updated by';

comment on column stock_orderpoint_snooze.write_date is 'Last Updated on';

alter table stock_orderpoint_snooze owner to postgres;

create table stock_picking_type
(
	id integer default nextval('stock_picking_type_id_seq'::regclass) not null
		constraint stock_picking_type_pkey
			primary key,
	name varchar not null,
	color integer,
	sequence integer,
	sequence_id integer
		constraint stock_picking_type_sequence_id_fkey
			references ir_sequence
				on delete set null,
	sequence_code varchar not null,
	default_location_src_id integer
		constraint stock_picking_type_default_location_src_id_fkey
			references stock_location
				on delete set null,
	default_location_dest_id integer
		constraint stock_picking_type_default_location_dest_id_fkey
			references stock_location
				on delete set null,
	code varchar not null,
	return_picking_type_id integer
		constraint stock_picking_type_return_picking_type_id_fkey
			references stock_picking_type
				on delete set null,
	show_entire_packs boolean,
	warehouse_id integer,
	active boolean,
	use_create_lots boolean,
	use_existing_lots boolean,
	show_operations boolean,
	show_reserved boolean,
	barcode varchar,
	company_id integer not null,
	create_uid integer
		constraint stock_picking_type_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_picking_type_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_picking_type is 'Picking Type';

comment on column stock_picking_type.name is 'Operation Type';

comment on column stock_picking_type.color is 'Color';

comment on column stock_picking_type.sequence is 'Sequence';

comment on column stock_picking_type.sequence_id is 'Reference Sequence';

comment on column stock_picking_type.sequence_code is 'Code';

comment on column stock_picking_type.default_location_src_id is 'Default Source Location';

comment on column stock_picking_type.default_location_dest_id is 'Default Destination Location';

comment on column stock_picking_type.code is 'Type of Operation';

comment on column stock_picking_type.return_picking_type_id is 'Operation Type for Returns';

comment on column stock_picking_type.show_entire_packs is 'Move Entire Packages';

comment on column stock_picking_type.warehouse_id is 'Warehouse';

comment on column stock_picking_type.active is 'Active';

comment on column stock_picking_type.use_create_lots is 'Create New Lots/Serial Numbers';

comment on column stock_picking_type.use_existing_lots is 'Use Existing Lots/Serial Numbers';

comment on column stock_picking_type.show_operations is 'Show Detailed Operations';

comment on column stock_picking_type.show_reserved is 'Pre-fill Detailed Operations';

comment on column stock_picking_type.barcode is 'Barcode';

comment on column stock_picking_type.company_id is 'Company';

comment on column stock_picking_type.create_uid is 'Created by';

comment on column stock_picking_type.create_date is 'Created on';

comment on column stock_picking_type.write_uid is 'Last Updated by';

comment on column stock_picking_type.write_date is 'Last Updated on';

alter table stock_picking_type owner to postgres;

create table purchase_order
(
	id integer default nextval('purchase_order_id_seq'::regclass) not null
		constraint purchase_order_pkey
			primary key,
	message_main_attachment_id integer
		constraint purchase_order_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	access_token varchar,
	name varchar not null,
	priority varchar,
	origin varchar,
	partner_ref varchar,
	date_order timestamp not null,
	date_approve timestamp,
	partner_id integer not null
		constraint purchase_order_partner_id_fkey
			references res_partner
				on delete restrict,
	dest_address_id integer
		constraint purchase_order_dest_address_id_fkey
			references res_partner
				on delete set null,
	currency_id integer not null
		constraint purchase_order_currency_id_fkey
			references res_currency
				on delete restrict,
	state varchar,
	notes text,
	invoice_count integer,
	invoice_status varchar,
	date_planned timestamp,
	date_calendar_start timestamp,
	amount_untaxed numeric,
	amount_tax numeric,
	amount_total numeric,
	fiscal_position_id integer
		constraint purchase_order_fiscal_position_id_fkey
			references account_fiscal_position
				on delete set null,
	payment_term_id integer
		constraint purchase_order_payment_term_id_fkey
			references account_payment_term
				on delete set null,
	incoterm_id integer
		constraint purchase_order_incoterm_id_fkey
			references account_incoterms
				on delete set null,
	user_id integer
		constraint purchase_order_user_id_fkey
			references res_users
				on delete set null,
	company_id integer not null,
	currency_rate double precision,
	mail_reminder_confirmed boolean,
	mail_reception_confirmed boolean,
	create_uid integer
		constraint purchase_order_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint purchase_order_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	picking_count integer,
	picking_type_id integer not null
		constraint purchase_order_picking_type_id_fkey
			references stock_picking_type
				on delete restrict,
	group_id integer
		constraint purchase_order_group_id_fkey
			references procurement_group
				on delete set null,
	effective_date timestamp,
	report_grids boolean
);

comment on table purchase_order is 'Purchase Order';

comment on column purchase_order.message_main_attachment_id is 'Main Attachment';

comment on column purchase_order.access_token is 'Security Token';

comment on column purchase_order.name is 'Order Reference';

comment on column purchase_order.priority is 'Priority';

comment on column purchase_order.origin is 'Source Document';

comment on column purchase_order.partner_ref is 'Vendor Reference';

comment on column purchase_order.date_order is 'Order Deadline';

comment on column purchase_order.date_approve is 'Confirmation Date';

comment on column purchase_order.partner_id is 'Vendor';

comment on column purchase_order.dest_address_id is 'Drop Ship Address';

comment on column purchase_order.currency_id is 'Currency';

comment on column purchase_order.state is 'Status';

comment on column purchase_order.notes is 'Terms and Conditions';

comment on column purchase_order.invoice_count is 'Bill Count';

comment on column purchase_order.invoice_status is 'Billing Status';

comment on column purchase_order.date_planned is 'Receipt Date';

comment on column purchase_order.date_calendar_start is 'Date Calendar Start';

comment on column purchase_order.amount_untaxed is 'Untaxed Amount';

comment on column purchase_order.amount_tax is 'Taxes';

comment on column purchase_order.amount_total is 'Total';

comment on column purchase_order.fiscal_position_id is 'Fiscal Position';

comment on column purchase_order.payment_term_id is 'Payment Terms';

comment on column purchase_order.incoterm_id is 'Incoterm';

comment on column purchase_order.user_id is 'Purchase Representative';

comment on column purchase_order.company_id is 'Company';

comment on column purchase_order.currency_rate is 'Currency Rate';

comment on column purchase_order.mail_reminder_confirmed is 'Reminder Confirmed';

comment on column purchase_order.mail_reception_confirmed is 'Reception Confirmed';

comment on column purchase_order.create_uid is 'Created by';

comment on column purchase_order.create_date is 'Created on';

comment on column purchase_order.write_uid is 'Last Updated by';

comment on column purchase_order.write_date is 'Last Updated on';

comment on column purchase_order.picking_count is 'Picking count';

comment on column purchase_order.picking_type_id is 'Deliver To';

comment on column purchase_order.group_id is 'Procurement Group';

comment on column purchase_order.effective_date is 'Effective Date';

comment on column purchase_order.report_grids is 'Print Variant Grids';

alter table purchase_order owner to postgres;

create table account_move_purchase_order_rel
(
	purchase_order_id integer not null
		constraint account_move_purchase_order_rel_purchase_order_id_fkey
			references purchase_order
				on delete cascade,
	account_move_id integer not null
		constraint account_move_purchase_order_rel_account_move_id_fkey
			references account_move
				on delete cascade,
	constraint account_move_purchase_order_rel_pkey
		primary key (purchase_order_id, account_move_id)
);

comment on table account_move_purchase_order_rel is 'RELATION BETWEEN purchase_order AND account_move';

alter table account_move_purchase_order_rel owner to postgres;

create index account_move_purchase_order_r_account_move_id_purchase_orde_idx
	on account_move_purchase_order_rel (account_move_id, purchase_order_id);

create index purchase_order_company_id_index
	on purchase_order (company_id);

create index purchase_order_date_approve_index
	on purchase_order (date_approve);

create index purchase_order_date_order_index
	on purchase_order (date_order);

create index purchase_order_date_planned_index
	on purchase_order (date_planned);

create index purchase_order_message_main_attachment_id_index
	on purchase_order (message_main_attachment_id);

create index purchase_order_name_index
	on purchase_order (name);

create index purchase_order_priority_index
	on purchase_order (priority);

create index purchase_order_state_index
	on purchase_order (state);

create index purchase_order_user_id_index
	on purchase_order (user_id);

create index stock_picking_type_company_id_index
	on stock_picking_type (company_id);

create table stock_quantity_history
(
	id integer default nextval('stock_quantity_history_id_seq'::regclass) not null
		constraint stock_quantity_history_pkey
			primary key,
	inventory_datetime timestamp,
	create_uid integer
		constraint stock_quantity_history_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_quantity_history_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_quantity_history is 'Stock Quantity History';

comment on column stock_quantity_history.inventory_datetime is 'Inventory at Date';

comment on column stock_quantity_history.create_uid is 'Created by';

comment on column stock_quantity_history.create_date is 'Created on';

comment on column stock_quantity_history.write_uid is 'Last Updated by';

comment on column stock_quantity_history.write_date is 'Last Updated on';

alter table stock_quantity_history owner to postgres;

create table stock_rule
(
	id integer default nextval('stock_rule_id_seq'::regclass) not null
		constraint stock_rule_pkey
			primary key,
	name varchar not null,
	active boolean,
	group_propagation_option varchar,
	group_id integer
		constraint stock_rule_group_id_fkey
			references procurement_group
				on delete set null,
	action varchar not null,
	sequence integer,
	company_id integer,
	location_id integer not null
		constraint stock_rule_location_id_fkey
			references stock_location
				on delete restrict,
	location_src_id integer
		constraint stock_rule_location_src_id_fkey
			references stock_location
				on delete set null,
	route_id integer not null
		constraint stock_rule_route_id_fkey
			references stock_location_route
				on delete cascade,
	procure_method varchar not null,
	route_sequence integer,
	picking_type_id integer not null
		constraint stock_rule_picking_type_id_fkey
			references stock_picking_type
				on delete restrict,
	delay integer,
	partner_address_id integer
		constraint stock_rule_partner_address_id_fkey
			references res_partner
				on delete set null,
	propagate_cancel boolean,
	warehouse_id integer,
	propagate_warehouse_id integer,
	auto varchar not null,
	create_uid integer
		constraint stock_rule_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_rule_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_rule is 'Stock Rule';

comment on column stock_rule.name is 'Name';

comment on column stock_rule.active is 'Active';

comment on column stock_rule.group_propagation_option is 'Propagation of Procurement Group';

comment on column stock_rule.group_id is 'Fixed Procurement Group';

comment on column stock_rule.action is 'Action';

comment on column stock_rule.sequence is 'Sequence';

comment on column stock_rule.company_id is 'Company';

comment on column stock_rule.location_id is 'Destination Location';

comment on column stock_rule.location_src_id is 'Source Location';

comment on column stock_rule.route_id is 'Route';

comment on column stock_rule.procure_method is 'Supply Method';

comment on column stock_rule.route_sequence is 'Route Sequence';

comment on column stock_rule.picking_type_id is 'Operation Type';

comment on column stock_rule.delay is 'Lead Time';

comment on column stock_rule.partner_address_id is 'Partner Address';

comment on column stock_rule.propagate_cancel is 'Cancel Next Move';

comment on column stock_rule.warehouse_id is 'Warehouse';

comment on column stock_rule.propagate_warehouse_id is 'Warehouse to Propagate';

comment on column stock_rule.auto is 'Automatic Move';

comment on column stock_rule.create_uid is 'Created by';

comment on column stock_rule.create_date is 'Created on';

comment on column stock_rule.write_uid is 'Last Updated by';

comment on column stock_rule.write_date is 'Last Updated on';

alter table stock_rule owner to postgres;

create index stock_rule_auto_index
	on stock_rule (auto);

create table stock_scheduler_compute
(
	id integer default nextval('stock_scheduler_compute_id_seq'::regclass) not null
		constraint stock_scheduler_compute_pkey
			primary key,
	create_uid integer
		constraint stock_scheduler_compute_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_scheduler_compute_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_scheduler_compute is 'Run Scheduler Manually';

comment on column stock_scheduler_compute.create_uid is 'Created by';

comment on column stock_scheduler_compute.create_date is 'Created on';

comment on column stock_scheduler_compute.write_uid is 'Last Updated by';

comment on column stock_scheduler_compute.write_date is 'Last Updated on';

alter table stock_scheduler_compute owner to postgres;

create table stock_traceability_report
(
	id integer default nextval('stock_traceability_report_id_seq'::regclass) not null
		constraint stock_traceability_report_pkey
			primary key,
	create_uid integer
		constraint stock_traceability_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_traceability_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_traceability_report is 'Traceability Report';

comment on column stock_traceability_report.create_uid is 'Created by';

comment on column stock_traceability_report.create_date is 'Created on';

comment on column stock_traceability_report.write_uid is 'Last Updated by';

comment on column stock_traceability_report.write_date is 'Last Updated on';

alter table stock_traceability_report owner to postgres;

create table stock_track_confirmation
(
	id integer default nextval('stock_track_confirmation_id_seq'::regclass) not null
		constraint stock_track_confirmation_pkey
			primary key,
	inventory_id integer
		constraint stock_track_confirmation_inventory_id_fkey
			references stock_inventory
				on delete set null,
	create_uid integer
		constraint stock_track_confirmation_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_track_confirmation_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_track_confirmation is 'Stock Track Confirmation';

comment on column stock_track_confirmation.inventory_id is 'Inventory';

comment on column stock_track_confirmation.create_uid is 'Created by';

comment on column stock_track_confirmation.create_date is 'Created on';

comment on column stock_track_confirmation.write_uid is 'Last Updated by';

comment on column stock_track_confirmation.write_date is 'Last Updated on';

alter table stock_track_confirmation owner to postgres;

create table stock_warehouse
(
	id integer default nextval('stock_warehouse_id_seq'::regclass) not null
		constraint stock_warehouse_pkey
			primary key,
	name varchar not null,
	active boolean,
	company_id integer not null,
	partner_id integer
		constraint stock_warehouse_partner_id_fkey
			references res_partner
				on delete set null,
	view_location_id integer not null
		constraint stock_warehouse_view_location_id_fkey
			references stock_location
				on delete restrict,
	lot_stock_id integer not null
		constraint stock_warehouse_lot_stock_id_fkey
			references stock_location
				on delete restrict,
	code varchar(5) not null,
	reception_steps varchar not null,
	delivery_steps varchar not null,
	wh_input_stock_loc_id integer
		constraint stock_warehouse_wh_input_stock_loc_id_fkey
			references stock_location
				on delete set null,
	wh_qc_stock_loc_id integer
		constraint stock_warehouse_wh_qc_stock_loc_id_fkey
			references stock_location
				on delete set null,
	wh_output_stock_loc_id integer
		constraint stock_warehouse_wh_output_stock_loc_id_fkey
			references stock_location
				on delete set null,
	wh_pack_stock_loc_id integer
		constraint stock_warehouse_wh_pack_stock_loc_id_fkey
			references stock_location
				on delete set null,
	mto_pull_id integer
		constraint stock_warehouse_mto_pull_id_fkey
			references stock_rule
				on delete set null,
	pick_type_id integer
		constraint stock_warehouse_pick_type_id_fkey
			references stock_picking_type
				on delete set null,
	pack_type_id integer
		constraint stock_warehouse_pack_type_id_fkey
			references stock_picking_type
				on delete set null,
	out_type_id integer
		constraint stock_warehouse_out_type_id_fkey
			references stock_picking_type
				on delete set null,
	in_type_id integer
		constraint stock_warehouse_in_type_id_fkey
			references stock_picking_type
				on delete set null,
	int_type_id integer
		constraint stock_warehouse_int_type_id_fkey
			references stock_picking_type
				on delete set null,
	crossdock_route_id integer
		constraint stock_warehouse_crossdock_route_id_fkey
			references stock_location_route
				on delete restrict,
	reception_route_id integer
		constraint stock_warehouse_reception_route_id_fkey
			references stock_location_route
				on delete restrict,
	delivery_route_id integer
		constraint stock_warehouse_delivery_route_id_fkey
			references stock_location_route
				on delete restrict,
	sequence integer,
	create_uid integer
		constraint stock_warehouse_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_warehouse_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	buy_to_resupply boolean,
	buy_pull_id integer
		constraint stock_warehouse_buy_pull_id_fkey
			references stock_rule
				on delete set null,
	constraint stock_warehouse_warehouse_code_uniq
		unique (code, company_id),
	constraint stock_warehouse_warehouse_name_uniq
		unique (name, company_id)
);

comment on table stock_warehouse is 'Warehouse';

comment on column stock_warehouse.name is 'Warehouse';

comment on column stock_warehouse.active is 'Active';

comment on column stock_warehouse.company_id is 'Company';

comment on column stock_warehouse.partner_id is 'Address';

comment on column stock_warehouse.view_location_id is 'View Location';

comment on column stock_warehouse.lot_stock_id is 'Location Stock';

comment on column stock_warehouse.code is 'Short Name';

comment on column stock_warehouse.reception_steps is 'Incoming Shipments';

comment on column stock_warehouse.delivery_steps is 'Outgoing Shipments';

comment on column stock_warehouse.wh_input_stock_loc_id is 'Input Location';

comment on column stock_warehouse.wh_qc_stock_loc_id is 'Quality Control Location';

comment on column stock_warehouse.wh_output_stock_loc_id is 'Output Location';

comment on column stock_warehouse.wh_pack_stock_loc_id is 'Packing Location';

comment on column stock_warehouse.mto_pull_id is 'MTO rule';

comment on column stock_warehouse.pick_type_id is 'Pick Type';

comment on column stock_warehouse.pack_type_id is 'Pack Type';

comment on column stock_warehouse.out_type_id is 'Out Type';

comment on column stock_warehouse.in_type_id is 'In Type';

comment on column stock_warehouse.int_type_id is 'Internal Type';

comment on column stock_warehouse.crossdock_route_id is 'Crossdock Route';

comment on column stock_warehouse.reception_route_id is 'Receipt Route';

comment on column stock_warehouse.delivery_route_id is 'Delivery Route';

comment on column stock_warehouse.sequence is 'Sequence';

comment on column stock_warehouse.create_uid is 'Created by';

comment on column stock_warehouse.create_date is 'Created on';

comment on column stock_warehouse.write_uid is 'Last Updated by';

comment on column stock_warehouse.write_date is 'Last Updated on';

comment on column stock_warehouse.buy_to_resupply is 'Buy to Resupply';

comment on column stock_warehouse.buy_pull_id is 'Buy rule';

alter table stock_warehouse owner to postgres;

alter table stock_location_route
	add constraint stock_location_route_supplied_wh_id_fkey
		foreign key (supplied_wh_id) references stock_warehouse
			on delete set null;

alter table stock_location_route
	add constraint stock_location_route_supplier_wh_id_fkey
		foreign key (supplier_wh_id) references stock_warehouse
			on delete set null;

alter table stock_picking_type
	add constraint stock_picking_type_warehouse_id_fkey
		foreign key (warehouse_id) references stock_warehouse
			on delete cascade;

create table stock_route_warehouse
(
	route_id integer not null
		constraint stock_route_warehouse_route_id_fkey
			references stock_location_route
				on delete cascade,
	warehouse_id integer not null
		constraint stock_route_warehouse_warehouse_id_fkey
			references stock_warehouse
				on delete cascade,
	constraint stock_route_warehouse_pkey
		primary key (route_id, warehouse_id)
);

comment on table stock_route_warehouse is 'RELATION BETWEEN stock_location_route AND stock_warehouse';

alter table stock_route_warehouse owner to postgres;

create index stock_route_warehouse_warehouse_id_route_id_idx
	on stock_route_warehouse (warehouse_id, route_id);

alter table stock_rule
	add constraint stock_rule_propagate_warehouse_id_fkey
		foreign key (propagate_warehouse_id) references stock_warehouse
			on delete set null;

alter table stock_rule
	add constraint stock_rule_warehouse_id_fkey
		foreign key (warehouse_id) references stock_warehouse
			on delete set null;

create index stock_warehouse_company_id_index
	on stock_warehouse (company_id);

create index stock_warehouse_name_index
	on stock_warehouse (name);

create table stock_wh_resupply_table
(
	supplied_wh_id integer not null
		constraint stock_wh_resupply_table_supplied_wh_id_fkey
			references stock_warehouse
				on delete cascade,
	supplier_wh_id integer not null
		constraint stock_wh_resupply_table_supplier_wh_id_fkey
			references stock_warehouse
				on delete cascade,
	constraint stock_wh_resupply_table_pkey
		primary key (supplied_wh_id, supplier_wh_id)
);

comment on table stock_wh_resupply_table is 'RELATION BETWEEN stock_warehouse AND stock_warehouse';

alter table stock_wh_resupply_table owner to postgres;

create index stock_wh_resupply_table_supplier_wh_id_supplied_wh_id_idx
	on stock_wh_resupply_table (supplier_wh_id, supplied_wh_id);

create table tax_adjustments_wizard
(
	id integer default nextval('tax_adjustments_wizard_id_seq'::regclass) not null
		constraint tax_adjustments_wizard_pkey
			primary key,
	reason varchar not null,
	journal_id integer not null
		constraint tax_adjustments_wizard_journal_id_fkey
			references account_journal
				on delete cascade,
	date date not null,
	debit_account_id integer not null
		constraint tax_adjustments_wizard_debit_account_id_fkey
			references account_account
				on delete cascade,
	credit_account_id integer not null
		constraint tax_adjustments_wizard_credit_account_id_fkey
			references account_account
				on delete cascade,
	amount numeric not null,
	adjustment_type varchar not null,
	tax_report_line_id integer not null
		constraint tax_adjustments_wizard_tax_report_line_id_fkey
			references account_tax_report_line
				on delete cascade,
	company_currency_id integer
		constraint tax_adjustments_wizard_company_currency_id_fkey
			references res_currency
				on delete set null,
	create_uid integer
		constraint tax_adjustments_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint tax_adjustments_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table tax_adjustments_wizard is 'Tax Adjustments Wizard';

comment on column tax_adjustments_wizard.reason is 'Justification';

comment on column tax_adjustments_wizard.journal_id is 'Journal';

comment on column tax_adjustments_wizard.date is 'Date';

comment on column tax_adjustments_wizard.debit_account_id is 'Debit account';

comment on column tax_adjustments_wizard.credit_account_id is 'Credit account';

comment on column tax_adjustments_wizard.amount is 'Amount';

comment on column tax_adjustments_wizard.adjustment_type is 'Adjustment Type';

comment on column tax_adjustments_wizard.tax_report_line_id is 'Report Line';

comment on column tax_adjustments_wizard.company_currency_id is 'Company Currency';

comment on column tax_adjustments_wizard.create_uid is 'Created by';

comment on column tax_adjustments_wizard.create_date is 'Created on';

comment on column tax_adjustments_wizard.write_uid is 'Last Updated by';

comment on column tax_adjustments_wizard.write_date is 'Last Updated on';

alter table tax_adjustments_wizard owner to postgres;

create table team_favorite_user_rel
(
	team_id integer not null
		constraint team_favorite_user_rel_team_id_fkey
			references crm_team
				on delete cascade,
	user_id integer not null
		constraint team_favorite_user_rel_user_id_fkey
			references res_users
				on delete cascade,
	constraint team_favorite_user_rel_pkey
		primary key (team_id, user_id)
);

comment on table team_favorite_user_rel is 'RELATION BETWEEN crm_team AND res_users';

alter table team_favorite_user_rel owner to postgres;

create index team_favorite_user_rel_user_id_team_id_idx
	on team_favorite_user_rel (user_id, team_id);

create table uom_category
(
	id integer default nextval('uom_category_id_seq'::regclass) not null
		constraint uom_category_pkey
			primary key,
	name varchar not null,
	create_uid integer
		constraint uom_category_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint uom_category_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table uom_category is 'Product UoM Categories';

comment on column uom_category.name is 'Unit of Measure Category';

comment on column uom_category.create_uid is 'Created by';

comment on column uom_category.create_date is 'Created on';

comment on column uom_category.write_uid is 'Last Updated by';

comment on column uom_category.write_date is 'Last Updated on';

alter table uom_category owner to postgres;

create table uom_uom
(
	id integer default nextval('uom_uom_id_seq'::regclass) not null
		constraint uom_uom_pkey
			primary key,
	name varchar not null,
	category_id integer not null
		constraint uom_uom_category_id_fkey
			references uom_category
				on delete cascade,
	factor numeric not null,
	rounding numeric not null,
	active boolean,
	uom_type varchar not null,
	create_uid integer
		constraint uom_uom_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint uom_uom_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table uom_uom is 'Product Unit of Measure';

comment on column uom_uom.name is 'Unit of Measure';

comment on column uom_uom.category_id is 'Category';

comment on column uom_uom.factor is 'Ratio';

comment on column uom_uom.rounding is 'Rounding Precision';

comment on column uom_uom.active is 'Active';

comment on column uom_uom.uom_type is 'Type';

comment on column uom_uom.create_uid is 'Created by';

comment on column uom_uom.create_date is 'Created on';

comment on column uom_uom.write_uid is 'Last Updated by';

comment on column uom_uom.write_date is 'Last Updated on';

alter table uom_uom owner to postgres;

create table product_template
(
	id integer default nextval('product_template_id_seq'::regclass) not null
		constraint product_template_pkey
			primary key,
	name varchar not null,
	sequence integer,
	description text,
	description_purchase text,
	description_sale text,
	type varchar not null,
	categ_id integer not null
		constraint product_template_categ_id_fkey
			references product_category
				on delete restrict,
	list_price numeric,
	volume numeric,
	weight numeric,
	sale_ok boolean,
	purchase_ok boolean,
	uom_id integer not null
		constraint product_template_uom_id_fkey
			references uom_uom
				on delete restrict,
	uom_po_id integer not null
		constraint product_template_uom_po_id_fkey
			references uom_uom
				on delete restrict,
	company_id integer
		constraint product_template_company_id_fkey
			references res_company
				on delete set null,
	active boolean,
	color integer,
	default_code varchar,
	can_image_1024_be_zoomed boolean,
	has_configurable_attributes boolean,
	message_main_attachment_id integer
		constraint product_template_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint product_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	service_type varchar,
	sale_line_warn varchar not null,
	sale_line_warn_msg text,
	expense_policy varchar,
	invoice_policy varchar,
	sale_delay double precision,
	tracking varchar not null,
	description_picking text,
	description_pickingout text,
	description_pickingin text,
	hs_code varchar,
	purchase_method varchar,
	purchase_line_warn varchar not null,
	purchase_line_warn_msg text,
	service_to_purchase boolean,
	delivery_type varchar,
	write_price_unit boolean
);

comment on table product_template is 'Product Template';

comment on column product_template.name is 'Name';

comment on column product_template.sequence is 'Sequence';

comment on column product_template.description is 'Description';

comment on column product_template.description_purchase is 'Purchase Description';

comment on column product_template.description_sale is 'Sales Description';

comment on column product_template.type is 'Product Type';

comment on column product_template.categ_id is 'Product Category';

comment on column product_template.list_price is 'Sales Price';

comment on column product_template.volume is 'Volume';

comment on column product_template.weight is 'Weight';

comment on column product_template.sale_ok is 'Can be Sold';

comment on column product_template.purchase_ok is 'Can be Purchased';

comment on column product_template.uom_id is 'Unit of Measure';

comment on column product_template.uom_po_id is 'Purchase Unit of Measure';

comment on column product_template.company_id is 'Company';

comment on column product_template.active is 'Active';

comment on column product_template.color is 'Color Index';

comment on column product_template.default_code is 'Internal Reference';

comment on column product_template.can_image_1024_be_zoomed is 'Can Image 1024 be zoomed';

comment on column product_template.has_configurable_attributes is 'Is a configurable product';

comment on column product_template.message_main_attachment_id is 'Main Attachment';

comment on column product_template.create_uid is 'Created by';

comment on column product_template.create_date is 'Created on';

comment on column product_template.write_uid is 'Last Updated by';

comment on column product_template.write_date is 'Last Updated on';

comment on column product_template.service_type is 'Track Service';

comment on column product_template.sale_line_warn is 'Sales Order Line';

comment on column product_template.sale_line_warn_msg is 'Message for Sales Order Line';

comment on column product_template.expense_policy is 'Re-Invoice Expenses';

comment on column product_template.invoice_policy is 'Invoicing Policy';

comment on column product_template.sale_delay is 'Customer Lead Time';

comment on column product_template.tracking is 'Tracking';

comment on column product_template.description_picking is 'Description on Picking';

comment on column product_template.description_pickingout is 'Description on Delivery Orders';

comment on column product_template.description_pickingin is 'Description on Receptions';

comment on column product_template.hs_code is 'HS Code';

comment on column product_template.purchase_method is 'Control Policy';

comment on column product_template.purchase_line_warn is 'Purchase Order Line Warning';

comment on column product_template.purchase_line_warn_msg is 'Message for Purchase Order Line';

comment on column product_template.service_to_purchase is 'Purchase Automatically';

comment on column product_template.delivery_type is 'Delivery type';

comment on column product_template.write_price_unit is 'Can write price unit';

alter table product_template owner to postgres;

create table product_attribute_product_template_rel
(
	product_attribute_id integer not null
		constraint product_attribute_product_template_re_product_attribute_id_fkey
			references product_attribute
				on delete cascade,
	product_template_id integer not null
		constraint product_attribute_product_template_rel_product_template_id_fkey
			references product_template
				on delete cascade,
	constraint product_attribute_product_template_rel_pkey
		primary key (product_attribute_id, product_template_id)
);

comment on table product_attribute_product_template_rel is 'RELATION BETWEEN product_attribute AND product_template';

alter table product_attribute_product_template_rel owner to postgres;

create index product_attribute_product_tem_product_template_id_product_a_idx
	on product_attribute_product_template_rel (product_template_id, product_attribute_id);

create table product_product
(
	id integer default nextval('product_product_id_seq'::regclass) not null
		constraint product_product_pkey
			primary key,
	default_code varchar,
	active boolean,
	product_tmpl_id integer not null
		constraint product_product_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	barcode varchar
		constraint product_product_barcode_uniq
			unique,
	combination_indices varchar,
	volume numeric,
	weight numeric,
	can_image_variant_1024_be_zoomed boolean,
	message_main_attachment_id integer
		constraint product_product_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint product_product_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_product_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_product is 'Product';

comment on column product_product.default_code is 'Internal Reference';

comment on column product_product.active is 'Active';

comment on column product_product.product_tmpl_id is 'Product Template';

comment on column product_product.barcode is 'Barcode';

comment on column product_product.combination_indices is 'Combination Indices';

comment on column product_product.volume is 'Volume';

comment on column product_product.weight is 'Weight';

comment on column product_product.can_image_variant_1024_be_zoomed is 'Can Variant Image 1024 be zoomed';

comment on column product_product.message_main_attachment_id is 'Main Attachment';

comment on column product_product.create_uid is 'Created by';

comment on column product_product.create_date is 'Created on';

comment on column product_product.write_uid is 'Last Updated by';

comment on column product_product.write_date is 'Last Updated on';

alter table product_product owner to postgres;

create table account_analytic_default
(
	id integer default nextval('account_analytic_default_id_seq'::regclass) not null
		constraint account_analytic_default_pkey
			primary key,
	sequence integer,
	analytic_id integer
		constraint account_analytic_default_analytic_id_fkey
			references account_analytic_account
				on delete set null,
	product_id integer
		constraint account_analytic_default_product_id_fkey
			references product_product
				on delete cascade,
	partner_id integer
		constraint account_analytic_default_partner_id_fkey
			references res_partner
				on delete cascade,
	account_id integer
		constraint account_analytic_default_account_id_fkey
			references account_account
				on delete cascade,
	user_id integer
		constraint account_analytic_default_user_id_fkey
			references res_users
				on delete cascade,
	company_id integer
		constraint account_analytic_default_company_id_fkey
			references res_company
				on delete cascade,
	date_start date,
	date_stop date,
	create_uid integer
		constraint account_analytic_default_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_analytic_default_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_analytic_default is 'Analytic Distribution';

comment on column account_analytic_default.sequence is 'Sequence';

comment on column account_analytic_default.analytic_id is 'Analytic Account';

comment on column account_analytic_default.product_id is 'Product';

comment on column account_analytic_default.partner_id is 'Partner';

comment on column account_analytic_default.account_id is 'Account';

comment on column account_analytic_default.user_id is 'User';

comment on column account_analytic_default.company_id is 'Company';

comment on column account_analytic_default.date_start is 'Start Date';

comment on column account_analytic_default.date_stop is 'End Date';

comment on column account_analytic_default.create_uid is 'Created by';

comment on column account_analytic_default.create_date is 'Created on';

comment on column account_analytic_default.write_uid is 'Last Updated by';

comment on column account_analytic_default.write_date is 'Last Updated on';

alter table account_analytic_default owner to postgres;

create table account_analytic_default_account_analytic_tag_rel
(
	account_analytic_default_id integer not null
		constraint account_analytic_default_accou_account_analytic_default_id_fkey
			references account_analytic_default
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_analytic_default_account_a_account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_default_account_analytic_tag_rel_pkey
		primary key (account_analytic_default_id, account_analytic_tag_id)
);

comment on table account_analytic_default_account_analytic_tag_rel is 'RELATION BETWEEN account_analytic_default AND account_analytic_tag';

alter table account_analytic_default_account_analytic_tag_rel owner to postgres;

create index account_analytic_default_acco_account_analytic_tag_id_accou_idx
	on account_analytic_default_account_analytic_tag_rel (account_analytic_tag_id, account_analytic_default_id);

create table delivery_carrier
(
	id integer default nextval('delivery_carrier_id_seq'::regclass) not null
		constraint delivery_carrier_pkey
			primary key,
	name varchar not null,
	active boolean,
	sequence integer,
	integration_level varchar,
	prod_environment boolean,
	debug_logging boolean,
	company_id integer
		constraint delivery_carrier_company_id_fkey
			references res_company
				on delete set null,
	product_id integer not null
		constraint delivery_carrier_product_id_fkey
			references product_product
				on delete restrict,
	invoice_policy varchar not null,
	zip_from varchar,
	zip_to varchar,
	margin double precision,
	free_over boolean,
	amount double precision,
	return_label_on_delivery boolean,
	get_return_label_from_portal boolean,
	fixed_price double precision,
	delivery_type varchar not null,
	create_uid integer
		constraint delivery_carrier_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint delivery_carrier_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table delivery_carrier is 'Shipping Methods';

comment on column delivery_carrier.name is 'Delivery Method';

comment on column delivery_carrier.active is 'Active';

comment on column delivery_carrier.sequence is 'Sequence';

comment on column delivery_carrier.integration_level is 'Integration Level';

comment on column delivery_carrier.prod_environment is 'Environment';

comment on column delivery_carrier.debug_logging is 'Debug logging';

comment on column delivery_carrier.company_id is 'Company';

comment on column delivery_carrier.product_id is 'Delivery Product';

comment on column delivery_carrier.invoice_policy is 'Invoicing Policy';

comment on column delivery_carrier.zip_from is 'Zip From';

comment on column delivery_carrier.zip_to is 'Zip To';

comment on column delivery_carrier.margin is 'Margin';

comment on column delivery_carrier.free_over is 'Free if order amount is above';

comment on column delivery_carrier.amount is 'Amount';

comment on column delivery_carrier.return_label_on_delivery is 'Generate Return Label';

comment on column delivery_carrier.get_return_label_from_portal is 'Return Label Accessible from Customer Portal';

comment on column delivery_carrier.fixed_price is 'Fixed Price';

comment on column delivery_carrier.delivery_type is 'Provider';

comment on column delivery_carrier.create_uid is 'Created by';

comment on column delivery_carrier.create_date is 'Created on';

comment on column delivery_carrier.write_uid is 'Last Updated by';

comment on column delivery_carrier.write_date is 'Last Updated on';

alter table delivery_carrier owner to postgres;

create table delivery_agency
(
	id integer default nextval('delivery_agency_id_seq'::regclass) not null
		constraint delivery_agency_pkey
			primary key,
	location_id integer
		constraint delivery_agency_location_id_fkey
			references cesa_location
				on delete set null,
	delivery_id integer
		constraint delivery_agency_delivery_id_fkey
			references delivery_carrier
				on delete set null,
	create_uid integer
		constraint delivery_agency_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint delivery_agency_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	transport_type varchar,
	tarif boolean,
	majoration double precision,
	first_day integer,
	first_month varchar,
	last_day integer,
	last_month varchar
);

comment on table delivery_agency is 'delivery.agency';

comment on column delivery_agency.location_id is 'Shipping agency';

comment on column delivery_agency.delivery_id is 'Delivery';

comment on column delivery_agency.create_uid is 'Created by';

comment on column delivery_agency.create_date is 'Created on';

comment on column delivery_agency.write_uid is 'Last Updated by';

comment on column delivery_agency.write_date is 'Last Updated on';

comment on column delivery_agency.transport_type is 'Transport type';

comment on column delivery_agency.tarif is 'Tarif saisonnier';

comment on column delivery_agency.majoration is 'Majoration';

comment on column delivery_agency.first_day is 'First Day';

comment on column delivery_agency.first_month is 'First Month';

comment on column delivery_agency.last_day is 'Last Day';

comment on column delivery_agency.last_month is 'Last Month';

alter table delivery_agency owner to postgres;

create table cesa_location_delivery_agency_rel
(
	delivery_agency_id integer not null
		constraint cesa_location_delivery_agency_rel_delivery_agency_id_fkey
			references delivery_agency
				on delete cascade,
	cesa_location_id integer not null
		constraint cesa_location_delivery_agency_rel_cesa_location_id_fkey
			references cesa_location
				on delete cascade,
	constraint cesa_location_delivery_agency_rel_pkey
		primary key (delivery_agency_id, cesa_location_id)
);

comment on table cesa_location_delivery_agency_rel is 'RELATION BETWEEN delivery_agency AND cesa_location';

alter table cesa_location_delivery_agency_rel owner to postgres;

create index cesa_location_delivery_agency_cesa_location_id_delivery_age_idx
	on cesa_location_delivery_agency_rel (cesa_location_id, delivery_agency_id);

create table delivery_carrier_country_rel
(
	carrier_id integer not null
		constraint delivery_carrier_country_rel_carrier_id_fkey
			references delivery_carrier
				on delete cascade,
	country_id integer not null
		constraint delivery_carrier_country_rel_country_id_fkey
			references res_country
				on delete cascade,
	constraint delivery_carrier_country_rel_pkey
		primary key (carrier_id, country_id)
);

comment on table delivery_carrier_country_rel is 'RELATION BETWEEN delivery_carrier AND res_country';

alter table delivery_carrier_country_rel owner to postgres;

create index delivery_carrier_country_rel_country_id_carrier_id_idx
	on delivery_carrier_country_rel (country_id, carrier_id);

create table delivery_carrier_state_rel
(
	carrier_id integer not null
		constraint delivery_carrier_state_rel_carrier_id_fkey
			references delivery_carrier
				on delete cascade,
	state_id integer not null
		constraint delivery_carrier_state_rel_state_id_fkey
			references res_country_state
				on delete cascade,
	constraint delivery_carrier_state_rel_pkey
		primary key (carrier_id, state_id)
);

comment on table delivery_carrier_state_rel is 'RELATION BETWEEN delivery_carrier AND res_country_state';

alter table delivery_carrier_state_rel owner to postgres;

create index delivery_carrier_state_rel_state_id_carrier_id_idx
	on delivery_carrier_state_rel (state_id, carrier_id);

create table delivery_price_rule
(
	id integer default nextval('delivery_price_rule_id_seq'::regclass) not null
		constraint delivery_price_rule_pkey
			primary key,
	sequence integer not null,
	carrier_id integer not null
		constraint delivery_price_rule_carrier_id_fkey
			references delivery_carrier
				on delete cascade,
	variable varchar not null,
	operator varchar not null,
	max_value double precision not null,
	list_base_price numeric not null,
	list_price numeric not null,
	variable_factor varchar not null,
	create_uid integer
		constraint delivery_price_rule_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint delivery_price_rule_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	delivery_type varchar not null
);

comment on table delivery_price_rule is 'Delivery Price Rules';

comment on column delivery_price_rule.sequence is 'Sequence';

comment on column delivery_price_rule.carrier_id is 'Carrier';

comment on column delivery_price_rule.variable is 'Variable';

comment on column delivery_price_rule.operator is 'Operator';

comment on column delivery_price_rule.max_value is 'Maximum Value';

comment on column delivery_price_rule.list_base_price is 'Sale Base Price';

comment on column delivery_price_rule.list_price is 'Sale Price';

comment on column delivery_price_rule.variable_factor is 'Variable Factor';

comment on column delivery_price_rule.create_uid is 'Created by';

comment on column delivery_price_rule.create_date is 'Created on';

comment on column delivery_price_rule.write_uid is 'Last Updated by';

comment on column delivery_price_rule.write_date is 'Last Updated on';

comment on column delivery_price_rule.delivery_type is 'Applicable à';

alter table delivery_price_rule owner to postgres;

create table delivery_rate_detail
(
	id integer default nextval('delivery_rate_detail_id_seq'::regclass) not null
		constraint delivery_rate_detail_pkey
			primary key,
	order_line_id integer,
	rate_id integer
		constraint delivery_rate_detail_rate_id_fkey
			references delivery_carrier
				on delete set null,
	amount double precision,
	create_uid integer
		constraint delivery_rate_detail_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint delivery_rate_detail_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	pricelist_id integer
		constraint delivery_rate_detail_pricelist_id_fkey
			references product_pricelist
				on delete set null,
	agency_id integer
		constraint delivery_rate_detail_agency_id_fkey
			references delivery_agency
				on delete set null,
	total_amount double precision
);

comment on table delivery_rate_detail is 'delivery.rate.detail';

comment on column delivery_rate_detail.order_line_id is 'Order Line';

comment on column delivery_rate_detail.rate_id is 'Rate';

comment on column delivery_rate_detail.amount is 'Cost';

comment on column delivery_rate_detail.create_uid is 'Created by';

comment on column delivery_rate_detail.create_date is 'Created on';

comment on column delivery_rate_detail.write_uid is 'Last Updated by';

comment on column delivery_rate_detail.write_date is 'Last Updated on';

comment on column delivery_rate_detail.pricelist_id is 'Pricelist';

comment on column delivery_rate_detail.agency_id is 'Agency';

comment on column delivery_rate_detail.total_amount is 'Coût total';

alter table delivery_rate_detail owner to postgres;

create table handling_rate
(
	id integer default nextval('handling_rate_id_seq'::regclass) not null
		constraint handling_rate_pkey
			primary key,
	product_id integer not null
		constraint handling_rate_product_id_fkey
			references product_product
				on delete restrict,
	create_uid integer
		constraint handling_rate_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint handling_rate_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table handling_rate is 'handling.rate';

comment on column handling_rate.product_id is 'Handling Rate';

comment on column handling_rate.create_uid is 'Created by';

comment on column handling_rate.create_date is 'Created on';

comment on column handling_rate.write_uid is 'Last Updated by';

comment on column handling_rate.write_date is 'Last Updated on';

alter table handling_rate owner to postgres;

create table handling_rate_detail
(
	id integer default nextval('handling_rate_detail_id_seq'::regclass) not null
		constraint handling_rate_detail_pkey
			primary key,
	order_line_id integer,
	rate_id integer
		constraint handling_rate_detail_rate_id_fkey
			references handling_rate
				on delete set null,
	amount double precision,
	create_uid integer
		constraint handling_rate_detail_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint handling_rate_detail_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table handling_rate_detail is 'handling.rate.detail';

comment on column handling_rate_detail.order_line_id is 'Order Line';

comment on column handling_rate_detail.rate_id is 'Rate';

comment on column handling_rate_detail.amount is 'Cost';

comment on column handling_rate_detail.create_uid is 'Created by';

comment on column handling_rate_detail.create_date is 'Created on';

comment on column handling_rate_detail.write_uid is 'Last Updated by';

comment on column handling_rate_detail.write_date is 'Last Updated on';

alter table handling_rate_detail owner to postgres;

create table handling_rate_line
(
	id integer default nextval('handling_rate_line_id_seq'::regclass) not null
		constraint handling_rate_line_pkey
			primary key,
	rate_id integer
		constraint handling_rate_line_rate_id_fkey
			references handling_rate
				on delete set null,
	variable varchar,
	variable_factor varchar not null,
	sequence integer not null,
	operator varchar not null,
	max_value double precision not null,
	list_base_price numeric not null,
	list_price numeric not null,
	create_uid integer
		constraint handling_rate_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint handling_rate_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table handling_rate_line is 'handling.rate.line';

comment on column handling_rate_line.rate_id is 'Rate';

comment on column handling_rate_line.variable is 'Variable';

comment on column handling_rate_line.variable_factor is 'Variable Factor';

comment on column handling_rate_line.sequence is 'Sequence';

comment on column handling_rate_line.operator is 'Operator';

comment on column handling_rate_line.max_value is 'Maximum Value';

comment on column handling_rate_line.list_base_price is 'Sale Base Price';

comment on column handling_rate_line.list_price is 'Sale Price';

comment on column handling_rate_line.create_uid is 'Created by';

comment on column handling_rate_line.create_date is 'Created on';

comment on column handling_rate_line.write_uid is 'Last Updated by';

comment on column handling_rate_line.write_date is 'Last Updated on';

alter table handling_rate_line owner to postgres;

create table packaging_rate
(
	id integer default nextval('packaging_rate_id_seq'::regclass) not null
		constraint packaging_rate_pkey
			primary key,
	product_id integer not null
		constraint packaging_rate_product_id_fkey
			references product_product
				on delete restrict,
	create_uid integer
		constraint packaging_rate_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint packaging_rate_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table packaging_rate is 'packaging.rate';

comment on column packaging_rate.product_id is 'Packaging Rate';

comment on column packaging_rate.create_uid is 'Created by';

comment on column packaging_rate.create_date is 'Created on';

comment on column packaging_rate.write_uid is 'Last Updated by';

comment on column packaging_rate.write_date is 'Last Updated on';

alter table packaging_rate owner to postgres;

create table packaging_rate_detail
(
	id integer default nextval('packaging_rate_detail_id_seq'::regclass) not null
		constraint packaging_rate_detail_pkey
			primary key,
	order_line_id integer,
	rate_id integer
		constraint packaging_rate_detail_rate_id_fkey
			references packaging_rate
				on delete set null,
	amount double precision,
	create_uid integer
		constraint packaging_rate_detail_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint packaging_rate_detail_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table packaging_rate_detail is 'packaging.rate.detail';

comment on column packaging_rate_detail.order_line_id is 'Order Line';

comment on column packaging_rate_detail.rate_id is 'Rate';

comment on column packaging_rate_detail.amount is 'Cost';

comment on column packaging_rate_detail.create_uid is 'Created by';

comment on column packaging_rate_detail.create_date is 'Created on';

comment on column packaging_rate_detail.write_uid is 'Last Updated by';

comment on column packaging_rate_detail.write_date is 'Last Updated on';

alter table packaging_rate_detail owner to postgres;

create table packaging_rate_line
(
	id integer default nextval('packaging_rate_line_id_seq'::regclass) not null
		constraint packaging_rate_line_pkey
			primary key,
	rate_id integer
		constraint packaging_rate_line_rate_id_fkey
			references packaging_rate
				on delete set null,
	sequence integer not null,
	variable varchar,
	variable_factor varchar not null,
	operator varchar not null,
	max_value double precision not null,
	list_base_price numeric not null,
	list_price numeric not null,
	create_uid integer
		constraint packaging_rate_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint packaging_rate_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table packaging_rate_line is 'packaging.rate.line';

comment on column packaging_rate_line.rate_id is 'Rate';

comment on column packaging_rate_line.sequence is 'Sequence';

comment on column packaging_rate_line.variable is 'Variable';

comment on column packaging_rate_line.variable_factor is 'Variable Factor';

comment on column packaging_rate_line.operator is 'Operator';

comment on column packaging_rate_line.max_value is 'Maximum Value';

comment on column packaging_rate_line.list_base_price is 'Sale Base Price';

comment on column packaging_rate_line.list_price is 'Sale Price';

comment on column packaging_rate_line.create_uid is 'Created by';

comment on column packaging_rate_line.create_date is 'Created on';

comment on column packaging_rate_line.write_uid is 'Last Updated by';

comment on column packaging_rate_line.write_date is 'Last Updated on';

alter table packaging_rate_line owner to postgres;

create table product_packaging
(
	id integer default nextval('product_packaging_id_seq'::regclass) not null
		constraint product_packaging_pkey
			primary key,
	name varchar not null,
	sequence integer,
	product_id integer
		constraint product_packaging_product_id_fkey
			references product_product
				on delete set null,
	qty double precision,
	barcode varchar,
	company_id integer
		constraint product_packaging_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint product_packaging_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_packaging_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	height integer,
	width integer,
	packaging_length integer,
	max_weight double precision,
	shipper_package_code varchar,
	package_carrier_type varchar
);

comment on table product_packaging is 'Product Packaging';

comment on column product_packaging.name is 'Package Type';

comment on column product_packaging.sequence is 'Sequence';

comment on column product_packaging.product_id is 'Product';

comment on column product_packaging.qty is 'Contained Quantity';

comment on column product_packaging.barcode is 'Barcode';

comment on column product_packaging.company_id is 'Company';

comment on column product_packaging.create_uid is 'Created by';

comment on column product_packaging.create_date is 'Created on';

comment on column product_packaging.write_uid is 'Last Updated by';

comment on column product_packaging.write_date is 'Last Updated on';

comment on column product_packaging.height is 'Height';

comment on column product_packaging.width is 'Width';

comment on column product_packaging.packaging_length is 'Length';

comment on column product_packaging.max_weight is 'Max Weight';

comment on column product_packaging.shipper_package_code is 'Package Code';

comment on column product_packaging.package_carrier_type is 'Carrier';

alter table product_packaging owner to postgres;

create index product_packaging_company_id_index
	on product_packaging (company_id);

create table product_pricelist_item
(
	id integer default nextval('product_pricelist_item_id_seq'::regclass) not null
		constraint product_pricelist_item_pkey
			primary key,
	product_tmpl_id integer
		constraint product_pricelist_item_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	product_id integer
		constraint product_pricelist_item_product_id_fkey
			references product_product
				on delete cascade,
	categ_id integer
		constraint product_pricelist_item_categ_id_fkey
			references product_category
				on delete cascade,
	min_quantity numeric,
	applied_on varchar not null,
	base varchar not null,
	base_pricelist_id integer
		constraint product_pricelist_item_base_pricelist_id_fkey
			references product_pricelist
				on delete set null,
	pricelist_id integer not null
		constraint product_pricelist_item_pricelist_id_fkey
			references product_pricelist
				on delete cascade,
	price_surcharge numeric,
	price_discount numeric,
	price_round numeric,
	price_min_margin numeric,
	price_max_margin numeric,
	company_id integer
		constraint product_pricelist_item_company_id_fkey
			references res_company
				on delete set null,
	currency_id integer
		constraint product_pricelist_item_currency_id_fkey
			references res_currency
				on delete set null,
	active boolean,
	date_start timestamp,
	date_end timestamp,
	compute_price varchar not null,
	fixed_price numeric,
	percent_price double precision,
	create_uid integer
		constraint product_pricelist_item_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_pricelist_item_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_pricelist_item is 'Pricelist Rule';

comment on column product_pricelist_item.product_tmpl_id is 'Product';

comment on column product_pricelist_item.product_id is 'Product Variant';

comment on column product_pricelist_item.categ_id is 'Product Category';

comment on column product_pricelist_item.min_quantity is 'Min. Quantity';

comment on column product_pricelist_item.applied_on is 'Apply On';

comment on column product_pricelist_item.base is 'Based on';

comment on column product_pricelist_item.base_pricelist_id is 'Other Pricelist';

comment on column product_pricelist_item.pricelist_id is 'Pricelist';

comment on column product_pricelist_item.price_surcharge is 'Price Surcharge';

comment on column product_pricelist_item.price_discount is 'Price Discount';

comment on column product_pricelist_item.price_round is 'Price Rounding';

comment on column product_pricelist_item.price_min_margin is 'Min. Price Margin';

comment on column product_pricelist_item.price_max_margin is 'Max. Price Margin';

comment on column product_pricelist_item.company_id is 'Company';

comment on column product_pricelist_item.currency_id is 'Currency';

comment on column product_pricelist_item.active is 'Active';

comment on column product_pricelist_item.date_start is 'Start Date';

comment on column product_pricelist_item.date_end is 'End Date';

comment on column product_pricelist_item.compute_price is 'Compute Price';

comment on column product_pricelist_item.fixed_price is 'Fixed Price';

comment on column product_pricelist_item.percent_price is 'Percentage Price';

comment on column product_pricelist_item.create_uid is 'Created by';

comment on column product_pricelist_item.create_date is 'Created on';

comment on column product_pricelist_item.write_uid is 'Last Updated by';

comment on column product_pricelist_item.write_date is 'Last Updated on';

alter table product_pricelist_item owner to postgres;

create index product_pricelist_item_compute_price_index
	on product_pricelist_item (compute_price);

create index product_pricelist_item_pricelist_id_index
	on product_pricelist_item (pricelist_id);

create index product_product_combination_indices_index
	on product_product (combination_indices);

create index product_product_combination_unique
	on product_product (product_tmpl_id, combination_indices);

create index product_product_default_code_index
	on product_product (default_code);

create index product_product_message_main_attachment_id_index
	on product_product (message_main_attachment_id);

create index product_product_product_tmpl_id_index
	on product_product (product_tmpl_id);

create table product_product_stock_inventory_rel
(
	stock_inventory_id integer not null
		constraint product_product_stock_inventory_rel_stock_inventory_id_fkey
			references stock_inventory
				on delete cascade,
	product_product_id integer not null
		constraint product_product_stock_inventory_rel_product_product_id_fkey
			references product_product
				on delete cascade,
	constraint product_product_stock_inventory_rel_pkey
		primary key (stock_inventory_id, product_product_id)
);

comment on table product_product_stock_inventory_rel is 'RELATION BETWEEN stock_inventory AND product_product';

alter table product_product_stock_inventory_rel owner to postgres;

create index product_product_stock_invento_product_product_id_stock_inve_idx
	on product_product_stock_inventory_rel (product_product_id, stock_inventory_id);

create table product_replenish
(
	id integer default nextval('product_replenish_id_seq'::regclass) not null
		constraint product_replenish_pkey
			primary key,
	product_id integer not null
		constraint product_replenish_product_id_fkey
			references product_product
				on delete cascade,
	product_tmpl_id integer not null
		constraint product_replenish_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	product_has_variants boolean not null,
	product_uom_id integer not null
		constraint product_replenish_product_uom_id_fkey
			references uom_uom
				on delete cascade,
	quantity double precision not null,
	date_planned timestamp not null,
	warehouse_id integer not null
		constraint product_replenish_warehouse_id_fkey
			references stock_warehouse
				on delete cascade,
	company_id integer
		constraint product_replenish_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint product_replenish_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_replenish_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_replenish is 'Product Replenish';

comment on column product_replenish.product_id is 'Product';

comment on column product_replenish.product_tmpl_id is 'Product Template';

comment on column product_replenish.product_has_variants is 'Has variants';

comment on column product_replenish.product_uom_id is 'Unity of measure';

comment on column product_replenish.quantity is 'Quantity';

comment on column product_replenish.date_planned is 'Scheduled Date';

comment on column product_replenish.warehouse_id is 'Warehouse';

comment on column product_replenish.company_id is 'Company';

comment on column product_replenish.create_uid is 'Created by';

comment on column product_replenish.create_date is 'Created on';

comment on column product_replenish.write_uid is 'Last Updated by';

comment on column product_replenish.write_date is 'Last Updated on';

alter table product_replenish owner to postgres;

create table product_replenish_stock_location_route_rel
(
	product_replenish_id integer not null
		constraint product_replenish_stock_location_rout_product_replenish_id_fkey
			references product_replenish
				on delete cascade,
	stock_location_route_id integer not null
		constraint product_replenish_stock_location_r_stock_location_route_id_fkey
			references stock_location_route
				on delete cascade,
	constraint product_replenish_stock_location_route_rel_pkey
		primary key (product_replenish_id, stock_location_route_id)
);

comment on table product_replenish_stock_location_route_rel is 'RELATION BETWEEN product_replenish AND stock_location_route';

alter table product_replenish_stock_location_route_rel owner to postgres;

create index product_replenish_stock_locat_stock_location_route_id_produ_idx
	on product_replenish_stock_location_route_rel (stock_location_route_id, product_replenish_id);

create table product_supplier_taxes_rel
(
	prod_id integer not null
		constraint product_supplier_taxes_rel_prod_id_fkey
			references product_template
				on delete cascade,
	tax_id integer not null
		constraint product_supplier_taxes_rel_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint product_supplier_taxes_rel_pkey
		primary key (prod_id, tax_id)
);

comment on table product_supplier_taxes_rel is 'RELATION BETWEEN product_template AND account_tax';

alter table product_supplier_taxes_rel owner to postgres;

create index product_supplier_taxes_rel_tax_id_prod_id_idx
	on product_supplier_taxes_rel (tax_id, prod_id);

create table product_supplierinfo
(
	id integer default nextval('product_supplierinfo_id_seq'::regclass) not null
		constraint product_supplierinfo_pkey
			primary key,
	name integer not null
		constraint product_supplierinfo_name_fkey
			references res_partner
				on delete cascade,
	product_name varchar,
	product_code varchar,
	sequence integer,
	min_qty numeric not null,
	price numeric not null,
	company_id integer,
	currency_id integer not null
		constraint product_supplierinfo_currency_id_fkey
			references res_currency
				on delete restrict,
	date_start date,
	date_end date,
	product_id integer
		constraint product_supplierinfo_product_id_fkey
			references product_product
				on delete set null,
	product_tmpl_id integer
		constraint product_supplierinfo_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	delay integer not null,
	create_uid integer
		constraint product_supplierinfo_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_supplierinfo_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_supplierinfo is 'Supplier Pricelist';

comment on column product_supplierinfo.name is 'Vendor';

comment on column product_supplierinfo.product_name is 'Vendor Product Name';

comment on column product_supplierinfo.product_code is 'Vendor Product Code';

comment on column product_supplierinfo.sequence is 'Sequence';

comment on column product_supplierinfo.min_qty is 'Quantity';

comment on column product_supplierinfo.price is 'Price';

comment on column product_supplierinfo.company_id is 'Company';

comment on column product_supplierinfo.currency_id is 'Currency';

comment on column product_supplierinfo.date_start is 'Start Date';

comment on column product_supplierinfo.date_end is 'End Date';

comment on column product_supplierinfo.product_id is 'Product Variant';

comment on column product_supplierinfo.product_tmpl_id is 'Product Template';

comment on column product_supplierinfo.delay is 'Delivery Lead Time';

comment on column product_supplierinfo.create_uid is 'Created by';

comment on column product_supplierinfo.create_date is 'Created on';

comment on column product_supplierinfo.write_uid is 'Last Updated by';

comment on column product_supplierinfo.write_date is 'Last Updated on';

alter table product_supplierinfo owner to postgres;

create index product_supplierinfo_company_id_index
	on product_supplierinfo (company_id);

create index product_supplierinfo_product_tmpl_id_index
	on product_supplierinfo (product_tmpl_id);

create table product_taxes_rel
(
	prod_id integer not null
		constraint product_taxes_rel_prod_id_fkey
			references product_template
				on delete cascade,
	tax_id integer not null
		constraint product_taxes_rel_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint product_taxes_rel_pkey
		primary key (prod_id, tax_id)
);

comment on table product_taxes_rel is 'RELATION BETWEEN product_template AND account_tax';

alter table product_taxes_rel owner to postgres;

create index product_taxes_rel_tax_id_prod_id_idx
	on product_taxes_rel (tax_id, prod_id);

create index product_template_company_id_index
	on product_template (company_id);

create index product_template_message_main_attachment_id_index
	on product_template (message_main_attachment_id);

create index product_template_name_index
	on product_template (name);

create table product_template_attribute_line
(
	id integer default nextval('product_template_attribute_line_id_seq'::regclass) not null
		constraint product_template_attribute_line_pkey
			primary key,
	active boolean,
	product_tmpl_id integer not null
		constraint product_template_attribute_line_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	attribute_id integer not null
		constraint product_template_attribute_line_attribute_id_fkey
			references product_attribute
				on delete restrict,
	create_uid integer
		constraint product_template_attribute_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_template_attribute_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_template_attribute_line is 'Product Template Attribute Line';

comment on column product_template_attribute_line.active is 'Active';

comment on column product_template_attribute_line.product_tmpl_id is 'Product Template';

comment on column product_template_attribute_line.attribute_id is 'Attribute';

comment on column product_template_attribute_line.create_uid is 'Created by';

comment on column product_template_attribute_line.create_date is 'Created on';

comment on column product_template_attribute_line.write_uid is 'Last Updated by';

comment on column product_template_attribute_line.write_date is 'Last Updated on';

alter table product_template_attribute_line owner to postgres;

create table product_attribute_value_product_template_attribute_line_rel
(
	product_attribute_value_id integer not null
		constraint product_attribute_value_product_product_attribute_value_id_fkey
			references product_attribute_value
				on delete restrict,
	product_template_attribute_line_id integer not null
		constraint product_attribute_value_produ_product_template_attribute_l_fkey
			references product_template_attribute_line
				on delete cascade,
	constraint product_attribute_value_product_template_attribute_line_re_pkey
		primary key (product_attribute_value_id, product_template_attribute_line_id)
);

comment on table product_attribute_value_product_template_attribute_line_rel is 'RELATION BETWEEN product_attribute_value AND product_template_attribute_line';

alter table product_attribute_value_product_template_attribute_line_rel owner to postgres;

create index product_attribute_value_produ_product_template_attribute_li_idx
	on product_attribute_value_product_template_attribute_line_rel (product_template_attribute_line_id, product_attribute_value_id);

create index product_template_attribute_line_attribute_id_index
	on product_template_attribute_line (attribute_id);

create index product_template_attribute_line_product_tmpl_id_index
	on product_template_attribute_line (product_tmpl_id);

create table product_template_attribute_value
(
	id integer default nextval('product_template_attribute_value_id_seq'::regclass) not null
		constraint product_template_attribute_value_pkey
			primary key,
	ptav_active boolean,
	product_attribute_value_id integer not null
		constraint product_template_attribute_valu_product_attribute_value_id_fkey
			references product_attribute_value
				on delete cascade,
	attribute_line_id integer not null
		constraint product_template_attribute_value_attribute_line_id_fkey
			references product_template_attribute_line
				on delete cascade,
	price_extra numeric,
	product_tmpl_id integer
		constraint product_template_attribute_value_product_tmpl_id_fkey
			references product_template
				on delete set null,
	attribute_id integer
		constraint product_template_attribute_value_attribute_id_fkey
			references product_attribute
				on delete set null,
	create_uid integer
		constraint product_template_attribute_value_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_template_attribute_value_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint product_template_attribute_value_attribute_value_unique
		unique (attribute_line_id, product_attribute_value_id)
);

comment on table product_template_attribute_value is 'Product Template Attribute Value';

comment on column product_template_attribute_value.ptav_active is 'Active';

comment on column product_template_attribute_value.product_attribute_value_id is 'Attribute Value';

comment on column product_template_attribute_value.attribute_line_id is 'Attribute Line';

comment on column product_template_attribute_value.price_extra is 'Value Price Extra';

comment on column product_template_attribute_value.product_tmpl_id is 'Product Template';

comment on column product_template_attribute_value.attribute_id is 'Attribute';

comment on column product_template_attribute_value.create_uid is 'Created by';

comment on column product_template_attribute_value.create_date is 'Created on';

comment on column product_template_attribute_value.write_uid is 'Last Updated by';

comment on column product_template_attribute_value.write_date is 'Last Updated on';

alter table product_template_attribute_value owner to postgres;

create table product_template_attribute_exclusion
(
	id integer default nextval('product_template_attribute_exclusion_id_seq'::regclass) not null
		constraint product_template_attribute_exclusion_pkey
			primary key,
	product_template_attribute_value_id integer
		constraint product_template_attribute_ex_product_template_attribute_v_fkey
			references product_template_attribute_value
				on delete cascade,
	product_tmpl_id integer not null
		constraint product_template_attribute_exclusion_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	create_uid integer
		constraint product_template_attribute_exclusion_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_template_attribute_exclusion_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_template_attribute_exclusion is 'Product Template Attribute Exclusion';

comment on column product_template_attribute_exclusion.product_template_attribute_value_id is 'Attribute Value';

comment on column product_template_attribute_exclusion.product_tmpl_id is 'Product Template';

comment on column product_template_attribute_exclusion.create_uid is 'Created by';

comment on column product_template_attribute_exclusion.create_date is 'Created on';

comment on column product_template_attribute_exclusion.write_uid is 'Last Updated by';

comment on column product_template_attribute_exclusion.write_date is 'Last Updated on';

alter table product_template_attribute_exclusion owner to postgres;

create table product_attr_exclusion_value_ids_rel
(
	product_template_attribute_exclusion_id integer not null
		constraint product_attr_exclusion_value__product_template_attribute_e_fkey
			references product_template_attribute_exclusion
				on delete cascade,
	product_template_attribute_value_id integer not null
		constraint product_attr_exclusion_value__product_template_attribute_v_fkey
			references product_template_attribute_value
				on delete cascade,
	constraint product_attr_exclusion_value_ids_rel_pkey
		primary key (product_template_attribute_exclusion_id, product_template_attribute_value_id)
);

comment on table product_attr_exclusion_value_ids_rel is 'RELATION BETWEEN product_template_attribute_exclusion AND product_template_attribute_value';

alter table product_attr_exclusion_value_ids_rel owner to postgres;

create index product_attr_exclusion_value__product_template_attribute_va_idx
	on product_attr_exclusion_value_ids_rel (product_template_attribute_value_id, product_template_attribute_exclusion_id);

create index product_template_attribute_exclusion_product_template_attribute
	on product_template_attribute_exclusion (product_template_attribute_value_id);

create index product_template_attribute_exclusion_product_tmpl_id_index
	on product_template_attribute_exclusion (product_tmpl_id);

create index product_template_attribute_value_attribute_id_index
	on product_template_attribute_value (attribute_id);

create index product_template_attribute_value_attribute_line_id_index
	on product_template_attribute_value (attribute_line_id);

create index product_template_attribute_value_product_attribute_value_id_ind
	on product_template_attribute_value (product_attribute_value_id);

create index product_template_attribute_value_product_tmpl_id_index
	on product_template_attribute_value (product_tmpl_id);

create table product_variant_combination
(
	product_product_id integer not null
		constraint product_variant_combination_product_product_id_fkey
			references product_product
				on delete cascade,
	product_template_attribute_value_id integer not null
		constraint product_variant_combination_product_template_attribute_val_fkey
			references product_template_attribute_value
				on delete restrict,
	constraint product_variant_combination_pkey
		primary key (product_product_id, product_template_attribute_value_id)
);

comment on table product_variant_combination is 'RELATION BETWEEN product_product AND product_template_attribute_value';

alter table product_variant_combination owner to postgres;

create index product_variant_combination_product_template_attribute_valu_idx
	on product_variant_combination (product_template_attribute_value_id, product_product_id);

create table res_config_settings
(
	id integer default nextval('res_config_settings_id_seq'::regclass) not null
		constraint res_config_settings_pkey
			primary key,
	create_uid integer
		constraint res_config_settings_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_config_settings_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	company_id integer not null
		constraint res_config_settings_company_id_fkey
			references res_company
				on delete cascade,
	user_default_rights boolean,
	external_email_server_default boolean,
	module_base_import boolean,
	module_google_calendar boolean,
	module_microsoft_calendar boolean,
	module_google_drive boolean,
	module_google_spreadsheet boolean,
	module_auth_oauth boolean,
	module_auth_ldap boolean,
	module_base_gengo boolean,
	module_account_inter_company_rules boolean,
	module_pad boolean,
	module_voip boolean,
	module_web_unsplash boolean,
	module_partner_autocomplete boolean,
	module_base_geolocalize boolean,
	module_google_recaptcha boolean,
	group_multi_currency boolean,
	show_effect boolean,
	fail_counter integer,
	alias_domain varchar,
	map_box_token varchar,
	unsplash_access_key varchar,
	auth_signup_reset_password boolean,
	auth_signup_uninvited varchar,
	auth_signup_template_user_id integer
		constraint res_config_settings_auth_signup_template_user_id_fkey
			references res_users
				on delete set null,
	group_discount_per_so_line boolean,
	group_uom boolean,
	group_product_variant boolean,
	module_sale_product_configurator boolean,
	module_sale_product_matrix boolean,
	group_stock_packaging boolean,
	group_product_pricelist boolean,
	group_sale_pricelist boolean,
	product_pricelist_setting varchar,
	product_weight_in_lbs varchar,
	product_volume_volume_in_cubic_feet varchar,
	disable_redirect_firebase_dynamic_link boolean,
	enable_ocn boolean,
	digest_emails boolean,
	digest_id integer
		constraint res_config_settings_digest_id_fkey
			references digest_digest
				on delete set null,
	chart_template_id integer
		constraint res_config_settings_chart_template_id_fkey
			references account_chart_template
				on delete set null,
	module_account_accountant boolean,
	group_analytic_accounting boolean,
	group_analytic_tags boolean,
	group_warning_account boolean,
	group_cash_rounding boolean,
	group_show_line_subtotals_tax_excluded boolean,
	group_show_line_subtotals_tax_included boolean,
	group_show_sale_receipts boolean,
	group_show_purchase_receipts boolean,
	show_line_subtotals_tax_selection varchar not null,
	module_account_budget boolean,
	module_account_payment boolean,
	module_account_reports boolean,
	module_account_check_printing boolean,
	module_account_batch_payment boolean,
	module_account_sepa boolean,
	module_account_sepa_direct_debit boolean,
	module_account_plaid boolean,
	module_account_yodlee boolean,
	module_account_bank_statement_import_qif boolean,
	module_account_bank_statement_import_ofx boolean,
	module_account_bank_statement_import_csv boolean,
	module_account_bank_statement_import_camt boolean,
	module_currency_rate_live boolean,
	module_account_intrastat boolean,
	module_product_margin boolean,
	module_l10n_eu_service boolean,
	module_account_taxcloud boolean,
	module_account_invoice_extract boolean,
	module_snailmail_account boolean,
	use_invoice_terms boolean,
	module_account_predictive_bills boolean,
	group_fiscal_year boolean,
	group_auto_done_setting boolean,
	module_sale_margin boolean,
	use_quotation_validity_days boolean,
	group_warning_sale boolean,
	group_sale_delivery_address boolean,
	group_proforma_sales boolean,
	default_invoice_policy varchar,
	deposit_default_product_id integer
		constraint res_config_settings_deposit_default_product_id_fkey
			references product_product
				on delete set null,
	module_delivery boolean,
	module_delivery_dhl boolean,
	module_delivery_fedex boolean,
	module_delivery_ups boolean,
	module_delivery_usps boolean,
	module_delivery_bpost boolean,
	module_delivery_easypost boolean,
	module_product_email_template boolean,
	module_sale_coupon boolean,
	module_sale_amazon boolean,
	automatic_invoice boolean,
	template_id integer
		constraint res_config_settings_template_id_fkey
			references mail_template
				on delete set null,
	confirmation_template_id integer
		constraint res_config_settings_confirmation_template_id_fkey
			references mail_template
				on delete set null,
	group_sale_order_template boolean,
	module_sale_quotation_builder boolean,
	module_procurement_jit varchar,
	module_product_expiry boolean,
	group_stock_production_lot boolean,
	group_lot_on_delivery_slip boolean,
	group_stock_tracking_lot boolean,
	group_stock_tracking_owner boolean,
	group_stock_adv_location boolean,
	group_warning_stock boolean,
	group_stock_sign_delivery boolean,
	module_stock_picking_batch boolean,
	module_stock_barcode boolean,
	module_stock_sms boolean,
	group_stock_multi_locations boolean,
	module_stock_landed_costs boolean,
	group_display_incoterm boolean,
	group_lot_on_invoice boolean,
	use_security_lead boolean,
	default_picking_policy varchar not null,
	lock_confirmed_po boolean,
	po_order_approval boolean,
	default_purchase_method varchar,
	group_warning_purchase boolean,
	module_account_3way_match boolean,
	module_purchase_requisition boolean,
	module_purchase_product_matrix boolean,
	use_po_lead boolean,
	group_send_reminder boolean,
	module_stock_dropshipping boolean,
	is_installed_sale boolean
);

comment on table res_config_settings is 'Config Settings';

comment on column res_config_settings.create_uid is 'Created by';

comment on column res_config_settings.create_date is 'Created on';

comment on column res_config_settings.write_uid is 'Last Updated by';

comment on column res_config_settings.write_date is 'Last Updated on';

comment on column res_config_settings.company_id is 'Company';

comment on column res_config_settings.user_default_rights is 'Default Access Rights';

comment on column res_config_settings.external_email_server_default is 'External Email Servers';

comment on column res_config_settings.module_base_import is 'Allow users to import data from CSV/XLS/XLSX/ODS files';

comment on column res_config_settings.module_google_calendar is 'Allow the users to synchronize their calendar  with Google Calendar';

comment on column res_config_settings.module_microsoft_calendar is 'Allow the users to synchronize their calendar with Outlook Calendar';

comment on column res_config_settings.module_google_drive is 'Attach Google documents to any record';

comment on column res_config_settings.module_google_spreadsheet is 'Google Spreadsheet';

comment on column res_config_settings.module_auth_oauth is 'Use external authentication providers (OAuth)';

comment on column res_config_settings.module_auth_ldap is 'LDAP Authentication';

comment on column res_config_settings.module_base_gengo is 'Translate Your Website with Gengo';

comment on column res_config_settings.module_account_inter_company_rules is 'Manage Inter Company';

comment on column res_config_settings.module_pad is 'Collaborative Pads';

comment on column res_config_settings.module_voip is 'Asterisk (VoIP)';

comment on column res_config_settings.module_web_unsplash is 'Unsplash Image Library';

comment on column res_config_settings.module_partner_autocomplete is 'Partner Autocomplete';

comment on column res_config_settings.module_base_geolocalize is 'GeoLocalize';

comment on column res_config_settings.module_google_recaptcha is 'reCAPTCHA: Easy on Humans, Hard on Bots';

comment on column res_config_settings.group_multi_currency is 'Multi-Currencies';

comment on column res_config_settings.show_effect is 'Show Effect';

comment on column res_config_settings.fail_counter is 'Fail Mail';

comment on column res_config_settings.alias_domain is 'Alias Domain';

comment on column res_config_settings.map_box_token is 'Token Map Box';

comment on column res_config_settings.unsplash_access_key is 'Access Key';

comment on column res_config_settings.auth_signup_reset_password is 'Enable password reset from Login page';

comment on column res_config_settings.auth_signup_uninvited is 'Customer Account';

comment on column res_config_settings.auth_signup_template_user_id is 'Template user for new users created through signup';

comment on column res_config_settings.group_discount_per_so_line is 'Discounts';

comment on column res_config_settings.group_uom is 'Units of Measure';

comment on column res_config_settings.group_product_variant is 'Variants';

comment on column res_config_settings.module_sale_product_configurator is 'Product Configurator';

comment on column res_config_settings.module_sale_product_matrix is 'Sales Grid Entry';

comment on column res_config_settings.group_stock_packaging is 'Product Packagings';

comment on column res_config_settings.group_product_pricelist is 'Pricelists';

comment on column res_config_settings.group_sale_pricelist is 'Advanced Pricelists';

comment on column res_config_settings.product_pricelist_setting is 'Pricelists Method';

comment on column res_config_settings.product_weight_in_lbs is 'Weight unit of measure';

comment on column res_config_settings.product_volume_volume_in_cubic_feet is 'Volume unit of measure';

comment on column res_config_settings.disable_redirect_firebase_dynamic_link is 'Disable link redirection to mobile app';

comment on column res_config_settings.enable_ocn is 'Push Notifications';

comment on column res_config_settings.digest_emails is 'Digest Emails';

comment on column res_config_settings.digest_id is 'Digest Email';

comment on column res_config_settings.chart_template_id is 'Template';

comment on column res_config_settings.module_account_accountant is 'Accounting';

comment on column res_config_settings.group_analytic_accounting is 'Analytic Accounting';

comment on column res_config_settings.group_analytic_tags is 'Analytic Tags';

comment on column res_config_settings.group_warning_account is 'Warnings in Invoices';

comment on column res_config_settings.group_cash_rounding is 'Cash Rounding';

comment on column res_config_settings.group_show_line_subtotals_tax_excluded is 'Show line subtotals without taxes (B2B)';

comment on column res_config_settings.group_show_line_subtotals_tax_included is 'Show line subtotals with taxes (B2C)';

comment on column res_config_settings.group_show_sale_receipts is 'Sale Receipt';

comment on column res_config_settings.group_show_purchase_receipts is 'Purchase Receipt';

comment on column res_config_settings.show_line_subtotals_tax_selection is 'Line Subtotals Tax Display';

comment on column res_config_settings.module_account_budget is 'Budget Management';

comment on column res_config_settings.module_account_payment is 'Invoice Online Payment';

comment on column res_config_settings.module_account_reports is 'Dynamic Reports';

comment on column res_config_settings.module_account_check_printing is 'Allow check printing and deposits';

comment on column res_config_settings.module_account_batch_payment is 'Use batch payments';

comment on column res_config_settings.module_account_sepa is 'SEPA Credit Transfer (SCT)';

comment on column res_config_settings.module_account_sepa_direct_debit is 'Use SEPA Direct Debit';

comment on column res_config_settings.module_account_plaid is 'Plaid Connector';

comment on column res_config_settings.module_account_yodlee is 'Bank Interface - Sync your bank feeds automatically';

comment on column res_config_settings.module_account_bank_statement_import_qif is 'Import .qif files';

comment on column res_config_settings.module_account_bank_statement_import_ofx is 'Import in .ofx format';

comment on column res_config_settings.module_account_bank_statement_import_csv is 'Import in .csv format';

comment on column res_config_settings.module_account_bank_statement_import_camt is 'Import in CAMT.053 format';

comment on column res_config_settings.module_currency_rate_live is 'Automatic Currency Rates';

comment on column res_config_settings.module_account_intrastat is 'Intrastat';

comment on column res_config_settings.module_product_margin is 'Allow Product Margin';

comment on column res_config_settings.module_l10n_eu_service is 'EU Intra-community Distance Selling';

comment on column res_config_settings.module_account_taxcloud is 'Account TaxCloud';

comment on column res_config_settings.module_account_invoice_extract is 'Bill Digitalization';

comment on column res_config_settings.module_snailmail_account is 'Snailmail';

comment on column res_config_settings.use_invoice_terms is 'Default Terms & Conditions';

comment on column res_config_settings.module_account_predictive_bills is 'Account Predictive Bills';

comment on column res_config_settings.group_fiscal_year is 'Fiscal Years';

comment on column res_config_settings.group_auto_done_setting is 'Lock Confirmed Sales';

comment on column res_config_settings.module_sale_margin is 'Margins';

comment on column res_config_settings.use_quotation_validity_days is 'Default Quotation Validity';

comment on column res_config_settings.group_warning_sale is 'Sale Order Warnings';

comment on column res_config_settings.group_sale_delivery_address is 'Customer Addresses';

comment on column res_config_settings.group_proforma_sales is 'Pro-Forma Invoice';

comment on column res_config_settings.default_invoice_policy is 'Invoicing Policy';

comment on column res_config_settings.deposit_default_product_id is 'Deposit Product';

comment on column res_config_settings.module_delivery is 'Delivery Methods';

comment on column res_config_settings.module_delivery_dhl is 'DHL USA Connector';

comment on column res_config_settings.module_delivery_fedex is 'FedEx Connector';

comment on column res_config_settings.module_delivery_ups is 'UPS Connector';

comment on column res_config_settings.module_delivery_usps is 'USPS Connector';

comment on column res_config_settings.module_delivery_bpost is 'bpost Connector';

comment on column res_config_settings.module_delivery_easypost is 'Easypost Connector';

comment on column res_config_settings.module_product_email_template is 'Specific Email';

comment on column res_config_settings.module_sale_coupon is 'Coupons & Promotions';

comment on column res_config_settings.module_sale_amazon is 'Amazon Sync';

comment on column res_config_settings.automatic_invoice is 'Automatic Invoice';

comment on column res_config_settings.template_id is 'Email Template';

comment on column res_config_settings.confirmation_template_id is 'Confirmation Email';

comment on column res_config_settings.group_sale_order_template is 'Quotation Templates';

comment on column res_config_settings.module_sale_quotation_builder is 'Quotation Builder';

comment on column res_config_settings.module_procurement_jit is 'Reservation';

comment on column res_config_settings.module_product_expiry is 'Expiration Dates';

comment on column res_config_settings.group_stock_production_lot is 'Lots & Serial Numbers';

comment on column res_config_settings.group_lot_on_delivery_slip is 'Display Lots & Serial Numbers on Delivery Slips';

comment on column res_config_settings.group_stock_tracking_lot is 'Packages';

comment on column res_config_settings.group_stock_tracking_owner is 'Consignment';

comment on column res_config_settings.group_stock_adv_location is 'Multi-Step Routes';

comment on column res_config_settings.group_warning_stock is 'Warnings for Stock';

comment on column res_config_settings.group_stock_sign_delivery is 'Signature';

comment on column res_config_settings.module_stock_picking_batch is 'Batch Pickings';

comment on column res_config_settings.module_stock_barcode is 'Barcode Scanner';

comment on column res_config_settings.module_stock_sms is 'SMS Confirmation';

comment on column res_config_settings.group_stock_multi_locations is 'Storage Locations';

comment on column res_config_settings.module_stock_landed_costs is 'Landed Costs';

comment on column res_config_settings.group_display_incoterm is 'Incoterms';

comment on column res_config_settings.group_lot_on_invoice is 'Display Lots & Serial Numbers on Invoices';

comment on column res_config_settings.use_security_lead is 'Security Lead Time for Sales';

comment on column res_config_settings.default_picking_policy is 'Picking Policy';

comment on column res_config_settings.lock_confirmed_po is 'Lock Confirmed Orders';

comment on column res_config_settings.po_order_approval is 'Purchase Order Approval';

comment on column res_config_settings.default_purchase_method is 'Bill Control';

comment on column res_config_settings.group_warning_purchase is 'Purchase Warnings';

comment on column res_config_settings.module_account_3way_match is '3-way matching: purchases, receptions and bills';

comment on column res_config_settings.module_purchase_requisition is 'Purchase Agreements';

comment on column res_config_settings.module_purchase_product_matrix is 'Purchase Grid Entry';

comment on column res_config_settings.use_po_lead is 'Security Lead Time for Purchase';

comment on column res_config_settings.group_send_reminder is 'Receipt Reminder';

comment on column res_config_settings.module_stock_dropshipping is 'Dropshipping';

comment on column res_config_settings.is_installed_sale is 'Is the Sale Module Installed';

alter table res_config_settings owner to postgres;

create table sale_advance_payment_inv
(
	id integer default nextval('sale_advance_payment_inv_id_seq'::regclass) not null
		constraint sale_advance_payment_inv_pkey
			primary key,
	advance_payment_method varchar not null,
	deduct_down_payments boolean,
	has_down_payments boolean,
	product_id integer
		constraint sale_advance_payment_inv_product_id_fkey
			references product_product
				on delete set null,
	count integer,
	amount numeric,
	currency_id integer
		constraint sale_advance_payment_inv_currency_id_fkey
			references res_currency
				on delete set null,
	fixed_amount numeric,
	deposit_account_id integer
		constraint sale_advance_payment_inv_deposit_account_id_fkey
			references account_account
				on delete set null,
	create_uid integer
		constraint sale_advance_payment_inv_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_advance_payment_inv_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_advance_payment_inv is 'Sales Advance Payment Invoice';

comment on column sale_advance_payment_inv.advance_payment_method is 'Create Invoice';

comment on column sale_advance_payment_inv.deduct_down_payments is 'Deduct down payments';

comment on column sale_advance_payment_inv.has_down_payments is 'Has down payments';

comment on column sale_advance_payment_inv.product_id is 'Down Payment Product';

comment on column sale_advance_payment_inv.count is 'Order Count';

comment on column sale_advance_payment_inv.amount is 'Down Payment Amount';

comment on column sale_advance_payment_inv.currency_id is 'Currency';

comment on column sale_advance_payment_inv.fixed_amount is 'Down Payment Amount (Fixed)';

comment on column sale_advance_payment_inv.deposit_account_id is 'Income Account';

comment on column sale_advance_payment_inv.create_uid is 'Created by';

comment on column sale_advance_payment_inv.create_date is 'Created on';

comment on column sale_advance_payment_inv.write_uid is 'Last Updated by';

comment on column sale_advance_payment_inv.write_date is 'Last Updated on';

alter table sale_advance_payment_inv owner to postgres;

create table account_tax_sale_advance_payment_inv_rel
(
	sale_advance_payment_inv_id integer not null
		constraint account_tax_sale_advance_payme_sale_advance_payment_inv_id_fkey
			references sale_advance_payment_inv
				on delete cascade,
	account_tax_id integer not null
		constraint account_tax_sale_advance_payment_inv_rel_account_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint account_tax_sale_advance_payment_inv_rel_pkey
		primary key (sale_advance_payment_inv_id, account_tax_id)
);

comment on table account_tax_sale_advance_payment_inv_rel is 'RELATION BETWEEN sale_advance_payment_inv AND account_tax';

alter table account_tax_sale_advance_payment_inv_rel owner to postgres;

create index account_tax_sale_advance_paym_account_tax_id_sale_advance_p_idx
	on account_tax_sale_advance_payment_inv_rel (account_tax_id, sale_advance_payment_inv_id);

create table sale_order_template_line
(
	id integer default nextval('sale_order_template_line_id_seq'::regclass) not null
		constraint sale_order_template_line_pkey
			primary key,
	sequence integer,
	sale_order_template_id integer not null
		constraint sale_order_template_line_sale_order_template_id_fkey
			references sale_order_template
				on delete cascade,
	company_id integer
		constraint sale_order_template_line_company_id_fkey
			references res_company
				on delete set null,
	name text not null,
	product_id integer
		constraint sale_order_template_line_product_id_fkey
			references product_product
				on delete set null,
	product_uom_qty numeric not null,
	product_uom_id integer
		constraint sale_order_template_line_product_uom_id_fkey
			references uom_uom
				on delete set null,
	display_type varchar,
	create_uid integer
		constraint sale_order_template_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_template_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_order_template_line is 'Quotation Template Line';

comment on column sale_order_template_line.sequence is 'Sequence';

comment on column sale_order_template_line.sale_order_template_id is 'Quotation Template Reference';

comment on column sale_order_template_line.company_id is 'Company';

comment on column sale_order_template_line.name is 'Description';

comment on column sale_order_template_line.product_id is 'Product';

comment on column sale_order_template_line.product_uom_qty is 'Quantity';

comment on column sale_order_template_line.product_uom_id is 'Unit of Measure';

comment on column sale_order_template_line.display_type is 'Display Type';

comment on column sale_order_template_line.create_uid is 'Created by';

comment on column sale_order_template_line.create_date is 'Created on';

comment on column sale_order_template_line.write_uid is 'Last Updated by';

comment on column sale_order_template_line.write_date is 'Last Updated on';

alter table sale_order_template_line owner to postgres;

create index sale_order_template_line_company_id_index
	on sale_order_template_line (company_id);

create index sale_order_template_line_sale_order_template_id_index
	on sale_order_template_line (sale_order_template_id);

create table sale_order_template_option
(
	id integer default nextval('sale_order_template_option_id_seq'::regclass) not null
		constraint sale_order_template_option_pkey
			primary key,
	sale_order_template_id integer not null
		constraint sale_order_template_option_sale_order_template_id_fkey
			references sale_order_template
				on delete cascade,
	company_id integer
		constraint sale_order_template_option_company_id_fkey
			references res_company
				on delete set null,
	name text not null,
	product_id integer not null
		constraint sale_order_template_option_product_id_fkey
			references product_product
				on delete restrict,
	uom_id integer not null
		constraint sale_order_template_option_uom_id_fkey
			references uom_uom
				on delete restrict,
	quantity numeric not null,
	create_uid integer
		constraint sale_order_template_option_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_template_option_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_order_template_option is 'Quotation Template Option';

comment on column sale_order_template_option.sale_order_template_id is 'Quotation Template Reference';

comment on column sale_order_template_option.company_id is 'Company';

comment on column sale_order_template_option.name is 'Description';

comment on column sale_order_template_option.product_id is 'Product';

comment on column sale_order_template_option.uom_id is 'Unit of Measure ';

comment on column sale_order_template_option.quantity is 'Quantity';

comment on column sale_order_template_option.create_uid is 'Created by';

comment on column sale_order_template_option.create_date is 'Created on';

comment on column sale_order_template_option.write_uid is 'Last Updated by';

comment on column sale_order_template_option.write_date is 'Last Updated on';

alter table sale_order_template_option owner to postgres;

create index sale_order_template_option_company_id_index
	on sale_order_template_option (company_id);

create index sale_order_template_option_sale_order_template_id_index
	on sale_order_template_option (sale_order_template_id);

create table stock_change_product_qty
(
	id integer default nextval('stock_change_product_qty_id_seq'::regclass) not null
		constraint stock_change_product_qty_pkey
			primary key,
	product_id integer not null
		constraint stock_change_product_qty_product_id_fkey
			references product_product
				on delete cascade,
	product_tmpl_id integer not null
		constraint stock_change_product_qty_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	new_quantity numeric not null,
	create_uid integer
		constraint stock_change_product_qty_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_change_product_qty_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_change_product_qty is 'Change Product Quantity';

comment on column stock_change_product_qty.product_id is 'Product';

comment on column stock_change_product_qty.product_tmpl_id is 'Template';

comment on column stock_change_product_qty.new_quantity is 'New Quantity on Hand';

comment on column stock_change_product_qty.create_uid is 'Created by';

comment on column stock_change_product_qty.create_date is 'Created on';

comment on column stock_change_product_qty.write_uid is 'Last Updated by';

comment on column stock_change_product_qty.write_date is 'Last Updated on';

alter table stock_change_product_qty owner to postgres;

create table stock_production_lot
(
	id integer default nextval('stock_production_lot_id_seq'::regclass) not null
		constraint stock_production_lot_pkey
			primary key,
	message_main_attachment_id integer
		constraint stock_production_lot_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	name varchar not null,
	ref varchar,
	product_id integer not null
		constraint stock_production_lot_product_id_fkey
			references product_product
				on delete restrict,
	product_uom_id integer
		constraint stock_production_lot_product_uom_id_fkey
			references uom_uom
				on delete set null,
	note text,
	company_id integer not null
		constraint stock_production_lot_company_id_fkey
			references res_company
				on delete restrict,
	create_uid integer
		constraint stock_production_lot_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_production_lot_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_production_lot is 'Lot/Serial';

comment on column stock_production_lot.message_main_attachment_id is 'Main Attachment';

comment on column stock_production_lot.name is 'Lot/Serial Number';

comment on column stock_production_lot.ref is 'Internal Reference';

comment on column stock_production_lot.product_id is 'Product';

comment on column stock_production_lot.product_uom_id is 'Unit of Measure';

comment on column stock_production_lot.note is 'Description';

comment on column stock_production_lot.company_id is 'Company';

comment on column stock_production_lot.create_uid is 'Created by';

comment on column stock_production_lot.create_date is 'Created on';

comment on column stock_production_lot.write_uid is 'Last Updated by';

comment on column stock_production_lot.write_date is 'Last Updated on';

alter table stock_production_lot owner to postgres;

create index stock_production_lot_company_id_index
	on stock_production_lot (company_id);

create index stock_production_lot_message_main_attachment_id_index
	on stock_production_lot (message_main_attachment_id);

create table stock_putaway_rule
(
	id integer default nextval('stock_putaway_rule_id_seq'::regclass) not null
		constraint stock_putaway_rule_pkey
			primary key,
	product_id integer
		constraint stock_putaway_rule_product_id_fkey
			references product_product
				on delete cascade,
	category_id integer
		constraint stock_putaway_rule_category_id_fkey
			references product_category
				on delete cascade,
	location_in_id integer not null
		constraint stock_putaway_rule_location_in_id_fkey
			references stock_location
				on delete cascade,
	location_out_id integer not null
		constraint stock_putaway_rule_location_out_id_fkey
			references stock_location
				on delete cascade,
	sequence integer,
	company_id integer not null
		constraint stock_putaway_rule_company_id_fkey
			references res_company
				on delete restrict,
	create_uid integer
		constraint stock_putaway_rule_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_putaway_rule_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_putaway_rule is 'Putaway Rule';

comment on column stock_putaway_rule.product_id is 'Product';

comment on column stock_putaway_rule.category_id is 'Product Category';

comment on column stock_putaway_rule.location_in_id is 'When product arrives in';

comment on column stock_putaway_rule.location_out_id is 'Store to';

comment on column stock_putaway_rule.sequence is 'Priority';

comment on column stock_putaway_rule.company_id is 'Company';

comment on column stock_putaway_rule.create_uid is 'Created by';

comment on column stock_putaway_rule.create_date is 'Created on';

comment on column stock_putaway_rule.write_uid is 'Last Updated by';

comment on column stock_putaway_rule.write_date is 'Last Updated on';

alter table stock_putaway_rule owner to postgres;

create index stock_putaway_rule_company_id_index
	on stock_putaway_rule (company_id);

create table stock_quant_package
(
	id integer default nextval('stock_quant_package_id_seq'::regclass) not null
		constraint stock_quant_package_pkey
			primary key,
	name varchar,
	packaging_id integer
		constraint stock_quant_package_packaging_id_fkey
			references product_packaging
				on delete set null,
	location_id integer
		constraint stock_quant_package_location_id_fkey
			references stock_location
				on delete set null,
	company_id integer
		constraint stock_quant_package_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint stock_quant_package_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_quant_package_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	shipping_weight double precision
);

comment on table stock_quant_package is 'Packages';

comment on column stock_quant_package.name is 'Package Reference';

comment on column stock_quant_package.packaging_id is 'Package Type';

comment on column stock_quant_package.location_id is 'Location';

comment on column stock_quant_package.company_id is 'Company';

comment on column stock_quant_package.create_uid is 'Created by';

comment on column stock_quant_package.create_date is 'Created on';

comment on column stock_quant_package.write_uid is 'Last Updated by';

comment on column stock_quant_package.write_date is 'Last Updated on';

comment on column stock_quant_package.shipping_weight is 'Shipping Weight';

alter table stock_quant_package owner to postgres;

create table stock_inventory_line
(
	id integer default nextval('stock_inventory_line_id_seq'::regclass) not null
		constraint stock_inventory_line_pkey
			primary key,
	is_editable boolean,
	inventory_id integer
		constraint stock_inventory_line_inventory_id_fkey
			references stock_inventory
				on delete cascade,
	partner_id integer
		constraint stock_inventory_line_partner_id_fkey
			references res_partner
				on delete set null,
	product_id integer not null
		constraint stock_inventory_line_product_id_fkey
			references product_product
				on delete restrict,
	product_uom_id integer not null
		constraint stock_inventory_line_product_uom_id_fkey
			references uom_uom
				on delete restrict,
	product_qty numeric,
	categ_id integer
		constraint stock_inventory_line_categ_id_fkey
			references product_category
				on delete set null,
	location_id integer not null
		constraint stock_inventory_line_location_id_fkey
			references stock_location
				on delete restrict,
	package_id integer
		constraint stock_inventory_line_package_id_fkey
			references stock_quant_package
				on delete set null,
	prod_lot_id integer
		constraint stock_inventory_line_prod_lot_id_fkey
			references stock_production_lot
				on delete set null,
	company_id integer,
	theoretical_qty numeric,
	inventory_date timestamp,
	create_uid integer
		constraint stock_inventory_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_inventory_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_inventory_line is 'Inventory Line';

comment on column stock_inventory_line.is_editable is 'Is Editable';

comment on column stock_inventory_line.inventory_id is 'Inventory';

comment on column stock_inventory_line.partner_id is 'Owner';

comment on column stock_inventory_line.product_id is 'Product';

comment on column stock_inventory_line.product_uom_id is 'Product Unit of Measure';

comment on column stock_inventory_line.product_qty is 'Counted Quantity';

comment on column stock_inventory_line.categ_id is 'Product Category';

comment on column stock_inventory_line.location_id is 'Location';

comment on column stock_inventory_line.package_id is 'Pack';

comment on column stock_inventory_line.prod_lot_id is 'Lot/Serial Number';

comment on column stock_inventory_line.company_id is 'Company';

comment on column stock_inventory_line.theoretical_qty is 'Theoretical Quantity';

comment on column stock_inventory_line.inventory_date is 'Inventory Date';

comment on column stock_inventory_line.create_uid is 'Created by';

comment on column stock_inventory_line.create_date is 'Created on';

comment on column stock_inventory_line.write_uid is 'Last Updated by';

comment on column stock_inventory_line.write_date is 'Last Updated on';

alter table stock_inventory_line owner to postgres;

create index stock_inventory_line_company_id_index
	on stock_inventory_line (company_id);

create index stock_inventory_line_inventory_id_index
	on stock_inventory_line (inventory_id);

create index stock_inventory_line_location_id_index
	on stock_inventory_line (location_id);

create index stock_inventory_line_package_id_index
	on stock_inventory_line (package_id);

create index stock_inventory_line_product_id_index
	on stock_inventory_line (product_id);

create table stock_quant
(
	id integer default nextval('stock_quant_id_seq'::regclass) not null
		constraint stock_quant_pkey
			primary key,
	product_id integer not null
		constraint stock_quant_product_id_fkey
			references product_product
				on delete restrict,
	company_id integer,
	location_id integer not null
		constraint stock_quant_location_id_fkey
			references stock_location
				on delete restrict,
	lot_id integer
		constraint stock_quant_lot_id_fkey
			references stock_production_lot
				on delete restrict,
	package_id integer
		constraint stock_quant_package_id_fkey
			references stock_quant_package
				on delete restrict,
	owner_id integer
		constraint stock_quant_owner_id_fkey
			references res_partner
				on delete set null,
	quantity double precision,
	reserved_quantity double precision not null,
	in_date timestamp,
	create_uid integer
		constraint stock_quant_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_quant_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_quant is 'Quants';

comment on column stock_quant.product_id is 'Product';

comment on column stock_quant.company_id is 'Company';

comment on column stock_quant.location_id is 'Location';

comment on column stock_quant.lot_id is 'Lot/Serial Number';

comment on column stock_quant.package_id is 'Package';

comment on column stock_quant.owner_id is 'Owner';

comment on column stock_quant.quantity is 'Quantity';

comment on column stock_quant.reserved_quantity is 'Reserved Quantity';

comment on column stock_quant.in_date is 'Incoming Date';

comment on column stock_quant.create_uid is 'Created by';

comment on column stock_quant.create_date is 'Created on';

comment on column stock_quant.write_uid is 'Last Updated by';

comment on column stock_quant.write_date is 'Last Updated on';

alter table stock_quant owner to postgres;

create index stock_quant_location_id_index
	on stock_quant (location_id);

create index stock_quant_lot_id_index
	on stock_quant (lot_id);

create index stock_quant_product_id_index
	on stock_quant (product_id);

create index stock_quant_package_company_id_index
	on stock_quant_package (company_id);

create index stock_quant_package_location_id_index
	on stock_quant_package (location_id);

create index stock_quant_package_name_index
	on stock_quant_package (name);

create index stock_quant_package_packaging_id_index
	on stock_quant_package (packaging_id);

create table stock_route_product
(
	route_id integer not null
		constraint stock_route_product_route_id_fkey
			references stock_location_route
				on delete cascade,
	product_id integer not null
		constraint stock_route_product_product_id_fkey
			references product_template
				on delete cascade,
	constraint stock_route_product_pkey
		primary key (route_id, product_id)
);

comment on table stock_route_product is 'RELATION BETWEEN stock_location_route AND product_template';

alter table stock_route_product owner to postgres;

create index stock_route_product_product_id_route_id_idx
	on stock_route_product (product_id, route_id);

create table stock_rules_report
(
	id integer default nextval('stock_rules_report_id_seq'::regclass) not null
		constraint stock_rules_report_pkey
			primary key,
	product_id integer not null
		constraint stock_rules_report_product_id_fkey
			references product_product
				on delete cascade,
	product_tmpl_id integer not null
		constraint stock_rules_report_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	product_has_variants boolean not null,
	create_uid integer
		constraint stock_rules_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_rules_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_rules_report is 'Stock Rules report';

comment on column stock_rules_report.product_id is 'Product';

comment on column stock_rules_report.product_tmpl_id is 'Product Template';

comment on column stock_rules_report.product_has_variants is 'Has variants';

comment on column stock_rules_report.create_uid is 'Created by';

comment on column stock_rules_report.create_date is 'Created on';

comment on column stock_rules_report.write_uid is 'Last Updated by';

comment on column stock_rules_report.write_date is 'Last Updated on';

alter table stock_rules_report owner to postgres;

create table stock_location_route_stock_rules_report_rel
(
	stock_rules_report_id integer not null
		constraint stock_location_route_stock_rules_rep_stock_rules_report_id_fkey
			references stock_rules_report
				on delete cascade,
	stock_location_route_id integer not null
		constraint stock_location_route_stock_rules_r_stock_location_route_id_fkey
			references stock_location_route
				on delete cascade,
	constraint stock_location_route_stock_rules_report_rel_pkey
		primary key (stock_rules_report_id, stock_location_route_id)
);

comment on table stock_location_route_stock_rules_report_rel is 'RELATION BETWEEN stock_rules_report AND stock_location_route';

alter table stock_location_route_stock_rules_report_rel owner to postgres;

create index stock_location_route_stock_ru_stock_location_route_id_stock_idx
	on stock_location_route_stock_rules_report_rel (stock_location_route_id, stock_rules_report_id);

create table stock_rules_report_stock_warehouse_rel
(
	stock_rules_report_id integer not null
		constraint stock_rules_report_stock_warehouse_r_stock_rules_report_id_fkey
			references stock_rules_report
				on delete cascade,
	stock_warehouse_id integer not null
		constraint stock_rules_report_stock_warehouse_rel_stock_warehouse_id_fkey
			references stock_warehouse
				on delete cascade,
	constraint stock_rules_report_stock_warehouse_rel_pkey
		primary key (stock_rules_report_id, stock_warehouse_id)
);

comment on table stock_rules_report_stock_warehouse_rel is 'RELATION BETWEEN stock_rules_report AND stock_warehouse';

alter table stock_rules_report_stock_warehouse_rel owner to postgres;

create index stock_rules_report_stock_ware_stock_warehouse_id_stock_rule_idx
	on stock_rules_report_stock_warehouse_rel (stock_warehouse_id, stock_rules_report_id);

create table stock_track_line
(
	id integer default nextval('stock_track_line_id_seq'::regclass) not null
		constraint stock_track_line_pkey
			primary key,
	product_id integer
		constraint stock_track_line_product_id_fkey
			references product_product
				on delete set null,
	tracking varchar,
	wizard_id integer
		constraint stock_track_line_wizard_id_fkey
			references stock_track_confirmation
				on delete set null,
	create_uid integer
		constraint stock_track_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_track_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_track_line is 'Stock Track Line';

comment on column stock_track_line.product_id is 'Product';

comment on column stock_track_line.tracking is 'Tracking';

comment on column stock_track_line.wizard_id is 'Wizard';

comment on column stock_track_line.create_uid is 'Created by';

comment on column stock_track_line.create_date is 'Created on';

comment on column stock_track_line.write_uid is 'Last Updated by';

comment on column stock_track_line.write_date is 'Last Updated on';

alter table stock_track_line owner to postgres;

create table stock_valuation_layer_revaluation
(
	id integer default nextval('stock_valuation_layer_revaluation_id_seq'::regclass) not null
		constraint stock_valuation_layer_revaluation_pkey
			primary key,
	company_id integer not null
		constraint stock_valuation_layer_revaluation_company_id_fkey
			references res_company
				on delete cascade,
	product_id integer not null
		constraint stock_valuation_layer_revaluation_product_id_fkey
			references product_product
				on delete cascade,
	added_value numeric not null,
	reason varchar,
	account_journal_id integer
		constraint stock_valuation_layer_revaluation_account_journal_id_fkey
			references account_journal
				on delete set null,
	account_id integer
		constraint stock_valuation_layer_revaluation_account_id_fkey
			references account_account
				on delete set null,
	date date,
	create_uid integer
		constraint stock_valuation_layer_revaluation_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_valuation_layer_revaluation_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_valuation_layer_revaluation is 'Wizard model to reavaluate a stock inventory for a product';

comment on column stock_valuation_layer_revaluation.company_id is 'Company';

comment on column stock_valuation_layer_revaluation.product_id is 'Related product';

comment on column stock_valuation_layer_revaluation.added_value is 'Added value';

comment on column stock_valuation_layer_revaluation.reason is 'Reason';

comment on column stock_valuation_layer_revaluation.account_journal_id is 'Journal';

comment on column stock_valuation_layer_revaluation.account_id is 'Counterpart Account';

comment on column stock_valuation_layer_revaluation.date is 'Accounting Date';

comment on column stock_valuation_layer_revaluation.create_uid is 'Created by';

comment on column stock_valuation_layer_revaluation.create_date is 'Created on';

comment on column stock_valuation_layer_revaluation.write_uid is 'Last Updated by';

comment on column stock_valuation_layer_revaluation.write_date is 'Last Updated on';

alter table stock_valuation_layer_revaluation owner to postgres;

create table stock_warehouse_orderpoint
(
	id integer default nextval('stock_warehouse_orderpoint_id_seq'::regclass) not null
		constraint stock_warehouse_orderpoint_pkey
			primary key,
	name varchar not null,
	trigger varchar not null,
	active boolean,
	snoozed_until date,
	warehouse_id integer not null
		constraint stock_warehouse_orderpoint_warehouse_id_fkey
			references stock_warehouse
				on delete cascade,
	location_id integer not null
		constraint stock_warehouse_orderpoint_location_id_fkey
			references stock_location
				on delete cascade,
	product_id integer not null
		constraint stock_warehouse_orderpoint_product_id_fkey
			references product_product
				on delete cascade,
	product_category_id integer
		constraint stock_warehouse_orderpoint_product_category_id_fkey
			references product_category
				on delete set null,
	product_min_qty numeric not null,
	product_max_qty numeric not null,
	qty_multiple numeric not null,
	group_id integer
		constraint stock_warehouse_orderpoint_group_id_fkey
			references procurement_group
				on delete set null,
	company_id integer not null,
	route_id integer
		constraint stock_warehouse_orderpoint_route_id_fkey
			references stock_location_route
				on delete set null,
	qty_to_order double precision,
	create_uid integer
		constraint stock_warehouse_orderpoint_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_warehouse_orderpoint_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	supplier_id integer
		constraint stock_warehouse_orderpoint_supplier_id_fkey
			references product_supplierinfo
				on delete set null
);

comment on table stock_warehouse_orderpoint is 'Minimum Inventory Rule';

comment on column stock_warehouse_orderpoint.name is 'Name';

comment on column stock_warehouse_orderpoint.trigger is 'Trigger';

comment on column stock_warehouse_orderpoint.active is 'Active';

comment on column stock_warehouse_orderpoint.snoozed_until is 'Snoozed';

comment on column stock_warehouse_orderpoint.warehouse_id is 'Warehouse';

comment on column stock_warehouse_orderpoint.location_id is 'Location';

comment on column stock_warehouse_orderpoint.product_id is 'Product';

comment on column stock_warehouse_orderpoint.product_category_id is 'Product Category';

comment on column stock_warehouse_orderpoint.product_min_qty is 'Min Quantity';

comment on column stock_warehouse_orderpoint.product_max_qty is 'Max Quantity';

comment on column stock_warehouse_orderpoint.qty_multiple is 'Multiple Quantity';

comment on column stock_warehouse_orderpoint.group_id is 'Procurement Group';

comment on column stock_warehouse_orderpoint.company_id is 'Company';

comment on column stock_warehouse_orderpoint.route_id is 'Preferred Route';

comment on column stock_warehouse_orderpoint.qty_to_order is 'To Order';

comment on column stock_warehouse_orderpoint.create_uid is 'Created by';

comment on column stock_warehouse_orderpoint.create_date is 'Created on';

comment on column stock_warehouse_orderpoint.write_uid is 'Last Updated by';

comment on column stock_warehouse_orderpoint.write_date is 'Last Updated on';

comment on column stock_warehouse_orderpoint.supplier_id is 'Vendor';

alter table stock_warehouse_orderpoint owner to postgres;

create table stock_orderpoint_snooze_stock_warehouse_orderpoint_rel
(
	stock_orderpoint_snooze_id integer not null
		constraint stock_orderpoint_snooze_stock_w_stock_orderpoint_snooze_id_fkey
			references stock_orderpoint_snooze
				on delete cascade,
	stock_warehouse_orderpoint_id integer not null
		constraint stock_orderpoint_snooze_stock_stock_warehouse_orderpoint_i_fkey
			references stock_warehouse_orderpoint
				on delete cascade,
	constraint stock_orderpoint_snooze_stock_warehouse_orderpoint_rel_pkey
		primary key (stock_orderpoint_snooze_id, stock_warehouse_orderpoint_id)
);

comment on table stock_orderpoint_snooze_stock_warehouse_orderpoint_rel is 'RELATION BETWEEN stock_orderpoint_snooze AND stock_warehouse_orderpoint';

alter table stock_orderpoint_snooze_stock_warehouse_orderpoint_rel owner to postgres;

create index stock_orderpoint_snooze_stock_stock_warehouse_orderpoint_id_idx
	on stock_orderpoint_snooze_stock_warehouse_orderpoint_rel (stock_warehouse_orderpoint_id, stock_orderpoint_snooze_id);

create index stock_warehouse_orderpoint_company_id_index
	on stock_warehouse_orderpoint (company_id);

create index stock_warehouse_orderpoint_location_id_index
	on stock_warehouse_orderpoint (location_id);

create index stock_warehouse_orderpoint_product_id_index
	on stock_warehouse_orderpoint (product_id);

create table user_journal_rel
(
	user_id integer not null
		constraint user_journal_rel_user_id_fkey
			references account_journal
				on delete cascade,
	journal_id integer not null
		constraint user_journal_rel_journal_id_fkey
			references res_users
				on delete cascade,
	constraint user_journal_rel_pkey
		primary key (user_id, journal_id)
);

comment on table user_journal_rel is 'RELATION BETWEEN account_journal AND res_users';

alter table user_journal_rel owner to postgres;

create index user_journal_rel_journal_id_user_id_idx
	on user_journal_rel (journal_id, user_id);

create table utm_medium
(
	id integer default nextval('utm_medium_id_seq'::regclass) not null
		constraint utm_medium_pkey
			primary key,
	name varchar not null,
	active boolean,
	create_uid integer
		constraint utm_medium_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint utm_medium_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table utm_medium is 'UTM Medium';

comment on column utm_medium.name is 'Medium Name';

comment on column utm_medium.active is 'Active';

comment on column utm_medium.create_uid is 'Created by';

comment on column utm_medium.create_date is 'Created on';

comment on column utm_medium.write_uid is 'Last Updated by';

comment on column utm_medium.write_date is 'Last Updated on';

alter table utm_medium owner to postgres;

alter table account_move
	add constraint account_move_medium_id_fkey
		foreign key (medium_id) references utm_medium
			on delete set null;

create table utm_source
(
	id integer default nextval('utm_source_id_seq'::regclass) not null
		constraint utm_source_pkey
			primary key,
	name varchar not null,
	create_uid integer
		constraint utm_source_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint utm_source_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table utm_source is 'UTM Source';

comment on column utm_source.name is 'Source Name';

comment on column utm_source.create_uid is 'Created by';

comment on column utm_source.create_date is 'Created on';

comment on column utm_source.write_uid is 'Last Updated by';

comment on column utm_source.write_date is 'Last Updated on';

alter table utm_source owner to postgres;

alter table account_move
	add constraint account_move_source_id_fkey
		foreign key (source_id) references utm_source
			on delete set null;

create table utm_stage
(
	id integer default nextval('utm_stage_id_seq'::regclass) not null
		constraint utm_stage_pkey
			primary key,
	name varchar not null,
	sequence integer,
	create_uid integer
		constraint utm_stage_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint utm_stage_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table utm_stage is 'Campaign Stage';

comment on column utm_stage.name is 'Name';

comment on column utm_stage.sequence is 'Sequence';

comment on column utm_stage.create_uid is 'Created by';

comment on column utm_stage.create_date is 'Created on';

comment on column utm_stage.write_uid is 'Last Updated by';

comment on column utm_stage.write_date is 'Last Updated on';

alter table utm_stage owner to postgres;

create table utm_campaign
(
	id integer default nextval('utm_campaign_id_seq'::regclass) not null
		constraint utm_campaign_pkey
			primary key,
	name varchar not null,
	user_id integer not null
		constraint utm_campaign_user_id_fkey
			references res_users
				on delete restrict,
	stage_id integer not null
		constraint utm_campaign_stage_id_fkey
			references utm_stage
				on delete restrict,
	is_website boolean,
	color integer,
	create_uid integer
		constraint utm_campaign_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint utm_campaign_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	company_id integer
		constraint utm_campaign_company_id_fkey
			references res_company
				on delete set null
);

comment on table utm_campaign is 'UTM Campaign';

comment on column utm_campaign.name is 'Campaign Name';

comment on column utm_campaign.user_id is 'Responsible';

comment on column utm_campaign.stage_id is 'Stage';

comment on column utm_campaign.is_website is 'Is Website';

comment on column utm_campaign.color is 'Color Index';

comment on column utm_campaign.create_uid is 'Created by';

comment on column utm_campaign.create_date is 'Created on';

comment on column utm_campaign.write_uid is 'Last Updated by';

comment on column utm_campaign.write_date is 'Last Updated on';

comment on column utm_campaign.company_id is 'Company';

alter table utm_campaign owner to postgres;

alter table account_move
	add constraint account_move_campaign_id_fkey
		foreign key (campaign_id) references utm_campaign
			on delete set null;

create table sale_order
(
	id integer default nextval('sale_order_id_seq'::regclass) not null
		constraint sale_order_pkey
			primary key,
	name varchar not null,
	origin varchar,
	client_order_ref varchar,
	reference varchar,
	state varchar,
	date_order timestamp not null,
	validity_date date,
	require_signature boolean,
	require_payment boolean,
	create_date timestamp,
	user_id integer
		constraint sale_order_user_id_fkey
			references res_users
				on delete set null,
	partner_id integer not null
		constraint sale_order_partner_id_fkey
			references res_partner
				on delete restrict,
	partner_invoice_id integer not null
		constraint sale_order_partner_invoice_id_fkey
			references res_partner
				on delete restrict,
	partner_shipping_id integer not null
		constraint sale_order_partner_shipping_id_fkey
			references res_partner
				on delete restrict,
	pricelist_id integer not null
		constraint sale_order_pricelist_id_fkey
			references product_pricelist
				on delete restrict,
	currency_id integer
		constraint sale_order_currency_id_fkey
			references res_currency
				on delete set null,
	analytic_account_id integer
		constraint sale_order_analytic_account_id_fkey
			references account_analytic_account
				on delete set null,
	invoice_status varchar,
	note text,
	amount_untaxed numeric,
	amount_tax numeric,
	amount_total numeric,
	currency_rate numeric,
	payment_term_id integer
		constraint sale_order_payment_term_id_fkey
			references account_payment_term
				on delete set null,
	fiscal_position_id integer
		constraint sale_order_fiscal_position_id_fkey
			references account_fiscal_position
				on delete set null,
	company_id integer not null,
	team_id integer
		constraint sale_order_team_id_fkey
			references crm_team
				on delete set null,
	signed_by varchar,
	signed_on timestamp,
	commitment_date timestamp,
	show_update_pricelist boolean,
	message_main_attachment_id integer
		constraint sale_order_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	access_token varchar,
	campaign_id integer
		constraint sale_order_campaign_id_fkey
			references utm_campaign
				on delete set null,
	source_id integer
		constraint sale_order_source_id_fkey
			references utm_source
				on delete set null,
	medium_id integer
		constraint sale_order_medium_id_fkey
			references utm_medium
				on delete set null,
	create_uid integer
		constraint sale_order_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint sale_order_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	sale_order_template_id integer
		constraint sale_order_sale_order_template_id_fkey
			references sale_order_template
				on delete set null,
	incoterm integer
		constraint sale_order_incoterm_fkey
			references account_incoterms
				on delete set null,
	picking_policy varchar not null,
	warehouse_id integer not null
		constraint sale_order_warehouse_id_fkey
			references stock_warehouse
				on delete restrict,
	procurement_group_id integer
		constraint sale_order_procurement_group_id_fkey
			references procurement_group
				on delete set null,
	effective_date date,
	carrier_id integer
		constraint sale_order_carrier_id_fkey
			references delivery_carrier
				on delete set null,
	delivery_message varchar,
	delivery_rating_success boolean,
	recompute_delivery_price boolean,
	location_id integer
		constraint sale_order_location_id_fkey
			references cesa_location
				on delete set null,
	location_dest_id integer
		constraint sale_order_location_dest_id_fkey
			references cesa_location
				on delete set null,
	transport_type varchar,
	delivery_method varchar,
	invoice_id integer
		constraint sale_order_invoice_id_fkey
			references account_move
				on delete set null,
	sender_id integer
		constraint sale_order_sender_id_fkey
			references res_partner
				on delete set null,
	circuit varchar,
	identifier varchar,
	is_posted varchar,
	can_invoice boolean,
	date_invoice timestamp
);

comment on table sale_order is 'Sales Order';

comment on column sale_order.name is 'Order Reference';

comment on column sale_order.origin is 'Source Document';

comment on column sale_order.client_order_ref is 'Customer Reference';

comment on column sale_order.reference is 'Payment Ref.';

comment on column sale_order.state is 'Status';

comment on column sale_order.date_order is 'Order Date';

comment on column sale_order.validity_date is 'Expiration';

comment on column sale_order.require_signature is 'Online Signature';

comment on column sale_order.require_payment is 'Online Payment';

comment on column sale_order.create_date is 'Creation Date';

comment on column sale_order.user_id is 'Salesperson';

comment on column sale_order.partner_id is 'Customer';

comment on column sale_order.partner_invoice_id is 'Invoice Address';

comment on column sale_order.partner_shipping_id is 'Delivery Address';

comment on column sale_order.pricelist_id is 'Pricelist';

comment on column sale_order.currency_id is 'Currency';

comment on column sale_order.analytic_account_id is 'Analytic Account';

comment on column sale_order.invoice_status is 'Invoice Status';

comment on column sale_order.note is 'Terms and conditions';

comment on column sale_order.amount_untaxed is 'Untaxed Amount';

comment on column sale_order.amount_tax is 'Taxes';

comment on column sale_order.amount_total is 'Total';

comment on column sale_order.currency_rate is 'Currency Rate';

comment on column sale_order.payment_term_id is 'Payment Terms';

comment on column sale_order.fiscal_position_id is 'Fiscal Position';

comment on column sale_order.company_id is 'Company';

comment on column sale_order.team_id is 'Sales Team';

comment on column sale_order.signed_by is 'Signed By';

comment on column sale_order.signed_on is 'Signed On';

comment on column sale_order.commitment_date is 'Delivery Date';

comment on column sale_order.show_update_pricelist is 'Has Pricelist Changed';

comment on column sale_order.message_main_attachment_id is 'Main Attachment';

comment on column sale_order.access_token is 'Security Token';

comment on column sale_order.campaign_id is 'Campaign';

comment on column sale_order.source_id is 'Source';

comment on column sale_order.medium_id is 'Medium';

comment on column sale_order.create_uid is 'Created by';

comment on column sale_order.write_uid is 'Last Updated by';

comment on column sale_order.write_date is 'Last Updated on';

comment on column sale_order.sale_order_template_id is 'Quotation Template';

comment on column sale_order.incoterm is 'Incoterm';

comment on column sale_order.picking_policy is 'Shipping Policy';

comment on column sale_order.warehouse_id is 'Warehouse';

comment on column sale_order.procurement_group_id is 'Procurement Group';

comment on column sale_order.effective_date is 'Effective Date';

comment on column sale_order.carrier_id is 'Delivery Method';

comment on column sale_order.delivery_message is 'Delivery Message';

comment on column sale_order.delivery_rating_success is 'Delivery Rating Success';

comment on column sale_order.recompute_delivery_price is 'Delivery cost should be recomputed';

comment on column sale_order.location_id is 'Shipping agency';

comment on column sale_order.location_dest_id is 'Destination agency';

comment on column sale_order.transport_type is 'Transport type';

comment on column sale_order.delivery_method is 'Delivery method';

comment on column sale_order.invoice_id is 'Account move';

comment on column sale_order.sender_id is 'Sender';

comment on column sale_order.circuit is 'Circuit';

comment on column sale_order.identifier is 'Identifier';

comment on column sale_order.is_posted is 'Post status';

comment on column sale_order.can_invoice is 'Can invoice';

comment on column sale_order.date_invoice is 'Date Invoice';

alter table sale_order owner to postgres;

create table account_move_sale_order_rel
(
	account_move_id integer not null
		constraint account_move_sale_order_rel_account_move_id_fkey
			references account_move
				on delete cascade,
	sale_order_id integer not null
		constraint account_move_sale_order_rel_sale_order_id_fkey
			references sale_order
				on delete cascade,
	constraint account_move_sale_order_rel_pkey
		primary key (account_move_id, sale_order_id)
);

comment on table account_move_sale_order_rel is 'RELATION BETWEEN account_move AND sale_order';

alter table account_move_sale_order_rel owner to postgres;

create index account_move_sale_order_rel_sale_order_id_account_move_id_idx
	on account_move_sale_order_rel (sale_order_id, account_move_id);

create table choose_delivery_carrier
(
	id integer default nextval('choose_delivery_carrier_id_seq'::regclass) not null
		constraint choose_delivery_carrier_pkey
			primary key,
	order_id integer not null
		constraint choose_delivery_carrier_order_id_fkey
			references sale_order
				on delete cascade,
	carrier_id integer not null
		constraint choose_delivery_carrier_carrier_id_fkey
			references delivery_carrier
				on delete cascade,
	delivery_price double precision,
	display_price double precision,
	delivery_message text,
	create_uid integer
		constraint choose_delivery_carrier_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint choose_delivery_carrier_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table choose_delivery_carrier is 'Delivery Carrier Selection Wizard';

comment on column choose_delivery_carrier.order_id is 'Order';

comment on column choose_delivery_carrier.carrier_id is 'Shipping Method';

comment on column choose_delivery_carrier.delivery_price is 'Delivery Price';

comment on column choose_delivery_carrier.display_price is 'Cost';

comment on column choose_delivery_carrier.delivery_message is 'Delivery Message';

comment on column choose_delivery_carrier.create_uid is 'Created by';

comment on column choose_delivery_carrier.create_date is 'Created on';

comment on column choose_delivery_carrier.write_uid is 'Last Updated by';

comment on column choose_delivery_carrier.write_date is 'Last Updated on';

alter table choose_delivery_carrier owner to postgres;

alter table procurement_group
	add constraint procurement_group_sale_id_fkey
		foreign key (sale_id) references sale_order
			on delete set null;

create index sale_order_company_id_index
	on sale_order (company_id);

create index sale_order_create_date_index
	on sale_order (create_date);

create index sale_order_date_order_index
	on sale_order (date_order);

create index sale_order_message_main_attachment_id_index
	on sale_order (message_main_attachment_id);

create index sale_order_name_index
	on sale_order (name);

create index sale_order_partner_id_index
	on sale_order (partner_id);

create index sale_order_state_index
	on sale_order (state);

create index sale_order_user_id_index
	on sale_order (user_id);

create table sale_order_cancel
(
	id integer default nextval('sale_order_cancel_id_seq'::regclass) not null
		constraint sale_order_cancel_pkey
			primary key,
	order_id integer not null
		constraint sale_order_cancel_order_id_fkey
			references sale_order
				on delete cascade,
	create_uid integer
		constraint sale_order_cancel_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_cancel_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_order_cancel is 'Sales Order Cancel';

comment on column sale_order_cancel.order_id is 'Sale Order';

comment on column sale_order_cancel.create_uid is 'Created by';

comment on column sale_order_cancel.create_date is 'Created on';

comment on column sale_order_cancel.write_uid is 'Last Updated by';

comment on column sale_order_cancel.write_date is 'Last Updated on';

alter table sale_order_cancel owner to postgres;

create table sale_order_line
(
	id integer default nextval('sale_order_line_id_seq'::regclass) not null
		constraint sale_order_line_pkey
			primary key,
	order_id integer not null
		constraint sale_order_line_order_id_fkey
			references sale_order
				on delete cascade,
	name text not null,
	sequence integer,
	invoice_status varchar,
	price_unit numeric not null,
	price_subtotal numeric,
	price_tax double precision,
	price_total numeric,
	price_reduce numeric,
	price_reduce_taxinc numeric,
	price_reduce_taxexcl numeric,
	discount numeric,
	product_id integer
		constraint sale_order_line_product_id_fkey
			references product_product
				on delete restrict,
	product_uom_qty numeric not null,
	product_uom integer
		constraint sale_order_line_product_uom_fkey
			references uom_uom
				on delete set null,
	qty_delivered_method varchar,
	qty_delivered numeric,
	qty_delivered_manual numeric,
	qty_to_invoice numeric,
	qty_invoiced numeric,
	untaxed_amount_invoiced numeric,
	untaxed_amount_to_invoice numeric,
	salesman_id integer
		constraint sale_order_line_salesman_id_fkey
			references res_users
				on delete set null,
	currency_id integer
		constraint sale_order_line_currency_id_fkey
			references res_currency
				on delete set null,
	company_id integer,
	order_partner_id integer
		constraint sale_order_line_order_partner_id_fkey
			references res_partner
				on delete set null,
	is_expense boolean,
	is_downpayment boolean,
	state varchar,
	customer_lead double precision not null,
	display_type varchar,
	create_uid integer
		constraint sale_order_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	product_packaging integer
		constraint sale_order_line_product_packaging_fkey
			references product_packaging
				on delete set null,
	route_id integer
		constraint sale_order_line_route_id_fkey
			references stock_location_route
				on delete restrict,
	is_delivery boolean,
	value double precision,
	real_weight double precision,
	volume_weight double precision,
	weighing_id integer
		constraint sale_order_line_weighing_id_fkey
			references order_weighing
				on delete set null,
	delivery_rate_id integer
		constraint sale_order_line_delivery_rate_id_fkey
			references delivery_rate_detail
				on delete set null,
	packaging_rate_id integer
		constraint sale_order_line_packaging_rate_id_fkey
			references packaging_rate_detail
				on delete set null,
	handling_rate_id integer
		constraint sale_order_line_handling_rate_id_fkey
			references handling_rate_detail
				on delete set null,
	handling_rate double precision,
	packaging_rate double precision,
	qr_in_report boolean,
	parent_order_line_id integer
		constraint sale_order_line_parent_order_line_id_fkey
			references sale_order_line
				on delete set null,
	ref_colis varchar,
	quantity integer,
	copied boolean,
	duplicata boolean,
	orig_quantity integer,
	price_unit_def double precision,
	etat_livraison_moved0 boolean,
	date_livraison timestamp,
	type_of varchar,
	etat_livraison varchar
);

comment on table sale_order_line is 'Sales Order Line';

comment on column sale_order_line.order_id is 'Order Reference';

comment on column sale_order_line.name is 'Description';

comment on column sale_order_line.sequence is 'Sequence';

comment on column sale_order_line.invoice_status is 'Invoice Status';

comment on column sale_order_line.price_unit is 'Unit Price';

comment on column sale_order_line.price_subtotal is 'Subtotal';

comment on column sale_order_line.price_tax is 'Total Tax';

comment on column sale_order_line.price_total is 'Total';

comment on column sale_order_line.price_reduce is 'Price Reduce';

comment on column sale_order_line.price_reduce_taxinc is 'Price Reduce Tax inc';

comment on column sale_order_line.price_reduce_taxexcl is 'Price Reduce Tax excl';

comment on column sale_order_line.discount is 'Discount (%)';

comment on column sale_order_line.product_id is 'Product';

comment on column sale_order_line.product_uom_qty is 'Quantity';

comment on column sale_order_line.product_uom is 'Unit of Measure';

comment on column sale_order_line.qty_delivered_method is 'Method to update delivered qty';

comment on column sale_order_line.qty_delivered is 'Delivered Quantity';

comment on column sale_order_line.qty_delivered_manual is 'Delivered Manually';

comment on column sale_order_line.qty_to_invoice is 'To Invoice Quantity';

comment on column sale_order_line.qty_invoiced is 'Invoiced Quantity';

comment on column sale_order_line.untaxed_amount_invoiced is 'Untaxed Invoiced Amount';

comment on column sale_order_line.untaxed_amount_to_invoice is 'Untaxed Amount To Invoice';

comment on column sale_order_line.salesman_id is 'Salesperson';

comment on column sale_order_line.currency_id is 'Currency';

comment on column sale_order_line.company_id is 'Company';

comment on column sale_order_line.order_partner_id is 'Customer';

comment on column sale_order_line.is_expense is 'Is expense';

comment on column sale_order_line.is_downpayment is 'Is a down payment';

comment on column sale_order_line.state is 'Order Status';

comment on column sale_order_line.customer_lead is 'Lead Time';

comment on column sale_order_line.display_type is 'Display Type';

comment on column sale_order_line.create_uid is 'Created by';

comment on column sale_order_line.create_date is 'Created on';

comment on column sale_order_line.write_uid is 'Last Updated by';

comment on column sale_order_line.write_date is 'Last Updated on';

comment on column sale_order_line.product_packaging is 'Package';

comment on column sale_order_line.route_id is 'Route';

comment on column sale_order_line.is_delivery is 'Is a Delivery';

comment on column sale_order_line.value is 'Value';

comment on column sale_order_line.real_weight is 'Real Weight';

comment on column sale_order_line.volume_weight is 'Volume weight in kg';

comment on column sale_order_line.weighing_id is 'Weighing';

comment on column sale_order_line.delivery_rate_id is 'Delivery Rate';

comment on column sale_order_line.packaging_rate_id is 'Packaging Rate';

comment on column sale_order_line.handling_rate_id is 'Handling Rate';

comment on column sale_order_line.handling_rate is 'Handling Rate';

comment on column sale_order_line.packaging_rate is 'Packaging Rate';

comment on column sale_order_line.qr_in_report is 'Show QR in Report';

comment on column sale_order_line.parent_order_line_id is 'Parent sale order line';

comment on column sale_order_line.ref_colis is 'Référence';

comment on column sale_order_line.quantity is 'Quantité';

comment on column sale_order_line.copied is 'Copied';

comment on column sale_order_line.duplicata is 'Duplicata';

comment on column sale_order_line.orig_quantity is 'Quantité';

comment on column sale_order_line.price_unit_def is 'Price Unit Def';

comment on column sale_order_line.etat_livraison_moved0 is 'Etat Livraison';

comment on column sale_order_line.date_livraison is 'Date Livraison';

comment on column sale_order_line.type_of is 'Type_of';

comment on column sale_order_line.etat_livraison is 'etat livraison';

alter table sale_order_line owner to postgres;

create table account_analytic_tag_sale_order_line_rel
(
	sale_order_line_id integer not null
		constraint account_analytic_tag_sale_order_line_re_sale_order_line_id_fkey
			references sale_order_line
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_analytic_tag_sale_order_li_account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_tag_sale_order_line_rel_pkey
		primary key (sale_order_line_id, account_analytic_tag_id)
);

comment on table account_analytic_tag_sale_order_line_rel is 'RELATION BETWEEN sale_order_line AND account_analytic_tag';

alter table account_analytic_tag_sale_order_line_rel owner to postgres;

create index account_analytic_tag_sale_ord_account_analytic_tag_id_sale__idx
	on account_analytic_tag_sale_order_line_rel (account_analytic_tag_id, sale_order_line_id);

create table account_tax_sale_order_line_rel
(
	sale_order_line_id integer not null
		constraint account_tax_sale_order_line_rel_sale_order_line_id_fkey
			references sale_order_line
				on delete cascade,
	account_tax_id integer not null
		constraint account_tax_sale_order_line_rel_account_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint account_tax_sale_order_line_rel_pkey
		primary key (sale_order_line_id, account_tax_id)
);

comment on table account_tax_sale_order_line_rel is 'RELATION BETWEEN sale_order_line AND account_tax';

alter table account_tax_sale_order_line_rel owner to postgres;

create index account_tax_sale_order_line_r_account_tax_id_sale_order_lin_idx
	on account_tax_sale_order_line_rel (account_tax_id, sale_order_line_id);

alter table delivery_rate_detail
	add constraint delivery_rate_detail_order_line_id_fkey
		foreign key (order_line_id) references sale_order_line
			on delete set null;

alter table handling_rate_detail
	add constraint handling_rate_detail_order_line_id_fkey
		foreign key (order_line_id) references sale_order_line
			on delete set null;

alter table order_weighing
	add constraint order_weighing_order_line_id_fkey
		foreign key (order_line_id) references sale_order_line
			on delete set null;

alter table packaging_rate_detail
	add constraint packaging_rate_detail_order_line_id_fkey
		foreign key (order_line_id) references sale_order_line
			on delete set null;

create table product_attribute_custom_value
(
	id integer default nextval('product_attribute_custom_value_id_seq'::regclass) not null
		constraint product_attribute_custom_value_pkey
			primary key,
	custom_product_template_attribute_value_id integer not null
		constraint product_attribute_custom_valu_custom_product_template_attr_fkey
			references product_template_attribute_value
				on delete restrict,
	custom_value varchar,
	create_uid integer
		constraint product_attribute_custom_value_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_attribute_custom_value_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	sale_order_line_id integer not null
		constraint product_attribute_custom_value_sale_order_line_id_fkey
			references sale_order_line
				on delete cascade,
	constraint product_attribute_custom_value_sol_custom_value_unique
		unique (custom_product_template_attribute_value_id, sale_order_line_id)
);

comment on table product_attribute_custom_value is 'Product Attribute Custom Value';

comment on column product_attribute_custom_value.custom_product_template_attribute_value_id is 'Attribute Value';

comment on column product_attribute_custom_value.custom_value is 'Custom Value';

comment on column product_attribute_custom_value.create_uid is 'Created by';

comment on column product_attribute_custom_value.create_date is 'Created on';

comment on column product_attribute_custom_value.write_uid is 'Last Updated by';

comment on column product_attribute_custom_value.write_date is 'Last Updated on';

comment on column product_attribute_custom_value.sale_order_line_id is 'Sales Order Line';

alter table product_attribute_custom_value owner to postgres;

create table product_template_attribute_value_sale_order_line_rel
(
	sale_order_line_id integer not null
		constraint product_template_attribute_value_sale_o_sale_order_line_id_fkey
			references sale_order_line
				on delete cascade,
	product_template_attribute_value_id integer not null
		constraint product_template_attribute_va_product_template_attribute_v_fkey
			references product_template_attribute_value
				on delete restrict,
	constraint product_template_attribute_value_sale_order_line_rel_pkey
		primary key (sale_order_line_id, product_template_attribute_value_id)
);

comment on table product_template_attribute_value_sale_order_line_rel is 'RELATION BETWEEN sale_order_line AND product_template_attribute_value';

alter table product_template_attribute_value_sale_order_line_rel owner to postgres;

create index product_template_attribute_va_product_template_attribute_va_idx
	on product_template_attribute_value_sale_order_line_rel (product_template_attribute_value_id, sale_order_line_id);

create table purchase_order_line
(
	id integer default nextval('purchase_order_line_id_seq'::regclass) not null
		constraint purchase_order_line_pkey
			primary key,
	name text not null,
	sequence integer,
	product_qty numeric not null,
	product_uom_qty double precision,
	date_planned timestamp,
	product_uom integer
		constraint purchase_order_line_product_uom_fkey
			references uom_uom
				on delete set null,
	product_id integer
		constraint purchase_order_line_product_id_fkey
			references product_product
				on delete set null,
	price_unit numeric not null,
	price_subtotal numeric,
	price_total numeric,
	price_tax double precision,
	order_id integer not null
		constraint purchase_order_line_order_id_fkey
			references purchase_order
				on delete cascade,
	account_analytic_id integer
		constraint purchase_order_line_account_analytic_id_fkey
			references account_analytic_account
				on delete set null,
	company_id integer,
	state varchar,
	qty_invoiced numeric,
	qty_received_method varchar,
	qty_received numeric,
	qty_received_manual numeric,
	qty_to_invoice numeric,
	partner_id integer
		constraint purchase_order_line_partner_id_fkey
			references res_partner
				on delete set null,
	currency_id integer
		constraint purchase_order_line_currency_id_fkey
			references res_currency
				on delete set null,
	display_type varchar,
	create_uid integer
		constraint purchase_order_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint purchase_order_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	orderpoint_id integer
		constraint purchase_order_line_orderpoint_id_fkey
			references stock_warehouse_orderpoint
				on delete set null,
	product_description_variants varchar,
	propagate_cancel boolean,
	sale_order_id integer
		constraint purchase_order_line_sale_order_id_fkey
			references sale_order
				on delete set null,
	sale_line_id integer
		constraint purchase_order_line_sale_line_id_fkey
			references sale_order_line
				on delete set null
);

comment on table purchase_order_line is 'Purchase Order Line';

comment on column purchase_order_line.name is 'Description';

comment on column purchase_order_line.sequence is 'Sequence';

comment on column purchase_order_line.product_qty is 'Quantity';

comment on column purchase_order_line.product_uom_qty is 'Total Quantity';

comment on column purchase_order_line.date_planned is 'Delivery Date';

comment on column purchase_order_line.product_uom is 'Unit of Measure';

comment on column purchase_order_line.product_id is 'Product';

comment on column purchase_order_line.price_unit is 'Unit Price';

comment on column purchase_order_line.price_subtotal is 'Subtotal';

comment on column purchase_order_line.price_total is 'Total';

comment on column purchase_order_line.price_tax is 'Tax';

comment on column purchase_order_line.order_id is 'Order Reference';

comment on column purchase_order_line.account_analytic_id is 'Analytic Account';

comment on column purchase_order_line.company_id is 'Company';

comment on column purchase_order_line.state is 'Status';

comment on column purchase_order_line.qty_invoiced is 'Billed Qty';

comment on column purchase_order_line.qty_received_method is 'Received Qty Method';

comment on column purchase_order_line.qty_received is 'Received Qty';

comment on column purchase_order_line.qty_received_manual is 'Manual Received Qty';

comment on column purchase_order_line.qty_to_invoice is 'To Invoice Quantity';

comment on column purchase_order_line.partner_id is 'Partner';

comment on column purchase_order_line.currency_id is 'Currency';

comment on column purchase_order_line.display_type is 'Display Type';

comment on column purchase_order_line.create_uid is 'Created by';

comment on column purchase_order_line.create_date is 'Created on';

comment on column purchase_order_line.write_uid is 'Last Updated by';

comment on column purchase_order_line.write_date is 'Last Updated on';

comment on column purchase_order_line.orderpoint_id is 'Orderpoint';

comment on column purchase_order_line.product_description_variants is 'Custom Description';

comment on column purchase_order_line.propagate_cancel is 'Propagate cancellation';

comment on column purchase_order_line.sale_order_id is 'Sale Order';

comment on column purchase_order_line.sale_line_id is 'Origin Sale Item';

alter table purchase_order_line owner to postgres;

create table account_analytic_tag_purchase_order_line_rel
(
	purchase_order_line_id integer not null
		constraint account_analytic_tag_purchase_order_purchase_order_line_id_fkey
			references purchase_order_line
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_analytic_tag_purchase_orde_account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_tag_purchase_order_line_rel_pkey
		primary key (purchase_order_line_id, account_analytic_tag_id)
);

comment on table account_analytic_tag_purchase_order_line_rel is 'RELATION BETWEEN purchase_order_line AND account_analytic_tag';

alter table account_analytic_tag_purchase_order_line_rel owner to postgres;

create index account_analytic_tag_purchase_account_analytic_tag_id_purch_idx
	on account_analytic_tag_purchase_order_line_rel (account_analytic_tag_id, purchase_order_line_id);

create table account_move_line
(
	id integer default nextval('account_move_line_id_seq'::regclass) not null
		constraint account_move_line_pkey
			primary key,
	move_id integer not null
		constraint account_move_line_move_id_fkey
			references account_move
				on delete cascade,
	move_name varchar,
	date date,
	ref varchar,
	parent_state varchar,
	journal_id integer
		constraint account_move_line_journal_id_fkey
			references account_journal
				on delete set null,
	company_id integer,
	company_currency_id integer
		constraint account_move_line_company_currency_id_fkey
			references res_currency
				on delete set null,
	account_id integer
		constraint account_move_line_account_id_fkey
			references account_account
				on delete cascade,
	account_root_id integer,
	sequence integer,
	name varchar,
	quantity numeric,
	price_unit numeric,
	discount numeric,
	debit numeric,
	credit numeric,
	balance numeric,
	amount_currency numeric,
	price_subtotal numeric,
	price_total numeric,
	reconciled boolean,
	blocked boolean,
	date_maturity date,
	currency_id integer not null
		constraint account_move_line_currency_id_fkey
			references res_currency
				on delete restrict,
	partner_id integer
		constraint account_move_line_partner_id_fkey
			references res_partner
				on delete restrict,
	product_uom_id integer
		constraint account_move_line_product_uom_id_fkey
			references uom_uom
				on delete set null,
	product_id integer
		constraint account_move_line_product_id_fkey
			references product_product
				on delete restrict,
	reconcile_model_id integer
		constraint account_move_line_reconcile_model_id_fkey
			references account_reconcile_model
				on delete set null,
	payment_id integer
		constraint account_move_line_payment_id_fkey
			references account_payment
				on delete set null,
	statement_line_id integer
		constraint account_move_line_statement_line_id_fkey
			references account_bank_statement_line
				on delete set null,
	statement_id integer
		constraint account_move_line_statement_id_fkey
			references account_bank_statement
				on delete set null,
	tax_line_id integer
		constraint account_move_line_tax_line_id_fkey
			references account_tax
				on delete restrict,
	tax_group_id integer
		constraint account_move_line_tax_group_id_fkey
			references account_tax_group
				on delete set null,
	tax_base_amount numeric,
	tax_exigible boolean,
	tax_repartition_line_id integer
		constraint account_move_line_tax_repartition_line_id_fkey
			references account_tax_repartition_line
				on delete restrict,
	tax_audit varchar,
	amount_residual numeric,
	amount_residual_currency numeric,
	full_reconcile_id integer
		constraint account_move_line_full_reconcile_id_fkey
			references account_full_reconcile
				on delete set null,
	matching_number varchar,
	analytic_account_id integer
		constraint account_move_line_analytic_account_id_fkey
			references account_analytic_account
				on delete set null,
	display_type varchar,
	is_rounding_line boolean,
	exclude_from_invoice_tab boolean,
	create_uid integer
		constraint account_move_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_move_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	expected_pay_date date,
	internal_note text,
	next_action_date date,
	followup_line_id integer
		constraint account_move_line_followup_line_id_fkey
			references account_followup_followup_line
				on delete set null,
	followup_date date,
	is_anglo_saxon_line boolean,
	purchase_line_id integer
		constraint account_move_line_purchase_line_id_fkey
			references purchase_order_line
				on delete set null,
	can_be_paid varchar
);

comment on table account_move_line is 'Journal Item';

comment on column account_move_line.move_id is 'Journal Entry';

comment on column account_move_line.move_name is 'Number';

comment on column account_move_line.date is 'Date';

comment on column account_move_line.ref is 'Reference';

comment on column account_move_line.parent_state is 'Status';

comment on column account_move_line.journal_id is 'Journal';

comment on column account_move_line.company_id is 'Company';

comment on column account_move_line.company_currency_id is 'Company Currency';

comment on column account_move_line.account_id is 'Account';

comment on column account_move_line.account_root_id is 'Account Root';

comment on column account_move_line.sequence is 'Sequence';

comment on column account_move_line.name is 'Label';

comment on column account_move_line.quantity is 'Quantity';

comment on column account_move_line.price_unit is 'Unit Price';

comment on column account_move_line.discount is 'Discount (%)';

comment on column account_move_line.debit is 'Debit';

comment on column account_move_line.credit is 'Credit';

comment on column account_move_line.balance is 'Balance';

comment on column account_move_line.amount_currency is 'Amount in Currency';

comment on column account_move_line.price_subtotal is 'Subtotal';

comment on column account_move_line.price_total is 'Total';

comment on column account_move_line.reconciled is 'Reconciled';

comment on column account_move_line.blocked is 'No Follow-up';

comment on column account_move_line.date_maturity is 'Due Date';

comment on column account_move_line.currency_id is 'Currency';

comment on column account_move_line.partner_id is 'Partner';

comment on column account_move_line.product_uom_id is 'Unit of Measure';

comment on column account_move_line.product_id is 'Product';

comment on column account_move_line.reconcile_model_id is 'Reconciliation Model';

comment on column account_move_line.payment_id is 'Originator Payment';

comment on column account_move_line.statement_line_id is 'Originator Statement Line';

comment on column account_move_line.statement_id is 'Statement';

comment on column account_move_line.tax_line_id is 'Originator Tax';

comment on column account_move_line.tax_group_id is 'Originator tax group';

comment on column account_move_line.tax_base_amount is 'Base Amount';

comment on column account_move_line.tax_exigible is 'Appears in VAT report';

comment on column account_move_line.tax_repartition_line_id is 'Originator Tax Distribution Line';

comment on column account_move_line.tax_audit is 'Tax Audit String';

comment on column account_move_line.amount_residual is 'Residual Amount';

comment on column account_move_line.amount_residual_currency is 'Residual Amount in Currency';

comment on column account_move_line.full_reconcile_id is 'Matching';

comment on column account_move_line.matching_number is 'Matching #';

comment on column account_move_line.analytic_account_id is 'Analytic Account';

comment on column account_move_line.display_type is 'Display Type';

comment on column account_move_line.is_rounding_line is 'Is Rounding Line';

comment on column account_move_line.exclude_from_invoice_tab is 'Exclude From Invoice Tab';

comment on column account_move_line.create_uid is 'Created by';

comment on column account_move_line.create_date is 'Created on';

comment on column account_move_line.write_uid is 'Last Updated by';

comment on column account_move_line.write_date is 'Last Updated on';

comment on column account_move_line.expected_pay_date is 'Expected Payment Date';

comment on column account_move_line.internal_note is 'Internal Note';

comment on column account_move_line.next_action_date is 'Next Action Date';

comment on column account_move_line.followup_line_id is 'Follow-up Level';

comment on column account_move_line.followup_date is 'Latest Follow-up';

comment on column account_move_line.is_anglo_saxon_line is 'Is Anglo Saxon Line';

comment on column account_move_line.purchase_line_id is 'Purchase Order Line';

comment on column account_move_line.can_be_paid is 'Release to Pay';

alter table account_move_line owner to postgres;

create table account_account_tag_account_move_line_rel
(
	account_move_line_id integer not null
		constraint account_account_tag_account_move_line_account_move_line_id_fkey
			references account_move_line
				on delete cascade,
	account_account_tag_id integer not null
		constraint account_account_tag_account_move_li_account_account_tag_id_fkey
			references account_account_tag
				on delete restrict,
	constraint account_account_tag_account_move_line_rel_pkey
		primary key (account_move_line_id, account_account_tag_id)
);

comment on table account_account_tag_account_move_line_rel is 'RELATION BETWEEN account_move_line AND account_account_tag';

alter table account_account_tag_account_move_line_rel owner to postgres;

create index account_account_tag_account_m_account_account_tag_id_accoun_idx
	on account_account_tag_account_move_line_rel (account_account_tag_id, account_move_line_id);

create table account_analytic_line
(
	id integer default nextval('account_analytic_line_id_seq'::regclass) not null
		constraint account_analytic_line_pkey
			primary key,
	name varchar not null,
	date date not null,
	amount numeric not null,
	unit_amount double precision,
	product_uom_id integer
		constraint account_analytic_line_product_uom_id_fkey
			references uom_uom
				on delete set null,
	account_id integer not null
		constraint account_analytic_line_account_id_fkey
			references account_analytic_account
				on delete restrict,
	partner_id integer
		constraint account_analytic_line_partner_id_fkey
			references res_partner
				on delete set null,
	user_id integer
		constraint account_analytic_line_user_id_fkey
			references res_users
				on delete set null,
	company_id integer not null,
	currency_id integer
		constraint account_analytic_line_currency_id_fkey
			references res_currency
				on delete set null,
	group_id integer
		constraint account_analytic_line_group_id_fkey
			references account_analytic_group
				on delete set null,
	create_uid integer
		constraint account_analytic_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_analytic_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	product_id integer
		constraint account_analytic_line_product_id_fkey
			references product_product
				on delete set null,
	general_account_id integer
		constraint account_analytic_line_general_account_id_fkey
			references account_account
				on delete restrict,
	move_id integer
		constraint account_analytic_line_move_id_fkey
			references account_move_line
				on delete cascade,
	code varchar(8),
	ref varchar,
	so_line integer
		constraint account_analytic_line_so_line_fkey
			references sale_order_line
				on delete set null
);

comment on table account_analytic_line is 'Analytic Line';

comment on column account_analytic_line.name is 'Description';

comment on column account_analytic_line.date is 'Date';

comment on column account_analytic_line.amount is 'Amount';

comment on column account_analytic_line.unit_amount is 'Quantity';

comment on column account_analytic_line.product_uom_id is 'Unit of Measure';

comment on column account_analytic_line.account_id is 'Analytic Account';

comment on column account_analytic_line.partner_id is 'Partner';

comment on column account_analytic_line.user_id is 'User';

comment on column account_analytic_line.company_id is 'Company';

comment on column account_analytic_line.currency_id is 'Currency';

comment on column account_analytic_line.group_id is 'Group';

comment on column account_analytic_line.create_uid is 'Created by';

comment on column account_analytic_line.create_date is 'Created on';

comment on column account_analytic_line.write_uid is 'Last Updated by';

comment on column account_analytic_line.write_date is 'Last Updated on';

comment on column account_analytic_line.product_id is 'Product';

comment on column account_analytic_line.general_account_id is 'Financial Account';

comment on column account_analytic_line.move_id is 'Journal Item';

comment on column account_analytic_line.code is 'Code';

comment on column account_analytic_line.ref is 'Ref.';

comment on column account_analytic_line.so_line is 'Sales Order Item';

alter table account_analytic_line owner to postgres;

create index account_analytic_line_account_id_index
	on account_analytic_line (account_id);

create index account_analytic_line_date_index
	on account_analytic_line (date);

create index account_analytic_line_move_id_index
	on account_analytic_line (move_id);

create table account_analytic_line_tag_rel
(
	line_id integer not null
		constraint account_analytic_line_tag_rel_line_id_fkey
			references account_analytic_line
				on delete cascade,
	tag_id integer not null
		constraint account_analytic_line_tag_rel_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_line_tag_rel_pkey
		primary key (line_id, tag_id)
);

comment on table account_analytic_line_tag_rel is 'RELATION BETWEEN account_analytic_line AND account_analytic_tag';

alter table account_analytic_line_tag_rel owner to postgres;

create index account_analytic_line_tag_rel_tag_id_line_id_idx
	on account_analytic_line_tag_rel (tag_id, line_id);

create table account_analytic_tag_account_move_line_rel
(
	account_move_line_id integer not null
		constraint account_analytic_tag_account_move_lin_account_move_line_id_fkey
			references account_move_line
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_analytic_tag_account_move__account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_tag_account_move_line_rel_pkey
		primary key (account_move_line_id, account_analytic_tag_id)
);

comment on table account_analytic_tag_account_move_line_rel is 'RELATION BETWEEN account_move_line AND account_analytic_tag';

alter table account_analytic_tag_account_move_line_rel owner to postgres;

create index account_analytic_tag_account__account_analytic_tag_id_accou_idx
	on account_analytic_tag_account_move_line_rel (account_analytic_tag_id, account_move_line_id);

create table account_asset_sell
(
	id integer default nextval('account_asset_sell_id_seq'::regclass) not null
		constraint account_asset_sell_pkey
			primary key,
	asset_id integer not null
		constraint account_asset_sell_asset_id_fkey
			references account_asset
				on delete cascade,
	company_id integer
		constraint account_asset_sell_company_id_fkey
			references res_company
				on delete set null,
	action varchar not null,
	invoice_id integer
		constraint account_asset_sell_invoice_id_fkey
			references account_move
				on delete set null,
	invoice_line_id integer
		constraint account_asset_sell_invoice_line_id_fkey
			references account_move_line
				on delete set null,
	create_uid integer
		constraint account_asset_sell_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_asset_sell_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_asset_sell is 'Sell Asset';

comment on column account_asset_sell.asset_id is 'Asset';

comment on column account_asset_sell.company_id is 'Company';

comment on column account_asset_sell.action is 'Action';

comment on column account_asset_sell.invoice_id is 'Customer Invoice';

comment on column account_asset_sell.invoice_line_id is 'Invoice Line';

comment on column account_asset_sell.create_uid is 'Created by';

comment on column account_asset_sell.create_date is 'Created on';

comment on column account_asset_sell.write_uid is 'Last Updated by';

comment on column account_asset_sell.write_date is 'Last Updated on';

alter table account_asset_sell owner to postgres;

create table account_automatic_entry_wizard_account_move_line_rel
(
	account_automatic_entry_wizard_id integer not null
		constraint account_automatic_entry_wizar_account_automatic_entry_wiza_fkey
			references account_automatic_entry_wizard
				on delete cascade,
	account_move_line_id integer not null
		constraint account_automatic_entry_wizard_accoun_account_move_line_id_fkey
			references account_move_line
				on delete cascade,
	constraint account_automatic_entry_wizard_account_move_line_rel_pkey
		primary key (account_automatic_entry_wizard_id, account_move_line_id)
);

comment on table account_automatic_entry_wizard_account_move_line_rel is 'RELATION BETWEEN account_automatic_entry_wizard AND account_move_line';

alter table account_automatic_entry_wizard_account_move_line_rel owner to postgres;

create index account_automatic_entry_wizar_account_move_line_id_account__idx
	on account_automatic_entry_wizard_account_move_line_rel (account_move_line_id, account_automatic_entry_wizard_id);

create index account_move_line_account_id_index
	on account_move_line (account_id);

create index account_move_line_analytic_account_id_index
	on account_move_line (analytic_account_id);

create index account_move_line_date_index
	on account_move_line (date);

create index account_move_line_date_maturity_index
	on account_move_line (date_maturity);

create index account_move_line_followup_date_index
	on account_move_line (followup_date);

create index account_move_line_full_reconcile_id_index
	on account_move_line (full_reconcile_id);

create index account_move_line_journal_id_index
	on account_move_line (journal_id);

create index account_move_line_move_id_index
	on account_move_line (move_id);

create index account_move_line_move_name_index
	on account_move_line (move_name);

create index account_move_line_partner_id_ref_idx
	on account_move_line (partner_id, ref);

create index account_move_line_payment_id_index
	on account_move_line (payment_id);

create index account_move_line_purchase_line_id_index
	on account_move_line (purchase_line_id);

create index account_move_line_ref_index
	on account_move_line (ref);

create index account_move_line_statement_id_index
	on account_move_line (statement_id);

create index account_move_line_statement_line_id_index
	on account_move_line (statement_line_id);

create table account_move_line_account_tax_rel
(
	account_move_line_id integer not null
		constraint account_move_line_account_tax_rel_account_move_line_id_fkey
			references account_move_line
				on delete cascade,
	account_tax_id integer not null
		constraint account_move_line_account_tax_rel_account_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint account_move_line_account_tax_rel_pkey
		primary key (account_move_line_id, account_tax_id)
);

comment on table account_move_line_account_tax_rel is 'RELATION BETWEEN account_move_line AND account_tax';

alter table account_move_line_account_tax_rel owner to postgres;

create index account_move_line_account_tax_account_tax_id_account_move_l_idx
	on account_move_line_account_tax_rel (account_tax_id, account_move_line_id);

create table account_partial_reconcile
(
	id integer default nextval('account_partial_reconcile_id_seq'::regclass) not null
		constraint account_partial_reconcile_pkey
			primary key,
	debit_move_id integer not null
		constraint account_partial_reconcile_debit_move_id_fkey
			references account_move_line
				on delete restrict,
	credit_move_id integer not null
		constraint account_partial_reconcile_credit_move_id_fkey
			references account_move_line
				on delete restrict,
	full_reconcile_id integer
		constraint account_partial_reconcile_full_reconcile_id_fkey
			references account_full_reconcile
				on delete set null,
	debit_currency_id integer
		constraint account_partial_reconcile_debit_currency_id_fkey
			references res_currency
				on delete set null,
	credit_currency_id integer
		constraint account_partial_reconcile_credit_currency_id_fkey
			references res_currency
				on delete set null,
	amount numeric,
	debit_amount_currency numeric,
	credit_amount_currency numeric,
	company_id integer,
	max_date date,
	create_uid integer
		constraint account_partial_reconcile_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_partial_reconcile_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_partial_reconcile is 'Partial Reconcile';

comment on column account_partial_reconcile.debit_move_id is 'Debit Move';

comment on column account_partial_reconcile.credit_move_id is 'Credit Move';

comment on column account_partial_reconcile.full_reconcile_id is 'Full Reconcile';

comment on column account_partial_reconcile.debit_currency_id is 'Currency of the debit journal item.';

comment on column account_partial_reconcile.credit_currency_id is 'Currency of the credit journal item.';

comment on column account_partial_reconcile.amount is 'Amount';

comment on column account_partial_reconcile.debit_amount_currency is 'Debit Amount Currency';

comment on column account_partial_reconcile.credit_amount_currency is 'Credit Amount Currency';

comment on column account_partial_reconcile.company_id is 'Company';

comment on column account_partial_reconcile.max_date is 'Max Date of Matched Lines';

comment on column account_partial_reconcile.create_uid is 'Created by';

comment on column account_partial_reconcile.create_date is 'Created on';

comment on column account_partial_reconcile.write_uid is 'Last Updated by';

comment on column account_partial_reconcile.write_date is 'Last Updated on';

alter table account_partial_reconcile owner to postgres;

alter table account_move
	add constraint account_move_tax_cash_basis_rec_id_fkey
		foreign key (tax_cash_basis_rec_id) references account_partial_reconcile
			on delete set null;

create index account_partial_reconcile_credit_move_id_index
	on account_partial_reconcile (credit_move_id);

create index account_partial_reconcile_debit_move_id_index
	on account_partial_reconcile (debit_move_id);

create table account_payment_register_move_line_rel
(
	wizard_id integer not null
		constraint account_payment_register_move_line_rel_wizard_id_fkey
			references account_payment_register
				on delete cascade,
	line_id integer not null
		constraint account_payment_register_move_line_rel_line_id_fkey
			references account_move_line
				on delete cascade,
	constraint account_payment_register_move_line_rel_pkey
		primary key (wizard_id, line_id)
);

comment on table account_payment_register_move_line_rel is 'RELATION BETWEEN account_payment_register AND account_move_line';

alter table account_payment_register_move_line_rel owner to postgres;

create index account_payment_register_move_line_rel_line_id_wizard_id_idx
	on account_payment_register_move_line_rel (line_id, wizard_id);

create table account_tax_purchase_order_line_rel
(
	purchase_order_line_id integer not null
		constraint account_tax_purchase_order_line_rel_purchase_order_line_id_fkey
			references purchase_order_line
				on delete cascade,
	account_tax_id integer not null
		constraint account_tax_purchase_order_line_rel_account_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint account_tax_purchase_order_line_rel_pkey
		primary key (purchase_order_line_id, account_tax_id)
);

comment on table account_tax_purchase_order_line_rel is 'RELATION BETWEEN purchase_order_line AND account_tax';

alter table account_tax_purchase_order_line_rel owner to postgres;

create index account_tax_purchase_order_li_account_tax_id_purchase_order_idx
	on account_tax_purchase_order_line_rel (account_tax_id, purchase_order_line_id);

create table asset_move_line_rel
(
	asset_id integer not null
		constraint asset_move_line_rel_asset_id_fkey
			references account_asset
				on delete cascade,
	line_id integer not null
		constraint asset_move_line_rel_line_id_fkey
			references account_move_line
				on delete cascade,
	constraint asset_move_line_rel_pkey
		primary key (asset_id, line_id)
);

comment on table asset_move_line_rel is 'RELATION BETWEEN account_asset AND account_move_line';

alter table asset_move_line_rel owner to postgres;

create index asset_move_line_rel_line_id_asset_id_idx
	on asset_move_line_rel (line_id, asset_id);

create table product_template_attribute_value_purchase_order_line_rel
(
	purchase_order_line_id integer not null
		constraint product_template_attribute_value_pu_purchase_order_line_id_fkey
			references purchase_order_line
				on delete cascade,
	product_template_attribute_value_id integer not null
		constraint product_template_attribute_v_product_template_attribute_v_fkey1
			references product_template_attribute_value
				on delete restrict,
	constraint product_template_attribute_value_purchase_order_line_rel_pkey
		primary key (purchase_order_line_id, product_template_attribute_value_id)
);

comment on table product_template_attribute_value_purchase_order_line_rel is 'RELATION BETWEEN purchase_order_line AND product_template_attribute_value';

alter table product_template_attribute_value_purchase_order_line_rel owner to postgres;

create index product_template_attribute_va_product_template_attribute_v_idx1
	on product_template_attribute_value_purchase_order_line_rel (product_template_attribute_value_id, purchase_order_line_id);

create index purchase_order_line_date_planned_index
	on purchase_order_line (date_planned);

create index purchase_order_line_order_id_index
	on purchase_order_line (order_id);

create index purchase_order_line_orderpoint_id_index
	on purchase_order_line (orderpoint_id);

create index purchase_order_line_sale_line_id_index
	on purchase_order_line (sale_line_id);

create index sale_order_line_company_id_index
	on sale_order_line (company_id);

create index sale_order_line_order_id_index
	on sale_order_line (order_id);

create table sale_order_line_invoice_rel
(
	invoice_line_id integer not null
		constraint sale_order_line_invoice_rel_invoice_line_id_fkey
			references account_move_line
				on delete cascade,
	order_line_id integer not null
		constraint sale_order_line_invoice_rel_order_line_id_fkey
			references sale_order_line
				on delete cascade,
	constraint sale_order_line_invoice_rel_pkey
		primary key (invoice_line_id, order_line_id)
);

comment on table sale_order_line_invoice_rel is 'RELATION BETWEEN account_move_line AND sale_order_line';

alter table sale_order_line_invoice_rel owner to postgres;

create index sale_order_line_invoice_rel_order_line_id_invoice_line_id_idx
	on sale_order_line_invoice_rel (order_line_id, invoice_line_id);

create table sale_order_option
(
	id integer default nextval('sale_order_option_id_seq'::regclass) not null
		constraint sale_order_option_pkey
			primary key,
	order_id integer
		constraint sale_order_option_order_id_fkey
			references sale_order
				on delete cascade,
	line_id integer
		constraint sale_order_option_line_id_fkey
			references sale_order_line
				on delete set null,
	name text not null,
	product_id integer not null
		constraint sale_order_option_product_id_fkey
			references product_product
				on delete restrict,
	price_unit numeric not null,
	discount numeric,
	uom_id integer not null
		constraint sale_order_option_uom_id_fkey
			references uom_uom
				on delete restrict,
	quantity numeric not null,
	sequence integer,
	create_uid integer
		constraint sale_order_option_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_option_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_order_option is 'Sale Options';

comment on column sale_order_option.order_id is 'Sales Order Reference';

comment on column sale_order_option.line_id is 'Line';

comment on column sale_order_option.name is 'Description';

comment on column sale_order_option.product_id is 'Product';

comment on column sale_order_option.price_unit is 'Unit Price';

comment on column sale_order_option.discount is 'Discount (%)';

comment on column sale_order_option.uom_id is 'Unit of Measure ';

comment on column sale_order_option.quantity is 'Quantity';

comment on column sale_order_option.sequence is 'Sequence';

comment on column sale_order_option.create_uid is 'Created by';

comment on column sale_order_option.create_date is 'Created on';

comment on column sale_order_option.write_uid is 'Last Updated by';

comment on column sale_order_option.write_date is 'Last Updated on';

alter table sale_order_option owner to postgres;

create index sale_order_option_order_id_index
	on sale_order_option (order_id);

create table sale_order_tag_rel
(
	order_id integer not null
		constraint sale_order_tag_rel_order_id_fkey
			references sale_order
				on delete cascade,
	tag_id integer not null
		constraint sale_order_tag_rel_tag_id_fkey
			references crm_tag
				on delete cascade,
	constraint sale_order_tag_rel_pkey
		primary key (order_id, tag_id)
);

comment on table sale_order_tag_rel is 'RELATION BETWEEN sale_order AND crm_tag';

alter table sale_order_tag_rel owner to postgres;

create index sale_order_tag_rel_tag_id_order_id_idx
	on sale_order_tag_rel (tag_id, order_id);

create table sale_order_transaction_rel
(
	sale_order_id integer not null
		constraint sale_order_transaction_rel_sale_order_id_fkey
			references sale_order
				on delete cascade,
	transaction_id integer not null
		constraint sale_order_transaction_rel_transaction_id_fkey
			references payment_transaction
				on delete cascade,
	constraint sale_order_transaction_rel_pkey
		primary key (sale_order_id, transaction_id)
);

comment on table sale_order_transaction_rel is 'RELATION BETWEEN sale_order AND payment_transaction';

alter table sale_order_transaction_rel owner to postgres;

create index sale_order_transaction_rel_transaction_id_sale_order_id_idx
	on sale_order_transaction_rel (transaction_id, sale_order_id);

create table stock_picking
(
	id integer default nextval('stock_picking_id_seq'::regclass) not null
		constraint stock_picking_pkey
			primary key,
	message_main_attachment_id integer
		constraint stock_picking_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	name varchar,
	origin varchar,
	note text,
	backorder_id integer
		constraint stock_picking_backorder_id_fkey
			references stock_picking
				on delete set null,
	move_type varchar not null,
	state varchar,
	group_id integer
		constraint stock_picking_group_id_fkey
			references procurement_group
				on delete set null,
	priority varchar,
	scheduled_date timestamp,
	date_deadline timestamp,
	has_deadline_issue boolean,
	date timestamp,
	date_done timestamp,
	location_id integer not null
		constraint stock_picking_location_id_fkey
			references stock_location
				on delete restrict,
	location_dest_id integer not null
		constraint stock_picking_location_dest_id_fkey
			references stock_location
				on delete restrict,
	picking_type_id integer not null
		constraint stock_picking_picking_type_id_fkey
			references stock_picking_type
				on delete restrict,
	partner_id integer
		constraint stock_picking_partner_id_fkey
			references res_partner
				on delete set null,
	company_id integer,
	user_id integer
		constraint stock_picking_user_id_fkey
			references res_users
				on delete set null,
	owner_id integer
		constraint stock_picking_owner_id_fkey
			references res_partner
				on delete set null,
	printed boolean,
	is_locked boolean,
	immediate_transfer boolean,
	create_uid integer
		constraint stock_picking_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_picking_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	sale_id integer
		constraint stock_picking_sale_id_fkey
			references sale_order
				on delete set null,
	carrier_price double precision,
	carrier_id integer
		constraint stock_picking_carrier_id_fkey
			references delivery_carrier
				on delete set null,
	weight numeric,
	carrier_tracking_ref varchar,
	constraint stock_picking_name_uniq
		unique (name, company_id)
);

comment on table stock_picking is 'Transfer';

comment on column stock_picking.message_main_attachment_id is 'Main Attachment';

comment on column stock_picking.name is 'Reference';

comment on column stock_picking.origin is 'Source Document';

comment on column stock_picking.note is 'Notes';

comment on column stock_picking.backorder_id is 'Back Order of';

comment on column stock_picking.move_type is 'Shipping Policy';

comment on column stock_picking.state is 'Status';

comment on column stock_picking.group_id is 'Procurement Group';

comment on column stock_picking.priority is 'Priority';

comment on column stock_picking.scheduled_date is 'Scheduled Date';

comment on column stock_picking.date_deadline is 'Deadline';

comment on column stock_picking.has_deadline_issue is 'Is late';

comment on column stock_picking.date is 'Creation Date';

comment on column stock_picking.date_done is 'Date of Transfer';

comment on column stock_picking.location_id is 'Source Location';

comment on column stock_picking.location_dest_id is 'Destination Location';

comment on column stock_picking.picking_type_id is 'Operation Type';

comment on column stock_picking.partner_id is 'Contact';

comment on column stock_picking.company_id is 'Company';

comment on column stock_picking.user_id is 'Responsible';

comment on column stock_picking.owner_id is 'Assign Owner';

comment on column stock_picking.printed is 'Printed';

comment on column stock_picking.is_locked is 'Is Locked';

comment on column stock_picking.immediate_transfer is 'Immediate Transfer';

comment on column stock_picking.create_uid is 'Created by';

comment on column stock_picking.create_date is 'Created on';

comment on column stock_picking.write_uid is 'Last Updated by';

comment on column stock_picking.write_date is 'Last Updated on';

comment on column stock_picking.sale_id is 'Sales Order';

comment on column stock_picking.carrier_price is 'Shipping Cost';

comment on column stock_picking.carrier_id is 'Carrier';

comment on column stock_picking.weight is 'Weight';

comment on column stock_picking.carrier_tracking_ref is 'Tracking Reference';

alter table stock_picking owner to postgres;

create table choose_delivery_package
(
	id integer default nextval('choose_delivery_package_id_seq'::regclass) not null
		constraint choose_delivery_package_pkey
			primary key,
	picking_id integer
		constraint choose_delivery_package_picking_id_fkey
			references stock_picking
				on delete set null,
	delivery_packaging_id integer
		constraint choose_delivery_package_delivery_packaging_id_fkey
			references product_packaging
				on delete set null,
	shipping_weight double precision,
	create_uid integer
		constraint choose_delivery_package_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint choose_delivery_package_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table choose_delivery_package is 'Delivery Package Selection Wizard';

comment on column choose_delivery_package.picking_id is 'Picking';

comment on column choose_delivery_package.delivery_packaging_id is 'Delivery Packaging';

comment on column choose_delivery_package.shipping_weight is 'Shipping Weight';

comment on column choose_delivery_package.create_uid is 'Created by';

comment on column choose_delivery_package.create_date is 'Created on';

comment on column choose_delivery_package.write_uid is 'Last Updated by';

comment on column choose_delivery_package.write_date is 'Last Updated on';

alter table choose_delivery_package owner to postgres;

create table purchase_order_stock_picking_rel
(
	purchase_order_id integer not null
		constraint purchase_order_stock_picking_rel_purchase_order_id_fkey
			references purchase_order
				on delete cascade,
	stock_picking_id integer not null
		constraint purchase_order_stock_picking_rel_stock_picking_id_fkey
			references stock_picking
				on delete cascade,
	constraint purchase_order_stock_picking_rel_pkey
		primary key (purchase_order_id, stock_picking_id)
);

comment on table purchase_order_stock_picking_rel is 'RELATION BETWEEN purchase_order AND stock_picking';

alter table purchase_order_stock_picking_rel owner to postgres;

create index purchase_order_stock_picking__stock_picking_id_purchase_ord_idx
	on purchase_order_stock_picking_rel (stock_picking_id, purchase_order_id);

create table stock_backorder_confirmation_line
(
	id integer default nextval('stock_backorder_confirmation_line_id_seq'::regclass) not null
		constraint stock_backorder_confirmation_line_pkey
			primary key,
	backorder_confirmation_id integer
		constraint stock_backorder_confirmation_lin_backorder_confirmation_id_fkey
			references stock_backorder_confirmation
				on delete set null,
	picking_id integer
		constraint stock_backorder_confirmation_line_picking_id_fkey
			references stock_picking
				on delete set null,
	to_backorder boolean,
	create_uid integer
		constraint stock_backorder_confirmation_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_backorder_confirmation_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_backorder_confirmation_line is 'Backorder Confirmation Line';

comment on column stock_backorder_confirmation_line.backorder_confirmation_id is 'Immediate Transfer';

comment on column stock_backorder_confirmation_line.picking_id is 'Transfer';

comment on column stock_backorder_confirmation_line.to_backorder is 'To Backorder';

comment on column stock_backorder_confirmation_line.create_uid is 'Created by';

comment on column stock_backorder_confirmation_line.create_date is 'Created on';

comment on column stock_backorder_confirmation_line.write_uid is 'Last Updated by';

comment on column stock_backorder_confirmation_line.write_date is 'Last Updated on';

alter table stock_backorder_confirmation_line owner to postgres;

create table stock_immediate_transfer_line
(
	id integer default nextval('stock_immediate_transfer_line_id_seq'::regclass) not null
		constraint stock_immediate_transfer_line_pkey
			primary key,
	immediate_transfer_id integer not null
		constraint stock_immediate_transfer_line_immediate_transfer_id_fkey
			references stock_immediate_transfer
				on delete restrict,
	picking_id integer not null
		constraint stock_immediate_transfer_line_picking_id_fkey
			references stock_picking
				on delete cascade,
	to_immediate boolean,
	create_uid integer
		constraint stock_immediate_transfer_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_immediate_transfer_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_immediate_transfer_line is 'Immediate Transfer Line';

comment on column stock_immediate_transfer_line.immediate_transfer_id is 'Immediate Transfer';

comment on column stock_immediate_transfer_line.picking_id is 'Transfer';

comment on column stock_immediate_transfer_line.to_immediate is 'To Process';

comment on column stock_immediate_transfer_line.create_uid is 'Created by';

comment on column stock_immediate_transfer_line.create_date is 'Created on';

comment on column stock_immediate_transfer_line.write_uid is 'Last Updated by';

comment on column stock_immediate_transfer_line.write_date is 'Last Updated on';

alter table stock_immediate_transfer_line owner to postgres;

create table stock_package_destination
(
	id integer default nextval('stock_package_destination_id_seq'::regclass) not null
		constraint stock_package_destination_pkey
			primary key,
	picking_id integer not null
		constraint stock_package_destination_picking_id_fkey
			references stock_picking
				on delete cascade,
	location_dest_id integer not null
		constraint stock_package_destination_location_dest_id_fkey
			references stock_location
				on delete cascade,
	create_uid integer
		constraint stock_package_destination_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_package_destination_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_package_destination is 'Stock Package Destination';

comment on column stock_package_destination.picking_id is 'Picking';

comment on column stock_package_destination.location_dest_id is 'Destination location';

comment on column stock_package_destination.create_uid is 'Created by';

comment on column stock_package_destination.create_date is 'Created on';

comment on column stock_package_destination.write_uid is 'Last Updated by';

comment on column stock_package_destination.write_date is 'Last Updated on';

alter table stock_package_destination owner to postgres;

create table stock_package_level
(
	id integer default nextval('stock_package_level_id_seq'::regclass) not null
		constraint stock_package_level_pkey
			primary key,
	package_id integer not null
		constraint stock_package_level_package_id_fkey
			references stock_quant_package
				on delete restrict,
	picking_id integer
		constraint stock_package_level_picking_id_fkey
			references stock_picking
				on delete set null,
	location_dest_id integer
		constraint stock_package_level_location_dest_id_fkey
			references stock_location
				on delete set null,
	company_id integer not null
		constraint stock_package_level_company_id_fkey
			references res_company
				on delete restrict,
	create_uid integer
		constraint stock_package_level_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_package_level_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_package_level is 'Stock Package Level';

comment on column stock_package_level.package_id is 'Package';

comment on column stock_package_level.picking_id is 'Picking';

comment on column stock_package_level.location_dest_id is 'To';

comment on column stock_package_level.company_id is 'Company';

comment on column stock_package_level.create_uid is 'Created by';

comment on column stock_package_level.create_date is 'Created on';

comment on column stock_package_level.write_uid is 'Last Updated by';

comment on column stock_package_level.write_date is 'Last Updated on';

alter table stock_package_level owner to postgres;

create table stock_move
(
	id integer default nextval('stock_move_id_seq'::regclass) not null
		constraint stock_move_pkey
			primary key,
	name varchar not null,
	sequence integer,
	priority varchar,
	create_date timestamp,
	date timestamp not null,
	date_deadline timestamp,
	company_id integer not null,
	product_id integer not null
		constraint stock_move_product_id_fkey
			references product_product
				on delete restrict,
	description_picking text,
	product_qty numeric,
	product_uom_qty numeric not null,
	product_uom integer not null
		constraint stock_move_product_uom_fkey
			references uom_uom
				on delete restrict,
	location_id integer not null
		constraint stock_move_location_id_fkey
			references stock_location
				on delete restrict,
	location_dest_id integer not null
		constraint stock_move_location_dest_id_fkey
			references stock_location
				on delete restrict,
	partner_id integer
		constraint stock_move_partner_id_fkey
			references res_partner
				on delete set null,
	picking_id integer
		constraint stock_move_picking_id_fkey
			references stock_picking
				on delete set null,
	note text,
	state varchar,
	price_unit double precision,
	origin varchar,
	procure_method varchar not null,
	scrapped boolean,
	group_id integer
		constraint stock_move_group_id_fkey
			references procurement_group
				on delete set null,
	rule_id integer
		constraint stock_move_rule_id_fkey
			references stock_rule
				on delete restrict,
	propagate_cancel boolean,
	delay_alert_date timestamp,
	picking_type_id integer
		constraint stock_move_picking_type_id_fkey
			references stock_picking_type
				on delete set null,
	inventory_id integer
		constraint stock_move_inventory_id_fkey
			references stock_inventory
				on delete set null,
	origin_returned_move_id integer
		constraint stock_move_origin_returned_move_id_fkey
			references stock_move
				on delete set null,
	restrict_partner_id integer
		constraint stock_move_restrict_partner_id_fkey
			references res_partner
				on delete set null,
	warehouse_id integer
		constraint stock_move_warehouse_id_fkey
			references stock_warehouse
				on delete set null,
	additional boolean,
	reference varchar,
	package_level_id integer
		constraint stock_move_package_level_id_fkey
			references stock_package_level
				on delete set null,
	next_serial varchar,
	next_serial_count integer,
	orderpoint_id integer
		constraint stock_move_orderpoint_id_fkey
			references stock_warehouse_orderpoint
				on delete set null,
	create_uid integer
		constraint stock_move_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint stock_move_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	to_refund boolean,
	sale_line_id integer
		constraint stock_move_sale_line_id_fkey
			references sale_order_line
				on delete set null,
	weight numeric,
	purchase_line_id integer
		constraint stock_move_purchase_line_id_fkey
			references purchase_order_line
				on delete set null,
	created_purchase_line_id integer
		constraint stock_move_created_purchase_line_id_fkey
			references purchase_order_line
				on delete set null
);

comment on table stock_move is 'Stock Move';

comment on column stock_move.name is 'Description';

comment on column stock_move.sequence is 'Sequence';

comment on column stock_move.priority is 'Priority';

comment on column stock_move.create_date is 'Creation Date';

comment on column stock_move.date is 'Date Scheduled';

comment on column stock_move.date_deadline is 'Deadline';

comment on column stock_move.company_id is 'Company';

comment on column stock_move.product_id is 'Product';

comment on column stock_move.description_picking is 'Description of Picking';

comment on column stock_move.product_qty is 'Real Quantity';

comment on column stock_move.product_uom_qty is 'Demand';

comment on column stock_move.product_uom is 'Unit of Measure';

comment on column stock_move.location_id is 'Source Location';

comment on column stock_move.location_dest_id is 'Destination Location';

comment on column stock_move.partner_id is 'Destination Address ';

comment on column stock_move.picking_id is 'Transfer';

comment on column stock_move.note is 'Notes';

comment on column stock_move.state is 'Status';

comment on column stock_move.price_unit is 'Unit Price';

comment on column stock_move.origin is 'Source Document';

comment on column stock_move.procure_method is 'Supply Method';

comment on column stock_move.scrapped is 'Scrapped';

comment on column stock_move.group_id is 'Procurement Group';

comment on column stock_move.rule_id is 'Stock Rule';

comment on column stock_move.propagate_cancel is 'Propagate cancel and split';

comment on column stock_move.delay_alert_date is 'Delay Alert Date';

comment on column stock_move.picking_type_id is 'Operation Type';

comment on column stock_move.inventory_id is 'Inventory';

comment on column stock_move.origin_returned_move_id is 'Origin return move';

comment on column stock_move.restrict_partner_id is 'Owner ';

comment on column stock_move.warehouse_id is 'Warehouse';

comment on column stock_move.additional is 'Whether the move was added after the picking''s confirmation';

comment on column stock_move.reference is 'Reference';

comment on column stock_move.package_level_id is 'Package Level';

comment on column stock_move.next_serial is 'First SN';

comment on column stock_move.next_serial_count is 'Number of SN';

comment on column stock_move.orderpoint_id is 'Original Reordering Rule';

comment on column stock_move.create_uid is 'Created by';

comment on column stock_move.write_uid is 'Last Updated by';

comment on column stock_move.write_date is 'Last Updated on';

comment on column stock_move.to_refund is 'Update quantities on SO/PO';

comment on column stock_move.sale_line_id is 'Sale Line';

comment on column stock_move.weight is 'Weight';

comment on column stock_move.purchase_line_id is 'Purchase Order Line';

comment on column stock_move.created_purchase_line_id is 'Created Purchase Order Line';

alter table stock_move owner to postgres;

alter table account_move
	add constraint account_move_stock_move_id_fkey
		foreign key (stock_move_id) references stock_move
			on delete set null;

create table stock_assign_serial
(
	id integer default nextval('stock_assign_serial_id_seq'::regclass) not null
		constraint stock_assign_serial_pkey
			primary key,
	move_id integer not null
		constraint stock_assign_serial_move_id_fkey
			references stock_move
				on delete cascade,
	next_serial_number varchar not null,
	next_serial_count integer not null,
	create_uid integer
		constraint stock_assign_serial_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_assign_serial_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_assign_serial is 'Stock Assign Serial Numbers';

comment on column stock_assign_serial.move_id is 'Move';

comment on column stock_assign_serial.next_serial_number is 'First SN';

comment on column stock_assign_serial.next_serial_count is 'Number of SN';

comment on column stock_assign_serial.create_uid is 'Created by';

comment on column stock_assign_serial.create_date is 'Created on';

comment on column stock_assign_serial.write_uid is 'Last Updated by';

comment on column stock_assign_serial.write_date is 'Last Updated on';

alter table stock_assign_serial owner to postgres;

create table stock_location_route_move
(
	move_id integer not null
		constraint stock_location_route_move_move_id_fkey
			references stock_move
				on delete cascade,
	route_id integer not null
		constraint stock_location_route_move_route_id_fkey
			references stock_location_route
				on delete cascade,
	constraint stock_location_route_move_pkey
		primary key (move_id, route_id)
);

comment on table stock_location_route_move is 'RELATION BETWEEN stock_move AND stock_location_route';

alter table stock_location_route_move owner to postgres;

create index stock_location_route_move_route_id_move_id_idx
	on stock_location_route_move (route_id, move_id);

create index stock_move_company_id_index
	on stock_move (company_id);

create index stock_move_create_date_index
	on stock_move (create_date);

create index stock_move_date_index
	on stock_move (date);

create index stock_move_location_dest_id_index
	on stock_move (location_dest_id);

create index stock_move_location_id_index
	on stock_move (location_id);

create index stock_move_name_index
	on stock_move (name);

create index stock_move_orderpoint_id_index
	on stock_move (orderpoint_id);

create index stock_move_origin_returned_move_id_index
	on stock_move (origin_returned_move_id);

create index stock_move_picking_id_index
	on stock_move (picking_id);

create index stock_move_priority_index
	on stock_move (priority);

create index stock_move_product_id_index
	on stock_move (product_id);

create index stock_move_product_location_index
	on stock_move (product_id, location_id, location_dest_id, company_id, state);

create index stock_move_purchase_line_id_index
	on stock_move (purchase_line_id);

create index stock_move_sale_line_id_index
	on stock_move (sale_line_id);

create index stock_move_state_index
	on stock_move (state);

create table stock_move_line
(
	id integer default nextval('stock_move_line_id_seq'::regclass) not null
		constraint stock_move_line_pkey
			primary key,
	picking_id integer
		constraint stock_move_line_picking_id_fkey
			references stock_picking
				on delete set null,
	move_id integer
		constraint stock_move_line_move_id_fkey
			references stock_move
				on delete set null,
	company_id integer not null,
	product_id integer
		constraint stock_move_line_product_id_fkey
			references product_product
				on delete cascade,
	product_uom_id integer not null
		constraint stock_move_line_product_uom_id_fkey
			references uom_uom
				on delete restrict,
	product_qty numeric,
	product_uom_qty numeric not null,
	qty_done numeric,
	package_id integer
		constraint stock_move_line_package_id_fkey
			references stock_quant_package
				on delete restrict,
	package_level_id integer
		constraint stock_move_line_package_level_id_fkey
			references stock_package_level
				on delete set null,
	lot_id integer
		constraint stock_move_line_lot_id_fkey
			references stock_production_lot
				on delete set null,
	lot_name varchar,
	result_package_id integer
		constraint stock_move_line_result_package_id_fkey
			references stock_quant_package
				on delete restrict,
	date timestamp not null,
	owner_id integer
		constraint stock_move_line_owner_id_fkey
			references res_partner
				on delete set null,
	location_id integer not null
		constraint stock_move_line_location_id_fkey
			references stock_location
				on delete restrict,
	location_dest_id integer not null
		constraint stock_move_line_location_dest_id_fkey
			references stock_location
				on delete restrict,
	state varchar,
	reference varchar,
	description_picking text,
	create_uid integer
		constraint stock_move_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_move_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_move_line is 'Product Moves (Stock Move Line)';

comment on column stock_move_line.picking_id is 'Transfer';

comment on column stock_move_line.move_id is 'Stock Move';

comment on column stock_move_line.company_id is 'Company';

comment on column stock_move_line.product_id is 'Product';

comment on column stock_move_line.product_uom_id is 'Unit of Measure';

comment on column stock_move_line.product_qty is 'Real Reserved Quantity';

comment on column stock_move_line.product_uom_qty is 'Reserved';

comment on column stock_move_line.qty_done is 'Done';

comment on column stock_move_line.package_id is 'Source Package';

comment on column stock_move_line.package_level_id is 'Package Level';

comment on column stock_move_line.lot_id is 'Lot/Serial Number';

comment on column stock_move_line.lot_name is 'Lot/Serial Number Name';

comment on column stock_move_line.result_package_id is 'Destination Package';

comment on column stock_move_line.date is 'Date';

comment on column stock_move_line.owner_id is 'From Owner';

comment on column stock_move_line.location_id is 'From';

comment on column stock_move_line.location_dest_id is 'To';

comment on column stock_move_line.state is 'Status';

comment on column stock_move_line.reference is 'Reference';

comment on column stock_move_line.description_picking is 'Description picking';

comment on column stock_move_line.create_uid is 'Created by';

comment on column stock_move_line.create_date is 'Created on';

comment on column stock_move_line.write_uid is 'Last Updated by';

comment on column stock_move_line.write_date is 'Last Updated on';

alter table stock_move_line owner to postgres;

create index stock_move_line_company_id_index
	on stock_move_line (company_id);

create index stock_move_line_free_reservation_index
	on stock_move_line (id, company_id, product_id, lot_id, location_id, owner_id, package_id);

create index stock_move_line_move_id_index
	on stock_move_line (move_id);

create index stock_move_line_picking_id_index
	on stock_move_line (picking_id);

create table stock_move_line_consume_rel
(
	consume_line_id integer not null
		constraint stock_move_line_consume_rel_consume_line_id_fkey
			references stock_move_line
				on delete cascade,
	produce_line_id integer not null
		constraint stock_move_line_consume_rel_produce_line_id_fkey
			references stock_move_line
				on delete cascade,
	constraint stock_move_line_consume_rel_pkey
		primary key (consume_line_id, produce_line_id)
);

comment on table stock_move_line_consume_rel is 'RELATION BETWEEN stock_move_line AND stock_move_line';

alter table stock_move_line_consume_rel owner to postgres;

create index stock_move_line_consume_rel_produce_line_id_consume_line_id_idx
	on stock_move_line_consume_rel (produce_line_id, consume_line_id);

create table stock_move_move_rel
(
	move_orig_id integer not null
		constraint stock_move_move_rel_move_orig_id_fkey
			references stock_move
				on delete cascade,
	move_dest_id integer not null
		constraint stock_move_move_rel_move_dest_id_fkey
			references stock_move
				on delete cascade,
	constraint stock_move_move_rel_pkey
		primary key (move_orig_id, move_dest_id)
);

comment on table stock_move_move_rel is 'RELATION BETWEEN stock_move AND stock_move';

alter table stock_move_move_rel owner to postgres;

create index stock_move_move_rel_move_dest_id_move_orig_id_idx
	on stock_move_move_rel (move_dest_id, move_orig_id);

create index stock_package_level_company_id_index
	on stock_package_level (company_id);

create index stock_picking_backorder_id_index
	on stock_picking (backorder_id);

create index stock_picking_company_id_index
	on stock_picking (company_id);

create index stock_picking_date_index
	on stock_picking (date);

create index stock_picking_message_main_attachment_id_index
	on stock_picking (message_main_attachment_id);

create index stock_picking_name_index
	on stock_picking (name);

create index stock_picking_origin_index
	on stock_picking (origin);

create index stock_picking_priority_index
	on stock_picking (priority);

create index stock_picking_scheduled_date_index
	on stock_picking (scheduled_date);

create index stock_picking_state_index
	on stock_picking (state);

create table stock_picking_backorder_rel
(
	stock_backorder_confirmation_id integer not null
		constraint stock_picking_backorder_rel_stock_backorder_confirmation_i_fkey
			references stock_backorder_confirmation
				on delete cascade,
	stock_picking_id integer not null
		constraint stock_picking_backorder_rel_stock_picking_id_fkey
			references stock_picking
				on delete cascade,
	constraint stock_picking_backorder_rel_pkey
		primary key (stock_backorder_confirmation_id, stock_picking_id)
);

comment on table stock_picking_backorder_rel is 'RELATION BETWEEN stock_backorder_confirmation AND stock_picking';

alter table stock_picking_backorder_rel owner to postgres;

create index stock_picking_backorder_rel_stock_picking_id_stock_backorde_idx
	on stock_picking_backorder_rel (stock_picking_id, stock_backorder_confirmation_id);

create table stock_picking_sms_rel
(
	confirm_stock_sms_id integer not null
		constraint stock_picking_sms_rel_confirm_stock_sms_id_fkey
			references confirm_stock_sms
				on delete cascade,
	stock_picking_id integer not null
		constraint stock_picking_sms_rel_stock_picking_id_fkey
			references stock_picking
				on delete cascade,
	constraint stock_picking_sms_rel_pkey
		primary key (confirm_stock_sms_id, stock_picking_id)
);

comment on table stock_picking_sms_rel is 'RELATION BETWEEN confirm_stock_sms AND stock_picking';

alter table stock_picking_sms_rel owner to postgres;

create index stock_picking_sms_rel_stock_picking_id_confirm_stock_sms_id_idx
	on stock_picking_sms_rel (stock_picking_id, confirm_stock_sms_id);

create table stock_picking_transfer_rel
(
	stock_immediate_transfer_id integer not null
		constraint stock_picking_transfer_rel_stock_immediate_transfer_id_fkey
			references stock_immediate_transfer
				on delete cascade,
	stock_picking_id integer not null
		constraint stock_picking_transfer_rel_stock_picking_id_fkey
			references stock_picking
				on delete cascade,
	constraint stock_picking_transfer_rel_pkey
		primary key (stock_immediate_transfer_id, stock_picking_id)
);

comment on table stock_picking_transfer_rel is 'RELATION BETWEEN stock_immediate_transfer AND stock_picking';

alter table stock_picking_transfer_rel owner to postgres;

create index stock_picking_transfer_rel_stock_picking_id_stock_immediate_idx
	on stock_picking_transfer_rel (stock_picking_id, stock_immediate_transfer_id);

create table stock_return_picking
(
	id integer default nextval('stock_return_picking_id_seq'::regclass) not null
		constraint stock_return_picking_pkey
			primary key,
	picking_id integer
		constraint stock_return_picking_picking_id_fkey
			references stock_picking
				on delete set null,
	move_dest_exists boolean,
	original_location_id integer
		constraint stock_return_picking_original_location_id_fkey
			references stock_location
				on delete set null,
	parent_location_id integer
		constraint stock_return_picking_parent_location_id_fkey
			references stock_location
				on delete set null,
	location_id integer
		constraint stock_return_picking_location_id_fkey
			references stock_location
				on delete set null,
	create_uid integer
		constraint stock_return_picking_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_return_picking_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_return_picking is 'Return Picking';

comment on column stock_return_picking.picking_id is 'Picking';

comment on column stock_return_picking.move_dest_exists is 'Chained Move Exists';

comment on column stock_return_picking.original_location_id is 'Original Location';

comment on column stock_return_picking.parent_location_id is 'Parent Location';

comment on column stock_return_picking.location_id is 'Return Location';

comment on column stock_return_picking.create_uid is 'Created by';

comment on column stock_return_picking.create_date is 'Created on';

comment on column stock_return_picking.write_uid is 'Last Updated by';

comment on column stock_return_picking.write_date is 'Last Updated on';

alter table stock_return_picking owner to postgres;

create table stock_return_picking_line
(
	id integer default nextval('stock_return_picking_line_id_seq'::regclass) not null
		constraint stock_return_picking_line_pkey
			primary key,
	product_id integer not null
		constraint stock_return_picking_line_product_id_fkey
			references product_product
				on delete cascade,
	quantity numeric not null,
	wizard_id integer
		constraint stock_return_picking_line_wizard_id_fkey
			references stock_return_picking
				on delete set null,
	move_id integer
		constraint stock_return_picking_line_move_id_fkey
			references stock_move
				on delete set null,
	create_uid integer
		constraint stock_return_picking_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_return_picking_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	to_refund boolean
);

comment on table stock_return_picking_line is 'Return Picking Line';

comment on column stock_return_picking_line.product_id is 'Product';

comment on column stock_return_picking_line.quantity is 'Quantity';

comment on column stock_return_picking_line.wizard_id is 'Wizard';

comment on column stock_return_picking_line.move_id is 'Move';

comment on column stock_return_picking_line.create_uid is 'Created by';

comment on column stock_return_picking_line.create_date is 'Created on';

comment on column stock_return_picking_line.write_uid is 'Last Updated by';

comment on column stock_return_picking_line.write_date is 'Last Updated on';

comment on column stock_return_picking_line.to_refund is 'Update quantities on SO/PO';

alter table stock_return_picking_line owner to postgres;

create table stock_scrap
(
	id integer default nextval('stock_scrap_id_seq'::regclass) not null
		constraint stock_scrap_pkey
			primary key,
	message_main_attachment_id integer
		constraint stock_scrap_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	name varchar not null,
	company_id integer not null
		constraint stock_scrap_company_id_fkey
			references res_company
				on delete restrict,
	origin varchar,
	product_id integer not null
		constraint stock_scrap_product_id_fkey
			references product_product
				on delete restrict,
	product_uom_id integer not null
		constraint stock_scrap_product_uom_id_fkey
			references uom_uom
				on delete restrict,
	lot_id integer
		constraint stock_scrap_lot_id_fkey
			references stock_production_lot
				on delete set null,
	package_id integer
		constraint stock_scrap_package_id_fkey
			references stock_quant_package
				on delete set null,
	owner_id integer
		constraint stock_scrap_owner_id_fkey
			references res_partner
				on delete set null,
	move_id integer
		constraint stock_scrap_move_id_fkey
			references stock_move
				on delete set null,
	picking_id integer
		constraint stock_scrap_picking_id_fkey
			references stock_picking
				on delete set null,
	location_id integer not null
		constraint stock_scrap_location_id_fkey
			references stock_location
				on delete restrict,
	scrap_location_id integer not null
		constraint stock_scrap_scrap_location_id_fkey
			references stock_location
				on delete restrict,
	scrap_qty double precision not null,
	state varchar,
	date_done timestamp,
	create_uid integer
		constraint stock_scrap_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_scrap_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_scrap is 'Scrap';

comment on column stock_scrap.message_main_attachment_id is 'Main Attachment';

comment on column stock_scrap.name is 'Reference';

comment on column stock_scrap.company_id is 'Company';

comment on column stock_scrap.origin is 'Source Document';

comment on column stock_scrap.product_id is 'Product';

comment on column stock_scrap.product_uom_id is 'Unit of Measure';

comment on column stock_scrap.lot_id is 'Lot/Serial';

comment on column stock_scrap.package_id is 'Package';

comment on column stock_scrap.owner_id is 'Owner';

comment on column stock_scrap.move_id is 'Scrap Move';

comment on column stock_scrap.picking_id is 'Picking';

comment on column stock_scrap.location_id is 'Source Location';

comment on column stock_scrap.scrap_location_id is 'Scrap Location';

comment on column stock_scrap.scrap_qty is 'Quantity';

comment on column stock_scrap.state is 'Status';

comment on column stock_scrap.date_done is 'Date';

comment on column stock_scrap.create_uid is 'Created by';

comment on column stock_scrap.create_date is 'Created on';

comment on column stock_scrap.write_uid is 'Last Updated by';

comment on column stock_scrap.write_date is 'Last Updated on';

alter table stock_scrap owner to postgres;

create index stock_scrap_message_main_attachment_id_index
	on stock_scrap (message_main_attachment_id);

create table stock_valuation_layer
(
	id integer default nextval('stock_valuation_layer_id_seq'::regclass) not null
		constraint stock_valuation_layer_pkey
			primary key,
	company_id integer not null,
	product_id integer not null
		constraint stock_valuation_layer_product_id_fkey
			references product_product
				on delete restrict,
	quantity numeric,
	unit_cost numeric,
	value numeric,
	remaining_qty numeric,
	remaining_value numeric,
	description varchar,
	stock_valuation_layer_id integer
		constraint stock_valuation_layer_stock_valuation_layer_id_fkey
			references stock_valuation_layer
				on delete set null,
	stock_move_id integer
		constraint stock_valuation_layer_stock_move_id_fkey
			references stock_move
				on delete set null,
	account_move_id integer
		constraint stock_valuation_layer_account_move_id_fkey
			references account_move
				on delete set null,
	create_uid integer
		constraint stock_valuation_layer_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_valuation_layer_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_valuation_layer is 'Stock Valuation Layer';

comment on column stock_valuation_layer.company_id is 'Company';

comment on column stock_valuation_layer.product_id is 'Product';

comment on column stock_valuation_layer.quantity is 'Quantity';

comment on column stock_valuation_layer.unit_cost is 'Unit Value';

comment on column stock_valuation_layer.value is 'Total Value';

comment on column stock_valuation_layer.remaining_qty is 'Remaining Qty';

comment on column stock_valuation_layer.remaining_value is 'Remaining Value';

comment on column stock_valuation_layer.description is 'Description';

comment on column stock_valuation_layer.stock_valuation_layer_id is 'Linked To';

comment on column stock_valuation_layer.stock_move_id is 'Stock Move';

comment on column stock_valuation_layer.account_move_id is 'Journal Entry';

comment on column stock_valuation_layer.create_uid is 'Created by';

comment on column stock_valuation_layer.create_date is 'Created on';

comment on column stock_valuation_layer.write_uid is 'Last Updated by';

comment on column stock_valuation_layer.write_date is 'Last Updated on';

alter table stock_valuation_layer owner to postgres;

create index stock_valuation_layer_index
	on stock_valuation_layer (product_id, remaining_qty, stock_move_id, company_id, create_date);

create index stock_valuation_layer_stock_move_id_index
	on stock_valuation_layer (stock_move_id);

create table stock_warn_insufficient_qty_scrap
(
	id integer default nextval('stock_warn_insufficient_qty_scrap_id_seq'::regclass) not null
		constraint stock_warn_insufficient_qty_scrap_pkey
			primary key,
	scrap_id integer
		constraint stock_warn_insufficient_qty_scrap_scrap_id_fkey
			references stock_scrap
				on delete set null,
	product_id integer not null
		constraint stock_warn_insufficient_qty_scrap_product_id_fkey
			references product_product
				on delete cascade,
	location_id integer not null
		constraint stock_warn_insufficient_qty_scrap_location_id_fkey
			references stock_location
				on delete cascade,
	quantity double precision not null,
	product_uom_name varchar not null,
	create_uid integer
		constraint stock_warn_insufficient_qty_scrap_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_warn_insufficient_qty_scrap_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_warn_insufficient_qty_scrap is 'Warn Insufficient Scrap Quantity';

comment on column stock_warn_insufficient_qty_scrap.scrap_id is 'Scrap';

comment on column stock_warn_insufficient_qty_scrap.product_id is 'Product';

comment on column stock_warn_insufficient_qty_scrap.location_id is 'Location';

comment on column stock_warn_insufficient_qty_scrap.quantity is 'Quantity';

comment on column stock_warn_insufficient_qty_scrap.product_uom_name is 'Unit of Measure';

comment on column stock_warn_insufficient_qty_scrap.create_uid is 'Created by';

comment on column stock_warn_insufficient_qty_scrap.create_date is 'Created on';

comment on column stock_warn_insufficient_qty_scrap.write_uid is 'Last Updated by';

comment on column stock_warn_insufficient_qty_scrap.write_date is 'Last Updated on';

alter table stock_warn_insufficient_qty_scrap owner to postgres;

create table utm_tag
(
	id integer default nextval('utm_tag_id_seq'::regclass) not null
		constraint utm_tag_pkey
			primary key,
	name varchar not null
		constraint utm_tag_name_uniq
			unique,
	color integer,
	create_uid integer
		constraint utm_tag_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint utm_tag_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table utm_tag is 'UTM Tag';

comment on column utm_tag.name is 'Name';

comment on column utm_tag.color is 'Color Index';

comment on column utm_tag.create_uid is 'Created by';

comment on column utm_tag.create_date is 'Created on';

comment on column utm_tag.write_uid is 'Last Updated by';

comment on column utm_tag.write_date is 'Last Updated on';

alter table utm_tag owner to postgres;

create table utm_tag_rel
(
	tag_id integer not null
		constraint utm_tag_rel_tag_id_fkey
			references utm_campaign
				on delete cascade,
	campaign_id integer not null
		constraint utm_tag_rel_campaign_id_fkey
			references utm_tag
				on delete cascade,
	constraint utm_tag_rel_pkey
		primary key (tag_id, campaign_id)
);

comment on table utm_tag_rel is 'RELATION BETWEEN utm_campaign AND utm_tag';

alter table utm_tag_rel owner to postgres;

create index utm_tag_rel_campaign_id_tag_id_idx
	on utm_tag_rel (campaign_id, tag_id);

create table validate_account_move
(
	id integer default nextval('validate_account_move_id_seq'::regclass) not null
		constraint validate_account_move_pkey
			primary key,
	force_post boolean,
	create_uid integer
		constraint validate_account_move_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint validate_account_move_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table validate_account_move is 'Validate Account Move';

comment on column validate_account_move.force_post is 'Force';

comment on column validate_account_move.create_uid is 'Created by';

comment on column validate_account_move.create_date is 'Created on';

comment on column validate_account_move.write_uid is 'Last Updated by';

comment on column validate_account_move.write_date is 'Last Updated on';

alter table validate_account_move owner to postgres;

create table web_editor_converter_test_sub
(
	id integer default nextval('web_editor_converter_test_sub_id_seq'::regclass) not null
		constraint web_editor_converter_test_sub_pkey
			primary key,
	name varchar,
	create_uid integer
		constraint web_editor_converter_test_sub_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint web_editor_converter_test_sub_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table web_editor_converter_test_sub is 'Web Editor Converter Subtest';

comment on column web_editor_converter_test_sub.name is 'Name';

comment on column web_editor_converter_test_sub.create_uid is 'Created by';

comment on column web_editor_converter_test_sub.create_date is 'Created on';

comment on column web_editor_converter_test_sub.write_uid is 'Last Updated by';

comment on column web_editor_converter_test_sub.write_date is 'Last Updated on';

alter table web_editor_converter_test_sub owner to postgres;

create table web_editor_converter_test
(
	id integer default nextval('web_editor_converter_test_id_seq'::regclass) not null
		constraint web_editor_converter_test_pkey
			primary key,
	char varchar,
	integer integer,
	float double precision,
	numeric numeric,
	many2one integer
		constraint web_editor_converter_test_many2one_fkey
			references web_editor_converter_test_sub
				on delete set null,
	"binary" bytea,
	date date,
	datetime timestamp,
	selection_str varchar,
	html text,
	text text,
	create_uid integer
		constraint web_editor_converter_test_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint web_editor_converter_test_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table web_editor_converter_test is 'Web Editor Converter Test';

comment on column web_editor_converter_test.char is 'Char';

comment on column web_editor_converter_test.integer is 'Integer';

comment on column web_editor_converter_test.float is 'Float';

comment on column web_editor_converter_test.numeric is 'Numeric';

comment on column web_editor_converter_test.many2one is 'Many2One';

comment on column web_editor_converter_test."binary" is 'Binary';

comment on column web_editor_converter_test.date is 'Date';

comment on column web_editor_converter_test.datetime is 'Datetime';

comment on column web_editor_converter_test.selection_str is 'Lorsqu''un pancake prend l''avion à destination de Toronto et qu''il fait une escale technique à St Claude, on dit:';

comment on column web_editor_converter_test.html is 'Html';

comment on column web_editor_converter_test.text is 'Text';

comment on column web_editor_converter_test.create_uid is 'Created by';

comment on column web_editor_converter_test.create_date is 'Created on';

comment on column web_editor_converter_test.write_uid is 'Last Updated by';

comment on column web_editor_converter_test.write_date is 'Last Updated on';

alter table web_editor_converter_test owner to postgres;

create table web_tour_tour
(
	id integer default nextval('web_tour_tour_id_seq'::regclass) not null
		constraint web_tour_tour_pkey
			primary key,
	name varchar not null,
	user_id integer
		constraint web_tour_tour_user_id_fkey
			references res_users
				on delete set null
);

comment on table web_tour_tour is 'Tours';

comment on column web_tour_tour.name is 'Tour name';

comment on column web_tour_tour.user_id is 'Consumed by';

alter table web_tour_tour owner to postgres;

create table wizard_ir_model_menu_create
(
	id integer default nextval('wizard_ir_model_menu_create_id_seq'::regclass) not null
		constraint wizard_ir_model_menu_create_pkey
			primary key,
	menu_id integer not null
		constraint wizard_ir_model_menu_create_menu_id_fkey
			references ir_ui_menu
				on delete cascade,
	name varchar not null,
	create_uid integer
		constraint wizard_ir_model_menu_create_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint wizard_ir_model_menu_create_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table wizard_ir_model_menu_create is 'Create Menu Wizard';

comment on column wizard_ir_model_menu_create.menu_id is 'Parent Menu';

comment on column wizard_ir_model_menu_create.name is 'Menu Name';

comment on column wizard_ir_model_menu_create.create_uid is 'Created by';

comment on column wizard_ir_model_menu_create.create_date is 'Created on';

comment on column wizard_ir_model_menu_create.write_uid is 'Last Updated by';

comment on column wizard_ir_model_menu_create.write_date is 'Last Updated on';

alter table wizard_ir_model_menu_create owner to postgres;

create table account_account
(
	id integer default nextval('account_account_id_seq'::regclass) not null
		constraint account_account_pkey
			primary key,
	name varchar not null,
	currency_id integer,
	code varchar(64) not null,
	deprecated boolean,
	user_type_id integer not null,
	internal_type varchar,
	internal_group varchar,
	reconcile boolean,
	note text,
	company_id integer not null,
	group_id integer,
	root_id integer,
	is_off_balance boolean,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	asset_model integer,
	create_asset varchar not null,
	multiple_assets_per_line boolean,
	constraint account_account_code_company_uniq
		unique (code, company_id)
);

comment on table account_account is 'Account';

comment on column account_account.name is 'Account Name';

comment on column account_account.currency_id is 'Account Currency';

comment on column account_account.code is 'Code';

comment on column account_account.deprecated is 'Deprecated';

comment on column account_account.user_type_id is 'Type';

comment on column account_account.internal_type is 'Internal Type';

comment on column account_account.internal_group is 'Internal Group';

comment on column account_account.reconcile is 'Allow Reconciliation';

comment on column account_account.note is 'Internal Notes';

comment on column account_account.company_id is 'Company';

comment on column account_account.group_id is 'Group';

comment on column account_account.root_id is 'Root';

comment on column account_account.is_off_balance is 'Is Off Balance';

comment on column account_account.create_uid is 'Created by';

comment on column account_account.create_date is 'Created on';

comment on column account_account.write_uid is 'Last Updated by';

comment on column account_account.write_date is 'Last Updated on';

comment on column account_account.asset_model is 'Asset Model';

comment on column account_account.create_asset is 'Create Asset';

comment on column account_account.multiple_assets_per_line is 'Multiple Assets per Line';

alter table account_account owner to postgres;

create index account_account_code_index
	on account_account (code);

create index account_account_deprecated_index
	on account_account (deprecated);

create index account_account_name_index
	on account_account (name);

create table account_cash_rounding
(
	id integer default nextval('account_cash_rounding_id_seq'::regclass) not null
		constraint account_cash_rounding_pkey
			primary key,
	name varchar not null,
	rounding double precision not null,
	strategy varchar not null,
	rounding_method varchar not null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table account_cash_rounding is 'Account Cash Rounding';

comment on column account_cash_rounding.name is 'Name';

comment on column account_cash_rounding.rounding is 'Rounding Precision';

comment on column account_cash_rounding.strategy is 'Rounding Strategy';

comment on column account_cash_rounding.rounding_method is 'Rounding Method';

comment on column account_cash_rounding.create_uid is 'Created by';

comment on column account_cash_rounding.create_date is 'Created on';

comment on column account_cash_rounding.write_uid is 'Last Updated by';

comment on column account_cash_rounding.write_date is 'Last Updated on';

alter table account_cash_rounding owner to postgres;

create table account_incoterms
(
	id integer default nextval('account_incoterms_id_seq'::regclass) not null
		constraint account_incoterms_pkey
			primary key,
	name varchar not null,
	code varchar(3) not null,
	active boolean,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table account_incoterms is 'Incoterms';

comment on column account_incoterms.name is 'Name';

comment on column account_incoterms.code is 'Code';

comment on column account_incoterms.active is 'Active';

comment on column account_incoterms.create_uid is 'Created by';

comment on column account_incoterms.create_date is 'Created on';

comment on column account_incoterms.write_uid is 'Last Updated by';

comment on column account_incoterms.write_date is 'Last Updated on';

alter table account_incoterms owner to postgres;

create table discount
(
	id integer default nextval('discount_id_seq'::regclass) not null
		constraint discount_pkey
			primary key,
	name varchar,
	discount double precision,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table discount is 'discount';

comment on column discount.name is 'Name';

comment on column discount.discount is 'Remise en %';

comment on column discount.create_uid is 'Created by';

comment on column discount.create_date is 'Created on';

comment on column discount.write_uid is 'Last Updated by';

comment on column discount.write_date is 'Last Updated on';

alter table discount owner to postgres;

create table ir_attachment
(
	id integer default nextval('ir_attachment_id_seq'::regclass) not null
		constraint ir_attachment_pkey
			primary key,
	name varchar not null,
	description text,
	res_model varchar,
	res_field varchar,
	res_id integer,
	company_id integer,
	type varchar not null,
	url varchar(1024),
	public boolean,
	access_token varchar,
	db_datas bytea,
	store_fname varchar,
	file_size integer,
	checksum varchar(40),
	mimetype varchar,
	index_content text,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	original_id integer
		constraint ir_attachment_original_id_fkey
			references ir_attachment
				on delete set null
);

comment on table ir_attachment is 'Attachment';

comment on column ir_attachment.name is 'Name';

comment on column ir_attachment.description is 'Description';

comment on column ir_attachment.res_model is 'Resource Model';

comment on column ir_attachment.res_field is 'Resource Field';

comment on column ir_attachment.res_id is 'Resource ID';

comment on column ir_attachment.company_id is 'Company';

comment on column ir_attachment.type is 'Type';

comment on column ir_attachment.url is 'Url';

comment on column ir_attachment.public is 'Is public document';

comment on column ir_attachment.access_token is 'Access Token';

comment on column ir_attachment.db_datas is 'Database Data';

comment on column ir_attachment.store_fname is 'Stored Filename';

comment on column ir_attachment.file_size is 'File Size';

comment on column ir_attachment.checksum is 'Checksum/SHA1';

comment on column ir_attachment.mimetype is 'Mime Type';

comment on column ir_attachment.index_content is 'Indexed Content';

comment on column ir_attachment.create_uid is 'Created by';

comment on column ir_attachment.create_date is 'Created on';

comment on column ir_attachment.write_uid is 'Last Updated by';

comment on column ir_attachment.write_date is 'Last Updated on';

comment on column ir_attachment.original_id is 'Original (unoptimized, unresized) attachment';

alter table ir_attachment owner to postgres;

create table account_analytic_account
(
	id integer default nextval('account_analytic_account_id_seq'::regclass) not null
		constraint account_analytic_account_pkey
			primary key,
	name varchar not null,
	code varchar,
	active boolean,
	group_id integer,
	company_id integer,
	partner_id integer,
	message_main_attachment_id integer
		constraint account_analytic_account_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table account_analytic_account is 'Analytic Account';

comment on column account_analytic_account.name is 'Analytic Account';

comment on column account_analytic_account.code is 'Reference';

comment on column account_analytic_account.active is 'Active';

comment on column account_analytic_account.group_id is 'Group';

comment on column account_analytic_account.company_id is 'Company';

comment on column account_analytic_account.partner_id is 'Customer';

comment on column account_analytic_account.message_main_attachment_id is 'Main Attachment';

comment on column account_analytic_account.create_uid is 'Created by';

comment on column account_analytic_account.create_date is 'Created on';

comment on column account_analytic_account.write_uid is 'Last Updated by';

comment on column account_analytic_account.write_date is 'Last Updated on';

alter table account_analytic_account owner to postgres;

create index account_analytic_account_code_index
	on account_analytic_account (code);

create index account_analytic_account_message_main_attachment_id_index
	on account_analytic_account (message_main_attachment_id);

create index account_analytic_account_name_index
	on account_analytic_account (name);

create table account_journal
(
	id integer default nextval('account_journal_id_seq'::regclass) not null
		constraint account_journal_pkey
			primary key,
	name varchar not null,
	code varchar(6) not null,
	active boolean,
	type varchar not null,
	default_account_id integer
		constraint account_journal_default_account_id_fkey
			references account_account
				on delete restrict,
	payment_debit_account_id integer
		constraint account_journal_payment_debit_account_id_fkey
			references account_account
				on delete restrict,
	payment_credit_account_id integer
		constraint account_journal_payment_credit_account_id_fkey
			references account_account
				on delete restrict,
	suspense_account_id integer
		constraint account_journal_suspense_account_id_fkey
			references account_account
				on delete restrict,
	restrict_mode_hash_table boolean,
	sequence integer,
	invoice_reference_type varchar not null,
	invoice_reference_model varchar not null,
	currency_id integer,
	company_id integer not null,
	refund_sequence boolean,
	sequence_override_regex text,
	at_least_one_inbound boolean,
	at_least_one_outbound boolean,
	profit_account_id integer
		constraint account_journal_profit_account_id_fkey
			references account_account
				on delete set null,
	loss_account_id integer
		constraint account_journal_loss_account_id_fkey
			references account_account
				on delete set null,
	bank_account_id integer,
	bank_statements_source varchar,
	sale_activity_type_id integer,
	sale_activity_user_id integer,
	sale_activity_note text,
	alias_id integer,
	secure_sequence_id integer,
	show_on_dashboard boolean,
	color integer,
	message_main_attachment_id integer
		constraint account_journal_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	account_online_journal_id integer,
	bank_statement_creation varchar,
	account_online_account_id integer,
	account_online_link_id integer,
	bank_statement_creation_groupby varchar,
	constraint account_journal_code_company_uniq
		unique (code, name, company_id)
);

comment on table account_journal is 'Journal';

comment on column account_journal.name is 'Journal Name';

comment on column account_journal.code is 'Short Code';

comment on column account_journal.active is 'Active';

comment on column account_journal.type is 'Type';

comment on column account_journal.default_account_id is 'Default Account';

comment on column account_journal.payment_debit_account_id is 'Outstanding Receipts Account';

comment on column account_journal.payment_credit_account_id is 'Outstanding Payments Account';

comment on column account_journal.suspense_account_id is 'Suspense Account';

comment on column account_journal.restrict_mode_hash_table is 'Lock Posted Entries with Hash';

comment on column account_journal.sequence is 'Sequence';

comment on column account_journal.invoice_reference_type is 'Communication Type';

comment on column account_journal.invoice_reference_model is 'Communication Standard';

comment on column account_journal.currency_id is 'Currency';

comment on column account_journal.company_id is 'Company';

comment on column account_journal.refund_sequence is 'Dedicated Credit Note Sequence';

comment on column account_journal.sequence_override_regex is 'Sequence Override Regex';

comment on column account_journal.at_least_one_inbound is 'At Least One Inbound';

comment on column account_journal.at_least_one_outbound is 'At Least One Outbound';

comment on column account_journal.profit_account_id is 'Profit Account';

comment on column account_journal.loss_account_id is 'Loss Account';

comment on column account_journal.bank_account_id is 'Bank Account';

comment on column account_journal.bank_statements_source is 'Bank Feeds';

comment on column account_journal.sale_activity_type_id is 'Schedule Activity';

comment on column account_journal.sale_activity_user_id is 'Activity User';

comment on column account_journal.sale_activity_note is 'Activity Summary';

comment on column account_journal.alias_id is 'Email Alias';

comment on column account_journal.secure_sequence_id is 'Secure Sequence';

comment on column account_journal.show_on_dashboard is 'Show journal on dashboard';

comment on column account_journal.color is 'Color Index';

comment on column account_journal.message_main_attachment_id is 'Main Attachment';

comment on column account_journal.create_uid is 'Created by';

comment on column account_journal.create_date is 'Created on';

comment on column account_journal.write_uid is 'Last Updated by';

comment on column account_journal.write_date is 'Last Updated on';

comment on column account_journal.account_online_journal_id is 'Account Online Journal';

comment on column account_journal.bank_statement_creation is 'Creation of Bank Statements';

comment on column account_journal.account_online_account_id is 'Account Online Account';

comment on column account_journal.account_online_link_id is 'Account Online Link';

comment on column account_journal.bank_statement_creation_groupby is 'Bank Statements Group By';

alter table account_journal owner to postgres;

create table account_account_account_journal_rel
(
	account_account_id integer not null
		constraint account_account_account_journal_rel_account_account_id_fkey
			references account_account
				on delete cascade,
	account_journal_id integer not null
		constraint account_account_account_journal_rel_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_account_account_journal_rel_pkey
		primary key (account_account_id, account_journal_id)
);

comment on table account_account_account_journal_rel is 'RELATION BETWEEN account_account AND account_journal';

alter table account_account_account_journal_rel owner to postgres;

create index account_account_account_journ_account_journal_id_account_ac_idx
	on account_account_account_journal_rel (account_journal_id, account_account_id);

create table account_asset
(
	id integer default nextval('account_asset_id_seq'::regclass) not null
		constraint account_asset_pkey
			primary key,
	name varchar not null,
	currency_id integer not null,
	company_id integer not null,
	state varchar,
	active boolean,
	asset_type varchar,
	method varchar,
	method_number integer,
	method_period varchar,
	method_progress_factor double precision,
	prorata boolean,
	prorata_date date,
	account_asset_id integer
		constraint account_asset_account_asset_id_fkey
			references account_account
				on delete set null,
	account_depreciation_id integer
		constraint account_asset_account_depreciation_id_fkey
			references account_account
				on delete set null,
	account_depreciation_expense_id integer
		constraint account_asset_account_depreciation_expense_id_fkey
			references account_account
				on delete set null,
	journal_id integer
		constraint account_asset_journal_id_fkey
			references account_journal
				on delete set null,
	original_value numeric,
	book_value numeric,
	salvage_value numeric,
	account_analytic_id integer
		constraint account_asset_account_analytic_id_fkey
			references account_analytic_account
				on delete set null,
	first_depreciation_date date,
	acquisition_date date,
	disposal_date date,
	model_id integer
		constraint account_asset_model_id_fkey
			references account_asset
				on delete set null,
	parent_id integer
		constraint account_asset_parent_id_fkey
			references account_asset
				on delete set null,
	already_depreciated_amount_import numeric,
	depreciation_number_import integer,
	first_depreciation_date_import date,
	message_main_attachment_id integer
		constraint account_asset_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table account_asset is 'Asset/Revenue Recognition';

comment on column account_asset.name is 'Asset Name';

comment on column account_asset.currency_id is 'Currency';

comment on column account_asset.company_id is 'Company';

comment on column account_asset.state is 'Status';

comment on column account_asset.active is 'Active';

comment on column account_asset.asset_type is 'Asset Type';

comment on column account_asset.method is 'Method';

comment on column account_asset.method_number is 'Number of Depreciations';

comment on column account_asset.method_period is 'Number of Months in a Period';

comment on column account_asset.method_progress_factor is 'Degressive Factor';

comment on column account_asset.prorata is 'Prorata Temporis';

comment on column account_asset.prorata_date is 'Prorata Date';

comment on column account_asset.account_asset_id is 'Fixed Asset Account';

comment on column account_asset.account_depreciation_id is 'Depreciation Account';

comment on column account_asset.account_depreciation_expense_id is 'Expense Account';

comment on column account_asset.journal_id is 'Journal';

comment on column account_asset.original_value is 'Original Value';

comment on column account_asset.book_value is 'Book Value';

comment on column account_asset.salvage_value is 'Not Depreciable Value';

comment on column account_asset.account_analytic_id is 'Analytic Account';

comment on column account_asset.first_depreciation_date is 'First Depreciation Date';

comment on column account_asset.acquisition_date is 'Acquisition Date';

comment on column account_asset.disposal_date is 'Disposal Date';

comment on column account_asset.model_id is 'Model';

comment on column account_asset.parent_id is 'Parent';

comment on column account_asset.already_depreciated_amount_import is 'Already Depreciated Amount Import';

comment on column account_asset.depreciation_number_import is 'Depreciation Number Import';

comment on column account_asset.first_depreciation_date_import is 'First Depreciation Date Import';

comment on column account_asset.message_main_attachment_id is 'Main Attachment';

comment on column account_asset.create_uid is 'Created by';

comment on column account_asset.create_date is 'Created on';

comment on column account_asset.write_uid is 'Last Updated by';

comment on column account_asset.write_date is 'Last Updated on';

alter table account_asset owner to postgres;

alter table account_account
	add constraint account_account_asset_model_fkey
		foreign key (asset_model) references account_asset
			on delete set null;

create index account_asset_asset_type_index
	on account_asset (asset_type);

create index account_asset_message_main_attachment_id_index
	on account_asset (message_main_attachment_id);

create table account_bank_statement
(
	id integer default nextval('account_bank_statement_id_seq'::regclass) not null
		constraint account_bank_statement_pkey
			primary key,
	name varchar,
	reference varchar,
	date date not null,
	date_done timestamp,
	balance_start numeric,
	balance_end_real numeric,
	state varchar not null,
	journal_id integer not null
		constraint account_bank_statement_journal_id_fkey
			references account_journal
				on delete restrict,
	company_id integer,
	total_entry_encoding numeric,
	balance_end numeric,
	difference numeric,
	user_id integer,
	cashbox_start_id integer,
	cashbox_end_id integer,
	previous_statement_id integer
		constraint account_bank_statement_previous_statement_id_fkey
			references account_bank_statement
				on delete set null,
	is_valid_balance_start boolean,
	message_main_attachment_id integer
		constraint account_bank_statement_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	sequence_prefix varchar,
	sequence_number integer,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	is_locked boolean
);

comment on table account_bank_statement is 'Bank Statement';

comment on column account_bank_statement.name is 'Reference';

comment on column account_bank_statement.reference is 'External Reference';

comment on column account_bank_statement.date is 'Date';

comment on column account_bank_statement.date_done is 'Closed On';

comment on column account_bank_statement.balance_start is 'Starting Balance';

comment on column account_bank_statement.balance_end_real is 'Ending Balance';

comment on column account_bank_statement.state is 'Status';

comment on column account_bank_statement.journal_id is 'Journal';

comment on column account_bank_statement.company_id is 'Company';

comment on column account_bank_statement.total_entry_encoding is 'Transactions Subtotal';

comment on column account_bank_statement.balance_end is 'Computed Balance';

comment on column account_bank_statement.difference is 'Difference';

comment on column account_bank_statement.user_id is 'Responsible';

comment on column account_bank_statement.cashbox_start_id is 'Starting Cashbox';

comment on column account_bank_statement.cashbox_end_id is 'Ending Cashbox';

comment on column account_bank_statement.previous_statement_id is 'Previous Statement';

comment on column account_bank_statement.is_valid_balance_start is 'Is Valid Balance Start';

comment on column account_bank_statement.message_main_attachment_id is 'Main Attachment';

comment on column account_bank_statement.sequence_prefix is 'Sequence Prefix';

comment on column account_bank_statement.sequence_number is 'Sequence Number';

comment on column account_bank_statement.create_uid is 'Created by';

comment on column account_bank_statement.create_date is 'Created on';

comment on column account_bank_statement.write_uid is 'Last Updated by';

comment on column account_bank_statement.write_date is 'Last Updated on';

comment on column account_bank_statement.is_locked is 'Locked';

alter table account_bank_statement owner to postgres;

create index account_bank_statement_date_index
	on account_bank_statement (date);

create index account_bank_statement_message_main_attachment_id_index
	on account_bank_statement (message_main_attachment_id);

create index account_bank_statement_sequence_index
	on account_bank_statement (journal_id asc, sequence_prefix desc, sequence_number desc, name asc);

create index account_bank_statement_sequence_index2
	on account_bank_statement (journal_id asc, id desc, sequence_prefix asc);

create table account_bank_statement_line
(
	id integer default nextval('account_bank_statement_line_id_seq'::regclass) not null
		constraint account_bank_statement_line_pkey
			primary key,
	move_id integer not null,
	statement_id integer not null
		constraint account_bank_statement_line_statement_id_fkey
			references account_bank_statement
				on delete cascade,
	sequence integer,
	account_number varchar,
	partner_name varchar,
	transaction_type varchar,
	payment_ref varchar not null,
	amount numeric,
	amount_currency numeric,
	foreign_currency_id integer,
	amount_residual double precision,
	currency_id integer,
	partner_id integer,
	is_reconciled boolean,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	online_identifier varchar,
	online_partner_vendor_name varchar,
	online_partner_bank_account varchar,
	unique_import_id varchar
		constraint account_bank_statement_line_unique_import_id
			unique,
	online_transaction_identifier varchar,
	online_partner_information varchar,
	online_account_id integer,
	online_link_id integer
);

comment on table account_bank_statement_line is 'Bank Statement Line';

comment on column account_bank_statement_line.move_id is 'Journal Entry';

comment on column account_bank_statement_line.statement_id is 'Statement';

comment on column account_bank_statement_line.sequence is 'Sequence';

comment on column account_bank_statement_line.account_number is 'Bank Account Number';

comment on column account_bank_statement_line.partner_name is 'Partner Name';

comment on column account_bank_statement_line.transaction_type is 'Transaction Type';

comment on column account_bank_statement_line.payment_ref is 'Label';

comment on column account_bank_statement_line.amount is 'Amount';

comment on column account_bank_statement_line.amount_currency is 'Amount Currency';

comment on column account_bank_statement_line.foreign_currency_id is 'Foreign Currency';

comment on column account_bank_statement_line.amount_residual is 'Residual Amount';

comment on column account_bank_statement_line.currency_id is 'Journal Currency';

comment on column account_bank_statement_line.partner_id is 'Partner';

comment on column account_bank_statement_line.is_reconciled is 'Is Reconciled';

comment on column account_bank_statement_line.create_uid is 'Created by';

comment on column account_bank_statement_line.create_date is 'Created on';

comment on column account_bank_statement_line.write_uid is 'Last Updated by';

comment on column account_bank_statement_line.write_date is 'Last Updated on';

comment on column account_bank_statement_line.online_identifier is 'Online Identifier';

comment on column account_bank_statement_line.online_partner_vendor_name is 'Online Partner Vendor Name';

comment on column account_bank_statement_line.online_partner_bank_account is 'Online Partner Bank Account';

comment on column account_bank_statement_line.unique_import_id is 'Import ID';

comment on column account_bank_statement_line.online_transaction_identifier is 'Online Transaction Identifier';

comment on column account_bank_statement_line.online_partner_information is 'Online Partner Information';

comment on column account_bank_statement_line.online_account_id is 'Online Account';

comment on column account_bank_statement_line.online_link_id is 'Account Online Link';

alter table account_bank_statement_line owner to postgres;

create index account_bank_statement_line_sequence_index
	on account_bank_statement_line (sequence);

create index account_bank_statement_line_statement_id_index
	on account_bank_statement_line (statement_id);

create index account_journal_company_id_index
	on account_journal (company_id);

create index account_journal_message_main_attachment_id_index
	on account_journal (message_main_attachment_id);

create table crm_team
(
	id integer default nextval('crm_team_id_seq'::regclass) not null
		constraint crm_team_pkey
			primary key,
	name varchar not null,
	sequence integer,
	active boolean,
	company_id integer,
	user_id integer,
	color integer,
	message_main_attachment_id integer
		constraint crm_team_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	use_quotations boolean,
	invoiced_target double precision
);

comment on table crm_team is 'Sales Team';

comment on column crm_team.name is 'Sales Team';

comment on column crm_team.sequence is 'Sequence';

comment on column crm_team.active is 'Active';

comment on column crm_team.company_id is 'Company';

comment on column crm_team.user_id is 'Team Leader';

comment on column crm_team.color is 'Color Index';

comment on column crm_team.message_main_attachment_id is 'Main Attachment';

comment on column crm_team.create_uid is 'Created by';

comment on column crm_team.create_date is 'Created on';

comment on column crm_team.write_uid is 'Last Updated by';

comment on column crm_team.write_date is 'Last Updated on';

comment on column crm_team.use_quotations is 'Quotations';

comment on column crm_team.invoiced_target is 'Invoicing Target';

alter table crm_team owner to postgres;

create index crm_team_company_id_index
	on crm_team (company_id);

create index crm_team_message_main_attachment_id_index
	on crm_team (message_main_attachment_id);

create index ir_attachment_checksum_index
	on ir_attachment (checksum);

create index ir_attachment_original_id_index
	on ir_attachment (original_id);

create index ir_attachment_res_idx
	on ir_attachment (res_model, res_id);

create index ir_attachment_url_index
	on ir_attachment (url);

create table ir_logging
(
	id integer default nextval('ir_logging_id_seq'::regclass) not null
		constraint ir_logging_pkey
			primary key,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	name varchar not null,
	type varchar not null,
	dbname varchar,
	level varchar,
	message text not null,
	path varchar not null,
	func varchar not null,
	line varchar not null
);

comment on table ir_logging is 'Logging';

comment on column ir_logging.create_uid is 'Created by';

comment on column ir_logging.create_date is 'Created on';

comment on column ir_logging.write_uid is 'Last Updated by';

comment on column ir_logging.write_date is 'Last Updated on';

comment on column ir_logging.name is 'Name';

comment on column ir_logging.type is 'Type';

comment on column ir_logging.dbname is 'Database Name';

comment on column ir_logging.level is 'Level';

comment on column ir_logging.message is 'Message';

comment on column ir_logging.path is 'Path';

comment on column ir_logging.func is 'Function';

comment on column ir_logging.line is 'Line';

alter table ir_logging owner to postgres;

create index ir_logging_dbname_index
	on ir_logging (dbname);

create index ir_logging_level_index
	on ir_logging (level);

create index ir_logging_type_index
	on ir_logging (type);

create table ir_ui_view
(
	id integer default nextval('ir_ui_view_id_seq'::regclass) not null
		constraint ir_ui_view_pkey
			primary key,
	name varchar not null,
	model varchar,
	key varchar,
	priority integer not null,
	type varchar,
	arch_db text,
	arch_fs varchar,
	arch_updated boolean,
	arch_prev text,
	inherit_id integer
		constraint ir_ui_view_inherit_id_fkey
			references ir_ui_view
				on delete restrict,
	field_parent varchar,
	mode varchar not null,
	active boolean,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	customize_show boolean
);

comment on table ir_ui_view is 'View';

comment on column ir_ui_view.name is 'View Name';

comment on column ir_ui_view.model is 'Model';

comment on column ir_ui_view.key is 'Key';

comment on column ir_ui_view.priority is 'Sequence';

comment on column ir_ui_view.type is 'View Type';

comment on column ir_ui_view.arch_db is 'Arch Blob';

comment on column ir_ui_view.arch_fs is 'Arch Filename';

comment on column ir_ui_view.arch_updated is 'Modified Architecture';

comment on column ir_ui_view.arch_prev is 'Previous View Architecture';

comment on column ir_ui_view.inherit_id is 'Inherited View';

comment on column ir_ui_view.field_parent is 'Child Field';

comment on column ir_ui_view.mode is 'View inheritance mode';

comment on column ir_ui_view.active is 'Active';

comment on column ir_ui_view.create_uid is 'Created by';

comment on column ir_ui_view.create_date is 'Created on';

comment on column ir_ui_view.write_uid is 'Last Updated by';

comment on column ir_ui_view.write_date is 'Last Updated on';

comment on column ir_ui_view.customize_show is 'Show As Optional Inherit';

alter table ir_ui_view owner to postgres;

create index ir_ui_view_inherit_id_index
	on ir_ui_view (inherit_id);

create index ir_ui_view_model_index
	on ir_ui_view (model);

create index ir_ui_view_model_type_inherit_id
	on ir_ui_view (model, inherit_id);

create table journal_account_control_rel
(
	journal_id integer not null
		constraint journal_account_control_rel_journal_id_fkey
			references account_journal
				on delete cascade,
	account_id integer not null
		constraint journal_account_control_rel_account_id_fkey
			references account_account
				on delete cascade,
	constraint journal_account_control_rel_pkey
		primary key (journal_id, account_id)
);

comment on table journal_account_control_rel is 'RELATION BETWEEN account_journal AND account_account';

alter table journal_account_control_rel owner to postgres;

create index journal_account_control_rel_account_id_journal_id_idx
	on journal_account_control_rel (account_id, journal_id);

create table res_country
(
	id integer default nextval('res_country_id_seq'::regclass) not null
		constraint res_country_pkey
			primary key,
	name varchar not null
		constraint res_country_name_uniq
			unique,
	code varchar(2)
		constraint res_country_code_uniq
			unique,
	address_format text,
	address_view_id integer
		constraint res_country_address_view_id_fkey
			references ir_ui_view
				on delete set null,
	currency_id integer,
	phone_code integer,
	name_position varchar,
	vat_label varchar,
	state_required boolean,
	zip_required boolean,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table res_country is 'Country';

comment on column res_country.name is 'Country Name';

comment on column res_country.code is 'Country Code';

comment on column res_country.address_format is 'Layout in Reports';

comment on column res_country.address_view_id is 'Input View';

comment on column res_country.currency_id is 'Currency';

comment on column res_country.phone_code is 'Country Calling Code';

comment on column res_country.name_position is 'Customer Name Position';

comment on column res_country.vat_label is 'Vat Label';

comment on column res_country.state_required is 'State Required';

comment on column res_country.zip_required is 'Zip Required';

comment on column res_country.create_uid is 'Created by';

comment on column res_country.create_date is 'Created on';

comment on column res_country.write_uid is 'Last Updated by';

comment on column res_country.write_date is 'Last Updated on';

alter table res_country owner to postgres;

create table account_fiscal_position
(
	id integer default nextval('account_fiscal_position_id_seq'::regclass) not null
		constraint account_fiscal_position_pkey
			primary key,
	sequence integer,
	name varchar not null,
	active boolean,
	company_id integer not null,
	note text,
	auto_apply boolean,
	vat_required boolean,
	country_id integer
		constraint account_fiscal_position_country_id_fkey
			references res_country
				on delete set null,
	country_group_id integer,
	zip_from varchar,
	zip_to varchar,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp
);

comment on table account_fiscal_position is 'Fiscal Position';

comment on column account_fiscal_position.sequence is 'Sequence';

comment on column account_fiscal_position.name is 'Fiscal Position';

comment on column account_fiscal_position.active is 'Active';

comment on column account_fiscal_position.company_id is 'Company';

comment on column account_fiscal_position.note is 'Notes';

comment on column account_fiscal_position.auto_apply is 'Detect Automatically';

comment on column account_fiscal_position.vat_required is 'VAT required';

comment on column account_fiscal_position.country_id is 'Country';

comment on column account_fiscal_position.country_group_id is 'Country Group';

comment on column account_fiscal_position.zip_from is 'Zip Range From';

comment on column account_fiscal_position.zip_to is 'Zip Range To';

comment on column account_fiscal_position.create_uid is 'Created by';

comment on column account_fiscal_position.create_date is 'Created on';

comment on column account_fiscal_position.write_uid is 'Last Updated by';

comment on column account_fiscal_position.write_date is 'Last Updated on';

alter table account_fiscal_position owner to postgres;

create table account_move
(
	id integer default nextval('account_move_id_seq'::regclass) not null
		constraint account_move_pkey
			primary key,
	name varchar,
	date date not null,
	ref varchar,
	narration text,
	state varchar not null,
	posted_before boolean,
	move_type varchar not null,
	to_check boolean,
	journal_id integer not null
		constraint account_move_journal_id_fkey
			references account_journal
				on delete restrict,
	company_id integer,
	currency_id integer not null,
	partner_id integer,
	commercial_partner_id integer,
	is_move_sent boolean,
	partner_bank_id integer,
	payment_reference varchar,
	payment_id integer,
	statement_line_id integer
		constraint account_move_statement_line_id_fkey
			references account_bank_statement_line
				on delete set null,
	amount_untaxed numeric,
	amount_tax numeric,
	amount_total numeric,
	amount_residual numeric,
	amount_untaxed_signed numeric,
	amount_tax_signed numeric,
	amount_total_signed numeric,
	amount_residual_signed numeric,
	payment_state varchar,
	tax_cash_basis_rec_id integer,
	tax_cash_basis_move_id integer
		constraint account_move_tax_cash_basis_move_id_fkey
			references account_move
				on delete set null,
	auto_post boolean,
	reversed_entry_id integer
		constraint account_move_reversed_entry_id_fkey
			references account_move
				on delete set null,
	fiscal_position_id integer
		constraint account_move_fiscal_position_id_fkey
			references account_fiscal_position
				on delete restrict,
	invoice_user_id integer,
	invoice_date date,
	invoice_date_due date,
	invoice_origin varchar,
	invoice_payment_term_id integer,
	invoice_incoterm_id integer
		constraint account_move_invoice_incoterm_id_fkey
			references account_incoterms
				on delete set null,
	qr_code_method varchar,
	invoice_source_email varchar,
	invoice_partner_display_name varchar,
	invoice_cash_rounding_id integer
		constraint account_move_invoice_cash_rounding_id_fkey
			references account_cash_rounding
				on delete set null,
	secure_sequence_number integer,
	inalterable_hash varchar,
	access_token varchar,
	message_main_attachment_id integer
		constraint account_move_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	sequence_prefix varchar,
	sequence_number integer,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	payment_state_before_switch varchar,
	edi_state varchar,
	duplicated_vendor_ref varchar,
	extract_state varchar not null,
	extract_status_code integer,
	extract_remote_id integer,
	transfer_model_id integer,
	tax_closing_end_date date,
	tax_report_control_error boolean,
	asset_id integer
		constraint account_move_asset_id_fkey
			references account_asset
				on delete cascade,
	asset_remaining_value numeric,
	asset_depreciated_value numeric,
	asset_manually_modified boolean,
	asset_value_change boolean,
	team_id integer
		constraint account_move_team_id_fkey
			references crm_team
				on delete set null,
	partner_shipping_id integer,
	campaign_id integer,
	source_id integer,
	medium_id integer,
	stock_move_id integer,
	location_id integer,
	release_to_pay varchar,
	release_to_pay_manual varchar,
	force_release_to_pay boolean
);

comment on table account_move is 'Journal Entry';

comment on column account_move.name is 'Number';

comment on column account_move.date is 'Date';

comment on column account_move.ref is 'Reference';

comment on column account_move.narration is 'Terms and Conditions';

comment on column account_move.state is 'Status';

comment on column account_move.posted_before is 'Posted Before';

comment on column account_move.move_type is 'Type';

comment on column account_move.to_check is 'To Check';

comment on column account_move.journal_id is 'Journal';

comment on column account_move.company_id is 'Company';

comment on column account_move.currency_id is 'Currency';

comment on column account_move.partner_id is 'Partner';

comment on column account_move.commercial_partner_id is 'Commercial Entity';

comment on column account_move.is_move_sent is 'Is Move Sent';

comment on column account_move.partner_bank_id is 'Recipient Bank';

comment on column account_move.payment_reference is 'Payment Reference';

comment on column account_move.payment_id is 'Payment';

comment on column account_move.statement_line_id is 'Statement Line';

comment on column account_move.amount_untaxed is 'Untaxed Amount';

comment on column account_move.amount_tax is 'Tax';

comment on column account_move.amount_total is 'Total';

comment on column account_move.amount_residual is 'Amount Due';

comment on column account_move.amount_untaxed_signed is 'Untaxed Amount Signed';

comment on column account_move.amount_tax_signed is 'Tax Signed';

comment on column account_move.amount_total_signed is 'Total Signed';

comment on column account_move.amount_residual_signed is 'Amount Due Signed';

comment on column account_move.payment_state is 'Payment Status';

comment on column account_move.tax_cash_basis_rec_id is 'Tax Cash Basis Entry of';

comment on column account_move.tax_cash_basis_move_id is 'Origin Tax Cash Basis Entry';

comment on column account_move.auto_post is 'Post Automatically';

comment on column account_move.reversed_entry_id is 'Reversal of';

comment on column account_move.fiscal_position_id is 'Fiscal Position';

comment on column account_move.invoice_user_id is 'Salesperson';

comment on column account_move.invoice_date is 'Invoice/Bill Date';

comment on column account_move.invoice_date_due is 'Due Date';

comment on column account_move.invoice_origin is 'Origin';

comment on column account_move.invoice_payment_term_id is 'Payment Terms';

comment on column account_move.invoice_incoterm_id is 'Incoterm';

comment on column account_move.qr_code_method is 'Payment QR-code';

comment on column account_move.invoice_source_email is 'Source Email';

comment on column account_move.invoice_partner_display_name is 'Invoice Partner Display Name';

comment on column account_move.invoice_cash_rounding_id is 'Cash Rounding Method';

comment on column account_move.secure_sequence_number is 'Inalteralbility No Gap Sequence #';

comment on column account_move.inalterable_hash is 'Inalterability Hash';

comment on column account_move.access_token is 'Security Token';

comment on column account_move.message_main_attachment_id is 'Main Attachment';

comment on column account_move.sequence_prefix is 'Sequence Prefix';

comment on column account_move.sequence_number is 'Sequence Number';

comment on column account_move.create_uid is 'Created by';

comment on column account_move.create_date is 'Created on';

comment on column account_move.write_uid is 'Last Updated by';

comment on column account_move.write_date is 'Last Updated on';

comment on column account_move.payment_state_before_switch is 'Payment State Before Switch';

comment on column account_move.edi_state is 'Electronic invoicing';

comment on column account_move.duplicated_vendor_ref is 'Duplicated vendor reference';

comment on column account_move.extract_state is 'Extract state';

comment on column account_move.extract_status_code is 'Status code';

comment on column account_move.extract_remote_id is 'Id of the request to IAP-OCR';

comment on column account_move.transfer_model_id is 'Originating Model';

comment on column account_move.tax_closing_end_date is 'Tax Closing End Date';

comment on column account_move.tax_report_control_error is 'Tax Report Control Error';

comment on column account_move.asset_id is 'Asset';

comment on column account_move.asset_remaining_value is 'Depreciable Value';

comment on column account_move.asset_depreciated_value is 'Cumulative Depreciation';

comment on column account_move.asset_manually_modified is 'Asset Manually Modified';

comment on column account_move.asset_value_change is 'Asset Value Change';

comment on column account_move.team_id is 'Sales Team';

comment on column account_move.partner_shipping_id is 'Delivery Address';

comment on column account_move.campaign_id is 'Campaign';

comment on column account_move.source_id is 'Source';

comment on column account_move.medium_id is 'Medium';

comment on column account_move.stock_move_id is 'Stock Move';

comment on column account_move.location_id is 'Shipping agency';

comment on column account_move.release_to_pay is 'Release To Pay';

comment on column account_move.release_to_pay_manual is 'Should Be Paid';

comment on column account_move.force_release_to_pay is 'Force Status';

alter table account_move owner to postgres;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_move_id_fkey
		foreign key (move_id) references account_move
			on delete cascade;

create index account_move_asset_id_index
	on account_move (asset_id);

create index account_move_date_index
	on account_move (date);

create index account_move_invoice_date_due_index
	on account_move (invoice_date_due);

create index account_move_invoice_date_index
	on account_move (invoice_date);

create index account_move_message_main_attachment_id_index
	on account_move (message_main_attachment_id);

create index account_move_move_type_index
	on account_move (move_type);

create index account_move_name_index
	on account_move (name);

create index account_move_payment_id_index
	on account_move (payment_id);

create index account_move_payment_reference_index
	on account_move (payment_reference);

create index account_move_sequence_index
	on account_move (journal_id asc, sequence_prefix desc, sequence_number desc, name asc);

create index account_move_sequence_index2
	on account_move (journal_id asc, id desc, sequence_prefix asc);

create index account_move_stock_move_id_index
	on account_move (stock_move_id);

create table cesa_location
(
	id integer default nextval('cesa_location_id_seq'::regclass) not null
		constraint cesa_location_pkey
			primary key,
	code varchar,
	name varchar,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	zone_id integer,
	move_id integer
		constraint cesa_location_move_id_fkey
			references account_move
				on delete set null
);

comment on table cesa_location is 'cesa.location';

comment on column cesa_location.code is 'Code';

comment on column cesa_location.name is 'Location';

comment on column cesa_location.create_uid is 'Created by';

comment on column cesa_location.create_date is 'Created on';

comment on column cesa_location.write_uid is 'Last Updated by';

comment on column cesa_location.write_date is 'Last Updated on';

comment on column cesa_location.zone_id is 'ID Zone';

comment on column cesa_location.move_id is 'Move';

alter table cesa_location owner to postgres;

alter table account_move
	add constraint account_move_location_id_fkey
		foreign key (location_id) references cesa_location
			on delete set null;

create table res_country_state
(
	id integer default nextval('res_country_state_id_seq'::regclass) not null
		constraint res_country_state_pkey
			primary key,
	country_id integer not null
		constraint res_country_state_country_id_fkey
			references res_country
				on delete restrict,
	name varchar not null,
	code varchar not null,
	create_uid integer,
	create_date timestamp,
	write_uid integer,
	write_date timestamp,
	constraint res_country_state_name_code_uniq
		unique (country_id, code)
);

comment on table res_country_state is 'Country state';

comment on column res_country_state.country_id is 'Country';

comment on column res_country_state.name is 'State Name';

comment on column res_country_state.code is 'State Code';

comment on column res_country_state.create_uid is 'Created by';

comment on column res_country_state.create_date is 'Created on';

comment on column res_country_state.write_uid is 'Last Updated by';

comment on column res_country_state.write_date is 'Last Updated on';

alter table res_country_state owner to postgres;

create table account_fiscal_position_res_country_state_rel
(
	account_fiscal_position_id integer not null
		constraint account_fiscal_position_res_cou_account_fiscal_position_id_fkey
			references account_fiscal_position
				on delete cascade,
	res_country_state_id integer not null
		constraint account_fiscal_position_res_country_s_res_country_state_id_fkey
			references res_country_state
				on delete cascade,
	constraint account_fiscal_position_res_country_state_rel_pkey
		primary key (account_fiscal_position_id, res_country_state_id)
);

comment on table account_fiscal_position_res_country_state_rel is 'RELATION BETWEEN account_fiscal_position AND res_country_state';

alter table account_fiscal_position_res_country_state_rel owner to postgres;

create index account_fiscal_position_res_c_res_country_state_id_account__idx
	on account_fiscal_position_res_country_state_rel (res_country_state_id, account_fiscal_position_id);

create table res_partner
(
	id integer default nextval('res_partner_id_seq'::regclass) not null
		constraint res_partner_pkey
			primary key,
	name varchar,
	company_id integer,
	create_date timestamp,
	display_name varchar,
	date date,
	title integer,
	parent_id integer
		constraint res_partner_parent_id_fkey
			references res_partner
				on delete set null,
	ref varchar,
	lang varchar,
	tz varchar,
	user_id integer,
	vat varchar,
	website varchar,
	comment text,
	credit_limit double precision,
	active boolean,
	employee boolean,
	function varchar,
	type varchar,
	street varchar,
	street2 varchar,
	zip varchar,
	city varchar,
	state_id integer
		constraint res_partner_state_id_fkey
			references res_country_state
				on delete restrict,
	country_id integer
		constraint res_partner_country_id_fkey
			references res_country
				on delete restrict,
	partner_latitude numeric,
	partner_longitude numeric,
	email varchar,
	phone varchar,
	mobile varchar,
	is_company boolean,
	industry_id integer,
	color integer,
	partner_share boolean,
	commercial_partner_id integer
		constraint res_partner_commercial_partner_id_fkey
			references res_partner
				on delete set null,
	commercial_company_name varchar,
	company_name varchar,
	create_uid integer,
	write_uid integer,
	write_date timestamp,
	message_main_attachment_id integer
		constraint res_partner_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	email_normalized varchar,
	message_bounce integer,
	contact_address_complete varchar,
	signup_token varchar,
	signup_type varchar,
	signup_expiration timestamp,
	ocn_token varchar,
	partner_gid integer,
	additional_info varchar,
	phone_sanitized varchar,
	debit_limit numeric,
	last_time_entries_checked timestamp,
	invoice_warn varchar,
	invoice_warn_msg text,
	supplier_rank integer,
	customer_rank integer,
	online_partner_vendor_name varchar,
	online_partner_bank_account varchar,
	online_partner_information varchar,
	team_id integer
		constraint res_partner_team_id_fkey
			references crm_team
				on delete set null,
	sale_warn varchar,
	sale_warn_msg text,
	picking_warn varchar,
	picking_warn_msg text,
	purchase_warn varchar,
	purchase_warn_msg text,
	state varchar,
	over_credit boolean,
	payment_type varchar not null,
	legal_form varchar,
	rc varchar,
	nif varchar,
	stat varchar,
	capital varchar,
	discount_id integer
		constraint res_partner_discount_id_fkey
			references discount
				on delete set null,
	location_id integer
		constraint res_partner_location_id_fkey
			references cesa_location
				on delete set null,
	facturation_delay integer
);

comment on column res_partner.display_name is 'Display Name';

comment on column res_partner.date is 'Date';

comment on column res_partner.title is 'Title';

comment on column res_partner.parent_id is 'Related Company';

comment on column res_partner.ref is 'Reference';

comment on column res_partner.lang is 'Language';

comment on column res_partner.tz is 'Timezone';

comment on column res_partner.user_id is 'Salesperson';

comment on column res_partner.vat is 'Tax ID';

comment on column res_partner.website is 'Website Link';

comment on column res_partner.comment is 'Notes';

comment on column res_partner.credit_limit is 'Credit Limit';

comment on column res_partner.active is 'Active';

comment on column res_partner.employee is 'Employee';

comment on column res_partner.function is 'Job Position';

comment on column res_partner.type is 'Address Type';

comment on column res_partner.street is 'Street';

comment on column res_partner.street2 is 'Street2';

comment on column res_partner.zip is 'Zip';

comment on column res_partner.city is 'City';

comment on column res_partner.state_id is 'State';

comment on column res_partner.country_id is 'Country';

comment on column res_partner.partner_latitude is 'Geo Latitude';

comment on column res_partner.partner_longitude is 'Geo Longitude';

comment on column res_partner.email is 'Email';

comment on column res_partner.phone is 'Phone';

comment on column res_partner.mobile is 'Mobile';

comment on column res_partner.is_company is 'Is a Company';

comment on column res_partner.industry_id is 'Industry';

comment on column res_partner.color is 'Color Index';

comment on column res_partner.partner_share is 'Share Partner';

comment on column res_partner.commercial_partner_id is 'Commercial Entity';

comment on column res_partner.commercial_company_name is 'Company Name Entity';

comment on column res_partner.company_name is 'Company Name';

comment on column res_partner.create_uid is 'Created by';

comment on column res_partner.write_uid is 'Last Updated by';

comment on column res_partner.write_date is 'Last Updated on';

comment on column res_partner.message_main_attachment_id is 'Main Attachment';

comment on column res_partner.email_normalized is 'Normalized Email';

comment on column res_partner.message_bounce is 'Bounce';

comment on column res_partner.contact_address_complete is 'Contact Address Complete';

comment on column res_partner.signup_token is 'Signup Token';

comment on column res_partner.signup_type is 'Signup Token Type';

comment on column res_partner.signup_expiration is 'Signup Expiration';

comment on column res_partner.ocn_token is 'OCN Token';

comment on column res_partner.partner_gid is 'Company database ID';

comment on column res_partner.additional_info is 'Additional info';

comment on column res_partner.phone_sanitized is 'Sanitized Number';

comment on column res_partner.debit_limit is 'Payable Limit';

comment on column res_partner.last_time_entries_checked is 'Latest Invoices & Payments Matching Date';

comment on column res_partner.invoice_warn is 'Invoice';

comment on column res_partner.invoice_warn_msg is 'Message for Invoice';

comment on column res_partner.supplier_rank is 'Supplier Rank';

comment on column res_partner.customer_rank is 'Customer Rank';

comment on column res_partner.online_partner_vendor_name is 'Online Partner Vendor Name';

comment on column res_partner.online_partner_bank_account is 'Online Partner Bank Account';

comment on column res_partner.online_partner_information is 'Online Partner Information';

comment on column res_partner.team_id is 'Sales Team';

comment on column res_partner.sale_warn is 'Sales Warnings';

comment on column res_partner.sale_warn_msg is 'Message for Sales Order';

comment on column res_partner.picking_warn is 'Stock Picking';

comment on column res_partner.picking_warn_msg is 'Message for Stock Picking';

comment on column res_partner.purchase_warn is 'Purchase Order';

comment on column res_partner.purchase_warn_msg is 'Message for Purchase Order';

comment on column res_partner.state is 'States';

comment on column res_partner.over_credit is 'Allow Over Credit?';

comment on column res_partner.payment_type is 'Payment type';

comment on column res_partner.legal_form is 'Legal form';

comment on column res_partner.rc is 'RC';

comment on column res_partner.nif is 'NIF';

comment on column res_partner.stat is 'Stat';

comment on column res_partner.capital is 'Capital';

comment on column res_partner.discount_id is 'Remise en %';

comment on column res_partner.location_id is 'Agence de rattachement';

comment on column res_partner.facturation_delay is 'conditionnement de facturation';

alter table res_partner owner to postgres;

alter table account_analytic_account
	add constraint account_analytic_account_partner_id_fkey
		foreign key (partner_id) references res_partner
			on delete set null;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_partner_id_fkey
		foreign key (partner_id) references res_partner
			on delete restrict;

alter table account_move
	add constraint account_move_commercial_partner_id_fkey
		foreign key (commercial_partner_id) references res_partner
			on delete set null;

alter table account_move
	add constraint account_move_partner_id_fkey
		foreign key (partner_id) references res_partner
			on delete set null;

alter table account_move
	add constraint account_move_partner_shipping_id_fkey
		foreign key (partner_shipping_id) references res_partner
			on delete set null;

create index res_partner_commercial_partner_id_index
	on res_partner (commercial_partner_id);

create index res_partner_company_id_index
	on res_partner (company_id);

create index res_partner_date_index
	on res_partner (date);

create index res_partner_display_name_index
	on res_partner (display_name);

create index res_partner_message_main_attachment_id_index
	on res_partner (message_main_attachment_id);

create index res_partner_name_index
	on res_partner (name);

create index res_partner_parent_id_index
	on res_partner (parent_id);

create index res_partner_ref_index
	on res_partner (ref);

create index res_partner_vat_index
	on res_partner (vat);

create table res_users
(
	id integer default nextval('res_users_id_seq'::regclass) not null
		constraint res_users_pkey
			primary key,
	active boolean default true,
	login varchar not null
		constraint res_users_login_key
			unique,
	password varchar,
	company_id integer not null,
	partner_id integer not null
		constraint res_users_partner_id_fkey
			references res_partner
				on delete restrict,
	create_date timestamp,
	signature text,
	action_id integer,
	share boolean,
	create_uid integer
		constraint res_users_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint res_users_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	totp_secret varchar,
	notification_type varchar not null,
	odoobot_state varchar,
	odoobot_failed boolean,
	sale_team_id integer
		constraint res_users_sale_team_id_fkey
			references crm_team
				on delete set null
);

comment on column res_users.signature is 'Email Signature';

comment on column res_users.action_id is 'Home Action';

comment on column res_users.share is 'Share User';

comment on column res_users.create_uid is 'Created by';

comment on column res_users.write_uid is 'Last Updated by';

comment on column res_users.write_date is 'Last Updated on';

comment on column res_users.totp_secret is 'Totp Secret';

comment on column res_users.notification_type is 'Notification';

comment on column res_users.odoobot_state is 'OdooBot Status';

comment on column res_users.odoobot_failed is 'Odoobot Failed';

comment on column res_users.sale_team_id is 'User''s Sales Team';

alter table res_users owner to postgres;

create table access_token
(
	id integer default nextval('access_token_id_seq'::regclass) not null
		constraint access_token_pkey
			primary key,
	token varchar,
	user_id integer
		constraint access_token_user_id_fkey
			references res_users
				on delete set null,
	create_uid integer
		constraint access_token_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint access_token_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table access_token is 'access.token';

comment on column access_token.token is 'Token';

comment on column access_token.user_id is 'User';

comment on column access_token.create_uid is 'Created by';

comment on column access_token.create_date is 'Created on';

comment on column access_token.write_uid is 'Last Updated by';

comment on column access_token.write_date is 'Last Updated on';

alter table access_token owner to postgres;

alter table account_account
	add constraint account_account_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_account
	add constraint account_account_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_account_tag
(
	id integer default nextval('account_account_tag_id_seq'::regclass) not null
		constraint account_account_tag_pkey
			primary key,
	name varchar not null,
	applicability varchar not null,
	color integer,
	active boolean,
	tax_negate boolean,
	country_id integer
		constraint account_account_tag_country_id_fkey
			references res_country
				on delete set null,
	create_uid integer
		constraint account_account_tag_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_account_tag_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_account_tag is 'Account Tag';

comment on column account_account_tag.name is 'Tag Name';

comment on column account_account_tag.applicability is 'Applicability';

comment on column account_account_tag.color is 'Color Index';

comment on column account_account_tag.active is 'Active';

comment on column account_account_tag.tax_negate is 'Negate Tax Balance';

comment on column account_account_tag.country_id is 'Country';

comment on column account_account_tag.create_uid is 'Created by';

comment on column account_account_tag.create_date is 'Created on';

comment on column account_account_tag.write_uid is 'Last Updated by';

comment on column account_account_tag.write_date is 'Last Updated on';

alter table account_account_tag owner to postgres;

create table account_account_account_tag
(
	account_account_id integer not null
		constraint account_account_account_tag_account_account_id_fkey
			references account_account
				on delete cascade,
	account_account_tag_id integer not null
		constraint account_account_account_tag_account_account_tag_id_fkey
			references account_account_tag
				on delete cascade,
	constraint account_account_account_tag_pkey
		primary key (account_account_id, account_account_tag_id)
);

comment on table account_account_account_tag is 'RELATION BETWEEN account_account AND account_account_tag';

alter table account_account_account_tag owner to postgres;

create index account_account_account_tag_account_account_tag_id_account__idx
	on account_account_account_tag (account_account_tag_id, account_account_id);

create table account_account_type
(
	id integer default nextval('account_account_type_id_seq'::regclass) not null
		constraint account_account_type_pkey
			primary key,
	name varchar not null,
	include_initial_balance boolean,
	type varchar not null,
	internal_group varchar not null,
	note text,
	create_uid integer
		constraint account_account_type_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_account_type_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_account_type is 'Account Type';

comment on column account_account_type.name is 'Account Type';

comment on column account_account_type.include_initial_balance is 'Bring Accounts Balance Forward';

comment on column account_account_type.type is 'Type';

comment on column account_account_type.internal_group is 'Internal Group';

comment on column account_account_type.note is 'Description';

comment on column account_account_type.create_uid is 'Created by';

comment on column account_account_type.create_date is 'Created on';

comment on column account_account_type.write_uid is 'Last Updated by';

comment on column account_account_type.write_date is 'Last Updated on';

alter table account_account_type owner to postgres;

alter table account_account
	add constraint account_account_user_type_id_fkey
		foreign key (user_type_id) references account_account_type
			on delete restrict;

alter table account_analytic_account
	add constraint account_analytic_account_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_analytic_account
	add constraint account_analytic_account_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_analytic_group
(
	id integer default nextval('account_analytic_group_id_seq'::regclass) not null
		constraint account_analytic_group_pkey
			primary key,
	name varchar not null,
	description text,
	parent_id integer
		constraint account_analytic_group_parent_id_fkey
			references account_analytic_group
				on delete cascade,
	parent_path varchar,
	complete_name varchar,
	company_id integer,
	create_uid integer
		constraint account_analytic_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_analytic_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_analytic_group is 'Analytic Categories';

comment on column account_analytic_group.name is 'Name';

comment on column account_analytic_group.description is 'Description';

comment on column account_analytic_group.parent_id is 'Parent';

comment on column account_analytic_group.parent_path is 'Parent Path';

comment on column account_analytic_group.complete_name is 'Complete Name';

comment on column account_analytic_group.company_id is 'Company';

comment on column account_analytic_group.create_uid is 'Created by';

comment on column account_analytic_group.create_date is 'Created on';

comment on column account_analytic_group.write_uid is 'Last Updated by';

comment on column account_analytic_group.write_date is 'Last Updated on';

alter table account_analytic_group owner to postgres;

alter table account_analytic_account
	add constraint account_analytic_account_group_id_fkey
		foreign key (group_id) references account_analytic_group
			on delete set null;

create index account_analytic_group_parent_path_index
	on account_analytic_group (parent_path);

alter table account_asset
	add constraint account_asset_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_asset
	add constraint account_asset_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_asset_pause
(
	id integer default nextval('account_asset_pause_id_seq'::regclass) not null
		constraint account_asset_pause_pkey
			primary key,
	date date not null,
	asset_id integer not null
		constraint account_asset_pause_asset_id_fkey
			references account_asset
				on delete cascade,
	create_uid integer
		constraint account_asset_pause_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_asset_pause_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_asset_pause is 'Pause Asset';

comment on column account_asset_pause.date is 'Pause date';

comment on column account_asset_pause.asset_id is 'Asset';

comment on column account_asset_pause.create_uid is 'Created by';

comment on column account_asset_pause.create_date is 'Created on';

comment on column account_asset_pause.write_uid is 'Last Updated by';

comment on column account_asset_pause.write_date is 'Last Updated on';

alter table account_asset_pause owner to postgres;

alter table account_bank_statement
	add constraint account_bank_statement_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_bank_statement
	add constraint account_bank_statement_user_id_fkey
		foreign key (user_id) references res_users
			on delete set null;

alter table account_bank_statement
	add constraint account_bank_statement_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_bank_statement_cashbox
(
	id integer default nextval('account_bank_statement_cashbox_id_seq'::regclass) not null
		constraint account_bank_statement_cashbox_pkey
			primary key,
	create_uid integer
		constraint account_bank_statement_cashbox_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_bank_statement_cashbox_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_bank_statement_cashbox is 'Bank Statement Cashbox';

comment on column account_bank_statement_cashbox.create_uid is 'Created by';

comment on column account_bank_statement_cashbox.create_date is 'Created on';

comment on column account_bank_statement_cashbox.write_uid is 'Last Updated by';

comment on column account_bank_statement_cashbox.write_date is 'Last Updated on';

alter table account_bank_statement_cashbox owner to postgres;

alter table account_bank_statement
	add constraint account_bank_statement_cashbox_end_id_fkey
		foreign key (cashbox_end_id) references account_bank_statement_cashbox
			on delete set null;

alter table account_bank_statement
	add constraint account_bank_statement_cashbox_start_id_fkey
		foreign key (cashbox_start_id) references account_bank_statement_cashbox
			on delete set null;

create table account_bank_statement_closebalance
(
	id integer default nextval('account_bank_statement_closebalance_id_seq'::regclass) not null
		constraint account_bank_statement_closebalance_pkey
			primary key,
	create_uid integer
		constraint account_bank_statement_closebalance_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_bank_statement_closebalance_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_bank_statement_closebalance is 'Bank Statement Closing Balance';

comment on column account_bank_statement_closebalance.create_uid is 'Created by';

comment on column account_bank_statement_closebalance.create_date is 'Created on';

comment on column account_bank_statement_closebalance.write_uid is 'Last Updated by';

comment on column account_bank_statement_closebalance.write_date is 'Last Updated on';

alter table account_bank_statement_closebalance owner to postgres;

create table account_bank_statement_import
(
	id integer default nextval('account_bank_statement_import_id_seq'::regclass) not null
		constraint account_bank_statement_import_pkey
			primary key,
	create_uid integer
		constraint account_bank_statement_import_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_bank_statement_import_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_bank_statement_import is 'Import Bank Statement';

comment on column account_bank_statement_import.create_uid is 'Created by';

comment on column account_bank_statement_import.create_date is 'Created on';

comment on column account_bank_statement_import.write_uid is 'Last Updated by';

comment on column account_bank_statement_import.write_date is 'Last Updated on';

alter table account_bank_statement_import owner to postgres;

create table account_bank_statement_import_ir_attachment_rel
(
	account_bank_statement_import_id integer not null
		constraint account_bank_statement_import_account_bank_statement_impor_fkey
			references account_bank_statement_import
				on delete cascade,
	ir_attachment_id integer not null
		constraint account_bank_statement_import_ir_attachme_ir_attachment_id_fkey
			references ir_attachment
				on delete cascade,
	constraint account_bank_statement_import_ir_attachment_rel_pkey
		primary key (account_bank_statement_import_id, ir_attachment_id)
);

comment on table account_bank_statement_import_ir_attachment_rel is 'RELATION BETWEEN account_bank_statement_import AND ir_attachment';

alter table account_bank_statement_import_ir_attachment_rel owner to postgres;

create index account_bank_statement_import_ir_attachment_id_account_bank_idx
	on account_bank_statement_import_ir_attachment_rel (ir_attachment_id, account_bank_statement_import_id);

create table account_bank_statement_import_journal_creation
(
	id integer default nextval('account_bank_statement_import_journal_creation_id_seq'::regclass) not null
		constraint account_bank_statement_import_journal_creation_pkey
			primary key,
	journal_id integer not null
		constraint account_bank_statement_import_journal_creation_journal_id_fkey
			references account_journal
				on delete cascade,
	create_uid integer
		constraint account_bank_statement_import_journal_creation_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_bank_statement_import_journal_creation_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_bank_statement_import_journal_creation is 'Journal Creation on Bank Statement Import';

comment on column account_bank_statement_import_journal_creation.journal_id is 'Journal';

comment on column account_bank_statement_import_journal_creation.create_uid is 'Created by';

comment on column account_bank_statement_import_journal_creation.create_date is 'Created on';

comment on column account_bank_statement_import_journal_creation.write_uid is 'Last Updated by';

comment on column account_bank_statement_import_journal_creation.write_date is 'Last Updated on';

alter table account_bank_statement_import_journal_creation owner to postgres;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

alter table account_cash_rounding
	add constraint account_cash_rounding_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_cash_rounding
	add constraint account_cash_rounding_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_cashbox_line
(
	id integer default nextval('account_cashbox_line_id_seq'::regclass) not null
		constraint account_cashbox_line_pkey
			primary key,
	coin_value numeric not null,
	number integer,
	cashbox_id integer
		constraint account_cashbox_line_cashbox_id_fkey
			references account_bank_statement_cashbox
				on delete set null,
	create_uid integer
		constraint account_cashbox_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_cashbox_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_cashbox_line is 'CashBox Line';

comment on column account_cashbox_line.coin_value is 'Coin/Bill Value';

comment on column account_cashbox_line.number is '#Coins/Bills';

comment on column account_cashbox_line.cashbox_id is 'Cashbox';

comment on column account_cashbox_line.create_uid is 'Created by';

comment on column account_cashbox_line.create_date is 'Created on';

comment on column account_cashbox_line.write_uid is 'Last Updated by';

comment on column account_cashbox_line.write_date is 'Last Updated on';

alter table account_cashbox_line owner to postgres;

create table account_change_lock_date
(
	id integer default nextval('account_change_lock_date_id_seq'::regclass) not null
		constraint account_change_lock_date_pkey
			primary key,
	period_lock_date date,
	fiscalyear_lock_date date,
	tax_lock_date date,
	create_uid integer
		constraint account_change_lock_date_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_change_lock_date_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_change_lock_date is 'Change Lock Date';

comment on column account_change_lock_date.period_lock_date is 'Lock Date for Non-Advisers';

comment on column account_change_lock_date.fiscalyear_lock_date is 'Lock Date for All Users';

comment on column account_change_lock_date.tax_lock_date is 'Tax Lock Date';

comment on column account_change_lock_date.create_uid is 'Created by';

comment on column account_change_lock_date.create_date is 'Created on';

comment on column account_change_lock_date.write_uid is 'Last Updated by';

comment on column account_change_lock_date.write_date is 'Last Updated on';

alter table account_change_lock_date owner to postgres;

create table account_edi_format
(
	id integer default nextval('account_edi_format_id_seq'::regclass) not null
		constraint account_edi_format_pkey
			primary key,
	name varchar,
	code varchar not null
		constraint account_edi_format_unique_code
			unique,
	create_uid integer
		constraint account_edi_format_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_edi_format_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_edi_format is 'EDI format';

comment on column account_edi_format.name is 'Name';

comment on column account_edi_format.code is 'Code';

comment on column account_edi_format.create_uid is 'Created by';

comment on column account_edi_format.create_date is 'Created on';

comment on column account_edi_format.write_uid is 'Last Updated by';

comment on column account_edi_format.write_date is 'Last Updated on';

alter table account_edi_format owner to postgres;

create table account_edi_document
(
	id integer default nextval('account_edi_document_id_seq'::regclass) not null
		constraint account_edi_document_pkey
			primary key,
	move_id integer not null
		constraint account_edi_document_move_id_fkey
			references account_move
				on delete cascade,
	edi_format_id integer not null
		constraint account_edi_document_edi_format_id_fkey
			references account_edi_format
				on delete restrict,
	attachment_id integer
		constraint account_edi_document_attachment_id_fkey
			references ir_attachment
				on delete set null,
	state varchar,
	error text,
	create_uid integer
		constraint account_edi_document_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_edi_document_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_edi_document_unique_edi_document_by_move_by_format
		unique (edi_format_id, move_id)
);

comment on table account_edi_document is 'Electronic Document for an account.move';

comment on column account_edi_document.move_id is 'Move';

comment on column account_edi_document.edi_format_id is 'Edi Format';

comment on column account_edi_document.attachment_id is 'Attachment';

comment on column account_edi_document.state is 'State';

comment on column account_edi_document.error is 'Error';

comment on column account_edi_document.create_uid is 'Created by';

comment on column account_edi_document.create_date is 'Created on';

comment on column account_edi_document.write_uid is 'Last Updated by';

comment on column account_edi_document.write_date is 'Last Updated on';

alter table account_edi_document owner to postgres;

create table account_edi_format_account_journal_rel
(
	account_journal_id integer not null
		constraint account_edi_format_account_journal_rel_account_journal_id_fkey
			references account_journal
				on delete cascade,
	account_edi_format_id integer not null
		constraint account_edi_format_account_journal_r_account_edi_format_id_fkey
			references account_edi_format
				on delete cascade,
	constraint account_edi_format_account_journal_rel_pkey
		primary key (account_journal_id, account_edi_format_id)
);

comment on table account_edi_format_account_journal_rel is 'RELATION BETWEEN account_journal AND account_edi_format';

alter table account_edi_format_account_journal_rel owner to postgres;

create index account_edi_format_account_jo_account_edi_format_id_account_idx
	on account_edi_format_account_journal_rel (account_edi_format_id, account_journal_id);

alter table account_fiscal_position
	add constraint account_fiscal_position_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_fiscal_position
	add constraint account_fiscal_position_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_fiscal_position_account
(
	id integer default nextval('account_fiscal_position_account_id_seq'::regclass) not null
		constraint account_fiscal_position_account_pkey
			primary key,
	position_id integer not null
		constraint account_fiscal_position_account_position_id_fkey
			references account_fiscal_position
				on delete cascade,
	company_id integer,
	account_src_id integer not null
		constraint account_fiscal_position_account_account_src_id_fkey
			references account_account
				on delete restrict,
	account_dest_id integer not null
		constraint account_fiscal_position_account_account_dest_id_fkey
			references account_account
				on delete restrict,
	create_uid integer
		constraint account_fiscal_position_account_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_position_account_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_fiscal_position_account_account_src_dest_uniq
		unique (position_id, account_src_id, account_dest_id)
);

comment on table account_fiscal_position_account is 'Accounts Mapping of Fiscal Position';

comment on column account_fiscal_position_account.position_id is 'Fiscal Position';

comment on column account_fiscal_position_account.company_id is 'Company';

comment on column account_fiscal_position_account.account_src_id is 'Account on Product';

comment on column account_fiscal_position_account.account_dest_id is 'Account to Use Instead';

comment on column account_fiscal_position_account.create_uid is 'Created by';

comment on column account_fiscal_position_account.create_date is 'Created on';

comment on column account_fiscal_position_account.write_uid is 'Last Updated by';

comment on column account_fiscal_position_account.write_date is 'Last Updated on';

alter table account_fiscal_position_account owner to postgres;

create table account_full_reconcile
(
	id integer default nextval('account_full_reconcile_id_seq'::regclass) not null
		constraint account_full_reconcile_pkey
			primary key,
	name varchar not null,
	exchange_move_id integer
		constraint account_full_reconcile_exchange_move_id_fkey
			references account_move
				on delete set null,
	create_uid integer
		constraint account_full_reconcile_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_full_reconcile_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_full_reconcile is 'Full Reconcile';

comment on column account_full_reconcile.name is 'Number';

comment on column account_full_reconcile.exchange_move_id is 'Exchange Move';

comment on column account_full_reconcile.create_uid is 'Created by';

comment on column account_full_reconcile.create_date is 'Created on';

comment on column account_full_reconcile.write_uid is 'Last Updated by';

comment on column account_full_reconcile.write_date is 'Last Updated on';

alter table account_full_reconcile owner to postgres;

alter table account_incoterms
	add constraint account_incoterms_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_incoterms
	add constraint account_incoterms_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_invoice_extract_words
(
	id integer default nextval('account_invoice_extract_words_id_seq'::regclass) not null
		constraint account_invoice_extract_words_pkey
			primary key,
	invoice_id integer
		constraint account_invoice_extract_words_invoice_id_fkey
			references account_move
				on delete set null,
	field varchar,
	selected_status integer,
	user_selected boolean,
	word_text varchar,
	word_page integer,
	"word_box_midX" double precision,
	"word_box_midY" double precision,
	word_box_width double precision,
	word_box_height double precision,
	word_box_angle double precision,
	create_uid integer
		constraint account_invoice_extract_words_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_invoice_extract_words_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_invoice_extract_words is 'Extracted words from invoice scan';

comment on column account_invoice_extract_words.invoice_id is 'Invoice';

comment on column account_invoice_extract_words.field is 'Field';

comment on column account_invoice_extract_words.selected_status is 'Invoice extract selected status.';

comment on column account_invoice_extract_words.user_selected is 'User Selected';

comment on column account_invoice_extract_words.word_text is 'Word Text';

comment on column account_invoice_extract_words.word_page is 'Word Page';

comment on column account_invoice_extract_words."word_box_midX" is 'Word Box Midx';

comment on column account_invoice_extract_words."word_box_midY" is 'Word Box Midy';

comment on column account_invoice_extract_words.word_box_width is 'Word Box Width';

comment on column account_invoice_extract_words.word_box_height is 'Word Box Height';

comment on column account_invoice_extract_words.word_box_angle is 'Word Box Angle';

comment on column account_invoice_extract_words.create_uid is 'Created by';

comment on column account_invoice_extract_words.create_date is 'Created on';

comment on column account_invoice_extract_words.write_uid is 'Last Updated by';

comment on column account_invoice_extract_words.write_date is 'Last Updated on';

alter table account_invoice_extract_words owner to postgres;

alter table account_journal
	add constraint account_journal_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_journal
	add constraint account_journal_sale_activity_user_id_fkey
		foreign key (sale_activity_user_id) references res_users
			on delete set null;

alter table account_journal
	add constraint account_journal_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_link_journal
(
	id integer default nextval('account_link_journal_id_seq'::regclass) not null
		constraint account_link_journal_pkey
			primary key,
	number_added integer,
	transactions text,
	sync_date date,
	create_uid integer
		constraint account_link_journal_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_link_journal_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_link_journal is 'Link list of bank accounts to journals';

comment on column account_link_journal.number_added is 'Number Added';

comment on column account_link_journal.transactions is 'Transactions';

comment on column account_link_journal.sync_date is 'Get transactions since';

comment on column account_link_journal.create_uid is 'Created by';

comment on column account_link_journal.create_date is 'Created on';

comment on column account_link_journal.write_uid is 'Last Updated by';

comment on column account_link_journal.write_date is 'Last Updated on';

alter table account_link_journal owner to postgres;

alter table account_move
	add constraint account_move_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table account_move
	add constraint account_move_invoice_user_id_fkey
		foreign key (invoice_user_id) references res_users
			on delete set null;

alter table account_move
	add constraint account_move_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table account_online_link
(
	id integer default nextval('account_online_link_id_seq'::regclass) not null
		constraint account_online_link_pkey
			primary key,
	last_refresh timestamp,
	state varchar not null,
	auto_sync boolean,
	company_id integer not null,
	name varchar,
	client_id varchar,
	refresh_token varchar,
	access_token varchar,
	provider_data varchar,
	message_main_attachment_id integer
		constraint account_online_link_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint account_online_link_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_link_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_online_link is 'Connection to an online banking institution';

comment on column account_online_link.last_refresh is 'Last Refresh';

comment on column account_online_link.state is 'State';

comment on column account_online_link.auto_sync is 'Automatic synchronization';

comment on column account_online_link.company_id is 'Company';

comment on column account_online_link.name is 'Name';

comment on column account_online_link.client_id is 'Client';

comment on column account_online_link.refresh_token is 'Refresh Token';

comment on column account_online_link.access_token is 'Access Token';

comment on column account_online_link.provider_data is 'Provider Data';

comment on column account_online_link.message_main_attachment_id is 'Main Attachment';

comment on column account_online_link.create_uid is 'Created by';

comment on column account_online_link.create_date is 'Created on';

comment on column account_online_link.write_uid is 'Last Updated by';

comment on column account_online_link.write_date is 'Last Updated on';

alter table account_online_link owner to postgres;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_online_link_id_fkey
		foreign key (online_link_id) references account_online_link
			on delete set null;

alter table account_journal
	add constraint account_journal_account_online_link_id_fkey
		foreign key (account_online_link_id) references account_online_link
			on delete set null;

create table account_online_account
(
	id integer default nextval('account_online_account_id_seq'::regclass) not null
		constraint account_online_account_pkey
			primary key,
	name varchar,
	online_identifier varchar,
	balance double precision,
	account_number varchar,
	account_data varchar,
	account_online_link_id integer
		constraint account_online_account_account_online_link_id_fkey
			references account_online_link
				on delete cascade,
	last_sync date,
	create_uid integer
		constraint account_online_account_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_account_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_online_account is 'representation of an online bank account';

comment on column account_online_account.name is 'Account Name';

comment on column account_online_account.online_identifier is 'Online Identifier';

comment on column account_online_account.balance is 'Balance';

comment on column account_online_account.account_number is 'Account Number';

comment on column account_online_account.account_data is 'Account Data';

comment on column account_online_account.account_online_link_id is 'Account Online Link';

comment on column account_online_account.last_sync is 'Last synchronization';

comment on column account_online_account.create_uid is 'Created by';

comment on column account_online_account.create_date is 'Created on';

comment on column account_online_account.write_uid is 'Last Updated by';

comment on column account_online_account.write_date is 'Last Updated on';

alter table account_online_account owner to postgres;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_online_account_id_fkey
		foreign key (online_account_id) references account_online_account
			on delete set null;

alter table account_journal
	add constraint account_journal_account_online_account_id_fkey
		foreign key (account_online_account_id) references account_online_account
			on delete set null;

create index account_online_link_message_main_attachment_id_index
	on account_online_link (message_main_attachment_id);

create table account_online_wizard
(
	id integer default nextval('account_online_wizard_id_seq'::regclass) not null
		constraint account_online_wizard_pkey
			primary key,
	number_added integer,
	transactions text,
	status varchar,
	method varchar,
	message varchar,
	sync_date date,
	hide_table boolean,
	create_uid integer
		constraint account_online_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_online_wizard is 'Wizard to link synchronized accounts to journal';

comment on column account_online_wizard.number_added is 'Number Added';

comment on column account_online_wizard.transactions is 'Transactions';

comment on column account_online_wizard.status is 'Status';

comment on column account_online_wizard.method is 'Method';

comment on column account_online_wizard.message is 'Message';

comment on column account_online_wizard.sync_date is 'Fetch transactions from';

comment on column account_online_wizard.hide_table is 'Hide Table';

comment on column account_online_wizard.create_uid is 'Created by';

comment on column account_online_wizard.create_date is 'Created on';

comment on column account_online_wizard.write_uid is 'Last Updated by';

comment on column account_online_wizard.write_date is 'Last Updated on';

alter table account_online_wizard owner to postgres;

create table account_payment_method
(
	id integer default nextval('account_payment_method_id_seq'::regclass) not null
		constraint account_payment_method_pkey
			primary key,
	name varchar not null,
	code varchar not null,
	payment_type varchar not null,
	sequence integer,
	create_uid integer
		constraint account_payment_method_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_payment_method_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_payment_method is 'Payment Methods';

comment on column account_payment_method.name is 'Name';

comment on column account_payment_method.code is 'Code';

comment on column account_payment_method.payment_type is 'Payment Type';

comment on column account_payment_method.sequence is 'Sequence';

comment on column account_payment_method.create_uid is 'Created by';

comment on column account_payment_method.create_date is 'Created on';

comment on column account_payment_method.write_uid is 'Last Updated by';

comment on column account_payment_method.write_date is 'Last Updated on';

alter table account_payment_method owner to postgres;

create table account_journal_inbound_payment_method_rel
(
	journal_id integer not null
		constraint account_journal_inbound_payment_method_rel_journal_id_fkey
			references account_journal
				on delete cascade,
	inbound_payment_method integer not null
		constraint account_journal_inbound_payment_met_inbound_payment_method_fkey
			references account_payment_method
				on delete cascade,
	constraint account_journal_inbound_payment_method_rel_pkey
		primary key (journal_id, inbound_payment_method)
);

comment on table account_journal_inbound_payment_method_rel is 'RELATION BETWEEN account_journal AND account_payment_method';

alter table account_journal_inbound_payment_method_rel owner to postgres;

create index account_journal_inbound_payme_inbound_payment_method_journa_idx
	on account_journal_inbound_payment_method_rel (inbound_payment_method, journal_id);

create table account_journal_outbound_payment_method_rel
(
	journal_id integer not null
		constraint account_journal_outbound_payment_method_rel_journal_id_fkey
			references account_journal
				on delete cascade,
	outbound_payment_method integer not null
		constraint account_journal_outbound_payment_m_outbound_payment_method_fkey
			references account_payment_method
				on delete cascade,
	constraint account_journal_outbound_payment_method_rel_pkey
		primary key (journal_id, outbound_payment_method)
);

comment on table account_journal_outbound_payment_method_rel is 'RELATION BETWEEN account_journal AND account_payment_method';

alter table account_journal_outbound_payment_method_rel owner to postgres;

create index account_journal_outbound_paym_outbound_payment_method_journ_idx
	on account_journal_outbound_payment_method_rel (outbound_payment_method, journal_id);

create table account_reconcile_model
(
	id integer default nextval('account_reconcile_model_id_seq'::regclass) not null
		constraint account_reconcile_model_pkey
			primary key,
	active boolean,
	name varchar not null,
	sequence integer not null,
	company_id integer not null,
	rule_type varchar not null,
	auto_reconcile boolean,
	to_check boolean,
	matching_order varchar not null,
	match_text_location_label boolean,
	match_text_location_note boolean,
	match_text_location_reference boolean,
	match_nature varchar not null,
	match_amount varchar,
	match_amount_min double precision,
	match_amount_max double precision,
	match_label varchar,
	match_label_param varchar,
	match_note varchar,
	match_note_param varchar,
	match_transaction_type varchar,
	match_transaction_type_param varchar,
	match_same_currency boolean,
	match_total_amount boolean,
	match_total_amount_param double precision,
	match_partner boolean,
	past_months_limit integer,
	decimal_separator varchar,
	create_uid integer
		constraint account_reconcile_model_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reconcile_model_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reconcile_model is 'Preset to create journal entries during a invoices and payments matching';

comment on column account_reconcile_model.active is 'Active';

comment on column account_reconcile_model.name is 'Name';

comment on column account_reconcile_model.sequence is 'Sequence';

comment on column account_reconcile_model.company_id is 'Company';

comment on column account_reconcile_model.rule_type is 'Type';

comment on column account_reconcile_model.auto_reconcile is 'Auto-validate';

comment on column account_reconcile_model.to_check is 'To Check';

comment on column account_reconcile_model.matching_order is 'Matching Order';

comment on column account_reconcile_model.match_text_location_label is 'Match Text Location Label';

comment on column account_reconcile_model.match_text_location_note is 'Match Text Location Note';

comment on column account_reconcile_model.match_text_location_reference is 'Match Text Location Reference';

comment on column account_reconcile_model.match_nature is 'Amount Nature';

comment on column account_reconcile_model.match_amount is 'Amount';

comment on column account_reconcile_model.match_amount_min is 'Amount Min Parameter';

comment on column account_reconcile_model.match_amount_max is 'Amount Max Parameter';

comment on column account_reconcile_model.match_label is 'Label';

comment on column account_reconcile_model.match_label_param is 'Label Parameter';

comment on column account_reconcile_model.match_note is 'Note';

comment on column account_reconcile_model.match_note_param is 'Note Parameter';

comment on column account_reconcile_model.match_transaction_type is 'Transaction Type';

comment on column account_reconcile_model.match_transaction_type_param is 'Transaction Type Parameter';

comment on column account_reconcile_model.match_same_currency is 'Same Currency Matching';

comment on column account_reconcile_model.match_total_amount is 'Amount Matching';

comment on column account_reconcile_model.match_total_amount_param is 'Amount Matching %';

comment on column account_reconcile_model.match_partner is 'Partner Is Set';

comment on column account_reconcile_model.past_months_limit is 'Past Months Limit';

comment on column account_reconcile_model.decimal_separator is 'Decimal Separator';

comment on column account_reconcile_model.create_uid is 'Created by';

comment on column account_reconcile_model.create_date is 'Created on';

comment on column account_reconcile_model.write_uid is 'Last Updated by';

comment on column account_reconcile_model.write_date is 'Last Updated on';

alter table account_reconcile_model owner to postgres;

create table account_journal_account_reconcile_model_rel
(
	account_reconcile_model_id integer not null
		constraint account_journal_account_reconci_account_reconcile_model_id_fkey
			references account_reconcile_model
				on delete cascade,
	account_journal_id integer not null
		constraint account_journal_account_reconcile_model_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_journal_account_reconcile_model_rel_pkey
		primary key (account_reconcile_model_id, account_journal_id)
);

comment on table account_journal_account_reconcile_model_rel is 'RELATION BETWEEN account_reconcile_model AND account_journal';

alter table account_journal_account_reconcile_model_rel owner to postgres;

create index account_journal_account_recon_account_journal_id_account_re_idx
	on account_journal_account_reconcile_model_rel (account_journal_id, account_reconcile_model_id);

create table account_reconcile_model_partner_mapping
(
	id integer default nextval('account_reconcile_model_partner_mapping_id_seq'::regclass) not null
		constraint account_reconcile_model_partner_mapping_pkey
			primary key,
	model_id integer not null
		constraint account_reconcile_model_partner_mapping_model_id_fkey
			references account_reconcile_model
				on delete cascade,
	partner_id integer not null
		constraint account_reconcile_model_partner_mapping_partner_id_fkey
			references res_partner
				on delete cascade,
	payment_ref_regex varchar,
	narration_regex varchar,
	create_uid integer
		constraint account_reconcile_model_partner_mapping_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reconcile_model_partner_mapping_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reconcile_model_partner_mapping is 'Partner mapping for reconciliation models';

comment on column account_reconcile_model_partner_mapping.model_id is 'Model';

comment on column account_reconcile_model_partner_mapping.partner_id is 'Partner';

comment on column account_reconcile_model_partner_mapping.payment_ref_regex is 'Find Text in Label';

comment on column account_reconcile_model_partner_mapping.narration_regex is 'Find Text in Notes';

comment on column account_reconcile_model_partner_mapping.create_uid is 'Created by';

comment on column account_reconcile_model_partner_mapping.create_date is 'Created on';

comment on column account_reconcile_model_partner_mapping.write_uid is 'Last Updated by';

comment on column account_reconcile_model_partner_mapping.write_date is 'Last Updated on';

alter table account_reconcile_model_partner_mapping owner to postgres;

create table account_reconcile_model_res_partner_rel
(
	account_reconcile_model_id integer not null
		constraint account_reconcile_model_res_par_account_reconcile_model_id_fkey
			references account_reconcile_model
				on delete cascade,
	res_partner_id integer not null
		constraint account_reconcile_model_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint account_reconcile_model_res_partner_rel_pkey
		primary key (account_reconcile_model_id, res_partner_id)
);

comment on table account_reconcile_model_res_partner_rel is 'RELATION BETWEEN account_reconcile_model AND res_partner';

alter table account_reconcile_model_res_partner_rel owner to postgres;

create index account_reconcile_model_res_p_res_partner_id_account_reconc_idx
	on account_reconcile_model_res_partner_rel (res_partner_id, account_reconcile_model_id);

create table account_reports_export_wizard
(
	id integer default nextval('account_reports_export_wizard_id_seq'::regclass) not null
		constraint account_reports_export_wizard_pkey
			primary key,
	report_model varchar not null,
	report_id integer not null,
	doc_name varchar,
	create_uid integer
		constraint account_reports_export_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reports_export_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reports_export_wizard is 'Export wizard for accounting''s reports';

comment on column account_reports_export_wizard.report_model is 'Report Model';

comment on column account_reports_export_wizard.report_id is 'Parent Report Id';

comment on column account_reports_export_wizard.doc_name is 'Documents Name';

comment on column account_reports_export_wizard.create_uid is 'Created by';

comment on column account_reports_export_wizard.create_date is 'Created on';

comment on column account_reports_export_wizard.write_uid is 'Last Updated by';

comment on column account_reports_export_wizard.write_date is 'Last Updated on';

alter table account_reports_export_wizard owner to postgres;

create table account_reports_export_wizard_format
(
	id integer default nextval('account_reports_export_wizard_format_id_seq'::regclass) not null
		constraint account_reports_export_wizard_format_pkey
			primary key,
	name varchar not null,
	fun_to_call varchar not null,
	export_wizard_id integer not null
		constraint account_reports_export_wizard_format_export_wizard_id_fkey
			references account_reports_export_wizard
				on delete restrict,
	create_uid integer
		constraint account_reports_export_wizard_format_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reports_export_wizard_format_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reports_export_wizard_format is 'Export format for accounting''s reports';

comment on column account_reports_export_wizard_format.name is 'Name';

comment on column account_reports_export_wizard_format.fun_to_call is 'Function to Call';

comment on column account_reports_export_wizard_format.export_wizard_id is 'Parent Wizard';

comment on column account_reports_export_wizard_format.create_uid is 'Created by';

comment on column account_reports_export_wizard_format.create_date is 'Created on';

comment on column account_reports_export_wizard_format.write_uid is 'Last Updated by';

comment on column account_reports_export_wizard_format.write_date is 'Last Updated on';

alter table account_reports_export_wizard_format owner to postgres;

create table account_resequence_wizard
(
	id integer default nextval('account_resequence_wizard_id_seq'::regclass) not null
		constraint account_resequence_wizard_pkey
			primary key,
	first_date date,
	end_date date,
	first_name varchar not null,
	ordering varchar not null,
	create_uid integer
		constraint account_resequence_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_resequence_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_resequence_wizard is 'Remake the sequence of Journal Entries.';

comment on column account_resequence_wizard.first_date is 'First Date';

comment on column account_resequence_wizard.end_date is 'End Date';

comment on column account_resequence_wizard.first_name is 'First New Sequence';

comment on column account_resequence_wizard.ordering is 'Ordering';

comment on column account_resequence_wizard.create_uid is 'Created by';

comment on column account_resequence_wizard.create_date is 'Created on';

comment on column account_resequence_wizard.write_uid is 'Last Updated by';

comment on column account_resequence_wizard.write_date is 'Last Updated on';

alter table account_resequence_wizard owner to postgres;

create table account_move_account_resequence_wizard_rel
(
	account_resequence_wizard_id integer not null
		constraint account_move_account_resequen_account_resequence_wizard_id_fkey
			references account_resequence_wizard
				on delete cascade,
	account_move_id integer not null
		constraint account_move_account_resequence_wizard_rel_account_move_id_fkey
			references account_move
				on delete cascade,
	constraint account_move_account_resequence_wizard_rel_pkey
		primary key (account_resequence_wizard_id, account_move_id)
);

comment on table account_move_account_resequence_wizard_rel is 'RELATION BETWEEN account_resequence_wizard AND account_move';

alter table account_move_account_resequence_wizard_rel owner to postgres;

create index account_move_account_resequen_account_move_id_account_reseq_idx
	on account_move_account_resequence_wizard_rel (account_move_id, account_resequence_wizard_id);

create table account_tax_group
(
	id integer default nextval('account_tax_group_id_seq'::regclass) not null
		constraint account_tax_group_pkey
			primary key,
	name varchar not null,
	sequence integer,
	create_uid integer
		constraint account_tax_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tax_group is 'Tax Group';

comment on column account_tax_group.name is 'Name';

comment on column account_tax_group.sequence is 'Sequence';

comment on column account_tax_group.create_uid is 'Created by';

comment on column account_tax_group.create_date is 'Created on';

comment on column account_tax_group.write_uid is 'Last Updated by';

comment on column account_tax_group.write_date is 'Last Updated on';

alter table account_tax_group owner to postgres;

create table account_tax
(
	id integer default nextval('account_tax_id_seq'::regclass) not null
		constraint account_tax_pkey
			primary key,
	name varchar not null,
	type_tax_use varchar not null,
	tax_scope varchar,
	amount_type varchar not null,
	active boolean,
	company_id integer not null,
	sequence integer not null,
	amount numeric not null,
	description varchar,
	price_include boolean,
	include_base_amount boolean,
	analytic boolean,
	tax_group_id integer not null
		constraint account_tax_tax_group_id_fkey
			references account_tax_group
				on delete restrict,
	tax_exigibility varchar,
	cash_basis_transition_account_id integer
		constraint account_tax_cash_basis_transition_account_id_fkey
			references account_account
				on delete set null,
	create_uid integer
		constraint account_tax_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_tax_name_company_uniq
		unique (name, company_id, type_tax_use, tax_scope)
);

comment on table account_tax is 'Tax';

comment on column account_tax.name is 'Tax Name';

comment on column account_tax.type_tax_use is 'Tax Type';

comment on column account_tax.tax_scope is 'Tax Scope';

comment on column account_tax.amount_type is 'Tax Computation';

comment on column account_tax.active is 'Active';

comment on column account_tax.company_id is 'Company';

comment on column account_tax.sequence is 'Sequence';

comment on column account_tax.amount is 'Amount';

comment on column account_tax.description is 'Label on Invoices';

comment on column account_tax.price_include is 'Included in Price';

comment on column account_tax.include_base_amount is 'Affect Base of Subsequent Taxes';

comment on column account_tax.analytic is 'Include in Analytic Cost';

comment on column account_tax.tax_group_id is 'Tax Group';

comment on column account_tax.tax_exigibility is 'Tax Due';

comment on column account_tax.cash_basis_transition_account_id is 'Cash Basis Transition Account';

comment on column account_tax.create_uid is 'Created by';

comment on column account_tax.create_date is 'Created on';

comment on column account_tax.write_uid is 'Last Updated by';

comment on column account_tax.write_date is 'Last Updated on';

alter table account_tax owner to postgres;

create table account_account_tax_default_rel
(
	account_id integer not null
		constraint account_account_tax_default_rel_account_id_fkey
			references account_account
				on delete cascade,
	tax_id integer not null
		constraint account_account_tax_default_rel_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint account_account_tax_default_rel_pkey
		primary key (account_id, tax_id)
);

comment on table account_account_tax_default_rel is 'RELATION BETWEEN account_account AND account_tax';

alter table account_account_tax_default_rel owner to postgres;

create index account_account_tax_default_rel_tax_id_account_id_idx
	on account_account_tax_default_rel (tax_id, account_id);

create table account_fiscal_position_tax
(
	id integer default nextval('account_fiscal_position_tax_id_seq'::regclass) not null
		constraint account_fiscal_position_tax_pkey
			primary key,
	position_id integer not null
		constraint account_fiscal_position_tax_position_id_fkey
			references account_fiscal_position
				on delete cascade,
	company_id integer,
	tax_src_id integer not null
		constraint account_fiscal_position_tax_tax_src_id_fkey
			references account_tax
				on delete restrict,
	tax_dest_id integer
		constraint account_fiscal_position_tax_tax_dest_id_fkey
			references account_tax
				on delete set null,
	create_uid integer
		constraint account_fiscal_position_tax_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_position_tax_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_fiscal_position_tax_tax_src_dest_uniq
		unique (position_id, tax_src_id, tax_dest_id)
);

comment on table account_fiscal_position_tax is 'Tax Mapping of Fiscal Position';

comment on column account_fiscal_position_tax.position_id is 'Fiscal Position';

comment on column account_fiscal_position_tax.company_id is 'Company';

comment on column account_fiscal_position_tax.tax_src_id is 'Tax on Product';

comment on column account_fiscal_position_tax.tax_dest_id is 'Tax to Apply';

comment on column account_fiscal_position_tax.create_uid is 'Created by';

comment on column account_fiscal_position_tax.create_date is 'Created on';

comment on column account_fiscal_position_tax.write_uid is 'Last Updated by';

comment on column account_fiscal_position_tax.write_date is 'Last Updated on';

alter table account_fiscal_position_tax owner to postgres;

create table account_tax_filiation_rel
(
	parent_tax integer not null
		constraint account_tax_filiation_rel_parent_tax_fkey
			references account_tax
				on delete cascade,
	child_tax integer not null
		constraint account_tax_filiation_rel_child_tax_fkey
			references account_tax
				on delete cascade,
	constraint account_tax_filiation_rel_pkey
		primary key (parent_tax, child_tax)
);

comment on table account_tax_filiation_rel is 'RELATION BETWEEN account_tax AND account_tax';

alter table account_tax_filiation_rel owner to postgres;

create index account_tax_filiation_rel_child_tax_parent_tax_idx
	on account_tax_filiation_rel (child_tax, parent_tax);

create table account_tax_repartition_line
(
	id integer default nextval('account_tax_repartition_line_id_seq'::regclass) not null
		constraint account_tax_repartition_line_pkey
			primary key,
	factor_percent double precision not null,
	repartition_type varchar not null,
	account_id integer
		constraint account_tax_repartition_line_account_id_fkey
			references account_account
				on delete set null,
	invoice_tax_id integer
		constraint account_tax_repartition_line_invoice_tax_id_fkey
			references account_tax
				on delete cascade,
	refund_tax_id integer
		constraint account_tax_repartition_line_refund_tax_id_fkey
			references account_tax
				on delete cascade,
	company_id integer,
	sequence integer,
	use_in_tax_closing boolean,
	create_uid integer
		constraint account_tax_repartition_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_repartition_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tax_repartition_line is 'Tax Repartition Line';

comment on column account_tax_repartition_line.factor_percent is '%';

comment on column account_tax_repartition_line.repartition_type is 'Based On';

comment on column account_tax_repartition_line.account_id is 'Account';

comment on column account_tax_repartition_line.invoice_tax_id is 'Invoice Tax';

comment on column account_tax_repartition_line.refund_tax_id is 'Refund Tax';

comment on column account_tax_repartition_line.company_id is 'Company';

comment on column account_tax_repartition_line.sequence is 'Sequence';

comment on column account_tax_repartition_line.use_in_tax_closing is 'Tax Closing Entry';

comment on column account_tax_repartition_line.create_uid is 'Created by';

comment on column account_tax_repartition_line.create_date is 'Created on';

comment on column account_tax_repartition_line.write_uid is 'Last Updated by';

comment on column account_tax_repartition_line.write_date is 'Last Updated on';

alter table account_tax_repartition_line owner to postgres;

create table account_account_tag_account_tax_repartition_line_rel
(
	account_tax_repartition_line_id integer not null
		constraint account_account_tag_account_t_account_tax_repartition_line_fkey
			references account_tax_repartition_line
				on delete cascade,
	account_account_tag_id integer not null
		constraint account_account_tag_account_tax_rep_account_account_tag_id_fkey
			references account_account_tag
				on delete cascade,
	constraint account_account_tag_account_tax_repartition_line_rel_pkey
		primary key (account_tax_repartition_line_id, account_account_tag_id)
);

comment on table account_account_tag_account_tax_repartition_line_rel is 'RELATION BETWEEN account_tax_repartition_line AND account_account_tag';

alter table account_account_tag_account_tax_repartition_line_rel owner to postgres;

create index account_account_tag_account_t_account_account_tag_id_accoun_idx
	on account_account_tag_account_tax_repartition_line_rel (account_account_tag_id, account_tax_repartition_line_id);

create table account_tax_report
(
	id integer default nextval('account_tax_report_id_seq'::regclass) not null
		constraint account_tax_report_pkey
			primary key,
	name varchar not null,
	country_id integer not null
		constraint account_tax_report_country_id_fkey
			references res_country
				on delete restrict,
	create_uid integer
		constraint account_tax_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tax_report is 'Account Tax Report';

comment on column account_tax_report.name is 'Name';

comment on column account_tax_report.country_id is 'Country';

comment on column account_tax_report.create_uid is 'Created by';

comment on column account_tax_report.create_date is 'Created on';

comment on column account_tax_report.write_uid is 'Last Updated by';

comment on column account_tax_report.write_date is 'Last Updated on';

alter table account_tax_report owner to postgres;

create table account_tour_upload_bill_email_confirm
(
	id integer default nextval('account_tour_upload_bill_email_confirm_id_seq'::regclass) not null
		constraint account_tour_upload_bill_email_confirm_pkey
			primary key,
	email_alias varchar,
	create_uid integer
		constraint account_tour_upload_bill_email_confirm_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tour_upload_bill_email_confirm_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tour_upload_bill_email_confirm is 'Account tour upload bill email confirm';

comment on column account_tour_upload_bill_email_confirm.email_alias is 'Email Alias';

comment on column account_tour_upload_bill_email_confirm.create_uid is 'Created by';

comment on column account_tour_upload_bill_email_confirm.create_date is 'Created on';

comment on column account_tour_upload_bill_email_confirm.write_uid is 'Last Updated by';

comment on column account_tour_upload_bill_email_confirm.write_date is 'Last Updated on';

alter table account_tour_upload_bill_email_confirm owner to postgres;

create table account_transfer_model
(
	id integer default nextval('account_transfer_model_id_seq'::regclass) not null
		constraint account_transfer_model_pkey
			primary key,
	name varchar not null,
	journal_id integer not null
		constraint account_transfer_model_journal_id_fkey
			references account_journal
				on delete restrict,
	date_start date not null,
	date_stop date,
	frequency varchar not null,
	state varchar not null,
	create_uid integer
		constraint account_transfer_model_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_transfer_model_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_transfer_model is 'Account Transfer Model';

comment on column account_transfer_model.name is 'Name';

comment on column account_transfer_model.journal_id is 'Destination Journal';

comment on column account_transfer_model.date_start is 'Start Date';

comment on column account_transfer_model.date_stop is 'Stop Date';

comment on column account_transfer_model.frequency is 'Frequency';

comment on column account_transfer_model.state is 'State';

comment on column account_transfer_model.create_uid is 'Created by';

comment on column account_transfer_model.create_date is 'Created on';

comment on column account_transfer_model.write_uid is 'Last Updated by';

comment on column account_transfer_model.write_date is 'Last Updated on';

alter table account_transfer_model owner to postgres;

create table account_model_rel
(
	account_transfer_model_id integer not null
		constraint account_model_rel_account_transfer_model_id_fkey
			references account_transfer_model
				on delete cascade,
	account_account_id integer not null
		constraint account_model_rel_account_account_id_fkey
			references account_account
				on delete cascade,
	constraint account_model_rel_pkey
		primary key (account_transfer_model_id, account_account_id)
);

comment on table account_model_rel is 'RELATION BETWEEN account_transfer_model AND account_account';

alter table account_model_rel owner to postgres;

create index account_model_rel_account_account_id_account_transfer_model_idx
	on account_model_rel (account_account_id, account_transfer_model_id);

alter table account_move
	add constraint account_move_transfer_model_id_fkey
		foreign key (transfer_model_id) references account_transfer_model
			on delete set null;

create table account_transfer_model_line
(
	id integer default nextval('account_transfer_model_line_id_seq'::regclass) not null
		constraint account_transfer_model_line_pkey
			primary key,
	transfer_model_id integer not null
		constraint account_transfer_model_line_transfer_model_id_fkey
			references account_transfer_model
				on delete restrict,
	account_id integer not null
		constraint account_transfer_model_line_account_id_fkey
			references account_account
				on delete restrict,
	percent double precision not null,
	sequence integer,
	create_uid integer
		constraint account_transfer_model_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_transfer_model_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_transfer_model_line_unique_account_by_transfer_model
		unique (transfer_model_id, account_id)
);

comment on table account_transfer_model_line is 'Account Transfer Model Line';

comment on column account_transfer_model_line.transfer_model_id is 'Transfer Model';

comment on column account_transfer_model_line.account_id is 'Destination Account';

comment on column account_transfer_model_line.percent is 'Percent';

comment on column account_transfer_model_line.sequence is 'Sequence';

comment on column account_transfer_model_line.create_uid is 'Created by';

comment on column account_transfer_model_line.create_date is 'Created on';

comment on column account_transfer_model_line.write_uid is 'Last Updated by';

comment on column account_transfer_model_line.write_date is 'Last Updated on';

alter table account_transfer_model_line owner to postgres;

create table account_analytic_account_account_transfer_model_line_rel
(
	account_transfer_model_line_id integer not null
		constraint account_analytic_account_acco_account_transfer_model_line__fkey
			references account_transfer_model_line
				on delete cascade,
	account_analytic_account_id integer not null
		constraint account_analytic_account_accou_account_analytic_account_id_fkey
			references account_analytic_account
				on delete cascade,
	constraint account_analytic_account_account_transfer_model_line_rel_pkey
		primary key (account_transfer_model_line_id, account_analytic_account_id)
);

comment on table account_analytic_account_account_transfer_model_line_rel is 'RELATION BETWEEN account_transfer_model_line AND account_analytic_account';

alter table account_analytic_account_account_transfer_model_line_rel owner to postgres;

create index account_analytic_account_acco_account_analytic_account_id_a_idx
	on account_analytic_account_account_transfer_model_line_rel (account_analytic_account_id, account_transfer_model_line_id);

create table account_transfer_model_line_res_partner_rel
(
	account_transfer_model_line_id integer not null
		constraint account_transfer_model_line_r_account_transfer_model_line__fkey
			references account_transfer_model_line
				on delete cascade,
	res_partner_id integer not null
		constraint account_transfer_model_line_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint account_transfer_model_line_res_partner_rel_pkey
		primary key (account_transfer_model_line_id, res_partner_id)
);

comment on table account_transfer_model_line_res_partner_rel is 'RELATION BETWEEN account_transfer_model_line AND res_partner';

alter table account_transfer_model_line_res_partner_rel owner to postgres;

create index account_transfer_model_line_r_res_partner_id_account_transf_idx
	on account_transfer_model_line_res_partner_rel (res_partner_id, account_transfer_model_line_id);

create table account_unreconcile
(
	id integer default nextval('account_unreconcile_id_seq'::regclass) not null
		constraint account_unreconcile_pkey
			primary key,
	create_uid integer
		constraint account_unreconcile_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_unreconcile_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_unreconcile is 'Account Unreconcile';

comment on column account_unreconcile.create_uid is 'Created by';

comment on column account_unreconcile.create_date is 'Created on';

comment on column account_unreconcile.write_uid is 'Last Updated by';

comment on column account_unreconcile.write_date is 'Last Updated on';

alter table account_unreconcile owner to postgres;

create table asset_modify
(
	id integer default nextval('asset_modify_id_seq'::regclass) not null
		constraint asset_modify_pkey
			primary key,
	name text,
	asset_id integer not null
		constraint asset_modify_asset_id_fkey
			references account_asset
				on delete cascade,
	method_number integer not null,
	method_period varchar,
	value_residual numeric,
	salvage_value numeric,
	date date,
	account_asset_id integer
		constraint asset_modify_account_asset_id_fkey
			references account_account
				on delete set null,
	account_asset_counterpart_id integer
		constraint asset_modify_account_asset_counterpart_id_fkey
			references account_account
				on delete set null,
	account_depreciation_id integer
		constraint asset_modify_account_depreciation_id_fkey
			references account_account
				on delete set null,
	account_depreciation_expense_id integer
		constraint asset_modify_account_depreciation_expense_id_fkey
			references account_account
				on delete set null,
	create_uid integer
		constraint asset_modify_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint asset_modify_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table asset_modify is 'Modify Asset';

comment on column asset_modify.name is 'Reason';

comment on column asset_modify.asset_id is 'Asset';

comment on column asset_modify.method_number is 'Number of Depreciations';

comment on column asset_modify.method_period is 'Number of Months in a Period';

comment on column asset_modify.value_residual is 'Depreciable Amount';

comment on column asset_modify.salvage_value is 'Not Depreciable Amount';

comment on column asset_modify.date is 'Date';

comment on column asset_modify.account_asset_id is 'Asset Gross Increase Account';

comment on column asset_modify.account_asset_counterpart_id is 'Account Asset Counterpart';

comment on column asset_modify.account_depreciation_id is 'Account Depreciation';

comment on column asset_modify.account_depreciation_expense_id is 'Account Depreciation Expense';

comment on column asset_modify.create_uid is 'Created by';

comment on column asset_modify.create_date is 'Created on';

comment on column asset_modify.write_uid is 'Last Updated by';

comment on column asset_modify.write_date is 'Last Updated on';

alter table asset_modify owner to postgres;

create table auth_totp_wizard
(
	id integer default nextval('auth_totp_wizard_id_seq'::regclass) not null
		constraint auth_totp_wizard_pkey
			primary key,
	user_id integer not null
		constraint auth_totp_wizard_user_id_fkey
			references res_users
				on delete cascade,
	secret varchar not null,
	url varchar,
	qrcode bytea,
	code varchar(7),
	create_uid integer
		constraint auth_totp_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint auth_totp_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table auth_totp_wizard is 'Two-Factor Setup Wizard';

comment on column auth_totp_wizard.user_id is 'User';

comment on column auth_totp_wizard.secret is 'Secret';

comment on column auth_totp_wizard.url is 'Url';

comment on column auth_totp_wizard.qrcode is 'Qrcode';

comment on column auth_totp_wizard.code is 'Verification Code';

comment on column auth_totp_wizard.create_uid is 'Created by';

comment on column auth_totp_wizard.create_date is 'Created on';

comment on column auth_totp_wizard.write_uid is 'Last Updated by';

comment on column auth_totp_wizard.write_date is 'Last Updated on';

alter table auth_totp_wizard owner to postgres;

create table barcode_nomenclature
(
	id integer default nextval('barcode_nomenclature_id_seq'::regclass) not null
		constraint barcode_nomenclature_pkey
			primary key,
	name varchar(32) not null,
	upc_ean_conv varchar not null,
	create_uid integer
		constraint barcode_nomenclature_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint barcode_nomenclature_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table barcode_nomenclature is 'Barcode Nomenclature';

comment on column barcode_nomenclature.name is 'Barcode Nomenclature';

comment on column barcode_nomenclature.upc_ean_conv is 'UPC/EAN Conversion';

comment on column barcode_nomenclature.create_uid is 'Created by';

comment on column barcode_nomenclature.create_date is 'Created on';

comment on column barcode_nomenclature.write_uid is 'Last Updated by';

comment on column barcode_nomenclature.write_date is 'Last Updated on';

alter table barcode_nomenclature owner to postgres;

create table barcode_rule
(
	id integer default nextval('barcode_rule_id_seq'::regclass) not null
		constraint barcode_rule_pkey
			primary key,
	name varchar(32) not null,
	barcode_nomenclature_id integer
		constraint barcode_rule_barcode_nomenclature_id_fkey
			references barcode_nomenclature
				on delete set null,
	sequence integer,
	encoding varchar not null,
	type varchar not null,
	pattern varchar(32) not null,
	alias varchar(32) not null,
	create_uid integer
		constraint barcode_rule_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint barcode_rule_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table barcode_rule is 'Barcode Rule';

comment on column barcode_rule.name is 'Rule Name';

comment on column barcode_rule.barcode_nomenclature_id is 'Barcode Nomenclature';

comment on column barcode_rule.sequence is 'Sequence';

comment on column barcode_rule.encoding is 'Encoding';

comment on column barcode_rule.type is 'Type';

comment on column barcode_rule.pattern is 'Barcode Pattern';

comment on column barcode_rule.alias is 'Alias';

comment on column barcode_rule.create_uid is 'Created by';

comment on column barcode_rule.create_date is 'Created on';

comment on column barcode_rule.write_uid is 'Last Updated by';

comment on column barcode_rule.write_date is 'Last Updated on';

alter table barcode_rule owner to postgres;

create table base_import_import
(
	id integer default nextval('base_import_import_id_seq'::regclass) not null
		constraint base_import_import_pkey
			primary key,
	res_model varchar,
	file bytea,
	file_name varchar,
	file_type varchar,
	create_uid integer
		constraint base_import_import_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_import_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_import is 'Base Import';

comment on column base_import_import.res_model is 'Model';

comment on column base_import_import.file is 'File';

comment on column base_import_import.file_name is 'File Name';

comment on column base_import_import.file_type is 'File Type';

comment on column base_import_import.create_uid is 'Created by';

comment on column base_import_import.create_date is 'Created on';

comment on column base_import_import.write_uid is 'Last Updated by';

comment on column base_import_import.write_date is 'Last Updated on';

alter table base_import_import owner to postgres;

create table base_import_mapping
(
	id integer default nextval('base_import_mapping_id_seq'::regclass) not null
		constraint base_import_mapping_pkey
			primary key,
	res_model varchar,
	column_name varchar,
	field_name varchar,
	create_uid integer
		constraint base_import_mapping_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_mapping_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_mapping is 'Base Import Mapping';

comment on column base_import_mapping.res_model is 'Res Model';

comment on column base_import_mapping.column_name is 'Column Name';

comment on column base_import_mapping.field_name is 'Field Name';

comment on column base_import_mapping.create_uid is 'Created by';

comment on column base_import_mapping.create_date is 'Created on';

comment on column base_import_mapping.write_uid is 'Last Updated by';

comment on column base_import_mapping.write_date is 'Last Updated on';

alter table base_import_mapping owner to postgres;

create index base_import_mapping_res_model_index
	on base_import_mapping (res_model);

create table base_import_tests_models_char
(
	id integer default nextval('base_import_tests_models_char_id_seq'::regclass) not null
		constraint base_import_tests_models_char_pkey
			primary key,
	value varchar,
	create_uid integer
		constraint base_import_tests_models_char_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char is 'Tests : Base Import Model, Character';

comment on column base_import_tests_models_char.value is 'Value';

comment on column base_import_tests_models_char.create_uid is 'Created by';

comment on column base_import_tests_models_char.create_date is 'Created on';

comment on column base_import_tests_models_char.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char.write_date is 'Last Updated on';

alter table base_import_tests_models_char owner to postgres;

create table base_import_tests_models_char_noreadonly
(
	id integer default nextval('base_import_tests_models_char_noreadonly_id_seq'::regclass) not null
		constraint base_import_tests_models_char_noreadonly_pkey
			primary key,
	value varchar,
	create_uid integer
		constraint base_import_tests_models_char_noreadonly_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_noreadonly_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char_noreadonly is 'Tests : Base Import Model, Character No readonly';

comment on column base_import_tests_models_char_noreadonly.value is 'Value';

comment on column base_import_tests_models_char_noreadonly.create_uid is 'Created by';

comment on column base_import_tests_models_char_noreadonly.create_date is 'Created on';

comment on column base_import_tests_models_char_noreadonly.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char_noreadonly.write_date is 'Last Updated on';

alter table base_import_tests_models_char_noreadonly owner to postgres;

create table base_import_tests_models_char_readonly
(
	id integer default nextval('base_import_tests_models_char_readonly_id_seq'::regclass) not null
		constraint base_import_tests_models_char_readonly_pkey
			primary key,
	value varchar,
	create_uid integer
		constraint base_import_tests_models_char_readonly_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_readonly_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char_readonly is 'Tests : Base Import Model, Character readonly';

comment on column base_import_tests_models_char_readonly.value is 'Value';

comment on column base_import_tests_models_char_readonly.create_uid is 'Created by';

comment on column base_import_tests_models_char_readonly.create_date is 'Created on';

comment on column base_import_tests_models_char_readonly.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char_readonly.write_date is 'Last Updated on';

alter table base_import_tests_models_char_readonly owner to postgres;

create table base_import_tests_models_char_required
(
	id integer default nextval('base_import_tests_models_char_required_id_seq'::regclass) not null
		constraint base_import_tests_models_char_required_pkey
			primary key,
	value varchar not null,
	create_uid integer
		constraint base_import_tests_models_char_required_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_required_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char_required is 'Tests : Base Import Model, Character required';

comment on column base_import_tests_models_char_required.value is 'Value';

comment on column base_import_tests_models_char_required.create_uid is 'Created by';

comment on column base_import_tests_models_char_required.create_date is 'Created on';

comment on column base_import_tests_models_char_required.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char_required.write_date is 'Last Updated on';

alter table base_import_tests_models_char_required owner to postgres;

create table base_import_tests_models_char_states
(
	id integer default nextval('base_import_tests_models_char_states_id_seq'::regclass) not null
		constraint base_import_tests_models_char_states_pkey
			primary key,
	value varchar,
	create_uid integer
		constraint base_import_tests_models_char_states_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_states_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char_states is 'Tests : Base Import Model, Character states';

comment on column base_import_tests_models_char_states.value is 'Value';

comment on column base_import_tests_models_char_states.create_uid is 'Created by';

comment on column base_import_tests_models_char_states.create_date is 'Created on';

comment on column base_import_tests_models_char_states.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char_states.write_date is 'Last Updated on';

alter table base_import_tests_models_char_states owner to postgres;

create table base_import_tests_models_char_stillreadonly
(
	id integer default nextval('base_import_tests_models_char_stillreadonly_id_seq'::regclass) not null
		constraint base_import_tests_models_char_stillreadonly_pkey
			primary key,
	value varchar,
	create_uid integer
		constraint base_import_tests_models_char_stillreadonly_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_char_stillreadonly_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_char_stillreadonly is 'Tests : Base Import Model, Character still readonly';

comment on column base_import_tests_models_char_stillreadonly.value is 'Value';

comment on column base_import_tests_models_char_stillreadonly.create_uid is 'Created by';

comment on column base_import_tests_models_char_stillreadonly.create_date is 'Created on';

comment on column base_import_tests_models_char_stillreadonly.write_uid is 'Last Updated by';

comment on column base_import_tests_models_char_stillreadonly.write_date is 'Last Updated on';

alter table base_import_tests_models_char_stillreadonly owner to postgres;

create table base_import_tests_models_m2o_related
(
	id integer default nextval('base_import_tests_models_m2o_related_id_seq'::regclass) not null
		constraint base_import_tests_models_m2o_related_pkey
			primary key,
	value integer,
	create_uid integer
		constraint base_import_tests_models_m2o_related_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_m2o_related_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_m2o_related is 'Tests : Base Import Model, Many to One related';

comment on column base_import_tests_models_m2o_related.value is 'Value';

comment on column base_import_tests_models_m2o_related.create_uid is 'Created by';

comment on column base_import_tests_models_m2o_related.create_date is 'Created on';

comment on column base_import_tests_models_m2o_related.write_uid is 'Last Updated by';

comment on column base_import_tests_models_m2o_related.write_date is 'Last Updated on';

alter table base_import_tests_models_m2o_related owner to postgres;

create table base_import_tests_models_m2o
(
	id integer default nextval('base_import_tests_models_m2o_id_seq'::regclass) not null
		constraint base_import_tests_models_m2o_pkey
			primary key,
	value integer
		constraint base_import_tests_models_m2o_value_fkey
			references base_import_tests_models_m2o_related
				on delete set null,
	create_uid integer
		constraint base_import_tests_models_m2o_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_m2o_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_m2o is 'Tests : Base Import Model, Many to One';

comment on column base_import_tests_models_m2o.value is 'Value';

comment on column base_import_tests_models_m2o.create_uid is 'Created by';

comment on column base_import_tests_models_m2o.create_date is 'Created on';

comment on column base_import_tests_models_m2o.write_uid is 'Last Updated by';

comment on column base_import_tests_models_m2o.write_date is 'Last Updated on';

alter table base_import_tests_models_m2o owner to postgres;

create table base_import_tests_models_m2o_required_related
(
	id integer default nextval('base_import_tests_models_m2o_required_related_id_seq'::regclass) not null
		constraint base_import_tests_models_m2o_required_related_pkey
			primary key,
	value integer,
	create_uid integer
		constraint base_import_tests_models_m2o_required_related_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_m2o_required_related_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_m2o_required_related is 'Tests : Base Import Model, Many to One required related';

comment on column base_import_tests_models_m2o_required_related.value is 'Value';

comment on column base_import_tests_models_m2o_required_related.create_uid is 'Created by';

comment on column base_import_tests_models_m2o_required_related.create_date is 'Created on';

comment on column base_import_tests_models_m2o_required_related.write_uid is 'Last Updated by';

comment on column base_import_tests_models_m2o_required_related.write_date is 'Last Updated on';

alter table base_import_tests_models_m2o_required_related owner to postgres;

create table base_import_tests_models_m2o_required
(
	id integer default nextval('base_import_tests_models_m2o_required_id_seq'::regclass) not null
		constraint base_import_tests_models_m2o_required_pkey
			primary key,
	value integer not null
		constraint base_import_tests_models_m2o_required_value_fkey
			references base_import_tests_models_m2o_required_related
				on delete restrict,
	create_uid integer
		constraint base_import_tests_models_m2o_required_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_m2o_required_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_m2o_required is 'Tests : Base Import Model, Many to One required';

comment on column base_import_tests_models_m2o_required.value is 'Value';

comment on column base_import_tests_models_m2o_required.create_uid is 'Created by';

comment on column base_import_tests_models_m2o_required.create_date is 'Created on';

comment on column base_import_tests_models_m2o_required.write_uid is 'Last Updated by';

comment on column base_import_tests_models_m2o_required.write_date is 'Last Updated on';

alter table base_import_tests_models_m2o_required owner to postgres;

create table base_import_tests_models_o2m
(
	id integer default nextval('base_import_tests_models_o2m_id_seq'::regclass) not null
		constraint base_import_tests_models_o2m_pkey
			primary key,
	name varchar,
	create_uid integer
		constraint base_import_tests_models_o2m_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_o2m_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_o2m is 'Tests : Base Import Model, One to Many';

comment on column base_import_tests_models_o2m.name is 'Name';

comment on column base_import_tests_models_o2m.create_uid is 'Created by';

comment on column base_import_tests_models_o2m.create_date is 'Created on';

comment on column base_import_tests_models_o2m.write_uid is 'Last Updated by';

comment on column base_import_tests_models_o2m.write_date is 'Last Updated on';

alter table base_import_tests_models_o2m owner to postgres;

create table base_import_tests_models_o2m_child
(
	id integer default nextval('base_import_tests_models_o2m_child_id_seq'::regclass) not null
		constraint base_import_tests_models_o2m_child_pkey
			primary key,
	parent_id integer
		constraint base_import_tests_models_o2m_child_parent_id_fkey
			references base_import_tests_models_o2m
				on delete set null,
	value integer,
	create_uid integer
		constraint base_import_tests_models_o2m_child_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_o2m_child_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_o2m_child is 'Tests : Base Import Model, One to Many child';

comment on column base_import_tests_models_o2m_child.parent_id is 'Parent';

comment on column base_import_tests_models_o2m_child.value is 'Value';

comment on column base_import_tests_models_o2m_child.create_uid is 'Created by';

comment on column base_import_tests_models_o2m_child.create_date is 'Created on';

comment on column base_import_tests_models_o2m_child.write_uid is 'Last Updated by';

comment on column base_import_tests_models_o2m_child.write_date is 'Last Updated on';

alter table base_import_tests_models_o2m_child owner to postgres;

create table base_import_tests_models_preview
(
	id integer default nextval('base_import_tests_models_preview_id_seq'::regclass) not null
		constraint base_import_tests_models_preview_pkey
			primary key,
	name varchar,
	somevalue integer not null,
	othervalue integer,
	create_uid integer
		constraint base_import_tests_models_preview_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_preview_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_preview is 'Tests : Base Import Model Preview';

comment on column base_import_tests_models_preview.name is 'Name';

comment on column base_import_tests_models_preview.somevalue is 'Some Value';

comment on column base_import_tests_models_preview.othervalue is 'Other Variable';

comment on column base_import_tests_models_preview.create_uid is 'Created by';

comment on column base_import_tests_models_preview.create_date is 'Created on';

comment on column base_import_tests_models_preview.write_uid is 'Last Updated by';

comment on column base_import_tests_models_preview.write_date is 'Last Updated on';

alter table base_import_tests_models_preview owner to postgres;

create table base_language_export
(
	id integer default nextval('base_language_export_id_seq'::regclass) not null
		constraint base_language_export_pkey
			primary key,
	name varchar,
	lang varchar not null,
	format varchar not null,
	data bytea,
	state varchar,
	create_uid integer
		constraint base_language_export_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_language_export_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_language_export is 'Language Export';

comment on column base_language_export.name is 'File Name';

comment on column base_language_export.lang is 'Language';

comment on column base_language_export.format is 'File Format';

comment on column base_language_export.data is 'File';

comment on column base_language_export.state is 'State';

comment on column base_language_export.create_uid is 'Created by';

comment on column base_language_export.create_date is 'Created on';

comment on column base_language_export.write_uid is 'Last Updated by';

comment on column base_language_export.write_date is 'Last Updated on';

alter table base_language_export owner to postgres;

create table base_language_import
(
	id integer default nextval('base_language_import_id_seq'::regclass) not null
		constraint base_language_import_pkey
			primary key,
	name varchar not null,
	code varchar(6) not null,
	data bytea not null,
	filename varchar not null,
	overwrite boolean,
	create_uid integer
		constraint base_language_import_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_language_import_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_language_import is 'Language Import';

comment on column base_language_import.name is 'Language Name';

comment on column base_language_import.code is 'ISO Code';

comment on column base_language_import.data is 'File';

comment on column base_language_import.filename is 'File Name';

comment on column base_language_import.overwrite is 'Overwrite Existing Terms';

comment on column base_language_import.create_uid is 'Created by';

comment on column base_language_import.create_date is 'Created on';

comment on column base_language_import.write_uid is 'Last Updated by';

comment on column base_language_import.write_date is 'Last Updated on';

alter table base_language_import owner to postgres;

create table base_language_install
(
	id integer default nextval('base_language_install_id_seq'::regclass) not null
		constraint base_language_install_pkey
			primary key,
	lang varchar not null,
	overwrite boolean,
	state varchar,
	create_uid integer
		constraint base_language_install_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_language_install_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_language_install is 'Install Language';

comment on column base_language_install.lang is 'Language';

comment on column base_language_install.overwrite is 'Overwrite Existing Terms';

comment on column base_language_install.state is 'Status';

comment on column base_language_install.create_uid is 'Created by';

comment on column base_language_install.create_date is 'Created on';

comment on column base_language_install.write_uid is 'Last Updated by';

comment on column base_language_install.write_date is 'Last Updated on';

alter table base_language_install owner to postgres;

create table base_module_update
(
	id integer default nextval('base_module_update_id_seq'::regclass) not null
		constraint base_module_update_pkey
			primary key,
	updated integer,
	added integer,
	state varchar,
	create_uid integer
		constraint base_module_update_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_module_update_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_module_update is 'Update Module';

comment on column base_module_update.updated is 'Number of modules updated';

comment on column base_module_update.added is 'Number of modules added';

comment on column base_module_update.state is 'Status';

comment on column base_module_update.create_uid is 'Created by';

comment on column base_module_update.create_date is 'Created on';

comment on column base_module_update.write_uid is 'Last Updated by';

comment on column base_module_update.write_date is 'Last Updated on';

alter table base_module_update owner to postgres;

create table base_module_upgrade
(
	id integer default nextval('base_module_upgrade_id_seq'::regclass) not null
		constraint base_module_upgrade_pkey
			primary key,
	module_info text,
	create_uid integer
		constraint base_module_upgrade_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_module_upgrade_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_module_upgrade is 'Upgrade Module';

comment on column base_module_upgrade.module_info is 'Apps to Update';

comment on column base_module_upgrade.create_uid is 'Created by';

comment on column base_module_upgrade.create_date is 'Created on';

comment on column base_module_upgrade.write_uid is 'Last Updated by';

comment on column base_module_upgrade.write_date is 'Last Updated on';

alter table base_module_upgrade owner to postgres;

create table base_partner_merge_automatic_wizard
(
	id integer default nextval('base_partner_merge_automatic_wizard_id_seq'::regclass) not null
		constraint base_partner_merge_automatic_wizard_pkey
			primary key,
	group_by_email boolean,
	group_by_name boolean,
	group_by_is_company boolean,
	group_by_vat boolean,
	group_by_parent_id boolean,
	state varchar not null,
	number_group integer,
	current_line_id integer,
	dst_partner_id integer
		constraint base_partner_merge_automatic_wizard_dst_partner_id_fkey
			references res_partner
				on delete set null,
	exclude_contact boolean,
	exclude_journal_item boolean,
	maximum_group integer,
	create_uid integer
		constraint base_partner_merge_automatic_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_partner_merge_automatic_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_partner_merge_automatic_wizard is 'Merge Partner Wizard';

comment on column base_partner_merge_automatic_wizard.group_by_email is 'Email';

comment on column base_partner_merge_automatic_wizard.group_by_name is 'Name';

comment on column base_partner_merge_automatic_wizard.group_by_is_company is 'Is Company';

comment on column base_partner_merge_automatic_wizard.group_by_vat is 'VAT';

comment on column base_partner_merge_automatic_wizard.group_by_parent_id is 'Parent Company';

comment on column base_partner_merge_automatic_wizard.state is 'State';

comment on column base_partner_merge_automatic_wizard.number_group is 'Group of Contacts';

comment on column base_partner_merge_automatic_wizard.current_line_id is 'Current Line';

comment on column base_partner_merge_automatic_wizard.dst_partner_id is 'Destination Contact';

comment on column base_partner_merge_automatic_wizard.exclude_contact is 'A user associated to the contact';

comment on column base_partner_merge_automatic_wizard.exclude_journal_item is 'Journal Items associated to the contact';

comment on column base_partner_merge_automatic_wizard.maximum_group is 'Maximum of Group of Contacts';

comment on column base_partner_merge_automatic_wizard.create_uid is 'Created by';

comment on column base_partner_merge_automatic_wizard.create_date is 'Created on';

comment on column base_partner_merge_automatic_wizard.write_uid is 'Last Updated by';

comment on column base_partner_merge_automatic_wizard.write_date is 'Last Updated on';

alter table base_partner_merge_automatic_wizard owner to postgres;

create table base_partner_merge_automatic_wizard_res_partner_rel
(
	base_partner_merge_automatic_wizard_id integer not null
		constraint base_partner_merge_automatic__base_partner_merge_automatic_fkey
			references base_partner_merge_automatic_wizard
				on delete cascade,
	res_partner_id integer not null
		constraint base_partner_merge_automatic_wizard_res_par_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint base_partner_merge_automatic_wizard_res_partner_rel_pkey
		primary key (base_partner_merge_automatic_wizard_id, res_partner_id)
);

comment on table base_partner_merge_automatic_wizard_res_partner_rel is 'RELATION BETWEEN base_partner_merge_automatic_wizard AND res_partner';

alter table base_partner_merge_automatic_wizard_res_partner_rel owner to postgres;

create index base_partner_merge_automatic__res_partner_id_base_partner_m_idx
	on base_partner_merge_automatic_wizard_res_partner_rel (res_partner_id, base_partner_merge_automatic_wizard_id);

create table base_partner_merge_line
(
	id integer default nextval('base_partner_merge_line_id_seq'::regclass) not null
		constraint base_partner_merge_line_pkey
			primary key,
	wizard_id integer
		constraint base_partner_merge_line_wizard_id_fkey
			references base_partner_merge_automatic_wizard
				on delete set null,
	min_id integer,
	aggr_ids varchar not null,
	create_uid integer
		constraint base_partner_merge_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_partner_merge_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_partner_merge_line is 'Merge Partner Line';

comment on column base_partner_merge_line.wizard_id is 'Wizard';

comment on column base_partner_merge_line.min_id is 'MinID';

comment on column base_partner_merge_line.aggr_ids is 'Ids';

comment on column base_partner_merge_line.create_uid is 'Created by';

comment on column base_partner_merge_line.create_date is 'Created on';

comment on column base_partner_merge_line.write_uid is 'Last Updated by';

comment on column base_partner_merge_line.write_date is 'Last Updated on';

alter table base_partner_merge_line owner to postgres;

alter table base_partner_merge_automatic_wizard
	add constraint base_partner_merge_automatic_wizard_current_line_id_fkey
		foreign key (current_line_id) references base_partner_merge_line
			on delete set null;

create table base_update_translations
(
	id integer default nextval('base_update_translations_id_seq'::regclass) not null
		constraint base_update_translations_pkey
			primary key,
	lang varchar not null,
	create_uid integer
		constraint base_update_translations_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_update_translations_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_update_translations is 'Update Translations';

comment on column base_update_translations.lang is 'Language';

comment on column base_update_translations.create_uid is 'Created by';

comment on column base_update_translations.create_date is 'Created on';

comment on column base_update_translations.write_uid is 'Last Updated by';

comment on column base_update_translations.write_date is 'Last Updated on';

alter table base_update_translations owner to postgres;

create table bus_bus
(
	id integer default nextval('bus_bus_id_seq'::regclass) not null
		constraint bus_bus_pkey
			primary key,
	channel varchar,
	message varchar,
	create_uid integer
		constraint bus_bus_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint bus_bus_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table bus_bus is 'Communication Bus';

comment on column bus_bus.channel is 'Channel';

comment on column bus_bus.message is 'Message';

comment on column bus_bus.create_uid is 'Created by';

comment on column bus_bus.create_date is 'Created on';

comment on column bus_bus.write_uid is 'Last Updated by';

comment on column bus_bus.write_date is 'Last Updated on';

alter table bus_bus owner to postgres;

create table bus_presence
(
	id integer default nextval('bus_presence_id_seq'::regclass) not null
		constraint bus_presence_pkey
			primary key,
	user_id integer not null
		constraint bus_presence_bus_user_presence_unique
			unique
		constraint bus_presence_user_id_fkey
			references res_users
				on delete cascade,
	last_poll timestamp,
	last_presence timestamp,
	status varchar
);

comment on table bus_presence is 'User Presence';

comment on column bus_presence.user_id is 'Users';

comment on column bus_presence.last_poll is 'Last Poll';

comment on column bus_presence.last_presence is 'Last Presence';

comment on column bus_presence.status is 'IM Status';

alter table bus_presence owner to postgres;

create index bus_presence_user_id_index
	on bus_presence (user_id);

create table cash_box_out
(
	id integer default nextval('cash_box_out_id_seq'::regclass) not null
		constraint cash_box_out_pkey
			primary key,
	name varchar not null,
	amount numeric not null,
	create_uid integer
		constraint cash_box_out_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint cash_box_out_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table cash_box_out is 'Cash Box Out';

comment on column cash_box_out.name is 'Reason';

comment on column cash_box_out.amount is 'Amount';

comment on column cash_box_out.create_uid is 'Created by';

comment on column cash_box_out.create_date is 'Created on';

comment on column cash_box_out.write_uid is 'Last Updated by';

comment on column cash_box_out.write_date is 'Last Updated on';

alter table cash_box_out owner to postgres;

create table cash_flow_wizard
(
	id integer default nextval('cash_flow_wizard_id_seq'::regclass) not null
		constraint cash_flow_wizard_pkey
			primary key,
	start_date date,
	end_date date,
	period varchar,
	is_custom boolean,
	type varchar,
	create_uid integer
		constraint cash_flow_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint cash_flow_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table cash_flow_wizard is 'Wizard for generating cash flow report view';

comment on column cash_flow_wizard.start_date is 'Start date';

comment on column cash_flow_wizard.end_date is 'End date';

comment on column cash_flow_wizard.period is 'Period';

comment on column cash_flow_wizard.is_custom is 'Is Custom';

comment on column cash_flow_wizard.type is 'Type';

comment on column cash_flow_wizard.create_uid is 'Created by';

comment on column cash_flow_wizard.create_date is 'Created on';

comment on column cash_flow_wizard.write_uid is 'Last Updated by';

comment on column cash_flow_wizard.write_date is 'Last Updated on';

alter table cash_flow_wizard owner to postgres;

alter table cesa_location
	add constraint cesa_location_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table cesa_location
	add constraint cesa_location_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table change_password_wizard
(
	id integer default nextval('change_password_wizard_id_seq'::regclass) not null
		constraint change_password_wizard_pkey
			primary key,
	create_uid integer
		constraint change_password_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint change_password_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table change_password_wizard is 'Change Password Wizard';

comment on column change_password_wizard.create_uid is 'Created by';

comment on column change_password_wizard.create_date is 'Created on';

comment on column change_password_wizard.write_uid is 'Last Updated by';

comment on column change_password_wizard.write_date is 'Last Updated on';

alter table change_password_wizard owner to postgres;

create table change_password_user
(
	id integer default nextval('change_password_user_id_seq'::regclass) not null
		constraint change_password_user_pkey
			primary key,
	wizard_id integer not null
		constraint change_password_user_wizard_id_fkey
			references change_password_wizard
				on delete cascade,
	user_id integer not null
		constraint change_password_user_user_id_fkey
			references res_users
				on delete cascade,
	user_login varchar,
	new_passwd varchar,
	create_uid integer
		constraint change_password_user_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint change_password_user_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table change_password_user is 'User, Change Password Wizard';

comment on column change_password_user.wizard_id is 'Wizard';

comment on column change_password_user.user_id is 'User';

comment on column change_password_user.user_login is 'User Login';

comment on column change_password_user.new_passwd is 'New Password';

comment on column change_password_user.create_uid is 'Created by';

comment on column change_password_user.create_date is 'Created on';

comment on column change_password_user.write_uid is 'Last Updated by';

comment on column change_password_user.write_date is 'Last Updated on';

alter table change_password_user owner to postgres;

create table confirm_stock_sms
(
	id integer default nextval('confirm_stock_sms_id_seq'::regclass) not null
		constraint confirm_stock_sms_pkey
			primary key,
	create_uid integer
		constraint confirm_stock_sms_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint confirm_stock_sms_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table confirm_stock_sms is 'Confirm Stock SMS';

comment on column confirm_stock_sms.create_uid is 'Created by';

comment on column confirm_stock_sms.create_date is 'Created on';

comment on column confirm_stock_sms.write_uid is 'Last Updated by';

comment on column confirm_stock_sms.write_date is 'Last Updated on';

alter table confirm_stock_sms owner to postgres;

create table crm_tag
(
	id integer default nextval('crm_tag_id_seq'::regclass) not null
		constraint crm_tag_pkey
			primary key,
	name varchar not null
		constraint crm_tag_name_uniq
			unique,
	color integer,
	create_uid integer
		constraint crm_tag_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint crm_tag_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table crm_tag is 'CRM Tag';

comment on column crm_tag.name is 'Tag Name';

comment on column crm_tag.color is 'Color';

comment on column crm_tag.create_uid is 'Created by';

comment on column crm_tag.create_date is 'Created on';

comment on column crm_tag.write_uid is 'Last Updated by';

comment on column crm_tag.write_date is 'Last Updated on';

alter table crm_tag owner to postgres;

alter table crm_team
	add constraint crm_team_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table crm_team
	add constraint crm_team_user_id_fkey
		foreign key (user_id) references res_users
			on delete set null;

alter table crm_team
	add constraint crm_team_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table decimal_precision
(
	id integer default nextval('decimal_precision_id_seq'::regclass) not null
		constraint decimal_precision_pkey
			primary key,
	name varchar not null
		constraint decimal_precision_name_uniq
			unique,
	digits integer not null,
	create_uid integer
		constraint decimal_precision_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint decimal_precision_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table decimal_precision is 'Decimal Precision';

comment on column decimal_precision.name is 'Usage';

comment on column decimal_precision.digits is 'Digits';

comment on column decimal_precision.create_uid is 'Created by';

comment on column decimal_precision.create_date is 'Created on';

comment on column decimal_precision.write_uid is 'Last Updated by';

comment on column decimal_precision.write_date is 'Last Updated on';

alter table decimal_precision owner to postgres;

create index decimal_precision_name_index
	on decimal_precision (name);

create table delivery_type
(
	id integer default nextval('delivery_type_id_seq'::regclass) not null
		constraint delivery_type_pkey
			primary key,
	name varchar not null,
	create_uid integer
		constraint delivery_type_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint delivery_type_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table delivery_type is 'delivery.type';

comment on column delivery_type.name is 'Delivery Type';

comment on column delivery_type.create_uid is 'Created by';

comment on column delivery_type.create_date is 'Created on';

comment on column delivery_type.write_uid is 'Last Updated by';

comment on column delivery_type.write_date is 'Last Updated on';

alter table delivery_type owner to postgres;

create table digest_digest
(
	id integer default nextval('digest_digest_id_seq'::regclass) not null
		constraint digest_digest_pkey
			primary key,
	name varchar not null,
	periodicity varchar not null,
	next_run_date date,
	company_id integer,
	state varchar,
	kpi_res_users_connected boolean,
	kpi_mail_message_total boolean,
	create_uid integer
		constraint digest_digest_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint digest_digest_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	kpi_account_total_revenue boolean,
	kpi_account_bank_cash boolean,
	kpi_all_sale_total boolean
);

comment on table digest_digest is 'Digest';

comment on column digest_digest.name is 'Name';

comment on column digest_digest.periodicity is 'Periodicity';

comment on column digest_digest.next_run_date is 'Next Send Date';

comment on column digest_digest.company_id is 'Company';

comment on column digest_digest.state is 'Status';

comment on column digest_digest.kpi_res_users_connected is 'Connected Users';

comment on column digest_digest.kpi_mail_message_total is 'Messages';

comment on column digest_digest.create_uid is 'Created by';

comment on column digest_digest.create_date is 'Created on';

comment on column digest_digest.write_uid is 'Last Updated by';

comment on column digest_digest.write_date is 'Last Updated on';

comment on column digest_digest.kpi_account_total_revenue is 'Revenue';

comment on column digest_digest.kpi_account_bank_cash is 'Bank & Cash Moves';

comment on column digest_digest.kpi_all_sale_total is 'All Sales';

alter table digest_digest owner to postgres;

create table digest_digest_res_users_rel
(
	digest_digest_id integer not null
		constraint digest_digest_res_users_rel_digest_digest_id_fkey
			references digest_digest
				on delete cascade,
	res_users_id integer not null
		constraint digest_digest_res_users_rel_res_users_id_fkey
			references res_users
				on delete cascade,
	constraint digest_digest_res_users_rel_pkey
		primary key (digest_digest_id, res_users_id)
);

comment on table digest_digest_res_users_rel is 'RELATION BETWEEN digest_digest AND res_users';

alter table digest_digest_res_users_rel owner to postgres;

create index digest_digest_res_users_rel_res_users_id_digest_digest_id_idx
	on digest_digest_res_users_rel (res_users_id, digest_digest_id);

alter table discount
	add constraint discount_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table discount
	add constraint discount_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table dms_acc_rep_export_wizard_format_rel
(
	account_reports_export_wizard_id integer not null
		constraint dms_acc_rep_export_wizard_for_account_reports_export_wizar_fkey
			references account_reports_export_wizard
				on delete cascade,
	account_reports_export_wizard_format_id integer not null
		constraint dms_acc_rep_export_wizard_fo_account_reports_export_wizar_fkey1
			references account_reports_export_wizard_format
				on delete cascade,
	constraint dms_acc_rep_export_wizard_format_rel_pkey
		primary key (account_reports_export_wizard_id, account_reports_export_wizard_format_id)
);

comment on table dms_acc_rep_export_wizard_format_rel is 'RELATION BETWEEN account_reports_export_wizard AND account_reports_export_wizard_format';

alter table dms_acc_rep_export_wizard_format_rel owner to postgres;

create index dms_acc_rep_export_wizard_for_account_reports_export_wizard_idx
	on dms_acc_rep_export_wizard_format_rel (account_reports_export_wizard_format_id, account_reports_export_wizard_id);

create table evcp_view
(
	id integer default nextval('evcp_view_id_seq'::regclass) not null
		constraint evcp_view_pkey
			primary key,
	start_date date,
	end_date date,
	date_start varchar,
	period varchar,
	is_custom boolean,
	create_uid integer
		constraint evcp_view_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint evcp_view_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table evcp_view is 'Wizard for generating EVCP report view';

comment on column evcp_view.start_date is 'Start date';

comment on column evcp_view.end_date is 'End date';

comment on column evcp_view.date_start is 'Date';

comment on column evcp_view.period is 'Period';

comment on column evcp_view.is_custom is 'Is Custom';

comment on column evcp_view.create_uid is 'Created by';

comment on column evcp_view.create_date is 'Created on';

comment on column evcp_view.write_uid is 'Last Updated by';

comment on column evcp_view.write_date is 'Last Updated on';

alter table evcp_view owner to postgres;

create table followup_send
(
	id integer default nextval('followup_send_id_seq'::regclass) not null
		constraint followup_send_pkey
			primary key,
	create_uid integer
		constraint followup_send_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint followup_send_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table followup_send is 'Send Follow-ups';

comment on column followup_send.create_uid is 'Created by';

comment on column followup_send.create_date is 'Created on';

comment on column followup_send.write_uid is 'Last Updated by';

comment on column followup_send.write_date is 'Last Updated on';

alter table followup_send owner to postgres;

create table followup_send_res_partner_rel
(
	followup_send_id integer not null
		constraint followup_send_res_partner_rel_followup_send_id_fkey
			references followup_send
				on delete cascade,
	res_partner_id integer not null
		constraint followup_send_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint followup_send_res_partner_rel_pkey
		primary key (followup_send_id, res_partner_id)
);

comment on table followup_send_res_partner_rel is 'RELATION BETWEEN followup_send AND res_partner';

alter table followup_send_res_partner_rel owner to postgres;

create index followup_send_res_partner_rel_res_partner_id_followup_send__idx
	on followup_send_res_partner_rel (res_partner_id, followup_send_id);

create table iap_account
(
	id integer default nextval('iap_account_id_seq'::regclass) not null
		constraint iap_account_pkey
			primary key,
	service_name varchar,
	account_token varchar,
	create_uid integer
		constraint iap_account_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint iap_account_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table iap_account is 'IAP Account';

comment on column iap_account.service_name is 'Service Name';

comment on column iap_account.account_token is 'Account Token';

comment on column iap_account.create_uid is 'Created by';

comment on column iap_account.create_date is 'Created on';

comment on column iap_account.write_uid is 'Last Updated by';

comment on column iap_account.write_date is 'Last Updated on';

alter table iap_account owner to postgres;

create table id_zone
(
	id integer default nextval('id_zone_id_seq'::regclass) not null
		constraint id_zone_pkey
			primary key,
	name varchar,
	code varchar(2),
	create_uid integer
		constraint id_zone_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint id_zone_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table id_zone is 'id.zone';

comment on column id_zone.name is 'Label';

comment on column id_zone.code is 'ID Zone';

comment on column id_zone.create_uid is 'Created by';

comment on column id_zone.create_date is 'Created on';

comment on column id_zone.write_uid is 'Last Updated by';

comment on column id_zone.write_date is 'Last Updated on';

alter table id_zone owner to postgres;

alter table cesa_location
	add constraint cesa_location_zone_id_fkey
		foreign key (zone_id) references id_zone
			on delete set null;

create table ir_actions_todo
(
	id integer default nextval('ir_actions_todo_id_seq'::regclass) not null
		constraint ir_actions_todo_pkey
			primary key,
	action_id integer not null,
	sequence integer,
	state varchar not null,
	name varchar,
	create_uid integer
		constraint ir_actions_todo_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_actions_todo_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_actions_todo is 'Configuration Wizards';

comment on column ir_actions_todo.action_id is 'Action';

comment on column ir_actions_todo.sequence is 'Sequence';

comment on column ir_actions_todo.state is 'Status';

comment on column ir_actions_todo.name is 'Name';

comment on column ir_actions_todo.create_uid is 'Created by';

comment on column ir_actions_todo.create_date is 'Created on';

comment on column ir_actions_todo.write_uid is 'Last Updated by';

comment on column ir_actions_todo.write_date is 'Last Updated on';

alter table ir_actions_todo owner to postgres;

create index ir_actions_todo_action_id_index
	on ir_actions_todo (action_id);

alter table ir_attachment
	add constraint ir_attachment_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table ir_attachment
	add constraint ir_attachment_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table ir_config_parameter
(
	id integer default nextval('ir_config_parameter_id_seq'::regclass) not null
		constraint ir_config_parameter_pkey
			primary key,
	key varchar not null
		constraint ir_config_parameter_key_uniq
			unique,
	value text not null,
	create_uid integer
		constraint ir_config_parameter_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_config_parameter_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_config_parameter is 'System Parameter';

comment on column ir_config_parameter.key is 'Key';

comment on column ir_config_parameter.value is 'Value';

comment on column ir_config_parameter.create_uid is 'Created by';

comment on column ir_config_parameter.create_date is 'Created on';

comment on column ir_config_parameter.write_uid is 'Last Updated by';

comment on column ir_config_parameter.write_date is 'Last Updated on';

alter table ir_config_parameter owner to postgres;

create index ir_config_parameter_key_index
	on ir_config_parameter (key);

create table ir_demo
(
	id integer default nextval('ir_demo_id_seq'::regclass) not null
		constraint ir_demo_pkey
			primary key,
	create_uid integer
		constraint ir_demo_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_demo_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_demo is 'Demo';

comment on column ir_demo.create_uid is 'Created by';

comment on column ir_demo.create_date is 'Created on';

comment on column ir_demo.write_uid is 'Last Updated by';

comment on column ir_demo.write_date is 'Last Updated on';

alter table ir_demo owner to postgres;

create table ir_demo_failure_wizard
(
	id integer default nextval('ir_demo_failure_wizard_id_seq'::regclass) not null
		constraint ir_demo_failure_wizard_pkey
			primary key,
	create_uid integer
		constraint ir_demo_failure_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_demo_failure_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_demo_failure_wizard is 'Demo Failure wizard';

comment on column ir_demo_failure_wizard.create_uid is 'Created by';

comment on column ir_demo_failure_wizard.create_date is 'Created on';

comment on column ir_demo_failure_wizard.write_uid is 'Last Updated by';

comment on column ir_demo_failure_wizard.write_date is 'Last Updated on';

alter table ir_demo_failure_wizard owner to postgres;

create table ir_exports
(
	id integer default nextval('ir_exports_id_seq'::regclass) not null
		constraint ir_exports_pkey
			primary key,
	name varchar,
	resource varchar,
	create_uid integer
		constraint ir_exports_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_exports_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_exports is 'Exports';

comment on column ir_exports.name is 'Export Name';

comment on column ir_exports.resource is 'Resource';

comment on column ir_exports.create_uid is 'Created by';

comment on column ir_exports.create_date is 'Created on';

comment on column ir_exports.write_uid is 'Last Updated by';

comment on column ir_exports.write_date is 'Last Updated on';

alter table ir_exports owner to postgres;

create index ir_exports_resource_index
	on ir_exports (resource);

create table ir_exports_line
(
	id integer default nextval('ir_exports_line_id_seq'::regclass) not null
		constraint ir_exports_line_pkey
			primary key,
	name varchar,
	export_id integer
		constraint ir_exports_line_export_id_fkey
			references ir_exports
				on delete cascade,
	create_uid integer
		constraint ir_exports_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_exports_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_exports_line is 'Exports Line';

comment on column ir_exports_line.name is 'Field Name';

comment on column ir_exports_line.export_id is 'Export';

comment on column ir_exports_line.create_uid is 'Created by';

comment on column ir_exports_line.create_date is 'Created on';

comment on column ir_exports_line.write_uid is 'Last Updated by';

comment on column ir_exports_line.write_date is 'Last Updated on';

alter table ir_exports_line owner to postgres;

create index ir_exports_line_export_id_index
	on ir_exports_line (export_id);

create table ir_mail_server
(
	id integer default nextval('ir_mail_server_id_seq'::regclass) not null
		constraint ir_mail_server_pkey
			primary key,
	name varchar not null,
	smtp_host varchar not null,
	smtp_port integer not null,
	smtp_user varchar,
	smtp_pass varchar,
	smtp_encryption varchar not null,
	smtp_debug boolean,
	sequence integer,
	active boolean,
	create_uid integer
		constraint ir_mail_server_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_mail_server_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_mail_server is 'Mail Server';

comment on column ir_mail_server.name is 'Description';

comment on column ir_mail_server.smtp_host is 'SMTP Server';

comment on column ir_mail_server.smtp_port is 'SMTP Port';

comment on column ir_mail_server.smtp_user is 'Username';

comment on column ir_mail_server.smtp_pass is 'Password';

comment on column ir_mail_server.smtp_encryption is 'Connection Security';

comment on column ir_mail_server.smtp_debug is 'Debugging';

comment on column ir_mail_server.sequence is 'Priority';

comment on column ir_mail_server.active is 'Active';

comment on column ir_mail_server.create_uid is 'Created by';

comment on column ir_mail_server.create_date is 'Created on';

comment on column ir_mail_server.write_uid is 'Last Updated by';

comment on column ir_mail_server.write_date is 'Last Updated on';

alter table ir_mail_server owner to postgres;

create index ir_mail_server_name_index
	on ir_mail_server (name);

create table ir_model
(
	id integer default nextval('ir_model_id_seq'::regclass) not null
		constraint ir_model_pkey
			primary key,
	name varchar not null,
	model varchar not null
		constraint ir_model_obj_name_uniq
			unique,
	"order" varchar not null,
	info text,
	state varchar,
	transient boolean,
	create_uid integer
		constraint ir_model_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_model_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	is_mail_thread boolean,
	is_mail_activity boolean,
	is_mail_blacklist boolean
);

comment on table ir_model is 'Models';

comment on column ir_model.name is 'Model Description';

comment on column ir_model.model is 'Model';

comment on column ir_model."order" is 'Order';

comment on column ir_model.info is 'Information';

comment on column ir_model.state is 'Type';

comment on column ir_model.transient is 'Transient Model';

comment on column ir_model.create_uid is 'Created by';

comment on column ir_model.create_date is 'Created on';

comment on column ir_model.write_uid is 'Last Updated by';

comment on column ir_model.write_date is 'Last Updated on';

comment on column ir_model.is_mail_thread is 'Mail Thread';

comment on column ir_model.is_mail_activity is 'Mail Activity';

comment on column ir_model.is_mail_blacklist is 'Mail Blacklist';

alter table ir_model owner to postgres;

create table fetchmail_server
(
	id integer default nextval('fetchmail_server_id_seq'::regclass) not null
		constraint fetchmail_server_pkey
			primary key,
	name varchar not null,
	active boolean,
	state varchar,
	server varchar,
	port integer,
	server_type varchar not null,
	is_ssl boolean,
	attach boolean,
	original boolean,
	date timestamp,
	"user" varchar,
	password varchar,
	object_id integer
		constraint fetchmail_server_object_id_fkey
			references ir_model
				on delete set null,
	priority integer,
	configuration text,
	script varchar,
	create_uid integer
		constraint fetchmail_server_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint fetchmail_server_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table fetchmail_server is 'Incoming Mail Server';

comment on column fetchmail_server.name is 'Name';

comment on column fetchmail_server.active is 'Active';

comment on column fetchmail_server.state is 'Status';

comment on column fetchmail_server.server is 'Server Name';

comment on column fetchmail_server.port is 'Port';

comment on column fetchmail_server.server_type is 'Server Type';

comment on column fetchmail_server.is_ssl is 'SSL/TLS';

comment on column fetchmail_server.attach is 'Keep Attachments';

comment on column fetchmail_server.original is 'Keep Original';

comment on column fetchmail_server.date is 'Last Fetch Date';

comment on column fetchmail_server."user" is 'Username';

comment on column fetchmail_server.password is 'Password';

comment on column fetchmail_server.object_id is 'Create a New Record';

comment on column fetchmail_server.priority is 'Server Priority';

comment on column fetchmail_server.configuration is 'Configuration';

comment on column fetchmail_server.script is 'Script';

comment on column fetchmail_server.create_uid is 'Created by';

comment on column fetchmail_server.create_date is 'Created on';

comment on column fetchmail_server.write_uid is 'Last Updated by';

comment on column fetchmail_server.write_date is 'Last Updated on';

alter table fetchmail_server owner to postgres;

create index fetchmail_server_server_type_index
	on fetchmail_server (server_type);

create index fetchmail_server_state_index
	on fetchmail_server (state);

create table ir_act_client
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_act_client_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_act_client_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_act_client_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_client_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	tag varchar not null,
	target varchar,
	res_model varchar,
	context varchar not null,
	params_store bytea
);

comment on column ir_act_client.tag is 'Client action tag';

comment on column ir_act_client.target is 'Target Window';

comment on column ir_act_client.res_model is 'Destination Model';

comment on column ir_act_client.context is 'Context Value';

comment on column ir_act_client.params_store is 'Params storage';

alter table ir_act_client owner to postgres;

create table ir_act_url
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_act_url_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_act_url_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_act_url_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_url_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	url text not null,
	target varchar not null
);

comment on column ir_act_url.url is 'Action URL';

comment on column ir_act_url.target is 'Action Target';

alter table ir_act_url owner to postgres;

create table ir_act_window
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_act_window_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_act_window_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_act_window_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_window_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	view_id integer
		constraint ir_act_window_view_id_fkey
			references ir_ui_view
				on delete set null,
	domain varchar,
	context varchar not null,
	res_id integer,
	res_model varchar not null,
	target varchar,
	view_mode varchar not null,
	usage varchar,
	"limit" integer,
	search_view_id integer
		constraint ir_act_window_search_view_id_fkey
			references ir_ui_view
				on delete set null,
	filter boolean
);

comment on column ir_act_window.view_id is 'View Ref.';

comment on column ir_act_window.domain is 'Domain Value';

comment on column ir_act_window.context is 'Context Value';

comment on column ir_act_window.res_id is 'Record ID';

comment on column ir_act_window.res_model is 'Destination Model';

comment on column ir_act_window.target is 'Target Window';

comment on column ir_act_window.view_mode is 'View Mode';

comment on column ir_act_window.usage is 'Action Usage';

comment on column ir_act_window."limit" is 'Limit';

comment on column ir_act_window.search_view_id is 'Search View Ref.';

comment on column ir_act_window.filter is 'Filter';

alter table ir_act_window owner to postgres;

create table account_tax_report_line
(
	id integer default nextval('account_tax_report_line_id_seq'::regclass) not null
		constraint account_tax_report_line_pkey
			primary key,
	name varchar not null,
	report_action_id integer
		constraint account_tax_report_line_report_action_id_fkey
			references ir_act_window
				on delete set null,
	parent_id integer
		constraint account_tax_report_line_parent_id_fkey
			references account_tax_report_line
				on delete set null,
	sequence integer not null,
	parent_path varchar,
	report_id integer not null
		constraint account_tax_report_line_report_id_fkey
			references account_tax_report
				on delete cascade,
	tag_name varchar,
	code varchar,
	formula varchar,
	create_uid integer
		constraint account_tax_report_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_report_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tax_report_line is 'Account Tax Report Line';

comment on column account_tax_report_line.name is 'Name';

comment on column account_tax_report_line.report_action_id is 'Report Action';

comment on column account_tax_report_line.parent_id is 'Parent Line';

comment on column account_tax_report_line.sequence is 'Sequence';

comment on column account_tax_report_line.parent_path is 'Parent Path';

comment on column account_tax_report_line.report_id is 'Tax Report';

comment on column account_tax_report_line.tag_name is 'Tag Name';

comment on column account_tax_report_line.code is 'Code';

comment on column account_tax_report_line.formula is 'Formula';

comment on column account_tax_report_line.create_uid is 'Created by';

comment on column account_tax_report_line.create_date is 'Created on';

comment on column account_tax_report_line.write_uid is 'Last Updated by';

comment on column account_tax_report_line.write_date is 'Last Updated on';

alter table account_tax_report_line owner to postgres;

create index account_tax_report_line_parent_path_index
	on account_tax_report_line (parent_path);

create table account_tax_report_line_tags_rel
(
	account_account_tag_id integer not null
		constraint account_tax_report_line_tags_rel_account_account_tag_id_fkey
			references account_account_tag
				on delete cascade,
	account_tax_report_line_id integer not null
		constraint account_tax_report_line_tags_re_account_tax_report_line_id_fkey
			references account_tax_report_line
				on delete cascade,
	constraint account_tax_report_line_tags_rel_pkey
		primary key (account_account_tag_id, account_tax_report_line_id)
);

comment on table account_tax_report_line_tags_rel is 'RELATION BETWEEN account_account_tag AND account_tax_report_line';

alter table account_tax_report_line_tags_rel owner to postgres;

create index account_tax_report_line_tags__account_tax_report_line_id_ac_idx
	on account_tax_report_line_tags_rel (account_tax_report_line_id, account_account_tag_id);

create table ir_act_window_view
(
	id integer default nextval('ir_act_window_view_id_seq'::regclass) not null
		constraint ir_act_window_view_pkey
			primary key,
	sequence integer,
	view_id integer
		constraint ir_act_window_view_view_id_fkey
			references ir_ui_view
				on delete set null,
	view_mode varchar not null,
	act_window_id integer
		constraint ir_act_window_view_act_window_id_fkey
			references ir_act_window
				on delete cascade,
	multi boolean,
	create_uid integer
		constraint ir_act_window_view_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_window_view_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint act_window_view_unique_mode_per_action
		unique (act_window_id, view_mode)
);

comment on table ir_act_window_view is 'Action Window View';

comment on column ir_act_window_view.sequence is 'Sequence';

comment on column ir_act_window_view.view_id is 'View';

comment on column ir_act_window_view.view_mode is 'View Type';

comment on column ir_act_window_view.act_window_id is 'Action';

comment on column ir_act_window_view.multi is 'On Multiple Doc.';

comment on column ir_act_window_view.create_uid is 'Created by';

comment on column ir_act_window_view.create_date is 'Created on';

comment on column ir_act_window_view.write_uid is 'Last Updated by';

comment on column ir_act_window_view.write_date is 'Last Updated on';

alter table ir_act_window_view owner to postgres;

create table ir_actions
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_actions_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_actions_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_actions_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_actions_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on column ir_actions.name is 'Name';

comment on column ir_actions.type is 'Action Type';

comment on column ir_actions.help is 'Action Description';

comment on column ir_actions.binding_model_id is 'Binding Model';

comment on column ir_actions.binding_type is 'Binding Type';

comment on column ir_actions.binding_view_types is 'Binding View Types';

comment on column ir_actions.create_uid is 'Created by';

comment on column ir_actions.create_date is 'Created on';

comment on column ir_actions.write_uid is 'Last Updated by';

comment on column ir_actions.write_date is 'Last Updated on';

alter table ir_actions owner to postgres;

create index ir_model_model_index
	on ir_model (model);

create table ir_model_data
(
	id integer default nextval('ir_model_data_id_seq'::regclass) not null
		constraint ir_model_data_pkey
			primary key,
	create_uid integer
		constraint ir_model_data_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp default timezone('UTC'::text, now()),
	write_date timestamp default timezone('UTC'::text, now()),
	write_uid integer
		constraint ir_model_data_write_uid_fkey
			references res_users
				on delete set null,
	noupdate boolean default false,
	name varchar not null,
	module varchar not null,
	model varchar not null,
	res_id integer,
	constraint ir_model_data_module_name_uniq_index
		unique (module, name)
);

alter table ir_model_data owner to postgres;

create index ir_model_data_model_res_id_index
	on ir_model_data (model, res_id);

create table ir_model_fields
(
	id integer default nextval('ir_model_fields_id_seq'::regclass) not null
		constraint ir_model_fields_pkey
			primary key,
	name varchar not null,
	complete_name varchar,
	model varchar not null,
	relation varchar,
	relation_field varchar,
	relation_field_id integer
		constraint ir_model_fields_relation_field_id_fkey
			references ir_model_fields
				on delete cascade,
	model_id integer not null
		constraint ir_model_fields_model_id_fkey
			references ir_model
				on delete cascade,
	field_description varchar not null,
	help text,
	ttype varchar not null,
	copied boolean,
	related varchar,
	related_field_id integer
		constraint ir_model_fields_related_field_id_fkey
			references ir_model_fields
				on delete cascade,
	required boolean,
	readonly boolean,
	index boolean,
	translate boolean,
	size integer,
	state varchar not null,
	on_delete varchar,
	domain varchar,
	group_expand boolean,
	selectable boolean,
	relation_table varchar,
	column1 varchar,
	column2 varchar,
	compute text,
	depends varchar,
	store boolean,
	create_uid integer
		constraint ir_model_fields_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_model_fields_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	tracking integer,
	constraint ir_model_fields_name_unique
		unique (model, name)
);

comment on table ir_model_fields is 'Fields';

comment on column ir_model_fields.name is 'Field Name';

comment on column ir_model_fields.complete_name is 'Complete Name';

comment on column ir_model_fields.model is 'Model Name';

comment on column ir_model_fields.relation is 'Related Model';

comment on column ir_model_fields.relation_field is 'Relation Field';

comment on column ir_model_fields.relation_field_id is 'Relation field';

comment on column ir_model_fields.model_id is 'Model';

comment on column ir_model_fields.field_description is 'Field Label';

comment on column ir_model_fields.help is 'Field Help';

comment on column ir_model_fields.ttype is 'Field Type';

comment on column ir_model_fields.copied is 'Copied';

comment on column ir_model_fields.related is 'Related Field';

comment on column ir_model_fields.related_field_id is 'Related field';

comment on column ir_model_fields.required is 'Required';

comment on column ir_model_fields.readonly is 'Readonly';

comment on column ir_model_fields.index is 'Indexed';

comment on column ir_model_fields.translate is 'Translatable';

comment on column ir_model_fields.size is 'Size';

comment on column ir_model_fields.state is 'Type';

comment on column ir_model_fields.on_delete is 'On Delete';

comment on column ir_model_fields.domain is 'Domain';

comment on column ir_model_fields.group_expand is 'Expand Groups';

comment on column ir_model_fields.selectable is 'Selectable';

comment on column ir_model_fields.relation_table is 'Relation Table';

comment on column ir_model_fields.column1 is 'Column 1';

comment on column ir_model_fields.column2 is 'Column 2';

comment on column ir_model_fields.compute is 'Compute';

comment on column ir_model_fields.depends is 'Dependencies';

comment on column ir_model_fields.store is 'Stored';

comment on column ir_model_fields.create_uid is 'Created by';

comment on column ir_model_fields.create_date is 'Created on';

comment on column ir_model_fields.write_uid is 'Last Updated by';

comment on column ir_model_fields.write_date is 'Last Updated on';

comment on column ir_model_fields.tracking is 'Enable Ordered Tracking';

alter table ir_model_fields owner to postgres;

create table ir_default
(
	id integer default nextval('ir_default_id_seq'::regclass) not null
		constraint ir_default_pkey
			primary key,
	field_id integer not null
		constraint ir_default_field_id_fkey
			references ir_model_fields
				on delete cascade,
	user_id integer
		constraint ir_default_user_id_fkey
			references res_users
				on delete cascade,
	company_id integer,
	condition varchar,
	json_value varchar not null,
	create_uid integer
		constraint ir_default_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_default_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_default is 'Default Values';

comment on column ir_default.field_id is 'Field';

comment on column ir_default.user_id is 'User';

comment on column ir_default.company_id is 'Company';

comment on column ir_default.condition is 'Condition';

comment on column ir_default.json_value is 'Default Value (JSON format)';

comment on column ir_default.create_uid is 'Created by';

comment on column ir_default.create_date is 'Created on';

comment on column ir_default.write_uid is 'Last Updated by';

comment on column ir_default.write_date is 'Last Updated on';

alter table ir_default owner to postgres;

create index ir_default_company_id_index
	on ir_default (company_id);

create index ir_default_field_id_index
	on ir_default (field_id);

create index ir_default_user_id_index
	on ir_default (user_id);

create index ir_model_fields_complete_name_index
	on ir_model_fields (complete_name);

create index ir_model_fields_model_id_index
	on ir_model_fields (model_id);

create index ir_model_fields_model_index
	on ir_model_fields (model);

create index ir_model_fields_name_index
	on ir_model_fields (name);

create index ir_model_fields_state_index
	on ir_model_fields (state);

create table ir_model_fields_selection
(
	id integer default nextval('ir_model_fields_selection_id_seq'::regclass) not null
		constraint ir_model_fields_selection_pkey
			primary key,
	field_id integer not null
		constraint ir_model_fields_selection_field_id_fkey
			references ir_model_fields
				on delete cascade,
	value varchar not null,
	name varchar not null,
	sequence integer,
	create_uid integer
		constraint ir_model_fields_selection_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_model_fields_selection_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint ir_model_fields_selection_selection_field_uniq
		unique (field_id, value)
);

comment on table ir_model_fields_selection is 'Fields Selection';

comment on column ir_model_fields_selection.field_id is 'Field';

comment on column ir_model_fields_selection.value is 'Value';

comment on column ir_model_fields_selection.name is 'Name';

comment on column ir_model_fields_selection.sequence is 'Sequence';

comment on column ir_model_fields_selection.create_uid is 'Created by';

comment on column ir_model_fields_selection.create_date is 'Created on';

comment on column ir_model_fields_selection.write_uid is 'Last Updated by';

comment on column ir_model_fields_selection.write_date is 'Last Updated on';

alter table ir_model_fields_selection owner to postgres;

create index ir_model_fields_selection_field_id_index
	on ir_model_fields_selection (field_id);

create table ir_module_category
(
	id integer default nextval('ir_module_category_id_seq'::regclass) not null
		constraint ir_module_category_pkey
			primary key,
	create_uid integer
		constraint ir_module_category_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_date timestamp,
	write_uid integer
		constraint ir_module_category_write_uid_fkey
			references res_users
				on delete set null,
	parent_id integer
		constraint ir_module_category_parent_id_fkey
			references ir_module_category
				on delete set null,
	name varchar not null,
	description text,
	sequence integer,
	visible boolean,
	exclusive boolean
);

comment on column ir_module_category.description is 'Description';

comment on column ir_module_category.sequence is 'Sequence';

comment on column ir_module_category.visible is 'Visible';

comment on column ir_module_category.exclusive is 'Exclusive';

alter table ir_module_category owner to postgres;

create index ir_module_category_name_index
	on ir_module_category (name);

create index ir_module_category_parent_id_index
	on ir_module_category (parent_id);

create table ir_module_module
(
	id integer default nextval('ir_module_module_id_seq'::regclass) not null
		constraint ir_module_module_pkey
			primary key,
	create_uid integer
		constraint ir_module_module_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_date timestamp,
	write_uid integer
		constraint ir_module_module_write_uid_fkey
			references res_users
				on delete set null,
	website varchar,
	summary varchar,
	name varchar not null
		constraint ir_module_module_name_uniq
			unique,
	author varchar,
	icon varchar,
	state varchar(16),
	latest_version varchar,
	shortdesc varchar,
	category_id integer
		constraint ir_module_module_category_id_fkey
			references ir_module_category
				on delete set null,
	description text,
	application boolean default false,
	demo boolean default false,
	web boolean default false,
	license varchar(32),
	sequence integer default 100,
	auto_install boolean default false,
	to_buy boolean default false,
	maintainer varchar,
	contributors text,
	published_version varchar,
	url varchar,
	menus_by_module text,
	reports_by_module text,
	views_by_module text
);

comment on column ir_module_module.maintainer is 'Maintainer';

comment on column ir_module_module.contributors is 'Contributors';

comment on column ir_module_module.published_version is 'Published Version';

comment on column ir_module_module.url is 'URL';

comment on column ir_module_module.menus_by_module is 'Menus';

comment on column ir_module_module.reports_by_module is 'Reports';

comment on column ir_module_module.views_by_module is 'Views';

alter table ir_module_module owner to postgres;

create table base_module_uninstall
(
	id integer default nextval('base_module_uninstall_id_seq'::regclass) not null
		constraint base_module_uninstall_pkey
			primary key,
	show_all boolean,
	module_id integer not null
		constraint base_module_uninstall_module_id_fkey
			references ir_module_module
				on delete cascade,
	create_uid integer
		constraint base_module_uninstall_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_module_uninstall_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_module_uninstall is 'Module Uninstall';

comment on column base_module_uninstall.show_all is 'Show All';

comment on column base_module_uninstall.module_id is 'Module';

comment on column base_module_uninstall.create_uid is 'Created by';

comment on column base_module_uninstall.create_date is 'Created on';

comment on column base_module_uninstall.write_uid is 'Last Updated by';

comment on column base_module_uninstall.write_date is 'Last Updated on';

alter table base_module_uninstall owner to postgres;

create table ir_demo_failure
(
	id integer default nextval('ir_demo_failure_id_seq'::regclass) not null
		constraint ir_demo_failure_pkey
			primary key,
	module_id integer not null
		constraint ir_demo_failure_module_id_fkey
			references ir_module_module
				on delete cascade,
	error varchar,
	wizard_id integer
		constraint ir_demo_failure_wizard_id_fkey
			references ir_demo_failure_wizard
				on delete set null,
	create_uid integer
		constraint ir_demo_failure_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_demo_failure_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_demo_failure is 'Demo failure';

comment on column ir_demo_failure.module_id is 'Module';

comment on column ir_demo_failure.error is 'Error';

comment on column ir_demo_failure.wizard_id is 'Wizard';

comment on column ir_demo_failure.create_uid is 'Created by';

comment on column ir_demo_failure.create_date is 'Created on';

comment on column ir_demo_failure.write_uid is 'Last Updated by';

comment on column ir_demo_failure.write_date is 'Last Updated on';

alter table ir_demo_failure owner to postgres;

create table ir_model_constraint
(
	id integer default nextval('ir_model_constraint_id_seq'::regclass) not null
		constraint ir_model_constraint_pkey
			primary key,
	name varchar not null,
	definition varchar,
	message varchar,
	model integer not null
		constraint ir_model_constraint_model_fkey
			references ir_model
				on delete cascade,
	module integer not null
		constraint ir_model_constraint_module_fkey
			references ir_module_module
				on delete cascade,
	type varchar(1) not null,
	write_date timestamp,
	create_date timestamp,
	create_uid integer
		constraint ir_model_constraint_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint ir_model_constraint_write_uid_fkey
			references res_users
				on delete set null,
	constraint ir_model_constraint_module_name_uniq
		unique (name, module)
);

comment on table ir_model_constraint is 'Model Constraint';

comment on column ir_model_constraint.name is 'Constraint';

comment on column ir_model_constraint.definition is 'Definition';

comment on column ir_model_constraint.message is 'Message';

comment on column ir_model_constraint.model is 'Model';

comment on column ir_model_constraint.module is 'Module';

comment on column ir_model_constraint.type is 'Constraint Type';

comment on column ir_model_constraint.write_date is 'Write Date';

comment on column ir_model_constraint.create_date is 'Create Date';

comment on column ir_model_constraint.create_uid is 'Created by';

comment on column ir_model_constraint.write_uid is 'Last Updated by';

alter table ir_model_constraint owner to postgres;

create index ir_model_constraint_model_index
	on ir_model_constraint (model);

create index ir_model_constraint_module_index
	on ir_model_constraint (module);

create index ir_model_constraint_name_index
	on ir_model_constraint (name);

create index ir_model_constraint_type_index
	on ir_model_constraint (type);

create table ir_model_relation
(
	id integer default nextval('ir_model_relation_id_seq'::regclass) not null
		constraint ir_model_relation_pkey
			primary key,
	name varchar not null,
	model integer not null
		constraint ir_model_relation_model_fkey
			references ir_model
				on delete cascade,
	module integer not null
		constraint ir_model_relation_module_fkey
			references ir_module_module
				on delete cascade,
	write_date timestamp,
	create_date timestamp,
	create_uid integer
		constraint ir_model_relation_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint ir_model_relation_write_uid_fkey
			references res_users
				on delete set null
);

comment on table ir_model_relation is 'Relation Model';

comment on column ir_model_relation.name is 'Relation Name';

comment on column ir_model_relation.model is 'Model';

comment on column ir_model_relation.module is 'Module';

comment on column ir_model_relation.write_date is 'Write Date';

comment on column ir_model_relation.create_date is 'Create Date';

comment on column ir_model_relation.create_uid is 'Created by';

comment on column ir_model_relation.write_uid is 'Last Updated by';

alter table ir_model_relation owner to postgres;

create index ir_model_relation_model_index
	on ir_model_relation (model);

create index ir_model_relation_module_index
	on ir_model_relation (module);

create index ir_model_relation_name_index
	on ir_model_relation (name);

create index ir_module_module_category_id_index
	on ir_module_module (category_id);

create index ir_module_module_name_index
	on ir_module_module (name);

create index ir_module_module_state_index
	on ir_module_module (state);

create table ir_module_module_dependency
(
	id integer default nextval('ir_module_module_dependency_id_seq'::regclass) not null
		constraint ir_module_module_dependency_pkey
			primary key,
	create_uid integer
		constraint ir_module_module_dependency_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_date timestamp,
	write_uid integer
		constraint ir_module_module_dependency_write_uid_fkey
			references res_users
				on delete set null,
	name varchar,
	module_id integer
		constraint ir_module_module_dependency_module_id_fkey
			references ir_module_module
				on delete cascade,
	auto_install_required boolean default true
);

alter table ir_module_module_dependency owner to postgres;

create index ir_module_module_dependency_name_index
	on ir_module_module_dependency (name);

create table ir_module_module_exclusion
(
	id integer default nextval('ir_module_module_exclusion_id_seq'::regclass) not null
		constraint ir_module_module_exclusion_pkey
			primary key,
	name varchar,
	module_id integer
		constraint ir_module_module_exclusion_module_id_fkey
			references ir_module_module
				on delete cascade,
	create_uid integer
		constraint ir_module_module_exclusion_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_module_module_exclusion_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_module_module_exclusion is 'Module exclusion';

comment on column ir_module_module_exclusion.name is 'Name';

comment on column ir_module_module_exclusion.module_id is 'Module';

comment on column ir_module_module_exclusion.create_uid is 'Created by';

comment on column ir_module_module_exclusion.create_date is 'Created on';

comment on column ir_module_module_exclusion.write_uid is 'Last Updated by';

comment on column ir_module_module_exclusion.write_date is 'Last Updated on';

alter table ir_module_module_exclusion owner to postgres;

create index ir_module_module_exclusion_name_index
	on ir_module_module_exclusion (name);

create table ir_rule
(
	id integer default nextval('ir_rule_id_seq'::regclass) not null
		constraint ir_rule_pkey
			primary key,
	name varchar,
	active boolean,
	model_id integer not null
		constraint ir_rule_model_id_fkey
			references ir_model
				on delete cascade,
	domain_force text,
	perm_read boolean,
	perm_write boolean,
	perm_create boolean,
	perm_unlink boolean,
	global boolean,
	create_uid integer
		constraint ir_rule_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_rule_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_rule is 'Record Rule';

comment on column ir_rule.name is 'Name';

comment on column ir_rule.active is 'Active';

comment on column ir_rule.model_id is 'Model';

comment on column ir_rule.domain_force is 'Domain';

comment on column ir_rule.perm_read is 'Apply for Read';

comment on column ir_rule.perm_write is 'Apply for Write';

comment on column ir_rule.perm_create is 'Apply for Create';

comment on column ir_rule.perm_unlink is 'Apply for Delete';

comment on column ir_rule.global is 'Global';

comment on column ir_rule.create_uid is 'Created by';

comment on column ir_rule.create_date is 'Created on';

comment on column ir_rule.write_uid is 'Last Updated by';

comment on column ir_rule.write_date is 'Last Updated on';

alter table ir_rule owner to postgres;

create index ir_rule_model_id_index
	on ir_rule (model_id);

create index ir_rule_name_index
	on ir_rule (name);

create table ir_sequence
(
	id integer default nextval('ir_sequence_id_seq'::regclass) not null
		constraint ir_sequence_pkey
			primary key,
	name varchar not null,
	code varchar,
	implementation varchar not null,
	active boolean,
	prefix varchar,
	suffix varchar,
	number_next integer not null,
	number_increment integer not null,
	padding integer not null,
	company_id integer,
	use_date_range boolean,
	create_uid integer
		constraint ir_sequence_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_sequence_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_sequence is 'Sequence';

comment on column ir_sequence.name is 'Name';

comment on column ir_sequence.code is 'Sequence Code';

comment on column ir_sequence.implementation is 'Implementation';

comment on column ir_sequence.active is 'Active';

comment on column ir_sequence.prefix is 'Prefix';

comment on column ir_sequence.suffix is 'Suffix';

comment on column ir_sequence.number_next is 'Next Number';

comment on column ir_sequence.number_increment is 'Step';

comment on column ir_sequence.padding is 'Sequence Size';

comment on column ir_sequence.company_id is 'Company';

comment on column ir_sequence.use_date_range is 'Use subsequences per date_range';

comment on column ir_sequence.create_uid is 'Created by';

comment on column ir_sequence.create_date is 'Created on';

comment on column ir_sequence.write_uid is 'Last Updated by';

comment on column ir_sequence.write_date is 'Last Updated on';

alter table ir_sequence owner to postgres;

alter table account_journal
	add constraint account_journal_secure_sequence_id_fkey
		foreign key (secure_sequence_id) references ir_sequence
			on delete set null;

create table ir_sequence_date_range
(
	id integer default nextval('ir_sequence_date_range_id_seq'::regclass) not null
		constraint ir_sequence_date_range_pkey
			primary key,
	date_from date not null,
	date_to date not null,
	sequence_id integer not null
		constraint ir_sequence_date_range_sequence_id_fkey
			references ir_sequence
				on delete cascade,
	number_next integer not null,
	create_uid integer
		constraint ir_sequence_date_range_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_sequence_date_range_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_sequence_date_range is 'Sequence Date Range';

comment on column ir_sequence_date_range.date_from is 'From';

comment on column ir_sequence_date_range.date_to is 'To';

comment on column ir_sequence_date_range.sequence_id is 'Main Sequence';

comment on column ir_sequence_date_range.number_next is 'Next Number';

comment on column ir_sequence_date_range.create_uid is 'Created by';

comment on column ir_sequence_date_range.create_date is 'Created on';

comment on column ir_sequence_date_range.write_uid is 'Last Updated by';

comment on column ir_sequence_date_range.write_date is 'Last Updated on';

alter table ir_sequence_date_range owner to postgres;

create table ir_ui_menu
(
	id integer default nextval('ir_ui_menu_id_seq'::regclass) not null
		constraint ir_ui_menu_pkey
			primary key,
	name varchar not null,
	active boolean,
	sequence integer,
	parent_id integer
		constraint ir_ui_menu_parent_id_fkey
			references ir_ui_menu
				on delete restrict,
	parent_path varchar,
	web_icon varchar,
	action varchar,
	create_uid integer
		constraint ir_ui_menu_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_ui_menu_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_ui_menu is 'Menu';

comment on column ir_ui_menu.name is 'Menu';

comment on column ir_ui_menu.active is 'Active';

comment on column ir_ui_menu.sequence is 'Sequence';

comment on column ir_ui_menu.parent_id is 'Parent Menu';

comment on column ir_ui_menu.parent_path is 'Parent Path';

comment on column ir_ui_menu.web_icon is 'Web Icon File';

comment on column ir_ui_menu.action is 'Action';

comment on column ir_ui_menu.create_uid is 'Created by';

comment on column ir_ui_menu.create_date is 'Created on';

comment on column ir_ui_menu.write_uid is 'Last Updated by';

comment on column ir_ui_menu.write_date is 'Last Updated on';

alter table ir_ui_menu owner to postgres;

create index ir_ui_menu_parent_id_index
	on ir_ui_menu (parent_id);

create index ir_ui_menu_parent_path_index
	on ir_ui_menu (parent_path);

alter table ir_ui_view
	add constraint ir_ui_view_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table ir_ui_view
	add constraint ir_ui_view_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table ir_ui_view_custom
(
	id integer default nextval('ir_ui_view_custom_id_seq'::regclass) not null
		constraint ir_ui_view_custom_pkey
			primary key,
	ref_id integer not null
		constraint ir_ui_view_custom_ref_id_fkey
			references ir_ui_view
				on delete cascade,
	user_id integer not null
		constraint ir_ui_view_custom_user_id_fkey
			references res_users
				on delete cascade,
	arch text not null,
	create_uid integer
		constraint ir_ui_view_custom_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_ui_view_custom_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_ui_view_custom is 'Custom View';

comment on column ir_ui_view_custom.ref_id is 'Original View';

comment on column ir_ui_view_custom.user_id is 'User';

comment on column ir_ui_view_custom.arch is 'View Architecture';

comment on column ir_ui_view_custom.create_uid is 'Created by';

comment on column ir_ui_view_custom.create_date is 'Created on';

comment on column ir_ui_view_custom.write_uid is 'Last Updated by';

comment on column ir_ui_view_custom.write_date is 'Last Updated on';

alter table ir_ui_view_custom owner to postgres;

create index ir_ui_view_custom_ref_id_index
	on ir_ui_view_custom (ref_id);

create index ir_ui_view_custom_user_id_index
	on ir_ui_view_custom (user_id);

create index ir_ui_view_custom_user_id_ref_id
	on ir_ui_view_custom (user_id, ref_id);

create table journal_account_type_control_rel
(
	journal_id integer not null
		constraint journal_account_type_control_rel_journal_id_fkey
			references account_journal
				on delete cascade,
	type_id integer not null
		constraint journal_account_type_control_rel_type_id_fkey
			references account_account_type
				on delete cascade,
	constraint journal_account_type_control_rel_pkey
		primary key (journal_id, type_id)
);

comment on table journal_account_type_control_rel is 'RELATION BETWEEN account_journal AND account_account_type';

alter table journal_account_type_control_rel owner to postgres;

create index journal_account_type_control_rel_type_id_journal_id_idx
	on journal_account_type_control_rel (type_id, journal_id);

create table mail_activity_type
(
	id integer default nextval('mail_activity_type_id_seq'::regclass) not null
		constraint mail_activity_type_pkey
			primary key,
	name varchar not null,
	summary varchar,
	sequence integer,
	active boolean,
	create_uid integer
		constraint mail_activity_type_create_uid_fkey
			references res_users
				on delete set null,
	delay_count integer,
	delay_unit varchar not null,
	delay_from varchar not null,
	icon varchar,
	decoration_type varchar,
	res_model_id integer
		constraint mail_activity_type_res_model_id_fkey
			references ir_model
				on delete set null,
	default_next_type_id integer
		constraint mail_activity_type_default_next_type_id_fkey
			references mail_activity_type
				on delete restrict,
	force_next boolean,
	category varchar,
	default_user_id integer
		constraint mail_activity_type_default_user_id_fkey
			references res_users
				on delete set null,
	default_description text,
	create_date timestamp,
	write_uid integer
		constraint mail_activity_type_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_activity_type is 'Activity Type';

comment on column mail_activity_type.name is 'Name';

comment on column mail_activity_type.summary is 'Default Summary';

comment on column mail_activity_type.sequence is 'Sequence';

comment on column mail_activity_type.active is 'Active';

comment on column mail_activity_type.create_uid is 'Create Uid';

comment on column mail_activity_type.delay_count is 'Scheduled Date';

comment on column mail_activity_type.delay_unit is 'Delay units';

comment on column mail_activity_type.delay_from is 'Delay Type';

comment on column mail_activity_type.icon is 'Icon';

comment on column mail_activity_type.decoration_type is 'Decoration Type';

comment on column mail_activity_type.res_model_id is 'Model';

comment on column mail_activity_type.default_next_type_id is 'Default Next Activity';

comment on column mail_activity_type.force_next is 'Trigger Next Activity';

comment on column mail_activity_type.category is 'Action to Perform';

comment on column mail_activity_type.default_user_id is 'Default User';

comment on column mail_activity_type.default_description is 'Default Description';

comment on column mail_activity_type.create_date is 'Created on';

comment on column mail_activity_type.write_uid is 'Last Updated by';

comment on column mail_activity_type.write_date is 'Last Updated on';

alter table mail_activity_type owner to postgres;

create table account_followup_followup_line
(
	id integer default nextval('account_followup_followup_line_id_seq'::regclass) not null
		constraint account_followup_followup_line_pkey
			primary key,
	name varchar not null,
	delay integer not null,
	company_id integer not null,
	sms_description varchar,
	description text,
	send_email boolean,
	print_letter boolean,
	send_sms boolean,
	join_invoices boolean,
	manual_action boolean,
	manual_action_note text,
	manual_action_type_id integer
		constraint account_followup_followup_line_manual_action_type_id_fkey
			references mail_activity_type
				on delete set null,
	manual_action_responsible_id integer
		constraint account_followup_followup_lin_manual_action_responsible_id_fkey
			references res_users
				on delete set null,
	auto_execute boolean,
	create_uid integer
		constraint account_followup_followup_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_followup_followup_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	send_letter boolean,
	constraint account_followup_followup_line_days_uniq
		unique (company_id, delay)
);

comment on table account_followup_followup_line is 'Follow-up Criteria';

comment on column account_followup_followup_line.name is 'Follow-Up Action';

comment on column account_followup_followup_line.delay is 'Due Days';

comment on column account_followup_followup_line.company_id is 'Company';

comment on column account_followup_followup_line.sms_description is 'SMS Text Message';

comment on column account_followup_followup_line.description is 'Printed Message';

comment on column account_followup_followup_line.send_email is 'Send an Email';

comment on column account_followup_followup_line.print_letter is 'Print a Letter';

comment on column account_followup_followup_line.send_sms is 'Send an SMS Message';

comment on column account_followup_followup_line.join_invoices is 'Join open Invoices';

comment on column account_followup_followup_line.manual_action is 'Manual Action';

comment on column account_followup_followup_line.manual_action_note is 'Action To Do';

comment on column account_followup_followup_line.manual_action_type_id is 'Manual Action Type';

comment on column account_followup_followup_line.manual_action_responsible_id is 'Assign a Responsible';

comment on column account_followup_followup_line.auto_execute is 'Auto Execute';

comment on column account_followup_followup_line.create_uid is 'Created by';

comment on column account_followup_followup_line.create_date is 'Created on';

comment on column account_followup_followup_line.write_uid is 'Last Updated by';

comment on column account_followup_followup_line.write_date is 'Last Updated on';

comment on column account_followup_followup_line.send_letter is 'Send a Letter';

alter table account_followup_followup_line owner to postgres;

alter table account_journal
	add constraint account_journal_sale_activity_type_id_fkey
		foreign key (sale_activity_type_id) references mail_activity_type
			on delete set null;

create table mail_activity
(
	id integer default nextval('mail_activity_id_seq'::regclass) not null
		constraint mail_activity_pkey
			primary key,
	res_model_id integer not null
		constraint mail_activity_res_model_id_fkey
			references ir_model
				on delete cascade,
	res_model varchar,
	res_id integer not null,
	res_name varchar,
	activity_type_id integer
		constraint mail_activity_activity_type_id_fkey
			references mail_activity_type
				on delete restrict,
	summary varchar,
	note text,
	date_deadline date not null,
	automated boolean,
	user_id integer not null
		constraint mail_activity_user_id_fkey
			references res_users
				on delete restrict,
	request_partner_id integer
		constraint mail_activity_request_partner_id_fkey
			references res_partner
				on delete set null,
	recommended_activity_type_id integer
		constraint mail_activity_recommended_activity_type_id_fkey
			references mail_activity_type
				on delete set null,
	previous_activity_type_id integer
		constraint mail_activity_previous_activity_type_id_fkey
			references mail_activity_type
				on delete set null,
	create_uid integer
		constraint mail_activity_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_activity_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_activity is 'Activity';

comment on column mail_activity.res_model_id is 'Document Model';

comment on column mail_activity.res_model is 'Related Document Model';

comment on column mail_activity.res_id is 'Related Document ID';

comment on column mail_activity.res_name is 'Document Name';

comment on column mail_activity.activity_type_id is 'Activity Type';

comment on column mail_activity.summary is 'Summary';

comment on column mail_activity.note is 'Note';

comment on column mail_activity.date_deadline is 'Due Date';

comment on column mail_activity.automated is 'Automated activity';

comment on column mail_activity.user_id is 'Assigned to';

comment on column mail_activity.request_partner_id is 'Requesting Partner';

comment on column mail_activity.recommended_activity_type_id is 'Recommended Activity Type';

comment on column mail_activity.previous_activity_type_id is 'Previous Activity Type';

comment on column mail_activity.create_uid is 'Created by';

comment on column mail_activity.create_date is 'Created on';

comment on column mail_activity.write_uid is 'Last Updated by';

comment on column mail_activity.write_date is 'Last Updated on';

alter table mail_activity owner to postgres;

create index mail_activity_date_deadline_index
	on mail_activity (date_deadline);

create index mail_activity_res_id_index
	on mail_activity (res_id);

create index mail_activity_res_model_id_index
	on mail_activity (res_model_id);

create index mail_activity_res_model_index
	on mail_activity (res_model);

create index mail_activity_user_id_index
	on mail_activity (user_id);

create table mail_activity_rel
(
	activity_id integer not null
		constraint mail_activity_rel_activity_id_fkey
			references mail_activity_type
				on delete cascade,
	recommended_id integer not null
		constraint mail_activity_rel_recommended_id_fkey
			references mail_activity_type
				on delete cascade,
	constraint mail_activity_rel_pkey
		primary key (activity_id, recommended_id)
);

comment on table mail_activity_rel is 'RELATION BETWEEN mail_activity_type AND mail_activity_type';

alter table mail_activity_rel owner to postgres;

create index mail_activity_rel_recommended_id_activity_id_idx
	on mail_activity_rel (recommended_id, activity_id);

create index mail_activity_type_create_uid_index
	on mail_activity_type (create_uid);

create index mail_activity_type_res_model_id_index
	on mail_activity_type (res_model_id);

create table mail_alias
(
	id integer default nextval('mail_alias_id_seq'::regclass) not null
		constraint mail_alias_pkey
			primary key,
	alias_name varchar
		constraint mail_alias_alias_unique
			unique,
	alias_model_id integer not null
		constraint mail_alias_alias_model_id_fkey
			references ir_model
				on delete cascade,
	alias_user_id integer
		constraint mail_alias_alias_user_id_fkey
			references res_users
				on delete set null,
	alias_defaults text not null,
	alias_force_thread_id integer,
	alias_parent_model_id integer
		constraint mail_alias_alias_parent_model_id_fkey
			references ir_model
				on delete set null,
	alias_parent_thread_id integer,
	alias_contact varchar not null,
	alias_bounced_content text,
	create_uid integer
		constraint mail_alias_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_alias_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_alias is 'Email Aliases';

comment on column mail_alias.alias_name is 'Alias Name';

comment on column mail_alias.alias_model_id is 'Aliased Model';

comment on column mail_alias.alias_user_id is 'Owner';

comment on column mail_alias.alias_defaults is 'Default Values';

comment on column mail_alias.alias_force_thread_id is 'Record Thread ID';

comment on column mail_alias.alias_parent_model_id is 'Parent Model';

comment on column mail_alias.alias_parent_thread_id is 'Parent Record Thread ID';

comment on column mail_alias.alias_contact is 'Alias Contact Security';

comment on column mail_alias.alias_bounced_content is 'Custom Bounced Message';

comment on column mail_alias.create_uid is 'Created by';

comment on column mail_alias.create_date is 'Created on';

comment on column mail_alias.write_uid is 'Last Updated by';

comment on column mail_alias.write_date is 'Last Updated on';

alter table mail_alias owner to postgres;

alter table account_journal
	add constraint account_journal_alias_id_fkey
		foreign key (alias_id) references mail_alias
			on delete set null;

create table mail_blacklist
(
	id integer default nextval('mail_blacklist_id_seq'::regclass) not null
		constraint mail_blacklist_pkey
			primary key,
	email varchar not null
		constraint mail_blacklist_unique_email
			unique,
	active boolean,
	message_main_attachment_id integer
		constraint mail_blacklist_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint mail_blacklist_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_blacklist_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_blacklist is 'Mail Blacklist';

comment on column mail_blacklist.email is 'Email Address';

comment on column mail_blacklist.active is 'Active';

comment on column mail_blacklist.message_main_attachment_id is 'Main Attachment';

comment on column mail_blacklist.create_uid is 'Created by';

comment on column mail_blacklist.create_date is 'Created on';

comment on column mail_blacklist.write_uid is 'Last Updated by';

comment on column mail_blacklist.write_date is 'Last Updated on';

alter table mail_blacklist owner to postgres;

create index mail_blacklist_email_index
	on mail_blacklist (email);

create index mail_blacklist_message_main_attachment_id_index
	on mail_blacklist (message_main_attachment_id);

create table mail_blacklist_remove
(
	id integer default nextval('mail_blacklist_remove_id_seq'::regclass) not null
		constraint mail_blacklist_remove_pkey
			primary key,
	email varchar not null,
	reason varchar,
	create_uid integer
		constraint mail_blacklist_remove_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_blacklist_remove_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_blacklist_remove is 'Remove email from blacklist wizard';

comment on column mail_blacklist_remove.email is 'Email';

comment on column mail_blacklist_remove.reason is 'Reason';

comment on column mail_blacklist_remove.create_uid is 'Created by';

comment on column mail_blacklist_remove.create_date is 'Created on';

comment on column mail_blacklist_remove.write_uid is 'Last Updated by';

comment on column mail_blacklist_remove.write_date is 'Last Updated on';

alter table mail_blacklist_remove owner to postgres;

create table mail_message_subtype
(
	id integer default nextval('mail_message_subtype_id_seq'::regclass) not null
		constraint mail_message_subtype_pkey
			primary key,
	name varchar not null,
	description text,
	internal boolean,
	parent_id integer
		constraint mail_message_subtype_parent_id_fkey
			references mail_message_subtype
				on delete set null,
	relation_field varchar,
	res_model varchar,
	"default" boolean,
	sequence integer,
	hidden boolean,
	create_uid integer
		constraint mail_message_subtype_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_message_subtype_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_message_subtype is 'Message subtypes';

comment on column mail_message_subtype.name is 'Message Type';

comment on column mail_message_subtype.description is 'Description';

comment on column mail_message_subtype.internal is 'Internal Only';

comment on column mail_message_subtype.parent_id is 'Parent';

comment on column mail_message_subtype.relation_field is 'Relation field';

comment on column mail_message_subtype.res_model is 'Model';

comment on column mail_message_subtype."default" is 'Default';

comment on column mail_message_subtype.sequence is 'Sequence';

comment on column mail_message_subtype.hidden is 'Hidden';

comment on column mail_message_subtype.create_uid is 'Created by';

comment on column mail_message_subtype.create_date is 'Created on';

comment on column mail_message_subtype.write_uid is 'Last Updated by';

comment on column mail_message_subtype.write_date is 'Last Updated on';

alter table mail_message_subtype owner to postgres;

create table mail_message
(
	id integer default nextval('mail_message_id_seq'::regclass) not null
		constraint mail_message_pkey
			primary key,
	subject varchar,
	date timestamp,
	body text,
	parent_id integer
		constraint mail_message_parent_id_fkey
			references mail_message
				on delete set null,
	model varchar,
	res_id integer,
	record_name varchar,
	message_type varchar not null,
	subtype_id integer
		constraint mail_message_subtype_id_fkey
			references mail_message_subtype
				on delete set null,
	mail_activity_type_id integer
		constraint mail_message_mail_activity_type_id_fkey
			references mail_activity_type
				on delete set null,
	is_internal boolean,
	email_from varchar,
	author_id integer
		constraint mail_message_author_id_fkey
			references res_partner
				on delete set null,
	no_auto_thread boolean,
	message_id varchar,
	reply_to varchar,
	mail_server_id integer
		constraint mail_message_mail_server_id_fkey
			references ir_mail_server
				on delete set null,
	moderation_status varchar,
	moderator_id integer
		constraint mail_message_moderator_id_fkey
			references res_users
				on delete set null,
	email_layout_xmlid varchar,
	add_sign boolean,
	create_uid integer
		constraint mail_message_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_message_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_message is 'Message';

comment on column mail_message.subject is 'Subject';

comment on column mail_message.date is 'Date';

comment on column mail_message.body is 'Contents';

comment on column mail_message.parent_id is 'Parent Message';

comment on column mail_message.model is 'Related Document Model';

comment on column mail_message.res_id is 'Related Document ID';

comment on column mail_message.record_name is 'Message Record Name';

comment on column mail_message.message_type is 'Type';

comment on column mail_message.subtype_id is 'Subtype';

comment on column mail_message.mail_activity_type_id is 'Mail Activity Type';

comment on column mail_message.is_internal is 'Employee Only';

comment on column mail_message.email_from is 'From';

comment on column mail_message.author_id is 'Author';

comment on column mail_message.no_auto_thread is 'No threading for answers';

comment on column mail_message.message_id is 'Message-Id';

comment on column mail_message.reply_to is 'Reply-To';

comment on column mail_message.mail_server_id is 'Outgoing mail server';

comment on column mail_message.moderation_status is 'Moderation Status';

comment on column mail_message.moderator_id is 'Moderated By';

comment on column mail_message.email_layout_xmlid is 'Layout';

comment on column mail_message.add_sign is 'Add Sign';

comment on column mail_message.create_uid is 'Created by';

comment on column mail_message.create_date is 'Created on';

comment on column mail_message.write_uid is 'Last Updated by';

comment on column mail_message.write_date is 'Last Updated on';

alter table mail_message owner to postgres;

create table mail_mail
(
	id integer default nextval('mail_mail_id_seq'::regclass) not null
		constraint mail_mail_pkey
			primary key,
	mail_message_id integer not null
		constraint mail_mail_mail_message_id_fkey
			references mail_message
				on delete cascade,
	body_html text,
	"references" text,
	headers text,
	notification boolean,
	email_to text,
	email_cc varchar,
	state varchar,
	auto_delete boolean,
	failure_reason text,
	scheduled_date varchar,
	create_uid integer
		constraint mail_mail_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_mail_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	fetchmail_server_id integer
		constraint mail_mail_fetchmail_server_id_fkey
			references fetchmail_server
				on delete set null
);

comment on table mail_mail is 'Outgoing Mails';

comment on column mail_mail.mail_message_id is 'Message';

comment on column mail_mail.body_html is 'Rich-text Contents';

comment on column mail_mail."references" is 'References';

comment on column mail_mail.headers is 'Headers';

comment on column mail_mail.notification is 'Is Notification';

comment on column mail_mail.email_to is 'To';

comment on column mail_mail.email_cc is 'Cc';

comment on column mail_mail.state is 'Status';

comment on column mail_mail.auto_delete is 'Auto Delete';

comment on column mail_mail.failure_reason is 'Failure Reason';

comment on column mail_mail.scheduled_date is 'Scheduled Send Date';

comment on column mail_mail.create_uid is 'Created by';

comment on column mail_mail.create_date is 'Created on';

comment on column mail_mail.write_uid is 'Last Updated by';

comment on column mail_mail.write_date is 'Last Updated on';

comment on column mail_mail.fetchmail_server_id is 'Inbound Mail Server';

alter table mail_mail owner to postgres;

create index mail_mail_fetchmail_server_id_index
	on mail_mail (fetchmail_server_id);

create index mail_mail_mail_message_id_index
	on mail_mail (mail_message_id);

create table mail_mail_res_partner_rel
(
	mail_mail_id integer not null
		constraint mail_mail_res_partner_rel_mail_mail_id_fkey
			references mail_mail
				on delete cascade,
	res_partner_id integer not null
		constraint mail_mail_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint mail_mail_res_partner_rel_pkey
		primary key (mail_mail_id, res_partner_id)
);

comment on table mail_mail_res_partner_rel is 'RELATION BETWEEN mail_mail AND res_partner';

alter table mail_mail_res_partner_rel owner to postgres;

create index mail_mail_res_partner_rel_res_partner_id_mail_mail_id_idx
	on mail_mail_res_partner_rel (res_partner_id, mail_mail_id);

create index mail_message_author_id_index
	on mail_message (author_id);

create index mail_message_mail_activity_type_id_index
	on mail_message (mail_activity_type_id);

create index mail_message_message_id_index
	on mail_message (message_id);

create index mail_message_model_index
	on mail_message (model);

create index mail_message_model_res_id_idx
	on mail_message (model, res_id);

create index mail_message_moderation_status_index
	on mail_message (moderation_status);

create index mail_message_moderator_id_index
	on mail_message (moderator_id);

create index mail_message_parent_id_index
	on mail_message (parent_id);

create index mail_message_res_id_index
	on mail_message (res_id);

create index mail_message_subtype_id_index
	on mail_message (subtype_id);

create table mail_message_res_partner_rel
(
	mail_message_id integer not null
		constraint mail_message_res_partner_rel_mail_message_id_fkey
			references mail_message
				on delete cascade,
	res_partner_id integer not null
		constraint mail_message_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint mail_message_res_partner_rel_pkey
		primary key (mail_message_id, res_partner_id)
);

comment on table mail_message_res_partner_rel is 'RELATION BETWEEN mail_message AND res_partner';

alter table mail_message_res_partner_rel owner to postgres;

create index mail_message_res_partner_rel_res_partner_id_mail_message_id_idx
	on mail_message_res_partner_rel (res_partner_id, mail_message_id);

create table mail_message_res_partner_starred_rel
(
	mail_message_id integer not null
		constraint mail_message_res_partner_starred_rel_mail_message_id_fkey
			references mail_message
				on delete cascade,
	res_partner_id integer not null
		constraint mail_message_res_partner_starred_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint mail_message_res_partner_starred_rel_pkey
		primary key (mail_message_id, res_partner_id)
);

comment on table mail_message_res_partner_starred_rel is 'RELATION BETWEEN mail_message AND res_partner';

alter table mail_message_res_partner_starred_rel owner to postgres;

create index mail_message_res_partner_star_res_partner_id_mail_message_i_idx
	on mail_message_res_partner_starred_rel (res_partner_id, mail_message_id);

create table mail_resend_cancel
(
	id integer default nextval('mail_resend_cancel_id_seq'::regclass) not null
		constraint mail_resend_cancel_pkey
			primary key,
	model varchar,
	create_uid integer
		constraint mail_resend_cancel_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_resend_cancel_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_resend_cancel is 'Dismiss notification for resend by model';

comment on column mail_resend_cancel.model is 'Model';

comment on column mail_resend_cancel.create_uid is 'Created by';

comment on column mail_resend_cancel.create_date is 'Created on';

comment on column mail_resend_cancel.write_uid is 'Last Updated by';

comment on column mail_resend_cancel.write_date is 'Last Updated on';

alter table mail_resend_cancel owner to postgres;

create table mail_resend_message
(
	id integer default nextval('mail_resend_message_id_seq'::regclass) not null
		constraint mail_resend_message_pkey
			primary key,
	mail_message_id integer
		constraint mail_resend_message_mail_message_id_fkey
			references mail_message
				on delete set null,
	create_uid integer
		constraint mail_resend_message_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_resend_message_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_resend_message is 'Email resend wizard';

comment on column mail_resend_message.mail_message_id is 'Message';

comment on column mail_resend_message.create_uid is 'Created by';

comment on column mail_resend_message.create_date is 'Created on';

comment on column mail_resend_message.write_uid is 'Last Updated by';

comment on column mail_resend_message.write_date is 'Last Updated on';

alter table mail_resend_message owner to postgres;

create table mail_resend_partner
(
	id integer default nextval('mail_resend_partner_id_seq'::regclass) not null
		constraint mail_resend_partner_pkey
			primary key,
	partner_id integer not null
		constraint mail_resend_partner_partner_id_fkey
			references res_partner
				on delete cascade,
	resend boolean,
	resend_wizard_id integer
		constraint mail_resend_partner_resend_wizard_id_fkey
			references mail_resend_message
				on delete set null,
	message varchar,
	create_uid integer
		constraint mail_resend_partner_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_resend_partner_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_resend_partner is 'Partner with additional information for mail resend';

comment on column mail_resend_partner.partner_id is 'Partner';

comment on column mail_resend_partner.resend is 'Send Again';

comment on column mail_resend_partner.resend_wizard_id is 'Resend wizard';

comment on column mail_resend_partner.message is 'Help message';

comment on column mail_resend_partner.create_uid is 'Created by';

comment on column mail_resend_partner.create_date is 'Created on';

comment on column mail_resend_partner.write_uid is 'Last Updated by';

comment on column mail_resend_partner.write_date is 'Last Updated on';

alter table mail_resend_partner owner to postgres;

create table mail_shortcode
(
	id integer default nextval('mail_shortcode_id_seq'::regclass) not null
		constraint mail_shortcode_pkey
			primary key,
	source varchar not null,
	substitution text not null,
	description varchar,
	create_uid integer
		constraint mail_shortcode_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_shortcode_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_shortcode is 'Canned Response / Shortcode';

comment on column mail_shortcode.source is 'Shortcut';

comment on column mail_shortcode.substitution is 'Substitution';

comment on column mail_shortcode.description is 'Description';

comment on column mail_shortcode.create_uid is 'Created by';

comment on column mail_shortcode.create_date is 'Created on';

comment on column mail_shortcode.write_uid is 'Last Updated by';

comment on column mail_shortcode.write_date is 'Last Updated on';

alter table mail_shortcode owner to postgres;

create index mail_shortcode_source_index
	on mail_shortcode (source);

create index mail_shortcode_substitution_index
	on mail_shortcode (substitution);

create table mail_tracking_value
(
	id integer default nextval('mail_tracking_value_id_seq'::regclass) not null
		constraint mail_tracking_value_pkey
			primary key,
	field integer not null
		constraint mail_tracking_value_field_fkey
			references ir_model_fields
				on delete cascade,
	field_desc varchar not null,
	field_type varchar,
	old_value_integer integer,
	old_value_float double precision,
	old_value_monetary double precision,
	old_value_char varchar,
	old_value_text text,
	old_value_datetime timestamp,
	new_value_integer integer,
	new_value_float double precision,
	new_value_monetary double precision,
	new_value_char varchar,
	new_value_text text,
	new_value_datetime timestamp,
	mail_message_id integer not null
		constraint mail_tracking_value_mail_message_id_fkey
			references mail_message
				on delete cascade,
	tracking_sequence integer,
	create_uid integer
		constraint mail_tracking_value_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_tracking_value_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_tracking_value is 'Mail Tracking Value';

comment on column mail_tracking_value.field is 'Field';

comment on column mail_tracking_value.field_desc is 'Field Description';

comment on column mail_tracking_value.field_type is 'Field Type';

comment on column mail_tracking_value.old_value_integer is 'Old Value Integer';

comment on column mail_tracking_value.old_value_float is 'Old Value Float';

comment on column mail_tracking_value.old_value_monetary is 'Old Value Monetary';

comment on column mail_tracking_value.old_value_char is 'Old Value Char';

comment on column mail_tracking_value.old_value_text is 'Old Value Text';

comment on column mail_tracking_value.old_value_datetime is 'Old Value DateTime';

comment on column mail_tracking_value.new_value_integer is 'New Value Integer';

comment on column mail_tracking_value.new_value_float is 'New Value Float';

comment on column mail_tracking_value.new_value_monetary is 'New Value Monetary';

comment on column mail_tracking_value.new_value_char is 'New Value Char';

comment on column mail_tracking_value.new_value_text is 'New Value Text';

comment on column mail_tracking_value.new_value_datetime is 'New Value Datetime';

comment on column mail_tracking_value.mail_message_id is 'Message ID';

comment on column mail_tracking_value.tracking_sequence is 'Tracking field sequence';

comment on column mail_tracking_value.create_uid is 'Created by';

comment on column mail_tracking_value.create_date is 'Created on';

comment on column mail_tracking_value.write_uid is 'Last Updated by';

comment on column mail_tracking_value.write_date is 'Last Updated on';

alter table mail_tracking_value owner to postgres;

create index mail_tracking_value_mail_message_id_index
	on mail_tracking_value (mail_message_id);

create table mail_wizard_invite
(
	id integer default nextval('mail_wizard_invite_id_seq'::regclass) not null
		constraint mail_wizard_invite_pkey
			primary key,
	res_model varchar not null,
	res_id integer,
	message text,
	send_mail boolean,
	create_uid integer
		constraint mail_wizard_invite_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_wizard_invite_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_wizard_invite is 'Invite wizard';

comment on column mail_wizard_invite.res_model is 'Related Document Model';

comment on column mail_wizard_invite.res_id is 'Related Document ID';

comment on column mail_wizard_invite.message is 'Message';

comment on column mail_wizard_invite.send_mail is 'Send Email';

comment on column mail_wizard_invite.create_uid is 'Created by';

comment on column mail_wizard_invite.create_date is 'Created on';

comment on column mail_wizard_invite.write_uid is 'Last Updated by';

comment on column mail_wizard_invite.write_date is 'Last Updated on';

alter table mail_wizard_invite owner to postgres;

create index mail_wizard_invite_res_id_index
	on mail_wizard_invite (res_id);

create index mail_wizard_invite_res_model_index
	on mail_wizard_invite (res_model);

create table mail_wizard_invite_res_partner_rel
(
	mail_wizard_invite_id integer not null
		constraint mail_wizard_invite_res_partner_rel_mail_wizard_invite_id_fkey
			references mail_wizard_invite
				on delete cascade,
	res_partner_id integer not null
		constraint mail_wizard_invite_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint mail_wizard_invite_res_partner_rel_pkey
		primary key (mail_wizard_invite_id, res_partner_id)
);

comment on table mail_wizard_invite_res_partner_rel is 'RELATION BETWEEN mail_wizard_invite AND res_partner';

alter table mail_wizard_invite_res_partner_rel owner to postgres;

create index mail_wizard_invite_res_partne_res_partner_id_mail_wizard_in_idx
	on mail_wizard_invite_res_partner_rel (res_partner_id, mail_wizard_invite_id);

create table message_attachment_rel
(
	message_id integer not null
		constraint message_attachment_rel_message_id_fkey
			references mail_message
				on delete cascade,
	attachment_id integer not null
		constraint message_attachment_rel_attachment_id_fkey
			references ir_attachment
				on delete cascade,
	constraint message_attachment_rel_pkey
		primary key (message_id, attachment_id)
);

comment on table message_attachment_rel is 'RELATION BETWEEN mail_message AND ir_attachment';

alter table message_attachment_rel owner to postgres;

create index message_attachment_rel_attachment_id_message_id_idx
	on message_attachment_rel (attachment_id, message_id);

create table order_weighing
(
	id integer default nextval('order_weighing_id_seq'::regclass) not null
		constraint order_weighing_pkey
			primary key,
	order_line_id integer,
	real_weight double precision,
	length double precision,
	width double precision,
	height double precision,
	create_uid integer
		constraint order_weighing_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint order_weighing_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table order_weighing is 'order.weighing';

comment on column order_weighing.order_line_id is 'Order Line';

comment on column order_weighing.real_weight is 'Real Weight';

comment on column order_weighing.length is 'Length in cm';

comment on column order_weighing.width is 'Width in cm';

comment on column order_weighing.height is 'Height in cm';

comment on column order_weighing.create_uid is 'Created by';

comment on column order_weighing.create_date is 'Created on';

comment on column order_weighing.write_uid is 'Last Updated by';

comment on column order_weighing.write_date is 'Last Updated on';

alter table order_weighing owner to postgres;

create table payment_acquirer
(
	id integer default nextval('payment_acquirer_id_seq'::regclass) not null
		constraint payment_acquirer_pkey
			primary key,
	name varchar not null,
	color integer,
	display_as varchar,
	description text,
	sequence integer,
	provider varchar not null,
	company_id integer not null,
	view_template_id integer
		constraint payment_acquirer_view_template_id_fkey
			references ir_ui_view
				on delete set null,
	registration_view_template_id integer
		constraint payment_acquirer_registration_view_template_id_fkey
			references ir_ui_view
				on delete set null,
	state varchar not null,
	capture_manually boolean,
	journal_id integer
		constraint payment_acquirer_journal_id_fkey
			references account_journal
				on delete set null,
	check_validity boolean,
	pre_msg text,
	auth_msg text,
	pending_msg text,
	done_msg text,
	cancel_msg text,
	save_token varchar,
	fees_active boolean,
	fees_dom_fixed double precision,
	fees_dom_var double precision,
	fees_int_fixed double precision,
	fees_int_var double precision,
	qr_code boolean,
	module_id integer
		constraint payment_acquirer_module_id_fkey
			references ir_module_module
				on delete set null,
	module_state varchar,
	payment_flow varchar not null,
	create_uid integer
		constraint payment_acquirer_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_acquirer_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	so_reference_type varchar
);

comment on table payment_acquirer is 'Payment Acquirer';

comment on column payment_acquirer.name is 'Name';

comment on column payment_acquirer.color is 'Color';

comment on column payment_acquirer.display_as is 'Displayed as';

comment on column payment_acquirer.description is 'Description';

comment on column payment_acquirer.sequence is 'Sequence';

comment on column payment_acquirer.provider is 'Provider';

comment on column payment_acquirer.company_id is 'Company';

comment on column payment_acquirer.view_template_id is 'Form Button Template';

comment on column payment_acquirer.registration_view_template_id is 'S2S Form Template';

comment on column payment_acquirer.state is 'State';

comment on column payment_acquirer.capture_manually is 'Capture Amount Manually';

comment on column payment_acquirer.journal_id is 'Payment Journal';

comment on column payment_acquirer.check_validity is 'Verify Card Validity';

comment on column payment_acquirer.pre_msg is 'Help Message';

comment on column payment_acquirer.auth_msg is 'Authorize Message';

comment on column payment_acquirer.pending_msg is 'Pending Message';

comment on column payment_acquirer.done_msg is 'Done Message';

comment on column payment_acquirer.cancel_msg is 'Cancel Message';

comment on column payment_acquirer.save_token is 'Save Cards';

comment on column payment_acquirer.fees_active is 'Add Extra Fees';

comment on column payment_acquirer.fees_dom_fixed is 'Fixed domestic fees';

comment on column payment_acquirer.fees_dom_var is 'Variable domestic fees (in percents)';

comment on column payment_acquirer.fees_int_fixed is 'Fixed international fees';

comment on column payment_acquirer.fees_int_var is 'Variable international fees (in percents)';

comment on column payment_acquirer.qr_code is 'Enable QR Codes';

comment on column payment_acquirer.module_id is 'Corresponding Module';

comment on column payment_acquirer.module_state is 'Installation State';

comment on column payment_acquirer.payment_flow is 'Payment Flow';

comment on column payment_acquirer.create_uid is 'Created by';

comment on column payment_acquirer.create_date is 'Created on';

comment on column payment_acquirer.write_uid is 'Last Updated by';

comment on column payment_acquirer.write_date is 'Last Updated on';

comment on column payment_acquirer.so_reference_type is 'Communication';

alter table payment_acquirer owner to postgres;

create table payment_acquirer_onboarding_wizard
(
	id integer default nextval('payment_acquirer_onboarding_wizard_id_seq'::regclass) not null
		constraint payment_acquirer_onboarding_wizard_pkey
			primary key,
	payment_method varchar,
	paypal_user_type varchar,
	paypal_email_account varchar,
	paypal_seller_account varchar,
	paypal_pdt_token varchar,
	stripe_secret_key varchar,
	stripe_publishable_key varchar,
	manual_name varchar,
	journal_name varchar,
	acc_number varchar,
	manual_post_msg text,
	create_uid integer
		constraint payment_acquirer_onboarding_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_acquirer_onboarding_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table payment_acquirer_onboarding_wizard is 'Payment acquire onboarding wizard';

comment on column payment_acquirer_onboarding_wizard.payment_method is 'Payment Method';

comment on column payment_acquirer_onboarding_wizard.paypal_user_type is 'Paypal User Type';

comment on column payment_acquirer_onboarding_wizard.paypal_email_account is 'Email';

comment on column payment_acquirer_onboarding_wizard.paypal_seller_account is 'Merchant Account ID';

comment on column payment_acquirer_onboarding_wizard.paypal_pdt_token is 'PDT Identity Token';

comment on column payment_acquirer_onboarding_wizard.stripe_secret_key is 'Stripe Secret Key';

comment on column payment_acquirer_onboarding_wizard.stripe_publishable_key is 'Stripe Publishable Key';

comment on column payment_acquirer_onboarding_wizard.manual_name is 'Method';

comment on column payment_acquirer_onboarding_wizard.journal_name is 'Bank Name';

comment on column payment_acquirer_onboarding_wizard.acc_number is 'Account Number';

comment on column payment_acquirer_onboarding_wizard.manual_post_msg is 'Payment Instructions';

comment on column payment_acquirer_onboarding_wizard.create_uid is 'Created by';

comment on column payment_acquirer_onboarding_wizard.create_date is 'Created on';

comment on column payment_acquirer_onboarding_wizard.write_uid is 'Last Updated by';

comment on column payment_acquirer_onboarding_wizard.write_date is 'Last Updated on';

alter table payment_acquirer_onboarding_wizard owner to postgres;

create table payment_country_rel
(
	payment_id integer not null
		constraint payment_country_rel_payment_id_fkey
			references payment_acquirer
				on delete cascade,
	country_id integer not null
		constraint payment_country_rel_country_id_fkey
			references res_country
				on delete cascade,
	constraint payment_country_rel_pkey
		primary key (payment_id, country_id)
);

comment on table payment_country_rel is 'RELATION BETWEEN payment_acquirer AND res_country';

alter table payment_country_rel owner to postgres;

create index payment_country_rel_country_id_payment_id_idx
	on payment_country_rel (country_id, payment_id);

create table payment_icon
(
	id integer default nextval('payment_icon_id_seq'::regclass) not null
		constraint payment_icon_pkey
			primary key,
	name varchar,
	create_uid integer
		constraint payment_icon_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_icon_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table payment_icon is 'Payment Icon';

comment on column payment_icon.name is 'Name';

comment on column payment_icon.create_uid is 'Created by';

comment on column payment_icon.create_date is 'Created on';

comment on column payment_icon.write_uid is 'Last Updated by';

comment on column payment_icon.write_date is 'Last Updated on';

alter table payment_icon owner to postgres;

create table payment_acquirer_payment_icon_rel
(
	payment_acquirer_id integer not null
		constraint payment_acquirer_payment_icon_rel_payment_acquirer_id_fkey
			references payment_acquirer
				on delete cascade,
	payment_icon_id integer not null
		constraint payment_acquirer_payment_icon_rel_payment_icon_id_fkey
			references payment_icon
				on delete cascade,
	constraint payment_acquirer_payment_icon_rel_pkey
		primary key (payment_acquirer_id, payment_icon_id)
);

comment on table payment_acquirer_payment_icon_rel is 'RELATION BETWEEN payment_acquirer AND payment_icon';

alter table payment_acquirer_payment_icon_rel owner to postgres;

create index payment_acquirer_payment_icon_payment_icon_id_payment_acqui_idx
	on payment_acquirer_payment_icon_rel (payment_icon_id, payment_acquirer_id);

create table phone_blacklist
(
	id integer default nextval('phone_blacklist_id_seq'::regclass) not null
		constraint phone_blacklist_pkey
			primary key,
	number varchar not null
		constraint phone_blacklist_unique_number
			unique,
	active boolean,
	message_main_attachment_id integer
		constraint phone_blacklist_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint phone_blacklist_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint phone_blacklist_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table phone_blacklist is 'Phone Blacklist';

comment on column phone_blacklist.number is 'Phone Number';

comment on column phone_blacklist.active is 'Active';

comment on column phone_blacklist.message_main_attachment_id is 'Main Attachment';

comment on column phone_blacklist.create_uid is 'Created by';

comment on column phone_blacklist.create_date is 'Created on';

comment on column phone_blacklist.write_uid is 'Last Updated by';

comment on column phone_blacklist.write_date is 'Last Updated on';

alter table phone_blacklist owner to postgres;

create index phone_blacklist_message_main_attachment_id_index
	on phone_blacklist (message_main_attachment_id);

create index phone_blacklist_number_index
	on phone_blacklist (number);

create table phone_blacklist_remove
(
	id integer default nextval('phone_blacklist_remove_id_seq'::regclass) not null
		constraint phone_blacklist_remove_pkey
			primary key,
	phone varchar not null,
	reason varchar,
	create_uid integer
		constraint phone_blacklist_remove_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint phone_blacklist_remove_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table phone_blacklist_remove is 'Remove phone from blacklist';

comment on column phone_blacklist_remove.phone is 'Phone Number';

comment on column phone_blacklist_remove.reason is 'Reason';

comment on column phone_blacklist_remove.create_uid is 'Created by';

comment on column phone_blacklist_remove.create_date is 'Created on';

comment on column phone_blacklist_remove.write_uid is 'Last Updated by';

comment on column phone_blacklist_remove.write_date is 'Last Updated on';

alter table phone_blacklist_remove owner to postgres;

create table portal_share
(
	id integer default nextval('portal_share_id_seq'::regclass) not null
		constraint portal_share_pkey
			primary key,
	res_model varchar not null,
	res_id integer not null,
	note text,
	create_uid integer
		constraint portal_share_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint portal_share_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table portal_share is 'Portal Sharing';

comment on column portal_share.res_model is 'Related Document Model';

comment on column portal_share.res_id is 'Related Document ID';

comment on column portal_share.note is 'Note';

comment on column portal_share.create_uid is 'Created by';

comment on column portal_share.create_date is 'Created on';

comment on column portal_share.write_uid is 'Last Updated by';

comment on column portal_share.write_date is 'Last Updated on';

alter table portal_share owner to postgres;

create table portal_share_res_partner_rel
(
	portal_share_id integer not null
		constraint portal_share_res_partner_rel_portal_share_id_fkey
			references portal_share
				on delete cascade,
	res_partner_id integer not null
		constraint portal_share_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint portal_share_res_partner_rel_pkey
		primary key (portal_share_id, res_partner_id)
);

comment on table portal_share_res_partner_rel is 'RELATION BETWEEN portal_share AND res_partner';

alter table portal_share_res_partner_rel owner to postgres;

create index portal_share_res_partner_rel_res_partner_id_portal_share_id_idx
	on portal_share_res_partner_rel (res_partner_id, portal_share_id);

create table portal_wizard
(
	id integer default nextval('portal_wizard_id_seq'::regclass) not null
		constraint portal_wizard_pkey
			primary key,
	welcome_message text,
	create_uid integer
		constraint portal_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint portal_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table portal_wizard is 'Grant Portal Access';

comment on column portal_wizard.welcome_message is 'Invitation Message';

comment on column portal_wizard.create_uid is 'Created by';

comment on column portal_wizard.create_date is 'Created on';

comment on column portal_wizard.write_uid is 'Last Updated by';

comment on column portal_wizard.write_date is 'Last Updated on';

alter table portal_wizard owner to postgres;

create table portal_wizard_user
(
	id integer default nextval('portal_wizard_user_id_seq'::regclass) not null
		constraint portal_wizard_user_pkey
			primary key,
	wizard_id integer not null
		constraint portal_wizard_user_wizard_id_fkey
			references portal_wizard
				on delete cascade,
	partner_id integer not null
		constraint portal_wizard_user_partner_id_fkey
			references res_partner
				on delete cascade,
	email varchar,
	in_portal boolean,
	user_id integer
		constraint portal_wizard_user_user_id_fkey
			references res_users
				on delete set null,
	create_uid integer
		constraint portal_wizard_user_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint portal_wizard_user_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table portal_wizard_user is 'Portal User Config';

comment on column portal_wizard_user.wizard_id is 'Wizard';

comment on column portal_wizard_user.partner_id is 'Contact';

comment on column portal_wizard_user.email is 'Email';

comment on column portal_wizard_user.in_portal is 'In Portal';

comment on column portal_wizard_user.user_id is 'Login User';

comment on column portal_wizard_user.create_uid is 'Created by';

comment on column portal_wizard_user.create_date is 'Created on';

comment on column portal_wizard_user.write_uid is 'Last Updated by';

comment on column portal_wizard_user.write_date is 'Last Updated on';

alter table portal_wizard_user owner to postgres;

create table procurement_group
(
	id integer default nextval('procurement_group_id_seq'::regclass) not null
		constraint procurement_group_pkey
			primary key,
	partner_id integer
		constraint procurement_group_partner_id_fkey
			references res_partner
				on delete set null,
	name varchar not null,
	move_type varchar not null,
	create_uid integer
		constraint procurement_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint procurement_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	sale_id integer
);

comment on table procurement_group is 'Procurement Group';

comment on column procurement_group.partner_id is 'Partner';

comment on column procurement_group.name is 'Reference';

comment on column procurement_group.move_type is 'Delivery Type';

comment on column procurement_group.create_uid is 'Created by';

comment on column procurement_group.create_date is 'Created on';

comment on column procurement_group.write_uid is 'Last Updated by';

comment on column procurement_group.write_date is 'Last Updated on';

comment on column procurement_group.sale_id is 'Sale Order';

alter table procurement_group owner to postgres;

create table product_attribute
(
	id integer default nextval('product_attribute_id_seq'::regclass) not null
		constraint product_attribute_pkey
			primary key,
	name varchar not null,
	sequence integer,
	create_variant varchar not null,
	display_type varchar not null,
	create_uid integer
		constraint product_attribute_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_attribute_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_attribute is 'Product Attribute';

comment on column product_attribute.name is 'Attribute';

comment on column product_attribute.sequence is 'Sequence';

comment on column product_attribute.create_variant is 'Variants Creation Mode';

comment on column product_attribute.display_type is 'Display Type';

comment on column product_attribute.create_uid is 'Created by';

comment on column product_attribute.create_date is 'Created on';

comment on column product_attribute.write_uid is 'Last Updated by';

comment on column product_attribute.write_date is 'Last Updated on';

alter table product_attribute owner to postgres;

create index product_attribute_sequence_index
	on product_attribute (sequence);

create table product_attribute_value
(
	id integer default nextval('product_attribute_value_id_seq'::regclass) not null
		constraint product_attribute_value_pkey
			primary key,
	name varchar not null,
	sequence integer,
	attribute_id integer not null
		constraint product_attribute_value_attribute_id_fkey
			references product_attribute
				on delete cascade,
	is_custom boolean,
	html_color varchar,
	create_uid integer
		constraint product_attribute_value_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_attribute_value_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint product_attribute_value_value_company_uniq
		unique (name, attribute_id)
);

comment on table product_attribute_value is 'Attribute Value';

comment on column product_attribute_value.name is 'Value';

comment on column product_attribute_value.sequence is 'Sequence';

comment on column product_attribute_value.attribute_id is 'Attribute';

comment on column product_attribute_value.is_custom is 'Is custom value';

comment on column product_attribute_value.html_color is 'Color';

comment on column product_attribute_value.create_uid is 'Created by';

comment on column product_attribute_value.create_date is 'Created on';

comment on column product_attribute_value.write_uid is 'Last Updated by';

comment on column product_attribute_value.write_date is 'Last Updated on';

alter table product_attribute_value owner to postgres;

create index product_attribute_value_attribute_id_index
	on product_attribute_value (attribute_id);

create index product_attribute_value_sequence_index
	on product_attribute_value (sequence);

create table product_removal
(
	id integer default nextval('product_removal_id_seq'::regclass) not null
		constraint product_removal_pkey
			primary key,
	name varchar not null,
	method varchar not null,
	create_uid integer
		constraint product_removal_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_removal_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_removal is 'Removal Strategy';

comment on column product_removal.name is 'Name';

comment on column product_removal.method is 'Method';

comment on column product_removal.create_uid is 'Created by';

comment on column product_removal.create_date is 'Created on';

comment on column product_removal.write_uid is 'Last Updated by';

comment on column product_removal.write_date is 'Last Updated on';

alter table product_removal owner to postgres;

create table product_category
(
	id integer default nextval('product_category_id_seq'::regclass) not null
		constraint product_category_pkey
			primary key,
	name varchar not null,
	complete_name varchar,
	parent_id integer
		constraint product_category_parent_id_fkey
			references product_category
				on delete cascade,
	parent_path varchar,
	create_uid integer
		constraint product_category_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_category_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	removal_strategy_id integer
		constraint product_category_removal_strategy_id_fkey
			references product_removal
				on delete set null
);

comment on table product_category is 'Product Category';

comment on column product_category.name is 'Name';

comment on column product_category.complete_name is 'Complete Name';

comment on column product_category.parent_id is 'Parent Category';

comment on column product_category.parent_path is 'Parent Path';

comment on column product_category.create_uid is 'Created by';

comment on column product_category.create_date is 'Created on';

comment on column product_category.write_uid is 'Last Updated by';

comment on column product_category.write_date is 'Last Updated on';

comment on column product_category.removal_strategy_id is 'Force Removal Strategy';

alter table product_category owner to postgres;

create index product_category_name_index
	on product_category (name);

create index product_category_parent_id_index
	on product_category (parent_id);

create index product_category_parent_path_index
	on product_category (parent_path);

create table rel_modules_langexport
(
	wiz_id integer not null
		constraint rel_modules_langexport_wiz_id_fkey
			references base_language_export
				on delete cascade,
	module_id integer not null
		constraint rel_modules_langexport_module_id_fkey
			references ir_module_module
				on delete cascade,
	constraint rel_modules_langexport_pkey
		primary key (wiz_id, module_id)
);

comment on table rel_modules_langexport is 'RELATION BETWEEN base_language_export AND ir_module_module';

alter table rel_modules_langexport owner to postgres;

create index rel_modules_langexport_module_id_wiz_id_idx
	on rel_modules_langexport (module_id, wiz_id);

create table report_layout
(
	id integer default nextval('report_layout_id_seq'::regclass) not null
		constraint report_layout_pkey
			primary key,
	view_id integer not null
		constraint report_layout_view_id_fkey
			references ir_ui_view
				on delete restrict,
	image varchar,
	pdf varchar,
	sequence integer,
	name varchar,
	create_uid integer
		constraint report_layout_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint report_layout_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table report_layout is 'Report Layout';

comment on column report_layout.view_id is 'Document Template';

comment on column report_layout.image is 'Preview image src';

comment on column report_layout.pdf is 'Preview pdf src';

comment on column report_layout.sequence is 'Sequence';

comment on column report_layout.name is 'Name';

comment on column report_layout.create_uid is 'Created by';

comment on column report_layout.create_date is 'Created on';

comment on column report_layout.write_uid is 'Last Updated by';

comment on column report_layout.write_date is 'Last Updated on';

alter table report_layout owner to postgres;

create table report_paperformat
(
	id integer default nextval('report_paperformat_id_seq'::regclass) not null
		constraint report_paperformat_pkey
			primary key,
	name varchar not null,
	"default" boolean,
	format varchar,
	margin_top double precision,
	margin_bottom double precision,
	margin_left double precision,
	margin_right double precision,
	page_height integer,
	page_width integer,
	orientation varchar,
	header_line boolean,
	header_spacing integer,
	dpi integer not null,
	create_uid integer
		constraint report_paperformat_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint report_paperformat_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table report_paperformat is 'Paper Format Config';

comment on column report_paperformat.name is 'Name';

comment on column report_paperformat."default" is 'Default paper format ?';

comment on column report_paperformat.format is 'Paper size';

comment on column report_paperformat.margin_top is 'Top Margin (mm)';

comment on column report_paperformat.margin_bottom is 'Bottom Margin (mm)';

comment on column report_paperformat.margin_left is 'Left Margin (mm)';

comment on column report_paperformat.margin_right is 'Right Margin (mm)';

comment on column report_paperformat.page_height is 'Page height (mm)';

comment on column report_paperformat.page_width is 'Page width (mm)';

comment on column report_paperformat.orientation is 'Orientation';

comment on column report_paperformat.header_line is 'Display a header line';

comment on column report_paperformat.header_spacing is 'Header spacing';

comment on column report_paperformat.dpi is 'Output DPI';

comment on column report_paperformat.create_uid is 'Created by';

comment on column report_paperformat.create_date is 'Created on';

comment on column report_paperformat.write_uid is 'Last Updated by';

comment on column report_paperformat.write_date is 'Last Updated on';

alter table report_paperformat owner to postgres;

create table ir_act_report_xml
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_act_report_xml_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_act_report_xml_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_act_report_xml_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_report_xml_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	model varchar not null,
	report_type varchar not null,
	report_name varchar not null,
	report_file varchar,
	multi boolean,
	paperformat_id integer
		constraint ir_act_report_xml_paperformat_id_fkey
			references report_paperformat
				on delete set null,
	print_report_name varchar,
	attachment_use boolean,
	attachment varchar
);

comment on column ir_act_report_xml.model is 'Model Name';

comment on column ir_act_report_xml.report_type is 'Report Type';

comment on column ir_act_report_xml.report_name is 'Template Name';

comment on column ir_act_report_xml.report_file is 'Report File';

comment on column ir_act_report_xml.multi is 'On Multiple Doc.';

comment on column ir_act_report_xml.paperformat_id is 'Paper Format';

comment on column ir_act_report_xml.print_report_name is 'Printed Report Name';

comment on column ir_act_report_xml.attachment_use is 'Reload from Attachment';

comment on column ir_act_report_xml.attachment is 'Save as Attachment Prefix';

alter table ir_act_report_xml owner to postgres;

create table mail_template
(
	id integer default nextval('mail_template_id_seq'::regclass) not null
		constraint mail_template_pkey
			primary key,
	name varchar,
	model_id integer
		constraint mail_template_model_id_fkey
			references ir_model
				on delete set null,
	model varchar,
	subject varchar,
	email_from varchar,
	use_default_to boolean,
	email_to varchar,
	partner_to varchar,
	email_cc varchar,
	reply_to varchar,
	body_html text,
	report_name varchar,
	report_template integer
		constraint mail_template_report_template_fkey
			references ir_act_report_xml
				on delete set null,
	mail_server_id integer
		constraint mail_template_mail_server_id_fkey
			references ir_mail_server
				on delete set null,
	scheduled_date varchar,
	auto_delete boolean,
	ref_ir_act_window integer
		constraint mail_template_ref_ir_act_window_fkey
			references ir_act_window
				on delete set null,
	lang varchar,
	create_uid integer
		constraint mail_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_template is 'Email Templates';

comment on column mail_template.name is 'Name';

comment on column mail_template.model_id is 'Applies to';

comment on column mail_template.model is 'Related Document Model';

comment on column mail_template.subject is 'Subject';

comment on column mail_template.email_from is 'From';

comment on column mail_template.use_default_to is 'Default recipients';

comment on column mail_template.email_to is 'To (Emails)';

comment on column mail_template.partner_to is 'To (Partners)';

comment on column mail_template.email_cc is 'Cc';

comment on column mail_template.reply_to is 'Reply-To';

comment on column mail_template.body_html is 'Body';

comment on column mail_template.report_name is 'Report Filename';

comment on column mail_template.report_template is 'Optional report to print and attach';

comment on column mail_template.mail_server_id is 'Outgoing Mail Server';

comment on column mail_template.scheduled_date is 'Scheduled Date';

comment on column mail_template.auto_delete is 'Auto Delete';

comment on column mail_template.ref_ir_act_window is 'Sidebar action';

comment on column mail_template.lang is 'Language';

comment on column mail_template.create_uid is 'Created by';

comment on column mail_template.create_date is 'Created on';

comment on column mail_template.write_uid is 'Last Updated by';

comment on column mail_template.write_date is 'Last Updated on';

alter table mail_template owner to postgres;

create table email_template_attachment_rel
(
	email_template_id integer not null
		constraint email_template_attachment_rel_email_template_id_fkey
			references mail_template
				on delete cascade,
	attachment_id integer not null
		constraint email_template_attachment_rel_attachment_id_fkey
			references ir_attachment
				on delete cascade,
	constraint email_template_attachment_rel_pkey
		primary key (email_template_id, attachment_id)
);

comment on table email_template_attachment_rel is 'RELATION BETWEEN mail_template AND ir_attachment';

alter table email_template_attachment_rel owner to postgres;

create index email_template_attachment_rel_attachment_id_email_template__idx
	on email_template_attachment_rel (attachment_id, email_template_id);

create table mail_activity_type_mail_template_rel
(
	mail_activity_type_id integer not null
		constraint mail_activity_type_mail_template_rel_mail_activity_type_id_fkey
			references mail_activity_type
				on delete cascade,
	mail_template_id integer not null
		constraint mail_activity_type_mail_template_rel_mail_template_id_fkey
			references mail_template
				on delete cascade,
	constraint mail_activity_type_mail_template_rel_pkey
		primary key (mail_activity_type_id, mail_template_id)
);

comment on table mail_activity_type_mail_template_rel is 'RELATION BETWEEN mail_activity_type AND mail_template';

alter table mail_activity_type_mail_template_rel owner to postgres;

create index mail_activity_type_mail_templ_mail_template_id_mail_activit_idx
	on mail_activity_type_mail_template_rel (mail_template_id, mail_activity_type_id);

create table mail_compose_message
(
	id integer default nextval('mail_compose_message_id_seq'::regclass) not null
		constraint mail_compose_message_pkey
			primary key,
	subject varchar,
	body text,
	parent_id integer
		constraint mail_compose_message_parent_id_fkey
			references mail_message
				on delete set null,
	template_id integer
		constraint mail_compose_message_template_id_fkey
			references mail_template
				on delete set null,
	layout varchar,
	add_sign boolean,
	email_from varchar,
	author_id integer
		constraint mail_compose_message_author_id_fkey
			references res_partner
				on delete set null,
	composition_mode varchar,
	model varchar,
	res_id integer,
	record_name varchar,
	use_active_domain boolean,
	active_domain text,
	message_type varchar not null,
	subtype_id integer
		constraint mail_compose_message_subtype_id_fkey
			references mail_message_subtype
				on delete set null,
	mail_activity_type_id integer
		constraint mail_compose_message_mail_activity_type_id_fkey
			references mail_activity_type
				on delete set null,
	reply_to varchar,
	no_auto_thread boolean,
	is_log boolean,
	notify boolean,
	auto_delete boolean,
	auto_delete_message boolean,
	mail_server_id integer
		constraint mail_compose_message_mail_server_id_fkey
			references ir_mail_server
				on delete set null,
	create_uid integer
		constraint mail_compose_message_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_compose_message_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_compose_message is 'Email composition wizard';

comment on column mail_compose_message.subject is 'Subject';

comment on column mail_compose_message.body is 'Contents';

comment on column mail_compose_message.parent_id is 'Parent Message';

comment on column mail_compose_message.template_id is 'Use template';

comment on column mail_compose_message.layout is 'Layout';

comment on column mail_compose_message.add_sign is 'Add Sign';

comment on column mail_compose_message.email_from is 'From';

comment on column mail_compose_message.author_id is 'Author';

comment on column mail_compose_message.composition_mode is 'Composition mode';

comment on column mail_compose_message.model is 'Related Document Model';

comment on column mail_compose_message.res_id is 'Related Document ID';

comment on column mail_compose_message.record_name is 'Message Record Name';

comment on column mail_compose_message.use_active_domain is 'Use active domain';

comment on column mail_compose_message.active_domain is 'Active domain';

comment on column mail_compose_message.message_type is 'Type';

comment on column mail_compose_message.subtype_id is 'Subtype';

comment on column mail_compose_message.mail_activity_type_id is 'Mail Activity Type';

comment on column mail_compose_message.reply_to is 'Reply-To';

comment on column mail_compose_message.no_auto_thread is 'No threading for answers';

comment on column mail_compose_message.is_log is 'Log an Internal Note';

comment on column mail_compose_message.notify is 'Notify followers';

comment on column mail_compose_message.auto_delete is 'Delete Emails';

comment on column mail_compose_message.auto_delete_message is 'Delete Message Copy';

comment on column mail_compose_message.mail_server_id is 'Outgoing mail server';

comment on column mail_compose_message.create_uid is 'Created by';

comment on column mail_compose_message.create_date is 'Created on';

comment on column mail_compose_message.write_uid is 'Last Updated by';

comment on column mail_compose_message.write_date is 'Last Updated on';

alter table mail_compose_message owner to postgres;

create table account_invoice_send
(
	id integer default nextval('account_invoice_send_id_seq'::regclass) not null
		constraint account_invoice_send_pkey
			primary key,
	is_email boolean,
	is_print boolean,
	printed boolean,
	composer_id integer not null
		constraint account_invoice_send_composer_id_fkey
			references mail_compose_message
				on delete cascade,
	template_id integer
		constraint account_invoice_send_template_id_fkey
			references mail_template
				on delete set null,
	create_uid integer
		constraint account_invoice_send_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_invoice_send_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	snailmail_is_letter boolean
);

comment on table account_invoice_send is 'Account Invoice Send';

comment on column account_invoice_send.is_email is 'Email';

comment on column account_invoice_send.is_print is 'Print';

comment on column account_invoice_send.printed is 'Is Printed';

comment on column account_invoice_send.composer_id is 'Composer';

comment on column account_invoice_send.template_id is 'Use template';

comment on column account_invoice_send.create_uid is 'Created by';

comment on column account_invoice_send.create_date is 'Created on';

comment on column account_invoice_send.write_uid is 'Last Updated by';

comment on column account_invoice_send.write_date is 'Last Updated on';

comment on column account_invoice_send.snailmail_is_letter is 'Send by Post';

alter table account_invoice_send owner to postgres;

create index account_invoice_send_template_id_index
	on account_invoice_send (template_id);

create table account_move_account_invoice_send_rel
(
	account_invoice_send_id integer not null
		constraint account_move_account_invoice_send__account_invoice_send_id_fkey
			references account_invoice_send
				on delete cascade,
	account_move_id integer not null
		constraint account_move_account_invoice_send_rel_account_move_id_fkey
			references account_move
				on delete cascade,
	constraint account_move_account_invoice_send_rel_pkey
		primary key (account_invoice_send_id, account_move_id)
);

comment on table account_move_account_invoice_send_rel is 'RELATION BETWEEN account_invoice_send AND account_move';

alter table account_move_account_invoice_send_rel owner to postgres;

create index account_move_account_invoice__account_move_id_account_invoi_idx
	on account_move_account_invoice_send_rel (account_move_id, account_invoice_send_id);

create table account_tour_upload_bill
(
	id integer default nextval('account_tour_upload_bill_id_seq'::regclass) not null
		constraint account_tour_upload_bill_pkey
			primary key,
	composer_id integer not null
		constraint account_tour_upload_bill_composer_id_fkey
			references mail_compose_message
				on delete cascade,
	selection varchar,
	create_uid integer
		constraint account_tour_upload_bill_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tour_upload_bill_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tour_upload_bill is 'Account tour upload bill';

comment on column account_tour_upload_bill.composer_id is 'Composer';

comment on column account_tour_upload_bill.selection is 'Selection';

comment on column account_tour_upload_bill.create_uid is 'Created by';

comment on column account_tour_upload_bill.create_date is 'Created on';

comment on column account_tour_upload_bill.write_uid is 'Last Updated by';

comment on column account_tour_upload_bill.write_date is 'Last Updated on';

alter table account_tour_upload_bill owner to postgres;

create index mail_compose_message_author_id_index
	on mail_compose_message (author_id);

create index mail_compose_message_mail_activity_type_id_index
	on mail_compose_message (mail_activity_type_id);

create index mail_compose_message_model_index
	on mail_compose_message (model);

create index mail_compose_message_parent_id_index
	on mail_compose_message (parent_id);

create index mail_compose_message_res_id_index
	on mail_compose_message (res_id);

create index mail_compose_message_subtype_id_index
	on mail_compose_message (subtype_id);

create index mail_compose_message_template_id_index
	on mail_compose_message (template_id);

create table mail_compose_message_ir_attachments_rel
(
	wizard_id integer not null
		constraint mail_compose_message_ir_attachments_rel_wizard_id_fkey
			references mail_compose_message
				on delete cascade,
	attachment_id integer not null
		constraint mail_compose_message_ir_attachments_rel_attachment_id_fkey
			references ir_attachment
				on delete cascade,
	constraint mail_compose_message_ir_attachments_rel_pkey
		primary key (wizard_id, attachment_id)
);

comment on table mail_compose_message_ir_attachments_rel is 'RELATION BETWEEN mail_compose_message AND ir_attachment';

alter table mail_compose_message_ir_attachments_rel owner to postgres;

create index mail_compose_message_ir_attachments_attachment_id_wizard_id_idx
	on mail_compose_message_ir_attachments_rel (attachment_id, wizard_id);

create table mail_compose_message_res_partner_rel
(
	wizard_id integer not null
		constraint mail_compose_message_res_partner_rel_wizard_id_fkey
			references mail_compose_message
				on delete cascade,
	partner_id integer not null
		constraint mail_compose_message_res_partner_rel_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint mail_compose_message_res_partner_rel_pkey
		primary key (wizard_id, partner_id)
);

comment on table mail_compose_message_res_partner_rel is 'RELATION BETWEEN mail_compose_message AND res_partner';

alter table mail_compose_message_res_partner_rel owner to postgres;

create index mail_compose_message_res_partner_rel_partner_id_wizard_id_idx
	on mail_compose_message_res_partner_rel (partner_id, wizard_id);

create index mail_template_model_index
	on mail_template (model);

create table mail_template_preview
(
	id integer default nextval('mail_template_preview_id_seq'::regclass) not null
		constraint mail_template_preview_pkey
			primary key,
	mail_template_id integer not null
		constraint mail_template_preview_mail_template_id_fkey
			references mail_template
				on delete cascade,
	resource_ref varchar,
	lang varchar,
	error_msg varchar,
	create_uid integer
		constraint mail_template_preview_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_template_preview_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_template_preview is 'Email Template Preview';

comment on column mail_template_preview.mail_template_id is 'Related Mail Template';

comment on column mail_template_preview.resource_ref is 'Record';

comment on column mail_template_preview.lang is 'Template Preview Language';

comment on column mail_template_preview.error_msg is 'Error Message';

comment on column mail_template_preview.create_uid is 'Created by';

comment on column mail_template_preview.create_date is 'Created on';

comment on column mail_template_preview.write_uid is 'Last Updated by';

comment on column mail_template_preview.write_date is 'Last Updated on';

alter table mail_template_preview owner to postgres;

create table res_bank
(
	id integer default nextval('res_bank_id_seq'::regclass) not null
		constraint res_bank_pkey
			primary key,
	name varchar not null,
	street varchar,
	street2 varchar,
	zip varchar,
	city varchar,
	state integer
		constraint res_bank_state_fkey
			references res_country_state
				on delete set null,
	country integer
		constraint res_bank_country_fkey
			references res_country
				on delete set null,
	email varchar,
	phone varchar,
	active boolean,
	bic varchar,
	create_uid integer
		constraint res_bank_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_bank_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_bank is 'Bank';

comment on column res_bank.name is 'Name';

comment on column res_bank.street is 'Street';

comment on column res_bank.street2 is 'Street2';

comment on column res_bank.zip is 'Zip';

comment on column res_bank.city is 'City';

comment on column res_bank.state is 'Fed. State';

comment on column res_bank.country is 'Country';

comment on column res_bank.email is 'Email';

comment on column res_bank.phone is 'Phone';

comment on column res_bank.active is 'Active';

comment on column res_bank.bic is 'Bank Identifier Code';

comment on column res_bank.create_uid is 'Created by';

comment on column res_bank.create_date is 'Created on';

comment on column res_bank.write_uid is 'Last Updated by';

comment on column res_bank.write_date is 'Last Updated on';

alter table res_bank owner to postgres;

create index res_bank_bic_index
	on res_bank (bic);

create table res_company_users_rel
(
	cid integer not null,
	user_id integer not null
		constraint res_company_users_rel_user_id_fkey
			references res_users
				on delete cascade,
	constraint res_company_users_rel_pkey
		primary key (cid, user_id)
);

comment on table res_company_users_rel is 'RELATION BETWEEN res_company AND res_users';

alter table res_company_users_rel owner to postgres;

create index res_company_users_rel_user_id_cid_idx
	on res_company_users_rel (user_id, cid);

create table res_config
(
	id integer default nextval('res_config_id_seq'::regclass) not null
		constraint res_config_pkey
			primary key,
	create_uid integer
		constraint res_config_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_config_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_config is 'Config';

comment on column res_config.create_uid is 'Created by';

comment on column res_config.create_date is 'Created on';

comment on column res_config.write_uid is 'Last Updated by';

comment on column res_config.write_date is 'Last Updated on';

alter table res_config owner to postgres;

create table res_config_installer
(
	id integer default nextval('res_config_installer_id_seq'::regclass) not null
		constraint res_config_installer_pkey
			primary key,
	create_uid integer
		constraint res_config_installer_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_config_installer_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_config_installer is 'Config Installer';

comment on column res_config_installer.create_uid is 'Created by';

comment on column res_config_installer.create_date is 'Created on';

comment on column res_config_installer.write_uid is 'Last Updated by';

comment on column res_config_installer.write_date is 'Last Updated on';

alter table res_config_installer owner to postgres;

alter table res_country
	add constraint res_country_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table res_country
	add constraint res_country_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table res_country_group
(
	id integer default nextval('res_country_group_id_seq'::regclass) not null
		constraint res_country_group_pkey
			primary key,
	name varchar not null,
	create_uid integer
		constraint res_country_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_country_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_country_group is 'Country Group';

comment on column res_country_group.name is 'Name';

comment on column res_country_group.create_uid is 'Created by';

comment on column res_country_group.create_date is 'Created on';

comment on column res_country_group.write_uid is 'Last Updated by';

comment on column res_country_group.write_date is 'Last Updated on';

alter table res_country_group owner to postgres;

alter table account_fiscal_position
	add constraint account_fiscal_position_country_group_id_fkey
		foreign key (country_group_id) references res_country_group
			on delete set null;

create table res_country_res_country_group_rel
(
	res_country_id integer not null
		constraint res_country_res_country_group_rel_res_country_id_fkey
			references res_country
				on delete cascade,
	res_country_group_id integer not null
		constraint res_country_res_country_group_rel_res_country_group_id_fkey
			references res_country_group
				on delete cascade,
	constraint res_country_res_country_group_rel_pkey
		primary key (res_country_id, res_country_group_id)
);

comment on table res_country_res_country_group_rel is 'RELATION BETWEEN res_country AND res_country_group';

alter table res_country_res_country_group_rel owner to postgres;

create index res_country_res_country_group_res_country_group_id_res_coun_idx
	on res_country_res_country_group_rel (res_country_group_id, res_country_id);

alter table res_country_state
	add constraint res_country_state_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table res_country_state
	add constraint res_country_state_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table res_currency
(
	id integer default nextval('res_currency_id_seq'::regclass) not null
		constraint res_currency_pkey
			primary key,
	name varchar not null
		constraint res_currency_unique_name
			unique,
	symbol varchar not null,
	rounding numeric,
	decimal_places integer,
	active boolean,
	position varchar,
	currency_unit_label varchar,
	currency_subunit_label varchar,
	create_uid integer
		constraint res_currency_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_currency_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on column res_currency.rounding is 'Rounding Factor';

comment on column res_currency.decimal_places is 'Decimal Places';

comment on column res_currency.active is 'Active';

comment on column res_currency.position is 'Symbol Position';

comment on column res_currency.currency_unit_label is 'Currency Unit';

comment on column res_currency.currency_subunit_label is 'Currency Subunit';

comment on column res_currency.create_uid is 'Created by';

comment on column res_currency.create_date is 'Created on';

comment on column res_currency.write_uid is 'Last Updated by';

comment on column res_currency.write_date is 'Last Updated on';

alter table res_currency owner to postgres;

alter table account_account
	add constraint account_account_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete set null;

create table account_account_exclude_res_currency_provision
(
	account_account_id integer not null
		constraint account_account_exclude_res_currency_pr_account_account_id_fkey
			references account_account
				on delete cascade,
	res_currency_id integer not null
		constraint account_account_exclude_res_currency_provi_res_currency_id_fkey
			references res_currency
				on delete cascade,
	constraint account_account_exclude_res_currency_provision_pkey
		primary key (account_account_id, res_currency_id)
);

comment on table account_account_exclude_res_currency_provision is 'RELATION BETWEEN account_account AND res_currency';

alter table account_account_exclude_res_currency_provision owner to postgres;

create index account_account_exclude_res_c_res_currency_id_account_accou_idx
	on account_account_exclude_res_currency_provision (res_currency_id, account_account_id);

create table account_account_template
(
	id integer default nextval('account_account_template_id_seq'::regclass) not null
		constraint account_account_template_pkey
			primary key,
	name varchar not null,
	currency_id integer
		constraint account_account_template_currency_id_fkey
			references res_currency
				on delete set null,
	code varchar(64) not null,
	user_type_id integer not null
		constraint account_account_template_user_type_id_fkey
			references account_account_type
				on delete restrict,
	reconcile boolean,
	note text,
	nocreate boolean,
	chart_template_id integer,
	create_uid integer
		constraint account_account_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_account_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_account_template is 'Templates for Accounts';

comment on column account_account_template.name is 'Name';

comment on column account_account_template.currency_id is 'Account Currency';

comment on column account_account_template.code is 'Code';

comment on column account_account_template.user_type_id is 'Type';

comment on column account_account_template.reconcile is 'Allow Invoices & payments Matching';

comment on column account_account_template.note is 'Note';

comment on column account_account_template.nocreate is 'Optional Create';

comment on column account_account_template.chart_template_id is 'Chart Template';

comment on column account_account_template.create_uid is 'Created by';

comment on column account_account_template.create_date is 'Created on';

comment on column account_account_template.write_uid is 'Last Updated by';

comment on column account_account_template.write_date is 'Last Updated on';

alter table account_account_template owner to postgres;

create index account_account_template_code_index
	on account_account_template (code);

create index account_account_template_name_index
	on account_account_template (name);

create table account_account_template_account_tag
(
	account_account_template_id integer not null
		constraint account_account_template_accou_account_account_template_id_fkey
			references account_account_template
				on delete cascade,
	account_account_tag_id integer not null
		constraint account_account_template_account_ta_account_account_tag_id_fkey
			references account_account_tag
				on delete cascade,
	constraint account_account_template_account_tag_pkey
		primary key (account_account_template_id, account_account_tag_id)
);

comment on table account_account_template_account_tag is 'RELATION BETWEEN account_account_template AND account_account_tag';

alter table account_account_template_account_tag owner to postgres;

create index account_account_template_acco_account_account_tag_id_accoun_idx
	on account_account_template_account_tag (account_account_tag_id, account_account_template_id);

alter table account_asset
	add constraint account_asset_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete restrict;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete set null;

alter table account_bank_statement_line
	add constraint account_bank_statement_line_foreign_currency_id_fkey
		foreign key (foreign_currency_id) references res_currency
			on delete set null;

create table account_chart_template
(
	id integer default nextval('account_chart_template_id_seq'::regclass) not null
		constraint account_chart_template_pkey
			primary key,
	name varchar not null,
	parent_id integer
		constraint account_chart_template_parent_id_fkey
			references account_chart_template
				on delete set null,
	code_digits integer not null,
	visible boolean,
	currency_id integer not null
		constraint account_chart_template_currency_id_fkey
			references res_currency
				on delete restrict,
	use_anglo_saxon boolean,
	complete_tax_set boolean,
	bank_account_code_prefix varchar not null,
	cash_account_code_prefix varchar not null,
	transfer_account_code_prefix varchar not null,
	income_currency_exchange_account_id integer
		constraint account_chart_template_income_currency_exchange_account_id_fkey
			references account_account_template
				on delete set null,
	expense_currency_exchange_account_id integer
		constraint account_chart_template_expense_currency_exchange_account_i_fkey
			references account_account_template
				on delete set null,
	account_journal_suspense_account_id integer
		constraint account_chart_template_account_journal_suspense_account_id_fkey
			references account_account_template
				on delete set null,
	default_cash_difference_income_account_id integer
		constraint account_chart_template_default_cash_difference_income_acco_fkey
			references account_account_template
				on delete set null,
	default_cash_difference_expense_account_id integer
		constraint account_chart_template_default_cash_difference_expense_acc_fkey
			references account_account_template
				on delete set null,
	default_pos_receivable_account_id integer
		constraint account_chart_template_default_pos_receivable_account_id_fkey
			references account_account_template
				on delete set null,
	property_account_receivable_id integer
		constraint account_chart_template_property_account_receivable_id_fkey
			references account_account_template
				on delete set null,
	property_account_payable_id integer
		constraint account_chart_template_property_account_payable_id_fkey
			references account_account_template
				on delete set null,
	property_account_expense_categ_id integer
		constraint account_chart_template_property_account_expense_categ_id_fkey
			references account_account_template
				on delete set null,
	property_account_income_categ_id integer
		constraint account_chart_template_property_account_income_categ_id_fkey
			references account_account_template
				on delete set null,
	property_account_expense_id integer
		constraint account_chart_template_property_account_expense_id_fkey
			references account_account_template
				on delete set null,
	property_account_income_id integer
		constraint account_chart_template_property_account_income_id_fkey
			references account_account_template
				on delete set null,
	property_stock_account_input_categ_id integer
		constraint account_chart_template_property_stock_account_input_categ__fkey
			references account_account_template
				on delete set null,
	property_stock_account_output_categ_id integer
		constraint account_chart_template_property_stock_account_output_categ_fkey
			references account_account_template
				on delete set null,
	property_stock_valuation_account_id integer
		constraint account_chart_template_property_stock_valuation_account_id_fkey
			references account_account_template
				on delete set null,
	property_tax_payable_account_id integer
		constraint account_chart_template_property_tax_payable_account_id_fkey
			references account_account_template
				on delete set null,
	property_tax_receivable_account_id integer
		constraint account_chart_template_property_tax_receivable_account_id_fkey
			references account_account_template
				on delete set null,
	property_advance_tax_payment_account_id integer
		constraint account_chart_template_property_advance_tax_payment_accoun_fkey
			references account_account_template
				on delete set null,
	property_cash_basis_base_account_id integer
		constraint account_chart_template_property_cash_basis_base_account_id_fkey
			references account_account_template
				on delete set null,
	create_uid integer
		constraint account_chart_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_chart_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_chart_template is 'Account Chart Template';

comment on column account_chart_template.name is 'Name';

comment on column account_chart_template.parent_id is 'Parent Chart Template';

comment on column account_chart_template.code_digits is '# of Digits';

comment on column account_chart_template.visible is 'Can be Visible?';

comment on column account_chart_template.currency_id is 'Currency';

comment on column account_chart_template.use_anglo_saxon is 'Use Anglo-Saxon accounting';

comment on column account_chart_template.complete_tax_set is 'Complete Set of Taxes';

comment on column account_chart_template.bank_account_code_prefix is 'Prefix of the bank accounts';

comment on column account_chart_template.cash_account_code_prefix is 'Prefix of the main cash accounts';

comment on column account_chart_template.transfer_account_code_prefix is 'Prefix of the main transfer accounts';

comment on column account_chart_template.income_currency_exchange_account_id is 'Gain Exchange Rate Account';

comment on column account_chart_template.expense_currency_exchange_account_id is 'Loss Exchange Rate Account';

comment on column account_chart_template.account_journal_suspense_account_id is 'Journal Suspense Account';

comment on column account_chart_template.default_cash_difference_income_account_id is 'Cash Difference Income Account';

comment on column account_chart_template.default_cash_difference_expense_account_id is 'Cash Difference Expense Account';

comment on column account_chart_template.default_pos_receivable_account_id is 'PoS receivable account';

comment on column account_chart_template.property_account_receivable_id is 'Receivable Account';

comment on column account_chart_template.property_account_payable_id is 'Payable Account';

comment on column account_chart_template.property_account_expense_categ_id is 'Category of Expense Account';

comment on column account_chart_template.property_account_income_categ_id is 'Category of Income Account';

comment on column account_chart_template.property_account_expense_id is 'Expense Account on Product Template';

comment on column account_chart_template.property_account_income_id is 'Income Account on Product Template';

comment on column account_chart_template.property_stock_account_input_categ_id is 'Input Account for Stock Valuation';

comment on column account_chart_template.property_stock_account_output_categ_id is 'Output Account for Stock Valuation';

comment on column account_chart_template.property_stock_valuation_account_id is 'Account Template for Stock Valuation';

comment on column account_chart_template.property_tax_payable_account_id is 'Tax current account (payable)';

comment on column account_chart_template.property_tax_receivable_account_id is 'Tax current account (receivable)';

comment on column account_chart_template.property_advance_tax_payment_account_id is 'Advance tax payment account';

comment on column account_chart_template.property_cash_basis_base_account_id is 'Base Tax Received Account';

comment on column account_chart_template.create_uid is 'Created by';

comment on column account_chart_template.create_date is 'Created on';

comment on column account_chart_template.write_uid is 'Last Updated by';

comment on column account_chart_template.write_date is 'Last Updated on';

alter table account_chart_template owner to postgres;

alter table account_account_template
	add constraint account_account_template_chart_template_id_fkey
		foreign key (chart_template_id) references account_chart_template
			on delete set null;

create table account_fiscal_position_template
(
	id integer default nextval('account_fiscal_position_template_id_seq'::regclass) not null
		constraint account_fiscal_position_template_pkey
			primary key,
	sequence integer,
	name varchar not null,
	chart_template_id integer not null
		constraint account_fiscal_position_template_chart_template_id_fkey
			references account_chart_template
				on delete restrict,
	note text,
	auto_apply boolean,
	vat_required boolean,
	country_id integer
		constraint account_fiscal_position_template_country_id_fkey
			references res_country
				on delete set null,
	country_group_id integer
		constraint account_fiscal_position_template_country_group_id_fkey
			references res_country_group
				on delete set null,
	zip_from varchar,
	zip_to varchar,
	create_uid integer
		constraint account_fiscal_position_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_position_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_fiscal_position_template is 'Template for Fiscal Position';

comment on column account_fiscal_position_template.sequence is 'Sequence';

comment on column account_fiscal_position_template.name is 'Fiscal Position Template';

comment on column account_fiscal_position_template.chart_template_id is 'Chart Template';

comment on column account_fiscal_position_template.note is 'Notes';

comment on column account_fiscal_position_template.auto_apply is 'Detect Automatically';

comment on column account_fiscal_position_template.vat_required is 'VAT required';

comment on column account_fiscal_position_template.country_id is 'Country';

comment on column account_fiscal_position_template.country_group_id is 'Country Group';

comment on column account_fiscal_position_template.zip_from is 'Zip Range From';

comment on column account_fiscal_position_template.zip_to is 'Zip Range To';

comment on column account_fiscal_position_template.create_uid is 'Created by';

comment on column account_fiscal_position_template.create_date is 'Created on';

comment on column account_fiscal_position_template.write_uid is 'Last Updated by';

comment on column account_fiscal_position_template.write_date is 'Last Updated on';

alter table account_fiscal_position_template owner to postgres;

create table account_fiscal_position_account_template
(
	id integer default nextval('account_fiscal_position_account_template_id_seq'::regclass) not null
		constraint account_fiscal_position_account_template_pkey
			primary key,
	position_id integer not null
		constraint account_fiscal_position_account_template_position_id_fkey
			references account_fiscal_position_template
				on delete cascade,
	account_src_id integer not null
		constraint account_fiscal_position_account_template_account_src_id_fkey
			references account_account_template
				on delete restrict,
	account_dest_id integer not null
		constraint account_fiscal_position_account_template_account_dest_id_fkey
			references account_account_template
				on delete restrict,
	create_uid integer
		constraint account_fiscal_position_account_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_position_account_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_fiscal_position_account_template is 'Accounts Mapping Template of Fiscal Position';

comment on column account_fiscal_position_account_template.position_id is 'Fiscal Mapping';

comment on column account_fiscal_position_account_template.account_src_id is 'Account Source';

comment on column account_fiscal_position_account_template.account_dest_id is 'Account Destination';

comment on column account_fiscal_position_account_template.create_uid is 'Created by';

comment on column account_fiscal_position_account_template.create_date is 'Created on';

comment on column account_fiscal_position_account_template.write_uid is 'Last Updated by';

comment on column account_fiscal_position_account_template.write_date is 'Last Updated on';

alter table account_fiscal_position_account_template owner to postgres;

create table account_fiscal_position_template_res_country_state_rel
(
	account_fiscal_position_template_id integer not null
		constraint account_fiscal_position_templ_account_fiscal_position_temp_fkey
			references account_fiscal_position_template
				on delete cascade,
	res_country_state_id integer not null
		constraint account_fiscal_position_template_res__res_country_state_id_fkey
			references res_country_state
				on delete cascade,
	constraint account_fiscal_position_template_res_country_state_rel_pkey
		primary key (account_fiscal_position_template_id, res_country_state_id)
);

comment on table account_fiscal_position_template_res_country_state_rel is 'RELATION BETWEEN account_fiscal_position_template AND res_country_state';

alter table account_fiscal_position_template_res_country_state_rel owner to postgres;

create index account_fiscal_position_templ_res_country_state_id_account__idx
	on account_fiscal_position_template_res_country_state_rel (res_country_state_id, account_fiscal_position_template_id);

create table account_group_template
(
	id integer default nextval('account_group_template_id_seq'::regclass) not null
		constraint account_group_template_pkey
			primary key,
	parent_id integer
		constraint account_group_template_parent_id_fkey
			references account_group_template
				on delete cascade,
	name varchar not null,
	code_prefix_start varchar,
	code_prefix_end varchar,
	chart_template_id integer not null
		constraint account_group_template_chart_template_id_fkey
			references account_chart_template
				on delete restrict,
	create_uid integer
		constraint account_group_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_group_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_group_template is 'Template for Account Groups';

comment on column account_group_template.parent_id is 'Parent';

comment on column account_group_template.name is 'Name';

comment on column account_group_template.code_prefix_start is 'Code Prefix Start';

comment on column account_group_template.code_prefix_end is 'Code Prefix End';

comment on column account_group_template.chart_template_id is 'Chart Template';

comment on column account_group_template.create_uid is 'Created by';

comment on column account_group_template.create_date is 'Created on';

comment on column account_group_template.write_uid is 'Last Updated by';

comment on column account_group_template.write_date is 'Last Updated on';

alter table account_group_template owner to postgres;

create index account_group_template_parent_id_index
	on account_group_template (parent_id);

alter table account_journal
	add constraint account_journal_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete set null;

create table account_link_journal_line
(
	id integer default nextval('account_link_journal_line_id_seq'::regclass) not null
		constraint account_link_journal_line_pkey
			primary key,
	action varchar,
	journal_id integer
		constraint account_link_journal_line_journal_id_fkey
			references account_journal
				on delete set null,
	currency_id integer
		constraint account_link_journal_line_currency_id_fkey
			references res_currency
				on delete set null,
	online_account_id integer
		constraint account_link_journal_line_online_account_id_fkey
			references account_online_account
				on delete set null,
	account_online_wizard_id integer
		constraint account_link_journal_line_account_online_wizard_id_fkey
			references account_link_journal
				on delete set null,
	journal_statements_creation varchar not null,
	create_uid integer
		constraint account_link_journal_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_link_journal_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_link_journal_line is 'Link one bank account to a journal';

comment on column account_link_journal_line.action is 'Action';

comment on column account_link_journal_line.journal_id is 'Journal';

comment on column account_link_journal_line.currency_id is 'Currency';

comment on column account_link_journal_line.online_account_id is 'Online Account';

comment on column account_link_journal_line.account_online_wizard_id is 'Account Online Wizard';

comment on column account_link_journal_line.journal_statements_creation is 'Synchronization frequency';

comment on column account_link_journal_line.create_uid is 'Created by';

comment on column account_link_journal_line.create_date is 'Created on';

comment on column account_link_journal_line.write_uid is 'Last Updated by';

comment on column account_link_journal_line.write_date is 'Last Updated on';

alter table account_link_journal_line owner to postgres;

alter table account_move
	add constraint account_move_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete restrict;

create table account_reconcile_model_template
(
	id integer default nextval('account_reconcile_model_template_id_seq'::regclass) not null
		constraint account_reconcile_model_template_pkey
			primary key,
	chart_template_id integer not null
		constraint account_reconcile_model_template_chart_template_id_fkey
			references account_chart_template
				on delete restrict,
	name varchar not null,
	sequence integer not null,
	rule_type varchar not null,
	auto_reconcile boolean,
	to_check boolean,
	matching_order varchar,
	match_text_location_label boolean,
	match_text_location_note boolean,
	match_text_location_reference boolean,
	match_nature varchar not null,
	match_amount varchar,
	match_amount_min double precision,
	match_amount_max double precision,
	match_label varchar,
	match_label_param varchar,
	match_note varchar,
	match_note_param varchar,
	match_transaction_type varchar,
	match_transaction_type_param varchar,
	match_same_currency boolean,
	match_total_amount boolean,
	match_total_amount_param double precision,
	match_partner boolean,
	decimal_separator varchar,
	create_uid integer
		constraint account_reconcile_model_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reconcile_model_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reconcile_model_template is 'Reconcile Model Template';

comment on column account_reconcile_model_template.chart_template_id is 'Chart Template';

comment on column account_reconcile_model_template.name is 'Button Label';

comment on column account_reconcile_model_template.sequence is 'Sequence';

comment on column account_reconcile_model_template.rule_type is 'Type';

comment on column account_reconcile_model_template.auto_reconcile is 'Auto-validate';

comment on column account_reconcile_model_template.to_check is 'To Check';

comment on column account_reconcile_model_template.matching_order is 'Matching Order';

comment on column account_reconcile_model_template.match_text_location_label is 'Match Text Location Label';

comment on column account_reconcile_model_template.match_text_location_note is 'Match Text Location Note';

comment on column account_reconcile_model_template.match_text_location_reference is 'Match Text Location Reference';

comment on column account_reconcile_model_template.match_nature is 'Amount Nature';

comment on column account_reconcile_model_template.match_amount is 'Amount';

comment on column account_reconcile_model_template.match_amount_min is 'Amount Min Parameter';

comment on column account_reconcile_model_template.match_amount_max is 'Amount Max Parameter';

comment on column account_reconcile_model_template.match_label is 'Label';

comment on column account_reconcile_model_template.match_label_param is 'Label Parameter';

comment on column account_reconcile_model_template.match_note is 'Note';

comment on column account_reconcile_model_template.match_note_param is 'Note Parameter';

comment on column account_reconcile_model_template.match_transaction_type is 'Transaction Type';

comment on column account_reconcile_model_template.match_transaction_type_param is 'Transaction Type Parameter';

comment on column account_reconcile_model_template.match_same_currency is 'Same Currency Matching';

comment on column account_reconcile_model_template.match_total_amount is 'Amount Matching';

comment on column account_reconcile_model_template.match_total_amount_param is 'Amount Matching %';

comment on column account_reconcile_model_template.match_partner is 'Partner Is Set';

comment on column account_reconcile_model_template.decimal_separator is 'Decimal Separator';

comment on column account_reconcile_model_template.create_uid is 'Created by';

comment on column account_reconcile_model_template.create_date is 'Created on';

comment on column account_reconcile_model_template.write_uid is 'Last Updated by';

comment on column account_reconcile_model_template.write_date is 'Last Updated on';

alter table account_reconcile_model_template owner to postgres;

create table account_journal_account_reconcile_model_template_rel
(
	account_reconcile_model_template_id integer not null
		constraint account_journal_account_recon_account_reconcile_model_temp_fkey
			references account_reconcile_model_template
				on delete cascade,
	account_journal_id integer not null
		constraint account_journal_account_reconcile_mode_account_journal_id_fkey1
			references account_journal
				on delete cascade,
	constraint account_journal_account_reconcile_model_template_rel_pkey
		primary key (account_reconcile_model_template_id, account_journal_id)
);

comment on table account_journal_account_reconcile_model_template_rel is 'RELATION BETWEEN account_reconcile_model_template AND account_journal';

alter table account_journal_account_reconcile_model_template_rel owner to postgres;

create index account_journal_account_recon_account_journal_id_account_r_idx1
	on account_journal_account_reconcile_model_template_rel (account_journal_id, account_reconcile_model_template_id);

create table account_reconcile_model_line_template
(
	id integer default nextval('account_reconcile_model_line_template_id_seq'::regclass) not null
		constraint account_reconcile_model_line_template_pkey
			primary key,
	model_id integer
		constraint account_reconcile_model_line_template_model_id_fkey
			references account_reconcile_model_template
				on delete set null,
	sequence integer not null,
	account_id integer
		constraint account_reconcile_model_line_template_account_id_fkey
			references account_account_template
				on delete cascade,
	label varchar,
	amount_type varchar not null,
	amount_string varchar,
	force_tax_included boolean,
	create_uid integer
		constraint account_reconcile_model_line_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reconcile_model_line_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reconcile_model_line_template is 'Reconcile Model Line Template';

comment on column account_reconcile_model_line_template.model_id is 'Model';

comment on column account_reconcile_model_line_template.sequence is 'Sequence';

comment on column account_reconcile_model_line_template.account_id is 'Account';

comment on column account_reconcile_model_line_template.label is 'Journal Item Label';

comment on column account_reconcile_model_line_template.amount_type is 'Amount Type';

comment on column account_reconcile_model_line_template.amount_string is 'Amount';

comment on column account_reconcile_model_line_template.force_tax_included is 'Tax Included in Price';

comment on column account_reconcile_model_line_template.create_uid is 'Created by';

comment on column account_reconcile_model_line_template.create_date is 'Created on';

comment on column account_reconcile_model_line_template.write_uid is 'Last Updated by';

comment on column account_reconcile_model_line_template.write_date is 'Last Updated on';

alter table account_reconcile_model_line_template owner to postgres;

create table account_reconcile_model_template_res_partner_rel
(
	account_reconcile_model_template_id integer not null
		constraint account_reconcile_model_templ_account_reconcile_model_temp_fkey
			references account_reconcile_model_template
				on delete cascade,
	res_partner_id integer not null
		constraint account_reconcile_model_template_res_partne_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint account_reconcile_model_template_res_partner_rel_pkey
		primary key (account_reconcile_model_template_id, res_partner_id)
);

comment on table account_reconcile_model_template_res_partner_rel is 'RELATION BETWEEN account_reconcile_model_template AND res_partner';

alter table account_reconcile_model_template_res_partner_rel owner to postgres;

create index account_reconcile_model_templ_res_partner_id_account_reconc_idx
	on account_reconcile_model_template_res_partner_rel (res_partner_id, account_reconcile_model_template_id);

create table account_tax_template
(
	id integer default nextval('account_tax_template_id_seq'::regclass) not null
		constraint account_tax_template_pkey
			primary key,
	chart_template_id integer not null
		constraint account_tax_template_chart_template_id_fkey
			references account_chart_template
				on delete restrict,
	name varchar not null,
	type_tax_use varchar not null,
	tax_scope varchar,
	amount_type varchar not null,
	active boolean,
	sequence integer not null,
	amount numeric not null,
	description varchar,
	price_include boolean,
	include_base_amount boolean,
	analytic boolean,
	tax_group_id integer
		constraint account_tax_template_tax_group_id_fkey
			references account_tax_group
				on delete set null,
	tax_exigibility varchar,
	cash_basis_transition_account_id integer
		constraint account_tax_template_cash_basis_transition_account_id_fkey
			references account_account_template
				on delete set null,
	create_uid integer
		constraint account_tax_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint account_tax_template_name_company_uniq
		unique (name, type_tax_use, tax_scope, chart_template_id)
);

comment on table account_tax_template is 'Templates for Taxes';

comment on column account_tax_template.chart_template_id is 'Chart Template';

comment on column account_tax_template.name is 'Tax Name';

comment on column account_tax_template.type_tax_use is 'Tax Type';

comment on column account_tax_template.tax_scope is 'Tax Scope';

comment on column account_tax_template.amount_type is 'Tax Computation';

comment on column account_tax_template.active is 'Active';

comment on column account_tax_template.sequence is 'Sequence';

comment on column account_tax_template.amount is 'Amount';

comment on column account_tax_template.description is 'Display on Invoices';

comment on column account_tax_template.price_include is 'Included in Price';

comment on column account_tax_template.include_base_amount is 'Affect Subsequent Taxes';

comment on column account_tax_template.analytic is 'Analytic Cost';

comment on column account_tax_template.tax_group_id is 'Tax Group';

comment on column account_tax_template.tax_exigibility is 'Tax Due';

comment on column account_tax_template.cash_basis_transition_account_id is 'Cash Basis Transition Account';

comment on column account_tax_template.create_uid is 'Created by';

comment on column account_tax_template.create_date is 'Created on';

comment on column account_tax_template.write_uid is 'Last Updated by';

comment on column account_tax_template.write_date is 'Last Updated on';

alter table account_tax_template owner to postgres;

create table account_account_template_tax_rel
(
	account_id integer not null
		constraint account_account_template_tax_rel_account_id_fkey
			references account_account_template
				on delete cascade,
	tax_id integer not null
		constraint account_account_template_tax_rel_tax_id_fkey
			references account_tax_template
				on delete cascade,
	constraint account_account_template_tax_rel_pkey
		primary key (account_id, tax_id)
);

comment on table account_account_template_tax_rel is 'RELATION BETWEEN account_account_template AND account_tax_template';

alter table account_account_template_tax_rel owner to postgres;

create index account_account_template_tax_rel_tax_id_account_id_idx
	on account_account_template_tax_rel (tax_id, account_id);

create table account_fiscal_position_tax_template
(
	id integer default nextval('account_fiscal_position_tax_template_id_seq'::regclass) not null
		constraint account_fiscal_position_tax_template_pkey
			primary key,
	position_id integer not null
		constraint account_fiscal_position_tax_template_position_id_fkey
			references account_fiscal_position_template
				on delete cascade,
	tax_src_id integer not null
		constraint account_fiscal_position_tax_template_tax_src_id_fkey
			references account_tax_template
				on delete restrict,
	tax_dest_id integer
		constraint account_fiscal_position_tax_template_tax_dest_id_fkey
			references account_tax_template
				on delete set null,
	create_uid integer
		constraint account_fiscal_position_tax_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_position_tax_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_fiscal_position_tax_template is 'Tax Mapping Template of Fiscal Position';

comment on column account_fiscal_position_tax_template.position_id is 'Fiscal Position';

comment on column account_fiscal_position_tax_template.tax_src_id is 'Tax Source';

comment on column account_fiscal_position_tax_template.tax_dest_id is 'Replacement Tax';

comment on column account_fiscal_position_tax_template.create_uid is 'Created by';

comment on column account_fiscal_position_tax_template.create_date is 'Created on';

comment on column account_fiscal_position_tax_template.write_uid is 'Last Updated by';

comment on column account_fiscal_position_tax_template.write_date is 'Last Updated on';

alter table account_fiscal_position_tax_template owner to postgres;

create table account_reconcile_model_line_template_account_tax_template_rel
(
	account_reconcile_model_line_template_id integer not null
		constraint account_reconcile_model_line_account_reconcile_model_line_fkey1
			references account_reconcile_model_line_template
				on delete cascade,
	account_tax_template_id integer not null
		constraint account_reconcile_model_line_templ_account_tax_template_id_fkey
			references account_tax_template
				on delete restrict,
	constraint account_reconcile_model_line_template_account_tax_template_pkey
		primary key (account_reconcile_model_line_template_id, account_tax_template_id)
);

comment on table account_reconcile_model_line_template_account_tax_template_rel is 'RELATION BETWEEN account_reconcile_model_line_template AND account_tax_template';

alter table account_reconcile_model_line_template_account_tax_template_rel owner to postgres;

create index account_reconcile_model_line__account_tax_template_id_accou_idx
	on account_reconcile_model_line_template_account_tax_template_rel (account_tax_template_id, account_reconcile_model_line_template_id);

create table account_tax_repartition_line_template
(
	id integer default nextval('account_tax_repartition_line_template_id_seq'::regclass) not null
		constraint account_tax_repartition_line_template_pkey
			primary key,
	factor_percent double precision not null,
	repartition_type varchar not null,
	account_id integer
		constraint account_tax_repartition_line_template_account_id_fkey
			references account_account_template
				on delete set null,
	invoice_tax_id integer
		constraint account_tax_repartition_line_template_invoice_tax_id_fkey
			references account_tax_template
				on delete set null,
	refund_tax_id integer
		constraint account_tax_repartition_line_template_refund_tax_id_fkey
			references account_tax_template
				on delete set null,
	use_in_tax_closing boolean,
	create_uid integer
		constraint account_tax_repartition_line_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_tax_repartition_line_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_tax_repartition_line_template is 'Tax Repartition Line Template';

comment on column account_tax_repartition_line_template.factor_percent is '%';

comment on column account_tax_repartition_line_template.repartition_type is 'Based On';

comment on column account_tax_repartition_line_template.account_id is 'Account';

comment on column account_tax_repartition_line_template.invoice_tax_id is 'Invoice Tax';

comment on column account_tax_repartition_line_template.refund_tax_id is 'Refund Tax';

comment on column account_tax_repartition_line_template.use_in_tax_closing is 'Tax Closing Entry';

comment on column account_tax_repartition_line_template.create_uid is 'Created by';

comment on column account_tax_repartition_line_template.create_date is 'Created on';

comment on column account_tax_repartition_line_template.write_uid is 'Last Updated by';

comment on column account_tax_repartition_line_template.write_date is 'Last Updated on';

alter table account_tax_repartition_line_template owner to postgres;

create table account_tax_repartition_financial_tags
(
	account_tax_repartition_line_template_id integer not null
		constraint account_tax_repartition_finan_account_tax_repartition_line_fkey
			references account_tax_repartition_line_template
				on delete cascade,
	account_account_tag_id integer not null
		constraint account_tax_repartition_financial_t_account_account_tag_id_fkey
			references account_account_tag
				on delete cascade,
	constraint account_tax_repartition_financial_tags_pkey
		primary key (account_tax_repartition_line_template_id, account_account_tag_id)
);

comment on table account_tax_repartition_financial_tags is 'RELATION BETWEEN account_tax_repartition_line_template AND account_account_tag';

alter table account_tax_repartition_financial_tags owner to postgres;

create index account_tax_repartition_finan_account_account_tag_id_accoun_idx
	on account_tax_repartition_financial_tags (account_account_tag_id, account_tax_repartition_line_template_id);

create table account_tax_repartition_minus_report_line
(
	account_tax_repartition_line_template_id integer not null
		constraint account_tax_repartition_minus_account_tax_repartition_line_fkey
			references account_tax_repartition_line_template
				on delete cascade,
	account_tax_report_line_id integer not null
		constraint account_tax_repartition_minus_r_account_tax_report_line_id_fkey
			references account_tax_report_line
				on delete cascade,
	constraint account_tax_repartition_minus_report_line_pkey
		primary key (account_tax_repartition_line_template_id, account_tax_report_line_id)
);

comment on table account_tax_repartition_minus_report_line is 'RELATION BETWEEN account_tax_repartition_line_template AND account_tax_report_line';

alter table account_tax_repartition_minus_report_line owner to postgres;

create index account_tax_repartition_minus_account_tax_report_line_id_ac_idx
	on account_tax_repartition_minus_report_line (account_tax_report_line_id, account_tax_repartition_line_template_id);

create table account_tax_repartition_plus_report_line
(
	account_tax_repartition_line_template_id integer not null
		constraint account_tax_repartition_plus__account_tax_repartition_line_fkey
			references account_tax_repartition_line_template
				on delete cascade,
	account_tax_report_line_id integer not null
		constraint account_tax_repartition_plus_re_account_tax_report_line_id_fkey
			references account_tax_report_line
				on delete cascade,
	constraint account_tax_repartition_plus_report_line_pkey
		primary key (account_tax_repartition_line_template_id, account_tax_report_line_id)
);

comment on table account_tax_repartition_plus_report_line is 'RELATION BETWEEN account_tax_repartition_line_template AND account_tax_report_line';

alter table account_tax_repartition_plus_report_line owner to postgres;

create index account_tax_repartition_plus__account_tax_report_line_id_ac_idx
	on account_tax_repartition_plus_report_line (account_tax_report_line_id, account_tax_repartition_line_template_id);

create table account_tax_template_filiation_rel
(
	parent_tax integer not null
		constraint account_tax_template_filiation_rel_parent_tax_fkey
			references account_tax_template
				on delete cascade,
	child_tax integer not null
		constraint account_tax_template_filiation_rel_child_tax_fkey
			references account_tax_template
				on delete cascade,
	constraint account_tax_template_filiation_rel_pkey
		primary key (parent_tax, child_tax)
);

comment on table account_tax_template_filiation_rel is 'RELATION BETWEEN account_tax_template AND account_tax_template';

alter table account_tax_template_filiation_rel owner to postgres;

create index account_tax_template_filiation_rel_child_tax_parent_tax_idx
	on account_tax_template_filiation_rel (child_tax, parent_tax);

create table base_import_tests_models_complex
(
	id integer default nextval('base_import_tests_models_complex_id_seq'::regclass) not null
		constraint base_import_tests_models_complex_pkey
			primary key,
	f double precision,
	m numeric,
	c varchar,
	currency_id integer
		constraint base_import_tests_models_complex_currency_id_fkey
			references res_currency
				on delete set null,
	d date,
	dt timestamp,
	create_uid integer
		constraint base_import_tests_models_complex_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_complex_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_complex is 'Tests: Base Import Model Complex';

comment on column base_import_tests_models_complex.f is 'F';

comment on column base_import_tests_models_complex.m is 'M';

comment on column base_import_tests_models_complex.c is 'C';

comment on column base_import_tests_models_complex.currency_id is 'Currency';

comment on column base_import_tests_models_complex.d is 'D';

comment on column base_import_tests_models_complex.dt is 'Dt';

comment on column base_import_tests_models_complex.create_uid is 'Created by';

comment on column base_import_tests_models_complex.create_date is 'Created on';

comment on column base_import_tests_models_complex.write_uid is 'Last Updated by';

comment on column base_import_tests_models_complex.write_date is 'Last Updated on';

alter table base_import_tests_models_complex owner to postgres;

create table base_import_tests_models_float
(
	id integer default nextval('base_import_tests_models_float_id_seq'::regclass) not null
		constraint base_import_tests_models_float_pkey
			primary key,
	value double precision,
	value2 numeric,
	currency_id integer
		constraint base_import_tests_models_float_currency_id_fkey
			references res_currency
				on delete set null,
	create_uid integer
		constraint base_import_tests_models_float_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_import_tests_models_float_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_import_tests_models_float is 'Tests: Base Import Model Float';

comment on column base_import_tests_models_float.value is 'Value';

comment on column base_import_tests_models_float.value2 is 'Value2';

comment on column base_import_tests_models_float.currency_id is 'Currency';

comment on column base_import_tests_models_float.create_uid is 'Created by';

comment on column base_import_tests_models_float.create_date is 'Created on';

comment on column base_import_tests_models_float.write_uid is 'Last Updated by';

comment on column base_import_tests_models_float.write_date is 'Last Updated on';

alter table base_import_tests_models_float owner to postgres;

create table payment_link_wizard
(
	id integer default nextval('payment_link_wizard_id_seq'::regclass) not null
		constraint payment_link_wizard_pkey
			primary key,
	res_model varchar not null,
	res_id integer not null,
	amount numeric not null,
	amount_max numeric,
	currency_id integer
		constraint payment_link_wizard_currency_id_fkey
			references res_currency
				on delete set null,
	partner_id integer
		constraint payment_link_wizard_partner_id_fkey
			references res_partner
				on delete set null,
	description varchar,
	create_uid integer
		constraint payment_link_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_link_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table payment_link_wizard is 'Generate Payment Link';

comment on column payment_link_wizard.res_model is 'Related Document Model';

comment on column payment_link_wizard.res_id is 'Related Document ID';

comment on column payment_link_wizard.amount is 'Amount';

comment on column payment_link_wizard.amount_max is 'Amount Max';

comment on column payment_link_wizard.currency_id is 'Currency';

comment on column payment_link_wizard.partner_id is 'Partner';

comment on column payment_link_wizard.description is 'Payment Ref';

comment on column payment_link_wizard.create_uid is 'Created by';

comment on column payment_link_wizard.create_date is 'Created on';

comment on column payment_link_wizard.write_uid is 'Last Updated by';

comment on column payment_link_wizard.write_date is 'Last Updated on';

alter table payment_link_wizard owner to postgres;

alter table res_country
	add constraint res_country_currency_id_fkey
		foreign key (currency_id) references res_currency
			on delete set null;

create table res_groups
(
	id integer default nextval('res_groups_id_seq'::regclass) not null
		constraint res_groups_pkey
			primary key,
	name varchar not null,
	comment text,
	category_id integer
		constraint res_groups_category_id_fkey
			references ir_module_category
				on delete set null,
	color integer,
	share boolean,
	create_uid integer
		constraint res_groups_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_groups_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint res_groups_name_uniq
		unique (category_id, name)
);

comment on column res_groups.comment is 'Comment';

comment on column res_groups.category_id is 'Application';

comment on column res_groups.color is 'Color Index';

comment on column res_groups.share is 'Share Group';

comment on column res_groups.create_uid is 'Created by';

comment on column res_groups.create_date is 'Created on';

comment on column res_groups.write_uid is 'Last Updated by';

comment on column res_groups.write_date is 'Last Updated on';

alter table res_groups owner to postgres;

create table digest_tip
(
	id integer default nextval('digest_tip_id_seq'::regclass) not null
		constraint digest_tip_pkey
			primary key,
	sequence integer,
	name varchar,
	tip_description text,
	group_id integer
		constraint digest_tip_group_id_fkey
			references res_groups
				on delete set null,
	create_uid integer
		constraint digest_tip_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint digest_tip_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table digest_tip is 'Digest Tips';

comment on column digest_tip.sequence is 'Sequence';

comment on column digest_tip.name is 'Name';

comment on column digest_tip.tip_description is 'Tip description';

comment on column digest_tip.group_id is 'Authorized Group';

comment on column digest_tip.create_uid is 'Created by';

comment on column digest_tip.create_date is 'Created on';

comment on column digest_tip.write_uid is 'Last Updated by';

comment on column digest_tip.write_date is 'Last Updated on';

alter table digest_tip owner to postgres;

create table digest_tip_res_users_rel
(
	digest_tip_id integer not null
		constraint digest_tip_res_users_rel_digest_tip_id_fkey
			references digest_tip
				on delete cascade,
	res_users_id integer not null
		constraint digest_tip_res_users_rel_res_users_id_fkey
			references res_users
				on delete cascade,
	constraint digest_tip_res_users_rel_pkey
		primary key (digest_tip_id, res_users_id)
);

comment on table digest_tip_res_users_rel is 'RELATION BETWEEN digest_tip AND res_users';

alter table digest_tip_res_users_rel owner to postgres;

create index digest_tip_res_users_rel_res_users_id_digest_tip_id_idx
	on digest_tip_res_users_rel (res_users_id, digest_tip_id);

create table ir_act_window_group_rel
(
	act_id integer not null
		constraint ir_act_window_group_rel_act_id_fkey
			references ir_act_window
				on delete cascade,
	gid integer not null
		constraint ir_act_window_group_rel_gid_fkey
			references res_groups
				on delete cascade,
	constraint ir_act_window_group_rel_pkey
		primary key (act_id, gid)
);

comment on table ir_act_window_group_rel is 'RELATION BETWEEN ir_act_window AND res_groups';

alter table ir_act_window_group_rel owner to postgres;

create index ir_act_window_group_rel_gid_act_id_idx
	on ir_act_window_group_rel (gid, act_id);

create table ir_model_access
(
	id integer default nextval('ir_model_access_id_seq'::regclass) not null
		constraint ir_model_access_pkey
			primary key,
	name varchar not null,
	active boolean,
	model_id integer not null
		constraint ir_model_access_model_id_fkey
			references ir_model
				on delete cascade,
	group_id integer
		constraint ir_model_access_group_id_fkey
			references res_groups
				on delete restrict,
	perm_read boolean,
	perm_write boolean,
	perm_create boolean,
	perm_unlink boolean,
	create_uid integer
		constraint ir_model_access_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_model_access_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_model_access is 'Model Access';

comment on column ir_model_access.name is 'Name';

comment on column ir_model_access.active is 'Active';

comment on column ir_model_access.model_id is 'Model';

comment on column ir_model_access.group_id is 'Group';

comment on column ir_model_access.perm_read is 'Read Access';

comment on column ir_model_access.perm_write is 'Write Access';

comment on column ir_model_access.perm_create is 'Create Access';

comment on column ir_model_access.perm_unlink is 'Delete Access';

comment on column ir_model_access.create_uid is 'Created by';

comment on column ir_model_access.create_date is 'Created on';

comment on column ir_model_access.write_uid is 'Last Updated by';

comment on column ir_model_access.write_date is 'Last Updated on';

alter table ir_model_access owner to postgres;

create index ir_model_access_group_id_index
	on ir_model_access (group_id);

create index ir_model_access_model_id_index
	on ir_model_access (model_id);

create index ir_model_access_name_index
	on ir_model_access (name);

create table ir_model_fields_group_rel
(
	field_id integer not null
		constraint ir_model_fields_group_rel_field_id_fkey
			references ir_model_fields
				on delete cascade,
	group_id integer not null
		constraint ir_model_fields_group_rel_group_id_fkey
			references res_groups
				on delete cascade,
	constraint ir_model_fields_group_rel_pkey
		primary key (field_id, group_id)
);

comment on table ir_model_fields_group_rel is 'RELATION BETWEEN ir_model_fields AND res_groups';

alter table ir_model_fields_group_rel owner to postgres;

create index ir_model_fields_group_rel_group_id_field_id_idx
	on ir_model_fields_group_rel (group_id, field_id);

create table ir_ui_menu_group_rel
(
	menu_id integer not null
		constraint ir_ui_menu_group_rel_menu_id_fkey
			references ir_ui_menu
				on delete cascade,
	gid integer not null
		constraint ir_ui_menu_group_rel_gid_fkey
			references res_groups
				on delete cascade,
	constraint ir_ui_menu_group_rel_pkey
		primary key (menu_id, gid)
);

comment on table ir_ui_menu_group_rel is 'RELATION BETWEEN ir_ui_menu AND res_groups';

alter table ir_ui_menu_group_rel owner to postgres;

create index ir_ui_menu_group_rel_gid_menu_id_idx
	on ir_ui_menu_group_rel (gid, menu_id);

create table ir_ui_view_group_rel
(
	view_id integer not null
		constraint ir_ui_view_group_rel_view_id_fkey
			references ir_ui_view
				on delete cascade,
	group_id integer not null
		constraint ir_ui_view_group_rel_group_id_fkey
			references res_groups
				on delete cascade,
	constraint ir_ui_view_group_rel_pkey
		primary key (view_id, group_id)
);

comment on table ir_ui_view_group_rel is 'RELATION BETWEEN ir_ui_view AND res_groups';

alter table ir_ui_view_group_rel owner to postgres;

create index ir_ui_view_group_rel_group_id_view_id_idx
	on ir_ui_view_group_rel (group_id, view_id);

create table mail_channel
(
	id integer default nextval('mail_channel_id_seq'::regclass) not null
		constraint mail_channel_pkey
			primary key,
	name varchar not null,
	active boolean,
	channel_type varchar,
	description text,
	uuid varchar(50),
	email_send boolean,
	public varchar not null,
	group_public_id integer
		constraint mail_channel_group_public_id_fkey
			references res_groups
				on delete set null,
	moderation boolean,
	moderation_notify boolean,
	moderation_notify_msg text,
	moderation_guidelines boolean,
	moderation_guidelines_msg text,
	alias_id integer not null
		constraint mail_channel_alias_id_fkey
			references mail_alias
				on delete restrict,
	message_main_attachment_id integer
		constraint mail_channel_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint mail_channel_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_channel_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_channel is 'Discussion Channel';

comment on column mail_channel.name is 'Name';

comment on column mail_channel.active is 'Active';

comment on column mail_channel.channel_type is 'Channel Type';

comment on column mail_channel.description is 'Description';

comment on column mail_channel.uuid is 'UUID';

comment on column mail_channel.email_send is 'Send messages by email';

comment on column mail_channel.public is 'Privacy';

comment on column mail_channel.group_public_id is 'Authorized Group';

comment on column mail_channel.moderation is 'Moderate this channel';

comment on column mail_channel.moderation_notify is 'Automatic notification';

comment on column mail_channel.moderation_notify_msg is 'Notification message';

comment on column mail_channel.moderation_guidelines is 'Send guidelines to new subscribers';

comment on column mail_channel.moderation_guidelines_msg is 'Guidelines';

comment on column mail_channel.alias_id is 'Alias';

comment on column mail_channel.message_main_attachment_id is 'Main Attachment';

comment on column mail_channel.create_uid is 'Created by';

comment on column mail_channel.create_date is 'Created on';

comment on column mail_channel.write_uid is 'Last Updated by';

comment on column mail_channel.write_date is 'Last Updated on';

alter table mail_channel owner to postgres;

create index mail_channel_message_main_attachment_id_index
	on mail_channel (message_main_attachment_id);

create index mail_channel_uuid_index
	on mail_channel (uuid);

create table mail_channel_mail_wizard_invite_rel
(
	mail_wizard_invite_id integer not null
		constraint mail_channel_mail_wizard_invite_rel_mail_wizard_invite_id_fkey
			references mail_wizard_invite
				on delete cascade,
	mail_channel_id integer not null
		constraint mail_channel_mail_wizard_invite_rel_mail_channel_id_fkey
			references mail_channel
				on delete cascade,
	constraint mail_channel_mail_wizard_invite_rel_pkey
		primary key (mail_wizard_invite_id, mail_channel_id)
);

comment on table mail_channel_mail_wizard_invite_rel is 'RELATION BETWEEN mail_wizard_invite AND mail_channel';

alter table mail_channel_mail_wizard_invite_rel owner to postgres;

create index mail_channel_mail_wizard_invi_mail_channel_id_mail_wizard_i_idx
	on mail_channel_mail_wizard_invite_rel (mail_channel_id, mail_wizard_invite_id);

create table mail_channel_moderator_rel
(
	mail_channel_id integer not null
		constraint mail_channel_moderator_rel_mail_channel_id_fkey
			references mail_channel
				on delete cascade,
	res_users_id integer not null
		constraint mail_channel_moderator_rel_res_users_id_fkey
			references res_users
				on delete cascade,
	constraint mail_channel_moderator_rel_pkey
		primary key (mail_channel_id, res_users_id)
);

comment on table mail_channel_moderator_rel is 'RELATION BETWEEN mail_channel AND res_users';

alter table mail_channel_moderator_rel owner to postgres;

create index mail_channel_moderator_rel_res_users_id_mail_channel_id_idx
	on mail_channel_moderator_rel (res_users_id, mail_channel_id);

create table mail_channel_partner
(
	id integer default nextval('mail_channel_partner_id_seq'::regclass) not null
		constraint mail_channel_partner_pkey
			primary key,
	custom_channel_name varchar,
	partner_id integer
		constraint mail_channel_partner_partner_id_fkey
			references res_partner
				on delete cascade,
	channel_id integer
		constraint mail_channel_partner_channel_id_fkey
			references mail_channel
				on delete cascade,
	fetched_message_id integer
		constraint mail_channel_partner_fetched_message_id_fkey
			references mail_message
				on delete set null,
	seen_message_id integer
		constraint mail_channel_partner_seen_message_id_fkey
			references mail_message
				on delete set null,
	fold_state varchar,
	is_minimized boolean,
	is_pinned boolean,
	create_uid integer
		constraint mail_channel_partner_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_channel_partner_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table mail_channel_partner is 'Listeners of a Channel';

comment on column mail_channel_partner.custom_channel_name is 'Custom channel name';

comment on column mail_channel_partner.partner_id is 'Recipient';

comment on column mail_channel_partner.channel_id is 'Channel';

comment on column mail_channel_partner.fetched_message_id is 'Last Fetched';

comment on column mail_channel_partner.seen_message_id is 'Last Seen';

comment on column mail_channel_partner.fold_state is 'Conversation Fold State';

comment on column mail_channel_partner.is_minimized is 'Conversation is minimized';

comment on column mail_channel_partner.is_pinned is 'Is pinned on the interface';

comment on column mail_channel_partner.create_uid is 'Created by';

comment on column mail_channel_partner.create_date is 'Created on';

comment on column mail_channel_partner.write_uid is 'Last Updated by';

comment on column mail_channel_partner.write_date is 'Last Updated on';

alter table mail_channel_partner owner to postgres;

create index mail_channel_partner_seen_message_id_idx
	on mail_channel_partner (channel_id, partner_id, seen_message_id);

create table mail_channel_res_groups_rel
(
	mail_channel_id integer not null
		constraint mail_channel_res_groups_rel_mail_channel_id_fkey
			references mail_channel
				on delete cascade,
	res_groups_id integer not null
		constraint mail_channel_res_groups_rel_res_groups_id_fkey
			references res_groups
				on delete cascade,
	constraint mail_channel_res_groups_rel_pkey
		primary key (mail_channel_id, res_groups_id)
);

comment on table mail_channel_res_groups_rel is 'RELATION BETWEEN mail_channel AND res_groups';

alter table mail_channel_res_groups_rel owner to postgres;

create index mail_channel_res_groups_rel_res_groups_id_mail_channel_id_idx
	on mail_channel_res_groups_rel (res_groups_id, mail_channel_id);

create table mail_followers
(
	id integer default nextval('mail_followers_id_seq'::regclass) not null
		constraint mail_followers_pkey
			primary key,
	res_model varchar not null,
	res_id integer,
	partner_id integer
		constraint mail_followers_partner_id_fkey
			references res_partner
				on delete cascade,
	channel_id integer
		constraint mail_followers_channel_id_fkey
			references mail_channel
				on delete cascade,
	constraint mail_followers_mail_followers_res_channel_res_model_id_uniq
		unique (res_model, res_id, channel_id),
	constraint mail_followers_mail_followers_res_partner_res_model_id_uniq
		unique (res_model, res_id, partner_id)
);

comment on table mail_followers is 'Document Followers';

comment on column mail_followers.res_model is 'Related Document Model Name';

comment on column mail_followers.res_id is 'Related Document ID';

comment on column mail_followers.partner_id is 'Related Partner';

comment on column mail_followers.channel_id is 'Listener';

alter table mail_followers owner to postgres;

create index mail_followers_channel_id_index
	on mail_followers (channel_id);

create index mail_followers_partner_id_index
	on mail_followers (partner_id);

create index mail_followers_res_id_index
	on mail_followers (res_id);

create index mail_followers_res_model_index
	on mail_followers (res_model);

create table mail_followers_mail_message_subtype_rel
(
	mail_followers_id integer not null
		constraint mail_followers_mail_message_subtype_rel_mail_followers_id_fkey
			references mail_followers
				on delete cascade,
	mail_message_subtype_id integer not null
		constraint mail_followers_mail_message_subtyp_mail_message_subtype_id_fkey
			references mail_message_subtype
				on delete cascade,
	constraint mail_followers_mail_message_subtype_rel_pkey
		primary key (mail_followers_id, mail_message_subtype_id)
);

comment on table mail_followers_mail_message_subtype_rel is 'RELATION BETWEEN mail_followers AND mail_message_subtype';

alter table mail_followers_mail_message_subtype_rel owner to postgres;

create index mail_followers_mail_message_s_mail_message_subtype_id_mail__idx
	on mail_followers_mail_message_subtype_rel (mail_message_subtype_id, mail_followers_id);

create table mail_message_mail_channel_rel
(
	mail_message_id integer not null
		constraint mail_message_mail_channel_rel_mail_message_id_fkey
			references mail_message
				on delete cascade,
	mail_channel_id integer not null
		constraint mail_message_mail_channel_rel_mail_channel_id_fkey
			references mail_channel
				on delete cascade,
	constraint mail_message_mail_channel_rel_pkey
		primary key (mail_message_id, mail_channel_id)
);

comment on table mail_message_mail_channel_rel is 'RELATION BETWEEN mail_message AND mail_channel';

alter table mail_message_mail_channel_rel owner to postgres;

create index mail_message_mail_channel_rel_mail_channel_id_mail_message__idx
	on mail_message_mail_channel_rel (mail_channel_id, mail_message_id);

create table mail_moderation
(
	id integer default nextval('mail_moderation_id_seq'::regclass) not null
		constraint mail_moderation_pkey
			primary key,
	email varchar not null,
	status varchar not null,
	channel_id integer not null
		constraint mail_moderation_channel_id_fkey
			references mail_channel
				on delete restrict,
	create_uid integer
		constraint mail_moderation_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint mail_moderation_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint mail_moderation_channel_email_uniq
		unique (email, channel_id)
);

comment on table mail_moderation is 'Channel black/white list';

comment on column mail_moderation.email is 'Email';

comment on column mail_moderation.status is 'Status';

comment on column mail_moderation.channel_id is 'Channel';

comment on column mail_moderation.create_uid is 'Created by';

comment on column mail_moderation.create_date is 'Created on';

comment on column mail_moderation.write_uid is 'Last Updated by';

comment on column mail_moderation.write_date is 'Last Updated on';

alter table mail_moderation owner to postgres;

create index mail_moderation_channel_id_index
	on mail_moderation (channel_id);

create index mail_moderation_email_index
	on mail_moderation (email);

create index res_groups_category_id_index
	on res_groups (category_id);

create table res_groups_implied_rel
(
	gid integer not null
		constraint res_groups_implied_rel_gid_fkey
			references res_groups
				on delete cascade,
	hid integer not null
		constraint res_groups_implied_rel_hid_fkey
			references res_groups
				on delete cascade,
	constraint res_groups_implied_rel_pkey
		primary key (gid, hid)
);

comment on table res_groups_implied_rel is 'RELATION BETWEEN res_groups AND res_groups';

alter table res_groups_implied_rel owner to postgres;

create index res_groups_implied_rel_hid_gid_idx
	on res_groups_implied_rel (hid, gid);

create table res_groups_report_rel
(
	uid integer not null
		constraint res_groups_report_rel_uid_fkey
			references ir_act_report_xml
				on delete cascade,
	gid integer not null
		constraint res_groups_report_rel_gid_fkey
			references res_groups
				on delete cascade,
	constraint res_groups_report_rel_pkey
		primary key (uid, gid)
);

comment on table res_groups_report_rel is 'RELATION BETWEEN ir_act_report_xml AND res_groups';

alter table res_groups_report_rel owner to postgres;

create index res_groups_report_rel_gid_uid_idx
	on res_groups_report_rel (gid, uid);

create table res_groups_users_rel
(
	gid integer not null
		constraint res_groups_users_rel_gid_fkey
			references res_groups
				on delete cascade,
	uid integer not null
		constraint res_groups_users_rel_uid_fkey
			references res_users
				on delete cascade,
	constraint res_groups_users_rel_pkey
		primary key (gid, uid)
);

comment on table res_groups_users_rel is 'RELATION BETWEEN res_groups AND res_users';

alter table res_groups_users_rel owner to postgres;

create index res_groups_users_rel_uid_gid_idx
	on res_groups_users_rel (uid, gid);

create table res_lang
(
	id integer default nextval('res_lang_id_seq'::regclass) not null
		constraint res_lang_pkey
			primary key,
	name varchar not null
		constraint res_lang_name_uniq
			unique,
	code varchar not null
		constraint res_lang_code_uniq
			unique,
	iso_code varchar,
	url_code varchar not null
		constraint res_lang_url_code_uniq
			unique,
	active boolean,
	direction varchar not null,
	date_format varchar not null,
	time_format varchar not null,
	week_start varchar not null,
	grouping varchar not null,
	decimal_point varchar not null,
	thousands_sep varchar,
	create_uid integer
		constraint res_lang_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_lang_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_lang is 'Languages';

comment on column res_lang.name is 'Name';

comment on column res_lang.code is 'Locale Code';

comment on column res_lang.iso_code is 'ISO code';

comment on column res_lang.url_code is 'URL Code';

comment on column res_lang.active is 'Active';

comment on column res_lang.direction is 'Direction';

comment on column res_lang.date_format is 'Date Format';

comment on column res_lang.time_format is 'Time Format';

comment on column res_lang.week_start is 'First Day of Week';

comment on column res_lang.grouping is 'Separator Format';

comment on column res_lang.decimal_point is 'Decimal Separator';

comment on column res_lang.thousands_sep is 'Thousands Separator';

comment on column res_lang.create_uid is 'Created by';

comment on column res_lang.create_date is 'Created on';

comment on column res_lang.write_uid is 'Last Updated by';

comment on column res_lang.write_date is 'Last Updated on';

alter table res_lang owner to postgres;

alter table res_partner
	add constraint res_partner_create_uid_fkey
		foreign key (create_uid) references res_users
			on delete set null;

alter table res_partner
	add constraint res_partner_user_id_fkey
		foreign key (user_id) references res_users
			on delete set null;

alter table res_partner
	add constraint res_partner_write_uid_fkey
		foreign key (write_uid) references res_users
			on delete set null;

create table res_partner_autocomplete_sync
(
	id integer default nextval('res_partner_autocomplete_sync_id_seq'::regclass) not null
		constraint res_partner_autocomplete_sync_pkey
			primary key,
	partner_id integer
		constraint res_partner_autocomplete_sync_partner_id_fkey
			references res_partner
				on delete cascade,
	synched boolean,
	create_uid integer
		constraint res_partner_autocomplete_sync_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_partner_autocomplete_sync_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_partner_autocomplete_sync is 'Partner Autocomplete Sync';

comment on column res_partner_autocomplete_sync.partner_id is 'Partner';

comment on column res_partner_autocomplete_sync.synched is 'Is synched';

comment on column res_partner_autocomplete_sync.create_uid is 'Created by';

comment on column res_partner_autocomplete_sync.create_date is 'Created on';

comment on column res_partner_autocomplete_sync.write_uid is 'Last Updated by';

comment on column res_partner_autocomplete_sync.write_date is 'Last Updated on';

alter table res_partner_autocomplete_sync owner to postgres;

create table res_partner_bank
(
	id integer default nextval('res_partner_bank_id_seq'::regclass) not null
		constraint res_partner_bank_pkey
			primary key,
	active boolean,
	acc_number varchar not null,
	sanitized_acc_number varchar,
	acc_holder_name varchar,
	partner_id integer not null
		constraint res_partner_bank_partner_id_fkey
			references res_partner
				on delete cascade,
	bank_id integer
		constraint res_partner_bank_bank_id_fkey
			references res_bank
				on delete set null,
	sequence integer,
	currency_id integer
		constraint res_partner_bank_currency_id_fkey
			references res_currency
				on delete set null,
	company_id integer,
	create_uid integer
		constraint res_partner_bank_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_partner_bank_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint res_partner_bank_unique_number
		unique (sanitized_acc_number, company_id)
);

comment on table res_partner_bank is 'Bank Accounts';

comment on column res_partner_bank.active is 'Active';

comment on column res_partner_bank.acc_number is 'Account Number';

comment on column res_partner_bank.sanitized_acc_number is 'Sanitized Account Number';

comment on column res_partner_bank.acc_holder_name is 'Account Holder Name';

comment on column res_partner_bank.partner_id is 'Account Holder';

comment on column res_partner_bank.bank_id is 'Bank';

comment on column res_partner_bank.sequence is 'Sequence';

comment on column res_partner_bank.currency_id is 'Currency';

comment on column res_partner_bank.company_id is 'Company';

comment on column res_partner_bank.create_uid is 'Created by';

comment on column res_partner_bank.create_date is 'Created on';

comment on column res_partner_bank.write_uid is 'Last Updated by';

comment on column res_partner_bank.write_date is 'Last Updated on';

alter table res_partner_bank owner to postgres;

alter table account_journal
	add constraint account_journal_bank_account_id_fkey
		foreign key (bank_account_id) references res_partner_bank
			on delete restrict;

alter table account_move
	add constraint account_move_partner_bank_id_fkey
		foreign key (partner_bank_id) references res_partner_bank
			on delete set null;

create table account_setup_bank_manual_config
(
	id integer default nextval('account_setup_bank_manual_config_id_seq'::regclass) not null
		constraint account_setup_bank_manual_config_pkey
			primary key,
	res_partner_bank_id integer not null
		constraint account_setup_bank_manual_config_res_partner_bank_id_fkey
			references res_partner_bank
				on delete cascade,
	new_journal_name varchar not null,
	num_journals_without_account integer,
	create_uid integer
		constraint account_setup_bank_manual_config_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_setup_bank_manual_config_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_setup_bank_manual_config is 'Bank setup manual config';

comment on column account_setup_bank_manual_config.res_partner_bank_id is 'Res Partner Bank';

comment on column account_setup_bank_manual_config.new_journal_name is 'New Journal Name';

comment on column account_setup_bank_manual_config.num_journals_without_account is 'Num Journals Without Account';

comment on column account_setup_bank_manual_config.create_uid is 'Created by';

comment on column account_setup_bank_manual_config.create_date is 'Created on';

comment on column account_setup_bank_manual_config.write_uid is 'Last Updated by';

comment on column account_setup_bank_manual_config.write_date is 'Last Updated on';

alter table account_setup_bank_manual_config owner to postgres;

create index res_partner_bank_partner_id_index
	on res_partner_bank (partner_id);

create table res_partner_category
(
	id integer default nextval('res_partner_category_id_seq'::regclass) not null
		constraint res_partner_category_pkey
			primary key,
	name varchar not null,
	color integer,
	parent_id integer
		constraint res_partner_category_parent_id_fkey
			references res_partner_category
				on delete cascade,
	active boolean,
	parent_path varchar,
	create_uid integer
		constraint res_partner_category_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_partner_category_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_partner_category is 'Partner Tags';

comment on column res_partner_category.name is 'Tag Name';

comment on column res_partner_category.color is 'Color Index';

comment on column res_partner_category.parent_id is 'Parent Category';

comment on column res_partner_category.active is 'Active';

comment on column res_partner_category.parent_path is 'Parent Path';

comment on column res_partner_category.create_uid is 'Created by';

comment on column res_partner_category.create_date is 'Created on';

comment on column res_partner_category.write_uid is 'Last Updated by';

comment on column res_partner_category.write_date is 'Last Updated on';

alter table res_partner_category owner to postgres;

create table account_reconcile_model_res_partner_category_rel
(
	account_reconcile_model_id integer not null
		constraint account_reconcile_model_res_pa_account_reconcile_model_id_fkey1
			references account_reconcile_model
				on delete cascade,
	res_partner_category_id integer not null
		constraint account_reconcile_model_res_partne_res_partner_category_id_fkey
			references res_partner_category
				on delete cascade,
	constraint account_reconcile_model_res_partner_category_rel_pkey
		primary key (account_reconcile_model_id, res_partner_category_id)
);

comment on table account_reconcile_model_res_partner_category_rel is 'RELATION BETWEEN account_reconcile_model AND res_partner_category';

alter table account_reconcile_model_res_partner_category_rel owner to postgres;

create index account_reconcile_model_res_p_res_partner_category_id_accou_idx
	on account_reconcile_model_res_partner_category_rel (res_partner_category_id, account_reconcile_model_id);

create table account_reconcile_model_template_res_partner_category_rel
(
	account_reconcile_model_template_id integer not null
		constraint account_reconcile_model_temp_account_reconcile_model_temp_fkey1
			references account_reconcile_model_template
				on delete cascade,
	res_partner_category_id integer not null
		constraint account_reconcile_model_template_r_res_partner_category_id_fkey
			references res_partner_category
				on delete cascade,
	constraint account_reconcile_model_template_res_partner_category_rel_pkey
		primary key (account_reconcile_model_template_id, res_partner_category_id)
);

comment on table account_reconcile_model_template_res_partner_category_rel is 'RELATION BETWEEN account_reconcile_model_template AND res_partner_category';

alter table account_reconcile_model_template_res_partner_category_rel owner to postgres;

create index account_reconcile_model_templ_res_partner_category_id_accou_idx
	on account_reconcile_model_template_res_partner_category_rel (res_partner_category_id, account_reconcile_model_template_id);

create index res_partner_category_parent_id_index
	on res_partner_category (parent_id);

create index res_partner_category_parent_path_index
	on res_partner_category (parent_path);

create table res_partner_industry
(
	id integer default nextval('res_partner_industry_id_seq'::regclass) not null
		constraint res_partner_industry_pkey
			primary key,
	name varchar,
	full_name varchar,
	active boolean,
	create_uid integer
		constraint res_partner_industry_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_partner_industry_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_partner_industry is 'Industry';

comment on column res_partner_industry.name is 'Name';

comment on column res_partner_industry.full_name is 'Full Name';

comment on column res_partner_industry.active is 'Active';

comment on column res_partner_industry.create_uid is 'Created by';

comment on column res_partner_industry.create_date is 'Created on';

comment on column res_partner_industry.write_uid is 'Last Updated by';

comment on column res_partner_industry.write_date is 'Last Updated on';

alter table res_partner_industry owner to postgres;

alter table res_partner
	add constraint res_partner_industry_id_fkey
		foreign key (industry_id) references res_partner_industry
			on delete set null;

create table res_partner_res_partner_category_rel
(
	category_id integer not null
		constraint res_partner_res_partner_category_rel_category_id_fkey
			references res_partner_category
				on delete cascade,
	partner_id integer not null
		constraint res_partner_res_partner_category_rel_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint res_partner_res_partner_category_rel_pkey
		primary key (category_id, partner_id)
);

comment on table res_partner_res_partner_category_rel is 'RELATION BETWEEN res_partner_category AND res_partner';

alter table res_partner_res_partner_category_rel owner to postgres;

create index res_partner_res_partner_category_rel_partner_id_category_id_idx
	on res_partner_res_partner_category_rel (partner_id, category_id);

create table res_partner_title
(
	id integer default nextval('res_partner_title_id_seq'::regclass) not null
		constraint res_partner_title_pkey
			primary key,
	name varchar not null,
	shortcut varchar,
	create_uid integer
		constraint res_partner_title_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_partner_title_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_partner_title is 'Partner Title';

comment on column res_partner_title.name is 'Title';

comment on column res_partner_title.shortcut is 'Abbreviation';

comment on column res_partner_title.create_uid is 'Created by';

comment on column res_partner_title.create_date is 'Created on';

comment on column res_partner_title.write_uid is 'Last Updated by';

comment on column res_partner_title.write_date is 'Last Updated on';

alter table res_partner_title owner to postgres;

alter table res_partner
	add constraint res_partner_title_fkey
		foreign key (title) references res_partner_title
			on delete set null;

create table res_users_apikeys
(
	id integer default nextval('res_users_apikeys_id_seq'::regclass) not null
		constraint res_users_apikeys_pkey
			primary key,
	name varchar not null,
	user_id integer not null
		constraint res_users_apikeys_user_id_fkey
			references res_users,
	scope varchar,
	index varchar(8),
	key varchar,
	create_date timestamp default timezone('utc'::text, now())
);

alter table res_users_apikeys owner to postgres;

create index res_users_apikeys_user_id_index_idx
	on res_users_apikeys (user_id, index);

create table res_users_apikeys_description
(
	id integer default nextval('res_users_apikeys_description_id_seq'::regclass) not null
		constraint res_users_apikeys_description_pkey
			primary key,
	name varchar not null,
	create_uid integer
		constraint res_users_apikeys_description_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_users_apikeys_description_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_users_apikeys_description is 'res.users.apikeys.description';

comment on column res_users_apikeys_description.name is 'Description';

comment on column res_users_apikeys_description.create_uid is 'Created by';

comment on column res_users_apikeys_description.create_date is 'Created on';

comment on column res_users_apikeys_description.write_uid is 'Last Updated by';

comment on column res_users_apikeys_description.write_date is 'Last Updated on';

alter table res_users_apikeys_description owner to postgres;

create table res_users_identitycheck
(
	id integer default nextval('res_users_identitycheck_id_seq'::regclass) not null
		constraint res_users_identitycheck_pkey
			primary key,
	request varchar,
	password varchar,
	create_uid integer
		constraint res_users_identitycheck_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_users_identitycheck_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_users_identitycheck is 'Password Check Wizard';

comment on column res_users_identitycheck.request is 'Request';

comment on column res_users_identitycheck.password is 'Password';

comment on column res_users_identitycheck.create_uid is 'Created by';

comment on column res_users_identitycheck.create_date is 'Created on';

comment on column res_users_identitycheck.write_uid is 'Last Updated by';

comment on column res_users_identitycheck.write_date is 'Last Updated on';

alter table res_users_identitycheck owner to postgres;

create table res_users_log
(
	id integer default nextval('res_users_log_id_seq'::regclass) not null
		constraint res_users_log_pkey
			primary key,
	create_uid integer
		constraint res_users_log_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_users_log_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table res_users_log is 'Users Log';

comment on column res_users_log.create_uid is 'Created by';

comment on column res_users_log.create_date is 'Created on';

comment on column res_users_log.write_uid is 'Last Updated by';

comment on column res_users_log.write_date is 'Last Updated on';

alter table res_users_log owner to postgres;

create table reset_view_arch_wizard
(
	id integer default nextval('reset_view_arch_wizard_id_seq'::regclass) not null
		constraint reset_view_arch_wizard_pkey
			primary key,
	view_id integer
		constraint reset_view_arch_wizard_view_id_fkey
			references ir_ui_view
				on delete set null,
	reset_mode varchar not null,
	compare_view_id integer
		constraint reset_view_arch_wizard_compare_view_id_fkey
			references ir_ui_view
				on delete set null,
	create_uid integer
		constraint reset_view_arch_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint reset_view_arch_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table reset_view_arch_wizard is 'Reset View Architecture Wizard';

comment on column reset_view_arch_wizard.view_id is 'View';

comment on column reset_view_arch_wizard.reset_mode is 'Reset Mode';

comment on column reset_view_arch_wizard.compare_view_id is 'Compare To View';

comment on column reset_view_arch_wizard.create_uid is 'Created by';

comment on column reset_view_arch_wizard.create_date is 'Created on';

comment on column reset_view_arch_wizard.write_uid is 'Last Updated by';

comment on column reset_view_arch_wizard.write_date is 'Last Updated on';

alter table reset_view_arch_wizard owner to postgres;

create table resource_calendar
(
	id integer default nextval('resource_calendar_id_seq'::regclass) not null
		constraint resource_calendar_pkey
			primary key,
	name varchar not null,
	active boolean,
	company_id integer,
	hours_per_day double precision,
	tz varchar not null,
	two_weeks_calendar boolean,
	create_uid integer
		constraint resource_calendar_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint resource_calendar_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table resource_calendar is 'Resource Working Time';

comment on column resource_calendar.name is 'Name';

comment on column resource_calendar.active is 'Active';

comment on column resource_calendar.company_id is 'Company';

comment on column resource_calendar.hours_per_day is 'Average Hour per Day';

comment on column resource_calendar.tz is 'Timezone';

comment on column resource_calendar.two_weeks_calendar is 'Calendar in 2 weeks mode';

comment on column resource_calendar.create_uid is 'Created by';

comment on column resource_calendar.create_date is 'Created on';

comment on column resource_calendar.write_uid is 'Last Updated by';

comment on column resource_calendar.write_date is 'Last Updated on';

alter table resource_calendar owner to postgres;

create table rule_group_rel
(
	rule_group_id integer not null
		constraint rule_group_rel_rule_group_id_fkey
			references ir_rule
				on delete cascade,
	group_id integer not null
		constraint rule_group_rel_group_id_fkey
			references res_groups
				on delete restrict,
	constraint rule_group_rel_pkey
		primary key (rule_group_id, group_id)
);

comment on table rule_group_rel is 'RELATION BETWEEN ir_rule AND res_groups';

alter table rule_group_rel owner to postgres;

create index rule_group_rel_group_id_rule_group_id_idx
	on rule_group_rel (group_id, rule_group_id);

create table sale_payment_acquirer_onboarding_wizard
(
	id integer default nextval('sale_payment_acquirer_onboarding_wizard_id_seq'::regclass) not null
		constraint sale_payment_acquirer_onboarding_wizard_pkey
			primary key,
	payment_method varchar,
	paypal_user_type varchar,
	paypal_email_account varchar,
	paypal_seller_account varchar,
	paypal_pdt_token varchar,
	stripe_secret_key varchar,
	stripe_publishable_key varchar,
	manual_name varchar,
	journal_name varchar,
	acc_number varchar,
	manual_post_msg text,
	create_uid integer
		constraint sale_payment_acquirer_onboarding_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_payment_acquirer_onboarding_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_payment_acquirer_onboarding_wizard is 'Sale Payment acquire onboarding wizard';

comment on column sale_payment_acquirer_onboarding_wizard.payment_method is 'Payment Method';

comment on column sale_payment_acquirer_onboarding_wizard.paypal_user_type is 'Paypal User Type';

comment on column sale_payment_acquirer_onboarding_wizard.paypal_email_account is 'Email';

comment on column sale_payment_acquirer_onboarding_wizard.paypal_seller_account is 'Merchant Account ID';

comment on column sale_payment_acquirer_onboarding_wizard.paypal_pdt_token is 'PDT Identity Token';

comment on column sale_payment_acquirer_onboarding_wizard.stripe_secret_key is 'Stripe Secret Key';

comment on column sale_payment_acquirer_onboarding_wizard.stripe_publishable_key is 'Stripe Publishable Key';

comment on column sale_payment_acquirer_onboarding_wizard.manual_name is 'Method';

comment on column sale_payment_acquirer_onboarding_wizard.journal_name is 'Bank Name';

comment on column sale_payment_acquirer_onboarding_wizard.acc_number is 'Account Number';

comment on column sale_payment_acquirer_onboarding_wizard.manual_post_msg is 'Payment Instructions';

comment on column sale_payment_acquirer_onboarding_wizard.create_uid is 'Created by';

comment on column sale_payment_acquirer_onboarding_wizard.create_date is 'Created on';

comment on column sale_payment_acquirer_onboarding_wizard.write_uid is 'Last Updated by';

comment on column sale_payment_acquirer_onboarding_wizard.write_date is 'Last Updated on';

alter table sale_payment_acquirer_onboarding_wizard owner to postgres;

create table sms_cancel
(
	id integer default nextval('sms_cancel_id_seq'::regclass) not null
		constraint sms_cancel_pkey
			primary key,
	model varchar not null,
	create_uid integer
		constraint sms_cancel_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_cancel_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_cancel is 'Dismiss notification for resend by model';

comment on column sms_cancel.model is 'Model';

comment on column sms_cancel.create_uid is 'Created by';

comment on column sms_cancel.create_date is 'Created on';

comment on column sms_cancel.write_uid is 'Last Updated by';

comment on column sms_cancel.write_date is 'Last Updated on';

alter table sms_cancel owner to postgres;

create table sms_resend
(
	id integer default nextval('sms_resend_id_seq'::regclass) not null
		constraint sms_resend_pkey
			primary key,
	mail_message_id integer not null
		constraint sms_resend_mail_message_id_fkey
			references mail_message
				on delete cascade,
	create_uid integer
		constraint sms_resend_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_resend_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_resend is 'SMS Resend';

comment on column sms_resend.mail_message_id is 'Message';

comment on column sms_resend.create_uid is 'Created by';

comment on column sms_resend.create_date is 'Created on';

comment on column sms_resend.write_uid is 'Last Updated by';

comment on column sms_resend.write_date is 'Last Updated on';

alter table sms_resend owner to postgres;

create table sms_sms
(
	id integer default nextval('sms_sms_id_seq'::regclass) not null
		constraint sms_sms_pkey
			primary key,
	number varchar,
	body text,
	partner_id integer
		constraint sms_sms_partner_id_fkey
			references res_partner
				on delete set null,
	mail_message_id integer
		constraint sms_sms_mail_message_id_fkey
			references mail_message
				on delete set null,
	state varchar not null,
	error_code varchar,
	create_uid integer
		constraint sms_sms_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_sms_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_sms is 'Outgoing SMS';

comment on column sms_sms.number is 'Number';

comment on column sms_sms.body is 'Body';

comment on column sms_sms.partner_id is 'Customer';

comment on column sms_sms.mail_message_id is 'Mail Message';

comment on column sms_sms.state is 'SMS Status';

comment on column sms_sms.error_code is 'Error Code';

comment on column sms_sms.create_uid is 'Created by';

comment on column sms_sms.create_date is 'Created on';

comment on column sms_sms.write_uid is 'Last Updated by';

comment on column sms_sms.write_date is 'Last Updated on';

alter table sms_sms owner to postgres;

create index sms_sms_mail_message_id_index
	on sms_sms (mail_message_id);

create table sms_template
(
	id integer default nextval('sms_template_id_seq'::regclass) not null
		constraint sms_template_pkey
			primary key,
	name varchar,
	model_id integer not null
		constraint sms_template_model_id_fkey
			references ir_model
				on delete cascade,
	model varchar,
	body varchar not null,
	sidebar_action_id integer
		constraint sms_template_sidebar_action_id_fkey
			references ir_act_window
				on delete set null,
	lang varchar,
	create_uid integer
		constraint sms_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_template is 'SMS Templates';

comment on column sms_template.name is 'Name';

comment on column sms_template.model_id is 'Applies to';

comment on column sms_template.model is 'Related Document Model';

comment on column sms_template.body is 'Body';

comment on column sms_template.sidebar_action_id is 'Sidebar action';

comment on column sms_template.lang is 'Language';

comment on column sms_template.create_uid is 'Created by';

comment on column sms_template.create_date is 'Created on';

comment on column sms_template.write_uid is 'Last Updated by';

comment on column sms_template.write_date is 'Last Updated on';

alter table sms_template owner to postgres;

create table ir_act_server
(
	id integer default nextval('ir_actions_id_seq'::regclass) not null
		constraint ir_act_server_pkey
			primary key,
	name varchar not null,
	type varchar not null,
	help text,
	binding_model_id integer
		constraint ir_act_server_binding_model_id_fkey
			references ir_model
				on delete cascade,
	binding_type varchar not null,
	binding_view_types varchar,
	create_uid integer
		constraint ir_act_server_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_act_server_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	usage varchar not null,
	state varchar not null,
	sequence integer,
	model_id integer not null
		constraint ir_act_server_model_id_fkey
			references ir_model
				on delete cascade,
	model_name varchar,
	code text,
	crud_model_id integer
		constraint ir_act_server_crud_model_id_fkey
			references ir_model
				on delete set null,
	link_field_id integer
		constraint ir_act_server_link_field_id_fkey
			references ir_model_fields
				on delete set null,
	template_id integer
		constraint ir_act_server_template_id_fkey
			references mail_template
				on delete set null,
	activity_type_id integer
		constraint ir_act_server_activity_type_id_fkey
			references mail_activity_type
				on delete restrict,
	activity_summary varchar,
	activity_note text,
	activity_date_deadline_range integer,
	activity_date_deadline_range_type varchar,
	activity_user_type varchar not null,
	activity_user_id integer
		constraint ir_act_server_activity_user_id_fkey
			references res_users
				on delete set null,
	activity_user_field_name varchar,
	sms_template_id integer
		constraint ir_act_server_sms_template_id_fkey
			references sms_template
				on delete set null,
	sms_mass_keep_log boolean
);

comment on column ir_act_server.usage is 'Usage';

comment on column ir_act_server.state is 'Action To Do';

comment on column ir_act_server.sequence is 'Sequence';

comment on column ir_act_server.model_id is 'Model';

comment on column ir_act_server.model_name is 'Model Name';

comment on column ir_act_server.code is 'Python Code';

comment on column ir_act_server.crud_model_id is 'Target Model';

comment on column ir_act_server.link_field_id is 'Link Field';

comment on column ir_act_server.template_id is 'Email Template';

comment on column ir_act_server.activity_type_id is 'Activity';

comment on column ir_act_server.activity_summary is 'Summary';

comment on column ir_act_server.activity_note is 'Note';

comment on column ir_act_server.activity_date_deadline_range is 'Due Date In';

comment on column ir_act_server.activity_date_deadline_range_type is 'Due type';

comment on column ir_act_server.activity_user_type is 'Activity User Type';

comment on column ir_act_server.activity_user_id is 'Responsible';

comment on column ir_act_server.activity_user_field_name is 'User field name';

comment on column ir_act_server.sms_template_id is 'SMS Template';

comment on column ir_act_server.sms_mass_keep_log is 'Log as Note';

alter table ir_act_server owner to postgres;

create table ir_act_server_group_rel
(
	act_id integer not null
		constraint ir_act_server_group_rel_act_id_fkey
			references ir_act_server
				on delete cascade,
	gid integer not null
		constraint ir_act_server_group_rel_gid_fkey
			references res_groups
				on delete cascade,
	constraint ir_act_server_group_rel_pkey
		primary key (act_id, gid)
);

comment on table ir_act_server_group_rel is 'RELATION BETWEEN ir_act_server AND res_groups';

alter table ir_act_server_group_rel owner to postgres;

create index ir_act_server_group_rel_gid_act_id_idx
	on ir_act_server_group_rel (gid, act_id);

create table ir_act_server_mail_channel_rel
(
	ir_act_server_id integer not null
		constraint ir_act_server_mail_channel_rel_ir_act_server_id_fkey
			references ir_act_server
				on delete cascade,
	mail_channel_id integer not null
		constraint ir_act_server_mail_channel_rel_mail_channel_id_fkey
			references mail_channel
				on delete cascade,
	constraint ir_act_server_mail_channel_rel_pkey
		primary key (ir_act_server_id, mail_channel_id)
);

comment on table ir_act_server_mail_channel_rel is 'RELATION BETWEEN ir_act_server AND mail_channel';

alter table ir_act_server_mail_channel_rel owner to postgres;

create index ir_act_server_mail_channel_re_mail_channel_id_ir_act_server_idx
	on ir_act_server_mail_channel_rel (mail_channel_id, ir_act_server_id);

create table ir_act_server_res_partner_rel
(
	ir_act_server_id integer not null
		constraint ir_act_server_res_partner_rel_ir_act_server_id_fkey
			references ir_act_server
				on delete cascade,
	res_partner_id integer not null
		constraint ir_act_server_res_partner_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	constraint ir_act_server_res_partner_rel_pkey
		primary key (ir_act_server_id, res_partner_id)
);

comment on table ir_act_server_res_partner_rel is 'RELATION BETWEEN ir_act_server AND res_partner';

alter table ir_act_server_res_partner_rel owner to postgres;

create index ir_act_server_res_partner_rel_res_partner_id_ir_act_server__idx
	on ir_act_server_res_partner_rel (res_partner_id, ir_act_server_id);

create table ir_cron
(
	id integer default nextval('ir_cron_id_seq'::regclass) not null
		constraint ir_cron_pkey
			primary key,
	ir_actions_server_id integer not null
		constraint ir_cron_ir_actions_server_id_fkey
			references ir_act_server
				on delete restrict,
	cron_name varchar,
	user_id integer not null
		constraint ir_cron_user_id_fkey
			references res_users
				on delete restrict,
	active boolean,
	interval_number integer,
	interval_type varchar,
	numbercall integer,
	doall boolean,
	nextcall timestamp not null,
	lastcall timestamp,
	priority integer,
	create_uid integer
		constraint ir_cron_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_cron_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_cron is 'Scheduled Actions';

comment on column ir_cron.ir_actions_server_id is 'Server action';

comment on column ir_cron.cron_name is 'Name';

comment on column ir_cron.user_id is 'Scheduler User';

comment on column ir_cron.active is 'Active';

comment on column ir_cron.interval_number is 'Interval Number';

comment on column ir_cron.interval_type is 'Interval Unit';

comment on column ir_cron.numbercall is 'Number of Calls';

comment on column ir_cron.doall is 'Repeat Missed';

comment on column ir_cron.nextcall is 'Next Execution Date';

comment on column ir_cron.lastcall is 'Last Execution Date';

comment on column ir_cron.priority is 'Priority';

comment on column ir_cron.create_uid is 'Created by';

comment on column ir_cron.create_date is 'Created on';

comment on column ir_cron.write_uid is 'Last Updated by';

comment on column ir_cron.write_date is 'Last Updated on';

alter table ir_cron owner to postgres;

create table ir_server_object_lines
(
	id integer default nextval('ir_server_object_lines_id_seq'::regclass) not null
		constraint ir_server_object_lines_pkey
			primary key,
	server_id integer
		constraint ir_server_object_lines_server_id_fkey
			references ir_act_server
				on delete cascade,
	col1 integer not null
		constraint ir_server_object_lines_col1_fkey
			references ir_model_fields
				on delete cascade,
	value text not null,
	evaluation_type varchar not null,
	create_uid integer
		constraint ir_server_object_lines_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint ir_server_object_lines_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table ir_server_object_lines is 'Server Action value mapping';

comment on column ir_server_object_lines.server_id is 'Related Server Action';

comment on column ir_server_object_lines.col1 is 'Field';

comment on column ir_server_object_lines.value is 'Value';

comment on column ir_server_object_lines.evaluation_type is 'Evaluation Type';

comment on column ir_server_object_lines.create_uid is 'Created by';

comment on column ir_server_object_lines.create_date is 'Created on';

comment on column ir_server_object_lines.write_uid is 'Last Updated by';

comment on column ir_server_object_lines.write_date is 'Last Updated on';

alter table ir_server_object_lines owner to postgres;

create table rel_server_actions
(
	server_id integer not null
		constraint rel_server_actions_server_id_fkey
			references ir_act_server
				on delete cascade,
	action_id integer not null
		constraint rel_server_actions_action_id_fkey
			references ir_act_server
				on delete cascade,
	constraint rel_server_actions_pkey
		primary key (server_id, action_id)
);

comment on table rel_server_actions is 'RELATION BETWEEN ir_act_server AND ir_act_server';

alter table rel_server_actions owner to postgres;

create index rel_server_actions_action_id_server_id_idx
	on rel_server_actions (action_id, server_id);

create table sms_composer
(
	id integer default nextval('sms_composer_id_seq'::regclass) not null
		constraint sms_composer_pkey
			primary key,
	composition_mode varchar not null,
	res_model varchar,
	res_id integer,
	res_ids varchar,
	use_active_domain boolean,
	active_domain text,
	mass_keep_log boolean,
	mass_force_send boolean,
	mass_use_blacklist boolean,
	recipient_single_number_itf varchar,
	number_field_name varchar,
	numbers varchar,
	template_id integer
		constraint sms_composer_template_id_fkey
			references sms_template
				on delete set null,
	body text not null,
	create_uid integer
		constraint sms_composer_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_composer_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_composer is 'Send SMS Wizard';

comment on column sms_composer.composition_mode is 'Composition Mode';

comment on column sms_composer.res_model is 'Document Model Name';

comment on column sms_composer.res_id is 'Document ID';

comment on column sms_composer.res_ids is 'Document IDs';

comment on column sms_composer.use_active_domain is 'Use active domain';

comment on column sms_composer.active_domain is 'Active domain';

comment on column sms_composer.mass_keep_log is 'Keep a note on document';

comment on column sms_composer.mass_force_send is 'Send directly';

comment on column sms_composer.mass_use_blacklist is 'Use blacklist';

comment on column sms_composer.recipient_single_number_itf is 'Recipient Number';

comment on column sms_composer.number_field_name is 'Number Field';

comment on column sms_composer.numbers is 'Recipients (Numbers)';

comment on column sms_composer.template_id is 'Use Template';

comment on column sms_composer.body is 'Message';

comment on column sms_composer.create_uid is 'Created by';

comment on column sms_composer.create_date is 'Created on';

comment on column sms_composer.write_uid is 'Last Updated by';

comment on column sms_composer.write_date is 'Last Updated on';

alter table sms_composer owner to postgres;

create index sms_template_model_index
	on sms_template (model);

create table sms_template_preview
(
	id integer default nextval('sms_template_preview_id_seq'::regclass) not null
		constraint sms_template_preview_pkey
			primary key,
	sms_template_id integer not null
		constraint sms_template_preview_sms_template_id_fkey
			references sms_template
				on delete cascade,
	lang varchar,
	resource_ref varchar,
	create_uid integer
		constraint sms_template_preview_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_template_preview_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_template_preview is 'SMS Template Preview';

comment on column sms_template_preview.sms_template_id is 'Sms Template';

comment on column sms_template_preview.lang is 'Template Preview Language';

comment on column sms_template_preview.resource_ref is 'Record reference';

comment on column sms_template_preview.create_uid is 'Created by';

comment on column sms_template_preview.create_date is 'Created on';

comment on column sms_template_preview.write_uid is 'Last Updated by';

comment on column sms_template_preview.write_date is 'Last Updated on';

alter table sms_template_preview owner to postgres;

create table snailmail_confirm_followup
(
	id integer default nextval('snailmail_confirm_followup_id_seq'::regclass) not null
		constraint snailmail_confirm_followup_pkey
			primary key,
	followup_id integer
		constraint snailmail_confirm_followup_followup_id_fkey
			references followup_send
				on delete set null,
	model_name varchar,
	create_uid integer
		constraint snailmail_confirm_followup_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_confirm_followup_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_confirm_followup is 'Snailmail Confirm Followup';

comment on column snailmail_confirm_followup.followup_id is 'Followup';

comment on column snailmail_confirm_followup.model_name is 'Model Name';

comment on column snailmail_confirm_followup.create_uid is 'Created by';

comment on column snailmail_confirm_followup.create_date is 'Created on';

comment on column snailmail_confirm_followup.write_uid is 'Last Updated by';

comment on column snailmail_confirm_followup.write_date is 'Last Updated on';

alter table snailmail_confirm_followup owner to postgres;

create table snailmail_confirm_invoice
(
	id integer default nextval('snailmail_confirm_invoice_id_seq'::regclass) not null
		constraint snailmail_confirm_invoice_pkey
			primary key,
	invoice_send_id integer
		constraint snailmail_confirm_invoice_invoice_send_id_fkey
			references account_invoice_send
				on delete set null,
	model_name varchar,
	create_uid integer
		constraint snailmail_confirm_invoice_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_confirm_invoice_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_confirm_invoice is 'Snailmail Confirm Invoice';

comment on column snailmail_confirm_invoice.invoice_send_id is 'Invoice Send';

comment on column snailmail_confirm_invoice.model_name is 'Model Name';

comment on column snailmail_confirm_invoice.create_uid is 'Created by';

comment on column snailmail_confirm_invoice.create_date is 'Created on';

comment on column snailmail_confirm_invoice.write_uid is 'Last Updated by';

comment on column snailmail_confirm_invoice.write_date is 'Last Updated on';

alter table snailmail_confirm_invoice owner to postgres;

create table snailmail_letter_cancel
(
	id integer default nextval('snailmail_letter_cancel_id_seq'::regclass) not null
		constraint snailmail_letter_cancel_pkey
			primary key,
	model varchar,
	create_uid integer
		constraint snailmail_letter_cancel_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_letter_cancel_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_letter_cancel is 'Dismiss notification for resend by model';

comment on column snailmail_letter_cancel.model is 'Model';

comment on column snailmail_letter_cancel.create_uid is 'Created by';

comment on column snailmail_letter_cancel.create_date is 'Created on';

comment on column snailmail_letter_cancel.write_uid is 'Last Updated by';

comment on column snailmail_letter_cancel.write_date is 'Last Updated on';

alter table snailmail_letter_cancel owner to postgres;

create table snailmail_letter_format_error
(
	id integer default nextval('snailmail_letter_format_error_id_seq'::regclass) not null
		constraint snailmail_letter_format_error_pkey
			primary key,
	message_id integer
		constraint snailmail_letter_format_error_message_id_fkey
			references mail_message
				on delete set null,
	snailmail_cover boolean,
	create_uid integer
		constraint snailmail_letter_format_error_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_letter_format_error_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_letter_format_error is 'Format Error Sending a Snailmail Letter';

comment on column snailmail_letter_format_error.message_id is 'Message';

comment on column snailmail_letter_format_error.snailmail_cover is 'Add a Cover Page';

comment on column snailmail_letter_format_error.create_uid is 'Created by';

comment on column snailmail_letter_format_error.create_date is 'Created on';

comment on column snailmail_letter_format_error.write_uid is 'Last Updated by';

comment on column snailmail_letter_format_error.write_date is 'Last Updated on';

alter table snailmail_letter_format_error owner to postgres;

create table stock_backorder_confirmation
(
	id integer default nextval('stock_backorder_confirmation_id_seq'::regclass) not null
		constraint stock_backorder_confirmation_pkey
			primary key,
	show_transfers boolean,
	create_uid integer
		constraint stock_backorder_confirmation_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_backorder_confirmation_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_backorder_confirmation is 'Backorder Confirmation';

comment on column stock_backorder_confirmation.show_transfers is 'Show Transfers';

comment on column stock_backorder_confirmation.create_uid is 'Created by';

comment on column stock_backorder_confirmation.create_date is 'Created on';

comment on column stock_backorder_confirmation.write_uid is 'Last Updated by';

comment on column stock_backorder_confirmation.write_date is 'Last Updated on';

alter table stock_backorder_confirmation owner to postgres;

create table stock_immediate_transfer
(
	id integer default nextval('stock_immediate_transfer_id_seq'::regclass) not null
		constraint stock_immediate_transfer_pkey
			primary key,
	show_transfers boolean,
	create_uid integer
		constraint stock_immediate_transfer_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_immediate_transfer_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_immediate_transfer is 'Immediate Transfer';

comment on column stock_immediate_transfer.show_transfers is 'Show Transfers';

comment on column stock_immediate_transfer.create_uid is 'Created by';

comment on column stock_immediate_transfer.create_date is 'Created on';

comment on column stock_immediate_transfer.write_uid is 'Last Updated by';

comment on column stock_immediate_transfer.write_date is 'Last Updated on';

alter table stock_immediate_transfer owner to postgres;

create table stock_inventory
(
	id integer default nextval('stock_inventory_id_seq'::regclass) not null
		constraint stock_inventory_pkey
			primary key,
	message_main_attachment_id integer
		constraint stock_inventory_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	name varchar not null,
	date timestamp not null,
	state varchar,
	company_id integer not null,
	start_empty boolean,
	prefill_counted_quantity varchar,
	exhausted boolean,
	create_uid integer
		constraint stock_inventory_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_inventory_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	accounting_date date
);

comment on table stock_inventory is 'Inventory';

comment on column stock_inventory.message_main_attachment_id is 'Main Attachment';

comment on column stock_inventory.name is 'Inventory Reference';

comment on column stock_inventory.date is 'Inventory Date';

comment on column stock_inventory.state is 'Status';

comment on column stock_inventory.company_id is 'Company';

comment on column stock_inventory.start_empty is 'Empty Inventory';

comment on column stock_inventory.prefill_counted_quantity is 'Counted Quantities';

comment on column stock_inventory.exhausted is 'Include Exhausted Products';

comment on column stock_inventory.create_uid is 'Created by';

comment on column stock_inventory.create_date is 'Created on';

comment on column stock_inventory.write_uid is 'Last Updated by';

comment on column stock_inventory.write_date is 'Last Updated on';

comment on column stock_inventory.accounting_date is 'Accounting Date';

alter table stock_inventory owner to postgres;

create index stock_inventory_company_id_index
	on stock_inventory (company_id);

create index stock_inventory_message_main_attachment_id_index
	on stock_inventory (message_main_attachment_id);

create index stock_inventory_state_index
	on stock_inventory (state);

create table stock_location
(
	id integer default nextval('stock_location_id_seq'::regclass) not null
		constraint stock_location_pkey
			primary key,
	name varchar not null,
	complete_name varchar,
	active boolean,
	usage varchar not null,
	location_id integer
		constraint stock_location_location_id_fkey
			references stock_location
				on delete cascade,
	comment text,
	posx integer,
	posy integer,
	posz integer,
	parent_path varchar,
	company_id integer,
	scrap_location boolean,
	return_location boolean,
	removal_strategy_id integer
		constraint stock_location_removal_strategy_id_fkey
			references product_removal
				on delete set null,
	barcode varchar,
	create_uid integer
		constraint stock_location_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_location_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	valuation_in_account_id integer
		constraint stock_location_valuation_in_account_id_fkey
			references account_account
				on delete set null,
	valuation_out_account_id integer
		constraint stock_location_valuation_out_account_id_fkey
			references account_account
				on delete set null,
	constraint stock_location_barcode_company_uniq
		unique (barcode, company_id)
);

comment on table stock_location is 'Inventory Locations';

comment on column stock_location.name is 'Location Name';

comment on column stock_location.complete_name is 'Full Location Name';

comment on column stock_location.active is 'Active';

comment on column stock_location.usage is 'Location Type';

comment on column stock_location.location_id is 'Parent Location';

comment on column stock_location.comment is 'Additional Information';

comment on column stock_location.posx is 'Corridor (X)';

comment on column stock_location.posy is 'Shelves (Y)';

comment on column stock_location.posz is 'Height (Z)';

comment on column stock_location.parent_path is 'Parent Path';

comment on column stock_location.company_id is 'Company';

comment on column stock_location.scrap_location is 'Is a Scrap Location?';

comment on column stock_location.return_location is 'Is a Return Location?';

comment on column stock_location.removal_strategy_id is 'Removal Strategy';

comment on column stock_location.barcode is 'Barcode';

comment on column stock_location.create_uid is 'Created by';

comment on column stock_location.create_date is 'Created on';

comment on column stock_location.write_uid is 'Last Updated by';

comment on column stock_location.write_date is 'Last Updated on';

comment on column stock_location.valuation_in_account_id is 'Stock Valuation Account (Incoming)';

comment on column stock_location.valuation_out_account_id is 'Stock Valuation Account (Outgoing)';

alter table stock_location owner to postgres;

create table res_company
(
	id integer default nextval('res_company_id_seq'::regclass) not null
		constraint res_company_pkey
			primary key,
	name varchar not null
		constraint res_company_name_uniq
			unique,
	partner_id integer not null
		constraint res_company_partner_id_fkey
			references res_partner
				on delete restrict,
	currency_id integer not null
		constraint res_company_currency_id_fkey
			references res_currency
				on delete restrict,
	sequence integer,
	create_date timestamp,
	parent_id integer
		constraint res_company_parent_id_fkey
			references res_company
				on delete set null,
	report_header text,
	report_footer text,
	logo_web bytea,
	email varchar,
	phone varchar,
	company_registry varchar,
	paperformat_id integer
		constraint res_company_paperformat_id_fkey
			references report_paperformat
				on delete set null,
	external_report_layout_id integer
		constraint res_company_external_report_layout_id_fkey
			references ir_ui_view
				on delete set null,
	base_onboarding_company_state varchar,
	font varchar,
	primary_color varchar,
	secondary_color varchar,
	create_uid integer
		constraint res_company_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint res_company_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	resource_calendar_id integer
		constraint res_company_resource_calendar_id_fkey
			references resource_calendar
				on delete restrict,
	partner_gid integer,
	snailmail_color boolean,
	snailmail_cover boolean,
	snailmail_duplex boolean,
	fiscalyear_last_day integer not null,
	fiscalyear_last_month varchar not null,
	period_lock_date date,
	fiscalyear_lock_date date,
	tax_lock_date date,
	transfer_account_id integer
		constraint res_company_transfer_account_id_fkey
			references account_account
				on delete set null,
	expects_chart_of_accounts boolean,
	chart_template_id integer
		constraint res_company_chart_template_id_fkey
			references account_chart_template
				on delete set null,
	bank_account_code_prefix varchar,
	cash_account_code_prefix varchar,
	default_cash_difference_income_account_id integer
		constraint res_company_default_cash_difference_income_account_id_fkey
			references account_account
				on delete set null,
	default_cash_difference_expense_account_id integer
		constraint res_company_default_cash_difference_expense_account_id_fkey
			references account_account
				on delete set null,
	account_journal_suspense_account_id integer
		constraint res_company_account_journal_suspense_account_id_fkey
			references account_account
				on delete set null,
	transfer_account_code_prefix varchar,
	account_sale_tax_id integer
		constraint res_company_account_sale_tax_id_fkey
			references account_tax
				on delete set null,
	account_purchase_tax_id integer
		constraint res_company_account_purchase_tax_id_fkey
			references account_tax
				on delete set null,
	tax_calculation_rounding_method varchar,
	currency_exchange_journal_id integer
		constraint res_company_currency_exchange_journal_id_fkey
			references account_journal
				on delete set null,
	income_currency_exchange_account_id integer
		constraint res_company_income_currency_exchange_account_id_fkey
			references account_account
				on delete set null,
	expense_currency_exchange_account_id integer
		constraint res_company_expense_currency_exchange_account_id_fkey
			references account_account
				on delete set null,
	anglo_saxon_accounting boolean,
	property_stock_account_input_categ_id integer
		constraint res_company_property_stock_account_input_categ_id_fkey
			references account_account
				on delete set null,
	property_stock_account_output_categ_id integer
		constraint res_company_property_stock_account_output_categ_id_fkey
			references account_account
				on delete set null,
	property_stock_valuation_account_id integer
		constraint res_company_property_stock_valuation_account_id_fkey
			references account_account
				on delete set null,
	tax_exigibility boolean,
	account_tax_fiscal_country_id integer
		constraint res_company_account_tax_fiscal_country_id_fkey
			references res_country
				on delete set null,
	incoterm_id integer
		constraint res_company_incoterm_id_fkey
			references account_incoterms
				on delete set null,
	qr_code boolean,
	invoice_is_email boolean,
	invoice_is_print boolean,
	account_opening_move_id integer
		constraint res_company_account_opening_move_id_fkey
			references account_move
				on delete set null,
	account_opening_date date not null,
	account_setup_bank_data_state varchar,
	account_setup_fy_data_state varchar,
	account_setup_coa_state varchar,
	account_onboarding_invoice_layout_state varchar,
	account_onboarding_create_invoice_state varchar,
	account_onboarding_sale_tax_state varchar,
	account_invoice_onboarding_state varchar,
	account_dashboard_onboarding_state varchar,
	invoice_terms text,
	account_setup_bill_state varchar,
	account_default_pos_receivable_account_id integer
		constraint res_company_account_default_pos_receivable_account_id_fkey
			references account_account
				on delete set null,
	expense_accrual_account_id integer
		constraint res_company_expense_accrual_account_id_fkey
			references account_account
				on delete set null,
	revenue_accrual_account_id integer
		constraint res_company_revenue_accrual_account_id_fkey
			references account_account
				on delete set null,
	automatic_entry_default_journal_id integer
		constraint res_company_automatic_entry_default_journal_id_fkey
			references account_journal
				on delete set null,
	tax_cash_basis_journal_id integer
		constraint res_company_tax_cash_basis_journal_id_fkey
			references account_journal
				on delete set null,
	account_cash_basis_base_account_id integer
		constraint res_company_account_cash_basis_base_account_id_fkey
			references account_account
				on delete set null,
	invoicing_switch_threshold date,
	extract_show_ocr_option_selection varchar,
	extract_single_line_per_tax boolean,
	currency_interval_unit varchar,
	currency_next_execution_date date,
	currency_provider varchar,
	payment_acquirer_onboarding_state varchar,
	payment_onboarding_payment_method varchar,
	invoice_is_snailmail boolean,
	totals_below_sections boolean,
	account_tax_periodicity varchar,
	account_tax_periodicity_reminder_day integer,
	account_tax_original_periodicity_reminder_day integer,
	account_tax_periodicity_journal_id integer
		constraint res_company_account_tax_periodicity_journal_id_fkey
			references account_journal
				on delete set null,
	account_tax_next_activity_type integer
		constraint res_company_account_tax_next_activity_type_fkey
			references mail_activity_type
				on delete set null,
	account_revaluation_journal_id integer
		constraint res_company_account_revaluation_journal_id_fkey
			references account_journal
				on delete set null,
	account_revaluation_expense_provision_account_id integer
		constraint res_company_account_revaluation_expense_provision_account__fkey
			references account_account
				on delete set null,
	account_revaluation_income_provision_account_id integer
		constraint res_company_account_revaluation_income_provision_account_i_fkey
			references account_account
				on delete set null,
	yodlee_access_token varchar,
	yodlee_user_login varchar,
	yodlee_user_password varchar,
	yodlee_user_access_token varchar,
	gain_account_id integer
		constraint res_company_gain_account_id_fkey
			references account_account
				on delete set null,
	loss_account_id integer
		constraint res_company_loss_account_id_fkey
			references account_account
				on delete set null,
	portal_confirmation_sign boolean,
	portal_confirmation_pay boolean,
	quotation_validity_days integer,
	sale_quotation_onboarding_state varchar,
	sale_onboarding_order_confirmation_state varchar,
	sale_onboarding_sample_quotation_state varchar,
	sale_onboarding_payment_method varchar,
	sale_order_template_id integer,
	nomenclature_id integer
		constraint res_company_nomenclature_id_fkey
			references barcode_nomenclature
				on delete set null,
	internal_transit_location_id integer
		constraint res_company_internal_transit_location_id_fkey
			references stock_location
				on delete restrict,
	stock_move_email_validation boolean,
	stock_mail_confirmation_template_id integer
		constraint res_company_stock_mail_confirmation_template_id_fkey
			references mail_template
				on delete set null,
	stock_move_sms_validation boolean,
	stock_sms_confirmation_template_id integer
		constraint res_company_stock_sms_confirmation_template_id_fkey
			references sms_template
				on delete set null,
	has_received_warning_stock_sms boolean,
	security_lead double precision not null,
	po_lead double precision not null,
	po_lock varchar,
	po_double_validation varchar,
	po_double_validation_amount numeric,
	days_to_purchase double precision,
	social_twitter varchar,
	social_facebook varchar,
	social_github varchar,
	social_linkedin varchar,
	social_youtube varchar,
	social_instagram varchar
);

comment on column res_company.parent_id is 'Parent Company';

comment on column res_company.report_header is 'Company Tagline';

comment on column res_company.report_footer is 'Report Footer';

comment on column res_company.logo_web is 'Logo Web';

comment on column res_company.email is 'Email';

comment on column res_company.phone is 'Phone';

comment on column res_company.company_registry is 'Company Registry';

comment on column res_company.paperformat_id is 'Paper format';

comment on column res_company.external_report_layout_id is 'Document Template';

comment on column res_company.base_onboarding_company_state is 'State of the onboarding company step';

comment on column res_company.font is 'Font';

comment on column res_company.primary_color is 'Primary Color';

comment on column res_company.secondary_color is 'Secondary Color';

comment on column res_company.create_uid is 'Created by';

comment on column res_company.write_uid is 'Last Updated by';

comment on column res_company.write_date is 'Last Updated on';

comment on column res_company.resource_calendar_id is 'Default Working Hours';

comment on column res_company.partner_gid is 'Company database ID';

comment on column res_company.snailmail_color is 'Color';

comment on column res_company.snailmail_cover is 'Add a Cover Page';

comment on column res_company.snailmail_duplex is 'Both sides';

comment on column res_company.fiscalyear_last_day is 'Fiscalyear Last Day';

comment on column res_company.fiscalyear_last_month is 'Fiscalyear Last Month';

comment on column res_company.period_lock_date is 'Lock Date for Non-Advisers';

comment on column res_company.fiscalyear_lock_date is 'Lock Date';

comment on column res_company.tax_lock_date is 'Tax Lock Date';

comment on column res_company.transfer_account_id is 'Inter-Banks Transfer Account';

comment on column res_company.expects_chart_of_accounts is 'Expects a Chart of Accounts';

comment on column res_company.chart_template_id is 'Chart Template';

comment on column res_company.bank_account_code_prefix is 'Prefix of the bank accounts';

comment on column res_company.cash_account_code_prefix is 'Prefix of the cash accounts';

comment on column res_company.default_cash_difference_income_account_id is 'Cash Difference Income Account';

comment on column res_company.default_cash_difference_expense_account_id is 'Cash Difference Expense Account';

comment on column res_company.account_journal_suspense_account_id is 'Journal Suspense Account';

comment on column res_company.transfer_account_code_prefix is 'Prefix of the transfer accounts';

comment on column res_company.account_sale_tax_id is 'Default Sale Tax';

comment on column res_company.account_purchase_tax_id is 'Default Purchase Tax';

comment on column res_company.tax_calculation_rounding_method is 'Tax Calculation Rounding Method';

comment on column res_company.currency_exchange_journal_id is 'Exchange Gain or Loss Journal';

comment on column res_company.income_currency_exchange_account_id is 'Gain Exchange Rate Account';

comment on column res_company.expense_currency_exchange_account_id is 'Loss Exchange Rate Account';

comment on column res_company.anglo_saxon_accounting is 'Use anglo-saxon accounting';

comment on column res_company.property_stock_account_input_categ_id is 'Input Account for Stock Valuation';

comment on column res_company.property_stock_account_output_categ_id is 'Output Account for Stock Valuation';

comment on column res_company.property_stock_valuation_account_id is 'Account Template for Stock Valuation';

comment on column res_company.tax_exigibility is 'Use Cash Basis';

comment on column res_company.account_tax_fiscal_country_id is 'Fiscal Country';

comment on column res_company.incoterm_id is 'Default incoterm';

comment on column res_company.qr_code is 'Display QR-code on invoices';

comment on column res_company.invoice_is_email is 'Email by default';

comment on column res_company.invoice_is_print is 'Print by default';

comment on column res_company.account_opening_move_id is 'Opening Journal Entry';

comment on column res_company.account_opening_date is 'Opening Entry';

comment on column res_company.account_setup_bank_data_state is 'State of the onboarding bank data step';

comment on column res_company.account_setup_fy_data_state is 'State of the onboarding fiscal year step';

comment on column res_company.account_setup_coa_state is 'State of the onboarding charts of account step';

comment on column res_company.account_onboarding_invoice_layout_state is 'State of the onboarding invoice layout step';

comment on column res_company.account_onboarding_create_invoice_state is 'State of the onboarding create invoice step';

comment on column res_company.account_onboarding_sale_tax_state is 'State of the onboarding sale tax step';

comment on column res_company.account_invoice_onboarding_state is 'State of the account invoice onboarding panel';

comment on column res_company.account_dashboard_onboarding_state is 'State of the account dashboard onboarding panel';

comment on column res_company.invoice_terms is 'Default Terms and Conditions';

comment on column res_company.account_setup_bill_state is 'State of the onboarding bill step';

comment on column res_company.account_default_pos_receivable_account_id is 'Default PoS Receivable Account';

comment on column res_company.expense_accrual_account_id is 'Expense Accrual Account';

comment on column res_company.revenue_accrual_account_id is 'Revenue Accrual Account';

comment on column res_company.automatic_entry_default_journal_id is 'Automatic Entry Default Journal';

comment on column res_company.tax_cash_basis_journal_id is 'Cash Basis Journal';

comment on column res_company.account_cash_basis_base_account_id is 'Base Tax Received Account';

comment on column res_company.invoicing_switch_threshold is 'Invoicing Switch Threshold';

comment on column res_company.extract_show_ocr_option_selection is 'Send mode on invoices attachments';

comment on column res_company.extract_single_line_per_tax is 'OCR Single Invoice Line Per Tax';

comment on column res_company.currency_interval_unit is 'Interval Unit';

comment on column res_company.currency_next_execution_date is 'Next Execution Date';

comment on column res_company.currency_provider is 'Service Provider';

comment on column res_company.payment_acquirer_onboarding_state is 'State of the onboarding payment acquirer step';

comment on column res_company.payment_onboarding_payment_method is 'Selected onboarding payment method';

comment on column res_company.invoice_is_snailmail is 'Send by Post';

comment on column res_company.totals_below_sections is 'Add totals below sections';

comment on column res_company.account_tax_periodicity is 'Delay units';

comment on column res_company.account_tax_periodicity_reminder_day is 'Start from';

comment on column res_company.account_tax_original_periodicity_reminder_day is 'Start from original';

comment on column res_company.account_tax_periodicity_journal_id is 'Journal';

comment on column res_company.account_tax_next_activity_type is 'Account Tax Next Activity Type';

comment on column res_company.account_revaluation_journal_id is 'Account Revaluation Journal';

comment on column res_company.account_revaluation_expense_provision_account_id is 'Expense Provision Account';

comment on column res_company.account_revaluation_income_provision_account_id is 'Income Provision Account';

comment on column res_company.yodlee_access_token is 'access_token';

comment on column res_company.yodlee_user_login is 'Yodlee login';

comment on column res_company.yodlee_user_password is 'Yodlee password';

comment on column res_company.yodlee_user_access_token is 'Yodlee access token';

comment on column res_company.gain_account_id is 'Gain Account';

comment on column res_company.loss_account_id is 'Loss Account';

comment on column res_company.portal_confirmation_sign is 'Online Signature';

comment on column res_company.portal_confirmation_pay is 'Online Payment';

comment on column res_company.quotation_validity_days is 'Default Quotation Validity (Days)';

comment on column res_company.sale_quotation_onboarding_state is 'State of the sale onboarding panel';

comment on column res_company.sale_onboarding_order_confirmation_state is 'State of the onboarding confirmation order step';

comment on column res_company.sale_onboarding_sample_quotation_state is 'State of the onboarding sample quotation step';

comment on column res_company.sale_onboarding_payment_method is 'Sale onboarding selected payment method';

comment on column res_company.sale_order_template_id is 'Default Sale Template';

comment on column res_company.nomenclature_id is 'Nomenclature';

comment on column res_company.internal_transit_location_id is 'Internal Transit Location';

comment on column res_company.stock_move_email_validation is 'Email Confirmation picking';

comment on column res_company.stock_mail_confirmation_template_id is 'Email Template confirmation picking';

comment on column res_company.stock_move_sms_validation is 'SMS Confirmation';

comment on column res_company.stock_sms_confirmation_template_id is 'SMS Template';

comment on column res_company.has_received_warning_stock_sms is 'Has Received Warning Stock Sms';

comment on column res_company.security_lead is 'Sales Safety Days';

comment on column res_company.po_lead is 'Purchase Lead Time';

comment on column res_company.po_lock is 'Purchase Order Modification';

comment on column res_company.po_double_validation is 'Levels of Approvals';

comment on column res_company.po_double_validation_amount is 'Double validation amount';

comment on column res_company.days_to_purchase is 'Days to Purchase';

comment on column res_company.social_twitter is 'Twitter Account';

comment on column res_company.social_facebook is 'Facebook Account';

comment on column res_company.social_github is 'GitHub Account';

comment on column res_company.social_linkedin is 'LinkedIn Account';

comment on column res_company.social_youtube is 'Youtube Account';

comment on column res_company.social_instagram is 'Instagram Account';

alter table res_company owner to postgres;

create table account_analytic_tag
(
	id integer default nextval('account_analytic_tag_id_seq'::regclass) not null
		constraint account_analytic_tag_pkey
			primary key,
	name varchar not null,
	color integer,
	active boolean,
	active_analytic_distribution boolean,
	company_id integer
		constraint account_analytic_tag_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint account_analytic_tag_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_analytic_tag_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_analytic_tag is 'Analytic Tags';

comment on column account_analytic_tag.name is 'Analytic Tag';

comment on column account_analytic_tag.color is 'Color Index';

comment on column account_analytic_tag.active is 'Active';

comment on column account_analytic_tag.active_analytic_distribution is 'Analytic Distribution';

comment on column account_analytic_tag.company_id is 'Company';

comment on column account_analytic_tag.create_uid is 'Created by';

comment on column account_analytic_tag.create_date is 'Created on';

comment on column account_analytic_tag.write_uid is 'Last Updated by';

comment on column account_analytic_tag.write_date is 'Last Updated on';

alter table account_analytic_tag owner to postgres;

create table account_analytic_distribution
(
	id integer default nextval('account_analytic_distribution_id_seq'::regclass) not null
		constraint account_analytic_distribution_pkey
			primary key,
	account_id integer not null
		constraint account_analytic_distribution_account_id_fkey
			references account_analytic_account
				on delete restrict,
	percentage double precision not null,
	tag_id integer not null
		constraint account_analytic_distribution_tag_id_fkey
			references account_analytic_tag
				on delete restrict,
	create_uid integer
		constraint account_analytic_distribution_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_analytic_distribution_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_analytic_distribution is 'Analytic Account Distribution';

comment on column account_analytic_distribution.account_id is 'Analytic Account';

comment on column account_analytic_distribution.percentage is 'Percentage';

comment on column account_analytic_distribution.tag_id is 'Parent tag';

comment on column account_analytic_distribution.create_uid is 'Created by';

comment on column account_analytic_distribution.create_date is 'Created on';

comment on column account_analytic_distribution.write_uid is 'Last Updated by';

comment on column account_analytic_distribution.write_date is 'Last Updated on';

alter table account_analytic_distribution owner to postgres;

create index account_analytic_tag_name_index
	on account_analytic_tag (name);

create table account_analytic_tag_account_asset_rel
(
	account_asset_id integer not null
		constraint account_analytic_tag_account_asset_rel_account_asset_id_fkey
			references account_asset
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_analytic_tag_account_asset_account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_tag_account_asset_rel_pkey
		primary key (account_asset_id, account_analytic_tag_id)
);

comment on table account_analytic_tag_account_asset_rel is 'RELATION BETWEEN account_asset AND account_analytic_tag';

alter table account_analytic_tag_account_asset_rel owner to postgres;

create index account_analytic_tag_account__account_analytic_tag_id_acco_idx1
	on account_analytic_tag_account_asset_rel (account_analytic_tag_id, account_asset_id);

create table account_automatic_entry_wizard
(
	id integer default nextval('account_automatic_entry_wizard_id_seq'::regclass) not null
		constraint account_automatic_entry_wizard_pkey
			primary key,
	action varchar not null,
	date date not null,
	company_id integer not null
		constraint account_automatic_entry_wizard_company_id_fkey
			references res_company
				on delete cascade,
	percentage double precision,
	total_amount numeric,
	account_type varchar,
	destination_account_id integer
		constraint account_automatic_entry_wizard_destination_account_id_fkey
			references account_account
				on delete set null,
	create_uid integer
		constraint account_automatic_entry_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_automatic_entry_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_automatic_entry_wizard is 'Create Automatic Entries';

comment on column account_automatic_entry_wizard.action is 'Action';

comment on column account_automatic_entry_wizard.date is 'Date';

comment on column account_automatic_entry_wizard.company_id is 'Company';

comment on column account_automatic_entry_wizard.percentage is 'Percentage';

comment on column account_automatic_entry_wizard.total_amount is 'Total Amount';

comment on column account_automatic_entry_wizard.account_type is 'Account Type';

comment on column account_automatic_entry_wizard.destination_account_id is 'To';

comment on column account_automatic_entry_wizard.create_uid is 'Created by';

comment on column account_automatic_entry_wizard.create_date is 'Created on';

comment on column account_automatic_entry_wizard.write_uid is 'Last Updated by';

comment on column account_automatic_entry_wizard.write_date is 'Last Updated on';

alter table account_automatic_entry_wizard owner to postgres;

create table account_common_journal_report
(
	id integer default nextval('account_common_journal_report_id_seq'::regclass) not null
		constraint account_common_journal_report_pkey
			primary key,
	amount_currency boolean,
	company_id integer not null
		constraint account_common_journal_report_company_id_fkey
			references res_company
				on delete cascade,
	date_from date,
	date_to date,
	target_move varchar not null,
	create_uid integer
		constraint account_common_journal_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_common_journal_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_common_journal_report is 'Common Journal Report';

comment on column account_common_journal_report.amount_currency is 'With Currency';

comment on column account_common_journal_report.company_id is 'Company';

comment on column account_common_journal_report.date_from is 'Start Date';

comment on column account_common_journal_report.date_to is 'End Date';

comment on column account_common_journal_report.target_move is 'Target Moves';

comment on column account_common_journal_report.create_uid is 'Created by';

comment on column account_common_journal_report.create_date is 'Created on';

comment on column account_common_journal_report.write_uid is 'Last Updated by';

comment on column account_common_journal_report.write_date is 'Last Updated on';

alter table account_common_journal_report owner to postgres;

create table account_common_journal_report_account_journal_rel
(
	account_common_journal_report_id integer not null
		constraint account_common_journal_report_account_common_journal_repor_fkey
			references account_common_journal_report
				on delete cascade,
	account_journal_id integer not null
		constraint account_common_journal_report_account_j_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_common_journal_report_account_journal_rel_pkey
		primary key (account_common_journal_report_id, account_journal_id)
);

comment on table account_common_journal_report_account_journal_rel is 'RELATION BETWEEN account_common_journal_report AND account_journal';

alter table account_common_journal_report_account_journal_rel owner to postgres;

create index account_common_journal_report_account_journal_id_account_co_idx
	on account_common_journal_report_account_journal_rel (account_journal_id, account_common_journal_report_id);

create table account_common_report
(
	id integer default nextval('account_common_report_id_seq'::regclass) not null
		constraint account_common_report_pkey
			primary key,
	company_id integer not null
		constraint account_common_report_company_id_fkey
			references res_company
				on delete cascade,
	date_from date,
	date_to date,
	target_move varchar not null,
	create_uid integer
		constraint account_common_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_common_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_common_report is 'Account Common Report';

comment on column account_common_report.company_id is 'Company';

comment on column account_common_report.date_from is 'Start Date';

comment on column account_common_report.date_to is 'End Date';

comment on column account_common_report.target_move is 'Target Moves';

comment on column account_common_report.create_uid is 'Created by';

comment on column account_common_report.create_date is 'Created on';

comment on column account_common_report.write_uid is 'Last Updated by';

comment on column account_common_report.write_date is 'Last Updated on';

alter table account_common_report owner to postgres;

create table account_common_report_account_journal_rel
(
	account_common_report_id integer not null
		constraint account_common_report_account_jou_account_common_report_id_fkey
			references account_common_report
				on delete cascade,
	account_journal_id integer not null
		constraint account_common_report_account_journal_r_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_common_report_account_journal_rel_pkey
		primary key (account_common_report_id, account_journal_id)
);

comment on table account_common_report_account_journal_rel is 'RELATION BETWEEN account_common_report AND account_journal';

alter table account_common_report_account_journal_rel owner to postgres;

create index account_common_report_account_account_journal_id_account_co_idx
	on account_common_report_account_journal_rel (account_journal_id, account_common_report_id);

create table account_financial_html_report
(
	id integer default nextval('account_financial_html_report_id_seq'::regclass) not null
		constraint account_financial_html_report_pkey
			primary key,
	name varchar,
	date_range boolean,
	comparison boolean,
	analytic boolean,
	show_journal_filter boolean,
	unfold_all_filter boolean,
	company_id integer
		constraint account_financial_html_report_company_id_fkey
			references res_company
				on delete set null,
	generated_menu_id integer
		constraint account_financial_html_report_generated_menu_id_fkey
			references ir_ui_menu
				on delete set null,
	tax_report boolean,
	create_uid integer
		constraint account_financial_html_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_financial_html_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	type_financial_report_mg varchar,
	monetary_unit_mg boolean,
	note_mg boolean,
	n_gross_mg boolean,
	n_amort_prov_mg boolean,
	last_year_mg boolean
);

comment on table account_financial_html_report is 'Account Report (HTML)';

comment on column account_financial_html_report.name is 'Name';

comment on column account_financial_html_report.date_range is 'Based on date ranges';

comment on column account_financial_html_report.comparison is 'Allow comparison';

comment on column account_financial_html_report.analytic is 'Allow analytic filters';

comment on column account_financial_html_report.show_journal_filter is 'Allow filtering by journals';

comment on column account_financial_html_report.unfold_all_filter is 'Show unfold all filter';

comment on column account_financial_html_report.company_id is 'Company';

comment on column account_financial_html_report.generated_menu_id is 'Menu Item';

comment on column account_financial_html_report.tax_report is 'Tax Report';

comment on column account_financial_html_report.create_uid is 'Created by';

comment on column account_financial_html_report.create_date is 'Created on';

comment on column account_financial_html_report.write_uid is 'Last Updated by';

comment on column account_financial_html_report.write_date is 'Last Updated on';

comment on column account_financial_html_report.type_financial_report_mg is 'Type de rapport financier';

comment on column account_financial_html_report.monetary_unit_mg is 'Unité monétaire';

comment on column account_financial_html_report.note_mg is 'Note';

comment on column account_financial_html_report.n_gross_mg is 'N Brut';

comment on column account_financial_html_report.n_amort_prov_mg is 'N Amort/prov';

comment on column account_financial_html_report.last_year_mg is 'N-1';

alter table account_financial_html_report owner to postgres;

create table account_financial_html_report_ir_filters_rel
(
	account_financial_html_report_id integer not null
		constraint account_financial_html_report_account_financial_html_repor_fkey
			references account_financial_html_report
				on delete cascade,
	ir_filters_id integer not null,
	constraint account_financial_html_report_ir_filters_rel_pkey
		primary key (account_financial_html_report_id, ir_filters_id)
);

comment on table account_financial_html_report_ir_filters_rel is 'RELATION BETWEEN account_financial_html_report AND ir_filters';

alter table account_financial_html_report_ir_filters_rel owner to postgres;

create index account_financial_html_report_ir_filters_id_account_financi_idx
	on account_financial_html_report_ir_filters_rel (ir_filters_id, account_financial_html_report_id);

create table account_financial_html_report_line
(
	id integer default nextval('account_financial_html_report_line_id_seq'::regclass) not null
		constraint account_financial_html_report_line_pkey
			primary key,
	name varchar,
	code varchar
		constraint account_financial_html_report_line_code_uniq
			unique,
	financial_report_id integer
		constraint account_financial_html_report_line_financial_report_id_fkey
			references account_financial_html_report
				on delete set null,
	parent_id integer
		constraint account_financial_html_report_line_parent_id_fkey
			references account_financial_html_report_line
				on delete cascade,
	parent_path varchar,
	sequence integer,
	domain varchar,
	formulas varchar,
	groupby varchar,
	figure_type varchar not null,
	print_on_new_page boolean,
	green_on_positive boolean,
	level integer not null,
	special_date_changer varchar,
	show_domain varchar,
	hide_if_zero boolean,
	hide_if_empty boolean,
	action_id integer,
	create_uid integer
		constraint account_financial_html_report_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_financial_html_report_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	is_hidden boolean
);

comment on table account_financial_html_report_line is 'Account Report (HTML Line)';

comment on column account_financial_html_report_line.name is 'Section Name';

comment on column account_financial_html_report_line.code is 'Code';

comment on column account_financial_html_report_line.financial_report_id is 'Financial Report';

comment on column account_financial_html_report_line.parent_id is 'Parent';

comment on column account_financial_html_report_line.parent_path is 'Parent Path';

comment on column account_financial_html_report_line.sequence is 'Sequence';

comment on column account_financial_html_report_line.domain is 'Domain';

comment on column account_financial_html_report_line.formulas is 'Formulas';

comment on column account_financial_html_report_line.groupby is 'Group by';

comment on column account_financial_html_report_line.figure_type is 'Type';

comment on column account_financial_html_report_line.print_on_new_page is 'Print On New Page';

comment on column account_financial_html_report_line.green_on_positive is 'Is growth good when positive';

comment on column account_financial_html_report_line.level is 'Level';

comment on column account_financial_html_report_line.special_date_changer is 'Special Date Changer';

comment on column account_financial_html_report_line.show_domain is 'Show Domain';

comment on column account_financial_html_report_line.hide_if_zero is 'Hide If Zero';

comment on column account_financial_html_report_line.hide_if_empty is 'Hide If Empty';

comment on column account_financial_html_report_line.action_id is 'Action';

comment on column account_financial_html_report_line.create_uid is 'Created by';

comment on column account_financial_html_report_line.create_date is 'Created on';

comment on column account_financial_html_report_line.write_uid is 'Last Updated by';

comment on column account_financial_html_report_line.write_date is 'Last Updated on';

comment on column account_financial_html_report_line.is_hidden is 'Hide line in report';

alter table account_financial_html_report_line owner to postgres;

create index account_financial_html_report_line_parent_path_index
	on account_financial_html_report_line (parent_path);

create table account_financial_year_op
(
	id integer default nextval('account_financial_year_op_id_seq'::regclass) not null
		constraint account_financial_year_op_pkey
			primary key,
	company_id integer not null
		constraint account_financial_year_op_company_id_fkey
			references res_company
				on delete cascade,
	create_uid integer
		constraint account_financial_year_op_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_financial_year_op_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_financial_year_op is 'Opening Balance of Financial Year';

comment on column account_financial_year_op.company_id is 'Company';

comment on column account_financial_year_op.create_uid is 'Created by';

comment on column account_financial_year_op.create_date is 'Created on';

comment on column account_financial_year_op.write_uid is 'Last Updated by';

comment on column account_financial_year_op.write_date is 'Last Updated on';

alter table account_financial_year_op owner to postgres;

create table account_fiscal_year
(
	id integer default nextval('account_fiscal_year_id_seq'::regclass) not null
		constraint account_fiscal_year_pkey
			primary key,
	name varchar not null,
	date_from date not null,
	date_to date not null,
	company_id integer not null
		constraint account_fiscal_year_company_id_fkey
			references res_company
				on delete restrict,
	create_uid integer
		constraint account_fiscal_year_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_fiscal_year_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_fiscal_year is 'Fiscal Year';

comment on column account_fiscal_year.name is 'Name';

comment on column account_fiscal_year.date_from is 'Start Date';

comment on column account_fiscal_year.date_to is 'End Date';

comment on column account_fiscal_year.company_id is 'Company';

comment on column account_fiscal_year.create_uid is 'Created by';

comment on column account_fiscal_year.create_date is 'Created on';

comment on column account_fiscal_year.write_uid is 'Last Updated by';

comment on column account_fiscal_year.write_date is 'Last Updated on';

alter table account_fiscal_year owner to postgres;

create table account_group
(
	id integer default nextval('account_group_id_seq'::regclass) not null
		constraint account_group_pkey
			primary key,
	parent_id integer
		constraint account_group_parent_id_fkey
			references account_group
				on delete cascade,
	parent_path varchar,
	name varchar not null,
	code_prefix_start varchar,
	code_prefix_end varchar,
	company_id integer not null
		constraint account_group_company_id_fkey
			references res_company
				on delete restrict,
	create_uid integer
		constraint account_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_group is 'Account Group';

comment on column account_group.parent_id is 'Parent';

comment on column account_group.parent_path is 'Parent Path';

comment on column account_group.name is 'Name';

comment on column account_group.code_prefix_start is 'Code Prefix Start';

comment on column account_group.code_prefix_end is 'Code Prefix End';

comment on column account_group.company_id is 'Company';

comment on column account_group.create_uid is 'Created by';

comment on column account_group.create_date is 'Created on';

comment on column account_group.write_uid is 'Last Updated by';

comment on column account_group.write_date is 'Last Updated on';

alter table account_group owner to postgres;

alter table account_account
	add constraint account_account_group_id_fkey
		foreign key (group_id) references account_group
			on delete set null;

create index account_group_parent_id_index
	on account_group (parent_id);

create index account_group_parent_path_index
	on account_group (parent_path);

create table account_journal_group
(
	id integer default nextval('account_journal_group_id_seq'::regclass) not null
		constraint account_journal_group_pkey
			primary key,
	name varchar not null,
	company_id integer not null
		constraint account_journal_group_company_id_fkey
			references res_company
				on delete restrict,
	sequence integer,
	create_uid integer
		constraint account_journal_group_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_journal_group_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_journal_group is 'Account Journal Group';

comment on column account_journal_group.name is 'Journal Group';

comment on column account_journal_group.company_id is 'Company';

comment on column account_journal_group.sequence is 'Sequence';

comment on column account_journal_group.create_uid is 'Created by';

comment on column account_journal_group.create_date is 'Created on';

comment on column account_journal_group.write_uid is 'Last Updated by';

comment on column account_journal_group.write_date is 'Last Updated on';

alter table account_journal_group owner to postgres;

create table account_journal_account_journal_group_rel
(
	account_journal_group_id integer not null
		constraint account_journal_account_journal_g_account_journal_group_id_fkey
			references account_journal_group
				on delete cascade,
	account_journal_id integer not null
		constraint account_journal_account_journal_group_r_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_journal_account_journal_group_rel_pkey
		primary key (account_journal_group_id, account_journal_id)
);

comment on table account_journal_account_journal_group_rel is 'RELATION BETWEEN account_journal_group AND account_journal';

alter table account_journal_account_journal_group_rel owner to postgres;

create index account_journal_account_journ_account_journal_id_account_jo_idx
	on account_journal_account_journal_group_rel (account_journal_id, account_journal_group_id);

create table account_move_reversal
(
	id integer default nextval('account_move_reversal_id_seq'::regclass) not null
		constraint account_move_reversal_pkey
			primary key,
	date_mode varchar not null,
	date date,
	reason varchar,
	refund_method varchar not null,
	journal_id integer
		constraint account_move_reversal_journal_id_fkey
			references account_journal
				on delete set null,
	company_id integer not null
		constraint account_move_reversal_company_id_fkey
			references res_company
				on delete cascade,
	create_uid integer
		constraint account_move_reversal_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_move_reversal_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_move_reversal is 'Account Move Reversal';

comment on column account_move_reversal.date_mode is 'Date Mode';

comment on column account_move_reversal.date is 'Reversal date';

comment on column account_move_reversal.reason is 'Reason';

comment on column account_move_reversal.refund_method is 'Credit Method';

comment on column account_move_reversal.journal_id is 'Use Specific Journal';

comment on column account_move_reversal.company_id is 'Company';

comment on column account_move_reversal.create_uid is 'Created by';

comment on column account_move_reversal.create_date is 'Created on';

comment on column account_move_reversal.write_uid is 'Last Updated by';

comment on column account_move_reversal.write_date is 'Last Updated on';

alter table account_move_reversal owner to postgres;

create table account_move_reversal_move
(
	reversal_id integer not null
		constraint account_move_reversal_move_reversal_id_fkey
			references account_move_reversal
				on delete cascade,
	move_id integer not null
		constraint account_move_reversal_move_move_id_fkey
			references account_move
				on delete cascade,
	constraint account_move_reversal_move_pkey
		primary key (reversal_id, move_id)
);

comment on table account_move_reversal_move is 'RELATION BETWEEN account_move_reversal AND account_move';

alter table account_move_reversal_move owner to postgres;

create index account_move_reversal_move_move_id_reversal_id_idx
	on account_move_reversal_move (move_id, reversal_id);

create table account_move_reversal_new_move
(
	reversal_id integer not null
		constraint account_move_reversal_new_move_reversal_id_fkey
			references account_move_reversal
				on delete cascade,
	new_move_id integer not null
		constraint account_move_reversal_new_move_new_move_id_fkey
			references account_move
				on delete cascade,
	constraint account_move_reversal_new_move_pkey
		primary key (reversal_id, new_move_id)
);

comment on table account_move_reversal_new_move is 'RELATION BETWEEN account_move_reversal AND account_move';

alter table account_move_reversal_new_move owner to postgres;

create index account_move_reversal_new_move_new_move_id_reversal_id_idx
	on account_move_reversal_new_move (new_move_id, reversal_id);

create table account_multicurrency_revaluation_wizard
(
	id integer default nextval('account_multicurrency_revaluation_wizard_id_seq'::regclass) not null
		constraint account_multicurrency_revaluation_wizard_pkey
			primary key,
	company_id integer
		constraint account_multicurrency_revaluation_wizard_company_id_fkey
			references res_company
				on delete set null,
	date date not null,
	reversal_date date not null,
	create_uid integer
		constraint account_multicurrency_revaluation_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_multicurrency_revaluation_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_multicurrency_revaluation_wizard is 'Multicurrency Revaluation Wizard';

comment on column account_multicurrency_revaluation_wizard.company_id is 'Company';

comment on column account_multicurrency_revaluation_wizard.date is 'Date';

comment on column account_multicurrency_revaluation_wizard.reversal_date is 'Reversal Date';

comment on column account_multicurrency_revaluation_wizard.create_uid is 'Created by';

comment on column account_multicurrency_revaluation_wizard.create_date is 'Created on';

comment on column account_multicurrency_revaluation_wizard.write_uid is 'Last Updated by';

comment on column account_multicurrency_revaluation_wizard.write_date is 'Last Updated on';

alter table account_multicurrency_revaluation_wizard owner to postgres;

create table account_online_provider
(
	id integer default nextval('account_online_provider_id_seq'::regclass) not null
		constraint account_online_provider_pkey
			primary key,
	name varchar,
	provider_type varchar,
	provider_account_identifier varchar,
	provider_identifier varchar,
	status varchar,
	status_code varchar,
	message varchar,
	action_required boolean,
	last_refresh timestamp,
	company_id integer not null
		constraint account_online_provider_company_id_fkey
			references res_company
				on delete restrict,
	message_main_attachment_id integer
		constraint account_online_provider_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint account_online_provider_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_provider_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	plaid_error_type varchar,
	plaid_item_id varchar,
	ponto_token varchar
);

comment on table account_online_provider is 'Provider for online account synchronization';

comment on column account_online_provider.name is 'Institution';

comment on column account_online_provider.provider_type is 'Provider Type';

comment on column account_online_provider.provider_account_identifier is 'Provider Account Identifier';

comment on column account_online_provider.provider_identifier is 'Provider Identifier';

comment on column account_online_provider.status is 'Synchronization status';

comment on column account_online_provider.status_code is 'Status Code';

comment on column account_online_provider.message is 'Message';

comment on column account_online_provider.action_required is 'Action Required';

comment on column account_online_provider.last_refresh is 'Last Refresh';

comment on column account_online_provider.company_id is 'Company';

comment on column account_online_provider.message_main_attachment_id is 'Main Attachment';

comment on column account_online_provider.create_uid is 'Created by';

comment on column account_online_provider.create_date is 'Created on';

comment on column account_online_provider.write_uid is 'Last Updated by';

comment on column account_online_provider.write_date is 'Last Updated on';

comment on column account_online_provider.plaid_error_type is 'Plaid Error Type';

comment on column account_online_provider.plaid_item_id is 'Plaid Item';

comment on column account_online_provider.ponto_token is 'Ponto Token';

alter table account_online_provider owner to postgres;

create table account_online_journal
(
	id integer default nextval('account_online_journal_id_seq'::regclass) not null
		constraint account_online_journal_pkey
			primary key,
	name varchar not null,
	account_online_provider_id integer
		constraint account_online_journal_account_online_provider_id_fkey
			references account_online_provider
				on delete cascade,
	account_number varchar,
	last_sync date,
	online_identifier varchar,
	balance double precision,
	create_uid integer
		constraint account_online_journal_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_journal_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	ponto_last_synchronization_identifier varchar,
	yodlee_account_status varchar,
	yodlee_status_code integer
);

comment on table account_online_journal is 'Interface for Online Account Journal';

comment on column account_online_journal.name is 'Journal Name';

comment on column account_online_journal.account_online_provider_id is 'Account Online Provider';

comment on column account_online_journal.account_number is 'Account Number';

comment on column account_online_journal.last_sync is 'Last synchronization';

comment on column account_online_journal.online_identifier is 'Online Identifier';

comment on column account_online_journal.balance is 'Balance';

comment on column account_online_journal.create_uid is 'Created by';

comment on column account_online_journal.create_date is 'Created on';

comment on column account_online_journal.write_uid is 'Last Updated by';

comment on column account_online_journal.write_date is 'Last Updated on';

comment on column account_online_journal.ponto_last_synchronization_identifier is 'Ponto Last Synchronization Identifier';

comment on column account_online_journal.yodlee_account_status is 'Yodlee Account Status';

comment on column account_online_journal.yodlee_status_code is 'Yodlee Status Code';

alter table account_online_journal owner to postgres;

alter table account_journal
	add constraint account_journal_account_online_journal_id_fkey
		foreign key (account_online_journal_id) references account_online_journal
			on delete set null;

create table account_online_link_wizard
(
	id integer default nextval('account_online_link_wizard_id_seq'::regclass) not null
		constraint account_online_link_wizard_pkey
			primary key,
	journal_id integer
		constraint account_online_link_wizard_journal_id_fkey
			references account_journal
				on delete set null,
	online_account_id integer
		constraint account_online_link_wizard_online_account_id_fkey
			references account_online_journal
				on delete set null,
	action varchar,
	account_online_wizard_id integer
		constraint account_online_link_wizard_account_online_wizard_id_fkey
			references account_online_wizard
				on delete set null,
	journal_statements_creation varchar,
	create_uid integer
		constraint account_online_link_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_online_link_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_online_link_wizard is 'Link synchronized account to a journal';

comment on column account_online_link_wizard.journal_id is 'Journal';

comment on column account_online_link_wizard.online_account_id is 'Online Account';

comment on column account_online_link_wizard.action is 'Action';

comment on column account_online_link_wizard.account_online_wizard_id is 'Account Online Wizard';

comment on column account_online_link_wizard.journal_statements_creation is 'Synchronization frequency';

comment on column account_online_link_wizard.create_uid is 'Created by';

comment on column account_online_link_wizard.create_date is 'Created on';

comment on column account_online_link_wizard.write_uid is 'Last Updated by';

comment on column account_online_link_wizard.write_date is 'Last Updated on';

alter table account_online_link_wizard owner to postgres;

create index account_online_provider_message_main_attachment_id_index
	on account_online_provider (message_main_attachment_id);

create table account_payment_term
(
	id integer default nextval('account_payment_term_id_seq'::regclass) not null
		constraint account_payment_term_pkey
			primary key,
	name varchar not null,
	active boolean,
	note text,
	company_id integer
		constraint account_payment_term_company_id_fkey
			references res_company
				on delete set null,
	sequence integer not null,
	create_uid integer
		constraint account_payment_term_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_payment_term_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_payment_term is 'Payment Terms';

comment on column account_payment_term.name is 'Payment Terms';

comment on column account_payment_term.active is 'Active';

comment on column account_payment_term.note is 'Description on the Invoice';

comment on column account_payment_term.company_id is 'Company';

comment on column account_payment_term.sequence is 'Sequence';

comment on column account_payment_term.create_uid is 'Created by';

comment on column account_payment_term.create_date is 'Created on';

comment on column account_payment_term.write_uid is 'Last Updated by';

comment on column account_payment_term.write_date is 'Last Updated on';

alter table account_payment_term owner to postgres;

alter table account_move
	add constraint account_move_invoice_payment_term_id_fkey
		foreign key (invoice_payment_term_id) references account_payment_term
			on delete set null;

create table account_payment_term_line
(
	id integer default nextval('account_payment_term_line_id_seq'::regclass) not null
		constraint account_payment_term_line_pkey
			primary key,
	value varchar not null,
	value_amount numeric,
	days integer not null,
	day_of_the_month integer,
	option varchar not null,
	payment_id integer not null
		constraint account_payment_term_line_payment_id_fkey
			references account_payment_term
				on delete cascade,
	sequence integer,
	create_uid integer
		constraint account_payment_term_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_payment_term_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_payment_term_line is 'Payment Terms Line';

comment on column account_payment_term_line.value is 'Type';

comment on column account_payment_term_line.value_amount is 'Value';

comment on column account_payment_term_line.days is 'Number of Days';

comment on column account_payment_term_line.day_of_the_month is 'Day of the month';

comment on column account_payment_term_line.option is 'Options';

comment on column account_payment_term_line.payment_id is 'Payment Terms';

comment on column account_payment_term_line.sequence is 'Sequence';

comment on column account_payment_term_line.create_uid is 'Created by';

comment on column account_payment_term_line.create_date is 'Created on';

comment on column account_payment_term_line.write_uid is 'Last Updated by';

comment on column account_payment_term_line.write_date is 'Last Updated on';

alter table account_payment_term_line owner to postgres;

create index account_payment_term_line_payment_id_index
	on account_payment_term_line (payment_id);

create table account_print_journal
(
	id integer default nextval('account_print_journal_id_seq'::regclass) not null
		constraint account_print_journal_pkey
			primary key,
	sort_selection varchar not null,
	amount_currency boolean,
	company_id integer not null
		constraint account_print_journal_company_id_fkey
			references res_company
				on delete cascade,
	date_from date,
	date_to date,
	target_move varchar not null,
	create_uid integer
		constraint account_print_journal_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_print_journal_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_print_journal is 'Account Print Journal';

comment on column account_print_journal.sort_selection is 'Entries Sorted by';

comment on column account_print_journal.amount_currency is 'With Currency';

comment on column account_print_journal.company_id is 'Company';

comment on column account_print_journal.date_from is 'Start Date';

comment on column account_print_journal.date_to is 'End Date';

comment on column account_print_journal.target_move is 'Target Moves';

comment on column account_print_journal.create_uid is 'Created by';

comment on column account_print_journal.create_date is 'Created on';

comment on column account_print_journal.write_uid is 'Last Updated by';

comment on column account_print_journal.write_date is 'Last Updated on';

alter table account_print_journal owner to postgres;

create table account_journal_account_print_journal_rel
(
	account_print_journal_id integer not null
		constraint account_journal_account_print_jou_account_print_journal_id_fkey
			references account_print_journal
				on delete cascade,
	account_journal_id integer not null
		constraint account_journal_account_print_journal_r_account_journal_id_fkey
			references account_journal
				on delete cascade,
	constraint account_journal_account_print_journal_rel_pkey
		primary key (account_print_journal_id, account_journal_id)
);

comment on table account_journal_account_print_journal_rel is 'RELATION BETWEEN account_print_journal AND account_journal';

alter table account_journal_account_print_journal_rel owner to postgres;

create index account_journal_account_print_account_journal_id_account_pr_idx
	on account_journal_account_print_journal_rel (account_journal_id, account_print_journal_id);

create table account_reconcile_model_line
(
	id integer default nextval('account_reconcile_model_line_id_seq'::regclass) not null
		constraint account_reconcile_model_line_pkey
			primary key,
	model_id integer
		constraint account_reconcile_model_line_model_id_fkey
			references account_reconcile_model
				on delete cascade,
	company_id integer
		constraint account_reconcile_model_line_company_id_fkey
			references res_company
				on delete set null,
	sequence integer not null,
	account_id integer not null
		constraint account_reconcile_model_line_account_id_fkey
			references account_account
				on delete cascade,
	journal_id integer
		constraint account_reconcile_model_line_journal_id_fkey
			references account_journal
				on delete cascade,
	label varchar,
	amount_type varchar not null,
	force_tax_included boolean,
	amount double precision,
	amount_string varchar not null,
	analytic_account_id integer
		constraint account_reconcile_model_line_analytic_account_id_fkey
			references account_analytic_account
				on delete set null,
	create_uid integer
		constraint account_reconcile_model_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_reconcile_model_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_reconcile_model_line is 'Rules for the reconciliation model';

comment on column account_reconcile_model_line.model_id is 'Model';

comment on column account_reconcile_model_line.company_id is 'Company';

comment on column account_reconcile_model_line.sequence is 'Sequence';

comment on column account_reconcile_model_line.account_id is 'Account';

comment on column account_reconcile_model_line.journal_id is 'Journal';

comment on column account_reconcile_model_line.label is 'Journal Item Label';

comment on column account_reconcile_model_line.amount_type is 'Amount Type';

comment on column account_reconcile_model_line.force_tax_included is 'Tax Included in Price';

comment on column account_reconcile_model_line.amount is 'Float Amount';

comment on column account_reconcile_model_line.amount_string is 'Amount';

comment on column account_reconcile_model_line.analytic_account_id is 'Analytic Account';

comment on column account_reconcile_model_line.create_uid is 'Created by';

comment on column account_reconcile_model_line.create_date is 'Created on';

comment on column account_reconcile_model_line.write_uid is 'Last Updated by';

comment on column account_reconcile_model_line.write_date is 'Last Updated on';

alter table account_reconcile_model_line owner to postgres;

create table account_reconcile_model_analytic_tag_rel
(
	account_reconcile_model_line_id integer not null
		constraint account_reconcile_model_analy_account_reconcile_model_line_fkey
			references account_reconcile_model_line
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_reconcile_model_analytic_t_account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_reconcile_model_analytic_tag_rel_pkey
		primary key (account_reconcile_model_line_id, account_analytic_tag_id)
);

comment on table account_reconcile_model_analytic_tag_rel is 'RELATION BETWEEN account_reconcile_model_line AND account_analytic_tag';

alter table account_reconcile_model_analytic_tag_rel owner to postgres;

create index account_reconcile_model_analy_account_analytic_tag_id_accou_idx
	on account_reconcile_model_analytic_tag_rel (account_analytic_tag_id, account_reconcile_model_line_id);

create table account_reconcile_model_line_account_tax_rel
(
	account_reconcile_model_line_id integer not null
		constraint account_reconcile_model_line__account_reconcile_model_line_fkey
			references account_reconcile_model_line
				on delete cascade,
	account_tax_id integer not null
		constraint account_reconcile_model_line_account_tax_re_account_tax_id_fkey
			references account_tax
				on delete restrict,
	constraint account_reconcile_model_line_account_tax_rel_pkey
		primary key (account_reconcile_model_line_id, account_tax_id)
);

comment on table account_reconcile_model_line_account_tax_rel is 'RELATION BETWEEN account_reconcile_model_line AND account_tax';

alter table account_reconcile_model_line_account_tax_rel owner to postgres;

create index account_reconcile_model_line__account_tax_id_account_reconc_idx
	on account_reconcile_model_line_account_tax_rel (account_tax_id, account_reconcile_model_line_id);

create table account_report_manager
(
	id integer default nextval('account_report_manager_id_seq'::regclass) not null
		constraint account_report_manager_pkey
			primary key,
	report_name varchar not null,
	summary varchar,
	company_id integer,
	financial_report_id integer
		constraint account_report_manager_financial_report_id_fkey
			references account_financial_html_report
				on delete set null,
	create_uid integer
		constraint account_report_manager_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_report_manager_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	partner_id integer
		constraint account_report_manager_partner_id_fkey
			references res_partner
				on delete set null
);

comment on table account_report_manager is 'Manage Summary and Footnotes of Reports';

comment on column account_report_manager.report_name is 'Report Name';

comment on column account_report_manager.summary is 'Summary';

comment on column account_report_manager.company_id is 'Company';

comment on column account_report_manager.financial_report_id is 'Financial Report';

comment on column account_report_manager.create_uid is 'Created by';

comment on column account_report_manager.create_date is 'Created on';

comment on column account_report_manager.write_uid is 'Last Updated by';

comment on column account_report_manager.write_date is 'Last Updated on';

comment on column account_report_manager.partner_id is 'Partner';

alter table account_report_manager owner to postgres;

create table account_report_footnote
(
	id integer default nextval('account_report_footnote_id_seq'::regclass) not null
		constraint account_report_footnote_pkey
			primary key,
	text varchar,
	line varchar,
	manager_id integer
		constraint account_report_footnote_manager_id_fkey
			references account_report_manager
				on delete set null,
	create_uid integer
		constraint account_report_footnote_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_report_footnote_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_report_footnote is 'Account Report Footnote';

comment on column account_report_footnote.text is 'Text';

comment on column account_report_footnote.line is 'Line';

comment on column account_report_footnote.manager_id is 'Manager';

comment on column account_report_footnote.create_uid is 'Created by';

comment on column account_report_footnote.create_date is 'Created on';

comment on column account_report_footnote.write_uid is 'Last Updated by';

comment on column account_report_footnote.write_date is 'Last Updated on';

alter table account_report_footnote owner to postgres;

create index account_report_footnote_line_index
	on account_report_footnote (line);

create table base_document_layout
(
	id integer default nextval('base_document_layout_id_seq'::regclass) not null
		constraint base_document_layout_pkey
			primary key,
	company_id integer not null
		constraint base_document_layout_company_id_fkey
			references res_company
				on delete cascade,
	report_layout_id integer
		constraint base_document_layout_report_layout_id_fkey
			references report_layout
				on delete set null,
	create_uid integer
		constraint base_document_layout_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint base_document_layout_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table base_document_layout is 'Company Document Layout';

comment on column base_document_layout.company_id is 'Company';

comment on column base_document_layout.report_layout_id is 'Report Layout';

comment on column base_document_layout.create_uid is 'Created by';

comment on column base_document_layout.create_date is 'Created on';

comment on column base_document_layout.write_uid is 'Last Updated by';

comment on column base_document_layout.write_date is 'Last Updated on';

alter table base_document_layout owner to postgres;

create table iap_account_res_company_rel
(
	iap_account_id integer not null
		constraint iap_account_res_company_rel_iap_account_id_fkey
			references iap_account
				on delete cascade,
	res_company_id integer not null
		constraint iap_account_res_company_rel_res_company_id_fkey
			references res_company
				on delete cascade,
	constraint iap_account_res_company_rel_pkey
		primary key (iap_account_id, res_company_id)
);

comment on table iap_account_res_company_rel is 'RELATION BETWEEN iap_account AND res_company';

alter table iap_account_res_company_rel owner to postgres;

create index iap_account_res_company_rel_res_company_id_iap_account_id_idx
	on iap_account_res_company_rel (res_company_id, iap_account_id);

create table payment_token
(
	id integer default nextval('payment_token_id_seq'::regclass) not null
		constraint payment_token_pkey
			primary key,
	name varchar,
	partner_id integer not null
		constraint payment_token_partner_id_fkey
			references res_partner
				on delete restrict,
	acquirer_id integer not null
		constraint payment_token_acquirer_id_fkey
			references payment_acquirer
				on delete restrict,
	company_id integer
		constraint payment_token_company_id_fkey
			references res_company
				on delete set null,
	acquirer_ref varchar not null,
	active boolean,
	verified boolean,
	create_uid integer
		constraint payment_token_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_token_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table payment_token is 'Payment Token';

comment on column payment_token.name is 'Name';

comment on column payment_token.partner_id is 'Partner';

comment on column payment_token.acquirer_id is 'Acquirer Account';

comment on column payment_token.company_id is 'Company';

comment on column payment_token.acquirer_ref is 'Acquirer Ref.';

comment on column payment_token.active is 'Active';

comment on column payment_token.verified is 'Verified';

comment on column payment_token.create_uid is 'Created by';

comment on column payment_token.create_date is 'Created on';

comment on column payment_token.write_uid is 'Last Updated by';

comment on column payment_token.write_date is 'Last Updated on';

alter table payment_token owner to postgres;

create table account_payment
(
	id integer default nextval('account_payment_id_seq'::regclass) not null
		constraint account_payment_pkey
			primary key,
	move_id integer not null
		constraint account_payment_move_id_fkey
			references account_move
				on delete cascade,
	is_reconciled boolean,
	is_matched boolean,
	partner_bank_id integer
		constraint account_payment_partner_bank_id_fkey
			references res_partner_bank
				on delete set null,
	is_internal_transfer boolean,
	payment_method_id integer
		constraint account_payment_payment_method_id_fkey
			references account_payment_method
				on delete set null,
	amount numeric,
	payment_type varchar not null,
	partner_type varchar not null,
	payment_reference varchar,
	currency_id integer
		constraint account_payment_currency_id_fkey
			references res_currency
				on delete set null,
	partner_id integer
		constraint account_payment_partner_id_fkey
			references res_partner
				on delete restrict,
	destination_account_id integer
		constraint account_payment_destination_account_id_fkey
			references account_account
				on delete set null,
	message_main_attachment_id integer
		constraint account_payment_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint account_payment_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_payment_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	payment_transaction_id integer,
	payment_token_id integer
		constraint account_payment_payment_token_id_fkey
			references payment_token
				on delete set null
);

comment on table account_payment is 'Payments';

comment on column account_payment.move_id is 'Journal Entry';

comment on column account_payment.is_reconciled is 'Is Reconciled';

comment on column account_payment.is_matched is 'Is Matched With a Bank Statement';

comment on column account_payment.partner_bank_id is 'Recipient Bank Account';

comment on column account_payment.is_internal_transfer is 'Is Internal Transfer';

comment on column account_payment.payment_method_id is 'Payment Method';

comment on column account_payment.amount is 'Amount';

comment on column account_payment.payment_type is 'Payment Type';

comment on column account_payment.partner_type is 'Partner Type';

comment on column account_payment.payment_reference is 'Payment Reference';

comment on column account_payment.currency_id is 'Currency';

comment on column account_payment.partner_id is 'Customer/Vendor';

comment on column account_payment.destination_account_id is 'Destination Account';

comment on column account_payment.message_main_attachment_id is 'Main Attachment';

comment on column account_payment.create_uid is 'Created by';

comment on column account_payment.create_date is 'Created on';

comment on column account_payment.write_uid is 'Last Updated by';

comment on column account_payment.write_date is 'Last Updated on';

comment on column account_payment.payment_transaction_id is 'Payment Transaction';

comment on column account_payment.payment_token_id is 'Saved payment token';

alter table account_payment owner to postgres;

alter table account_move
	add constraint account_move_payment_id_fkey
		foreign key (payment_id) references account_payment
			on delete set null;

create index account_payment_message_main_attachment_id_index
	on account_payment (message_main_attachment_id);

create table account_payment_account_bank_statement_line_rel
(
	account_bank_statement_line_id integer not null
		constraint account_payment_account_bank__account_bank_statement_line__fkey
			references account_bank_statement_line
				on delete cascade,
	account_payment_id integer not null
		constraint account_payment_account_bank_statement__account_payment_id_fkey
			references account_payment
				on delete cascade,
	constraint account_payment_account_bank_statement_line_rel_pkey
		primary key (account_bank_statement_line_id, account_payment_id)
);

comment on table account_payment_account_bank_statement_line_rel is 'RELATION BETWEEN account_bank_statement_line AND account_payment';

alter table account_payment_account_bank_statement_line_rel owner to postgres;

create index account_payment_account_bank__account_payment_id_account_ba_idx
	on account_payment_account_bank_statement_line_rel (account_payment_id, account_bank_statement_line_id);

create table account_payment_register
(
	id integer default nextval('account_payment_register_id_seq'::regclass) not null
		constraint account_payment_register_pkey
			primary key,
	payment_date date not null,
	amount numeric,
	communication varchar,
	group_payment boolean,
	currency_id integer
		constraint account_payment_register_currency_id_fkey
			references res_currency
				on delete set null,
	journal_id integer
		constraint account_payment_register_journal_id_fkey
			references account_journal
				on delete set null,
	partner_bank_id integer
		constraint account_payment_register_partner_bank_id_fkey
			references res_partner_bank
				on delete set null,
	payment_type varchar,
	partner_type varchar,
	source_amount numeric,
	source_amount_currency numeric,
	source_currency_id integer
		constraint account_payment_register_source_currency_id_fkey
			references res_currency
				on delete set null,
	can_edit_wizard boolean,
	can_group_payments boolean,
	company_id integer
		constraint account_payment_register_company_id_fkey
			references res_company
				on delete set null,
	partner_id integer
		constraint account_payment_register_partner_id_fkey
			references res_partner
				on delete restrict,
	payment_method_id integer
		constraint account_payment_register_payment_method_id_fkey
			references account_payment_method
				on delete set null,
	payment_difference_handling varchar,
	writeoff_account_id integer
		constraint account_payment_register_writeoff_account_id_fkey
			references account_account
				on delete set null,
	writeoff_label varchar,
	create_uid integer
		constraint account_payment_register_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_payment_register_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	payment_token_id integer
		constraint account_payment_register_payment_token_id_fkey
			references payment_token
				on delete set null
);

comment on table account_payment_register is 'Register Payment';

comment on column account_payment_register.payment_date is 'Payment Date';

comment on column account_payment_register.amount is 'Amount';

comment on column account_payment_register.communication is 'Memo';

comment on column account_payment_register.group_payment is 'Group Payments';

comment on column account_payment_register.currency_id is 'Currency';

comment on column account_payment_register.journal_id is 'Journal';

comment on column account_payment_register.partner_bank_id is 'Recipient Bank Account';

comment on column account_payment_register.payment_type is 'Payment Type';

comment on column account_payment_register.partner_type is 'Partner Type';

comment on column account_payment_register.source_amount is 'Amount to Pay (company currency)';

comment on column account_payment_register.source_amount_currency is 'Amount to Pay (foreign currency)';

comment on column account_payment_register.source_currency_id is 'Source Currency';

comment on column account_payment_register.can_edit_wizard is 'Can Edit Wizard';

comment on column account_payment_register.can_group_payments is 'Can Group Payments';

comment on column account_payment_register.company_id is 'Company';

comment on column account_payment_register.partner_id is 'Customer/Vendor';

comment on column account_payment_register.payment_method_id is 'Payment Method';

comment on column account_payment_register.payment_difference_handling is 'Payment Difference Handling';

comment on column account_payment_register.writeoff_account_id is 'Difference Account';

comment on column account_payment_register.writeoff_label is 'Journal Item Label';

comment on column account_payment_register.create_uid is 'Created by';

comment on column account_payment_register.create_date is 'Created on';

comment on column account_payment_register.write_uid is 'Last Updated by';

comment on column account_payment_register.write_date is 'Last Updated on';

comment on column account_payment_register.payment_token_id is 'Saved payment token';

alter table account_payment_register owner to postgres;

create index payment_token_company_id_index
	on payment_token (company_id);

create table payment_transaction
(
	id integer default nextval('payment_transaction_id_seq'::regclass) not null
		constraint payment_transaction_pkey
			primary key,
	date timestamp,
	acquirer_id integer not null
		constraint payment_transaction_acquirer_id_fkey
			references payment_acquirer
				on delete restrict,
	type varchar not null,
	state varchar not null,
	state_message text,
	amount numeric not null,
	fees numeric,
	currency_id integer not null
		constraint payment_transaction_currency_id_fkey
			references res_currency
				on delete restrict,
	reference varchar not null
		constraint payment_transaction_reference_uniq
			unique,
	acquirer_reference varchar,
	partner_id integer
		constraint payment_transaction_partner_id_fkey
			references res_partner
				on delete set null,
	partner_name varchar,
	partner_lang varchar,
	partner_email varchar,
	partner_zip varchar,
	partner_address varchar,
	partner_city varchar,
	partner_country_id integer not null
		constraint payment_transaction_partner_country_id_fkey
			references res_country
				on delete restrict,
	partner_phone varchar,
	html_3ds varchar,
	callback_model_id integer
		constraint payment_transaction_callback_model_id_fkey
			references ir_model
				on delete set null,
	callback_res_id integer,
	callback_method varchar,
	callback_hash varchar,
	return_url varchar,
	is_processed boolean,
	payment_token_id integer
		constraint payment_transaction_payment_token_id_fkey
			references payment_token
				on delete set null,
	payment_id integer
		constraint payment_transaction_payment_id_fkey
			references account_payment
				on delete set null,
	create_uid integer
		constraint payment_transaction_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint payment_transaction_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table payment_transaction is 'Payment Transaction';

comment on column payment_transaction.date is 'Validation Date';

comment on column payment_transaction.acquirer_id is 'Acquirer';

comment on column payment_transaction.type is 'Type';

comment on column payment_transaction.state is 'Status';

comment on column payment_transaction.state_message is 'Message';

comment on column payment_transaction.amount is 'Amount';

comment on column payment_transaction.fees is 'Fees';

comment on column payment_transaction.currency_id is 'Currency';

comment on column payment_transaction.reference is 'Reference';

comment on column payment_transaction.acquirer_reference is 'Acquirer Reference';

comment on column payment_transaction.partner_id is 'Customer';

comment on column payment_transaction.partner_name is 'Partner Name';

comment on column payment_transaction.partner_lang is 'Language';

comment on column payment_transaction.partner_email is 'Email';

comment on column payment_transaction.partner_zip is 'Zip';

comment on column payment_transaction.partner_address is 'Address';

comment on column payment_transaction.partner_city is 'City';

comment on column payment_transaction.partner_country_id is 'Country';

comment on column payment_transaction.partner_phone is 'Phone';

comment on column payment_transaction.html_3ds is '3D Secure HTML';

comment on column payment_transaction.callback_model_id is 'Callback Document Model';

comment on column payment_transaction.callback_res_id is 'Callback Document ID';

comment on column payment_transaction.callback_method is 'Callback Method';

comment on column payment_transaction.callback_hash is 'Callback Hash';

comment on column payment_transaction.return_url is 'Return URL after payment';

comment on column payment_transaction.is_processed is 'Has the payment been post processed';

comment on column payment_transaction.payment_token_id is 'Payment Token';

comment on column payment_transaction.payment_id is 'Payment';

comment on column payment_transaction.create_uid is 'Created by';

comment on column payment_transaction.create_date is 'Created on';

comment on column payment_transaction.write_uid is 'Last Updated by';

comment on column payment_transaction.write_date is 'Last Updated on';

alter table payment_transaction owner to postgres;

create table account_invoice_transaction_rel
(
	transaction_id integer not null
		constraint account_invoice_transaction_rel_transaction_id_fkey
			references payment_transaction
				on delete cascade,
	invoice_id integer not null
		constraint account_invoice_transaction_rel_invoice_id_fkey
			references account_move
				on delete cascade,
	constraint account_invoice_transaction_rel_pkey
		primary key (transaction_id, invoice_id)
);

comment on table account_invoice_transaction_rel is 'RELATION BETWEEN payment_transaction AND account_move';

alter table account_invoice_transaction_rel owner to postgres;

create index account_invoice_transaction_rel_invoice_id_transaction_id_idx
	on account_invoice_transaction_rel (invoice_id, transaction_id);

alter table account_payment
	add constraint account_payment_payment_transaction_id_fkey
		foreign key (payment_transaction_id) references payment_transaction
			on delete set null;

create index payment_transaction_reference_index
	on payment_transaction (reference);

create table product_pricelist
(
	id integer default nextval('product_pricelist_id_seq'::regclass) not null
		constraint product_pricelist_pkey
			primary key,
	name varchar not null,
	active boolean,
	currency_id integer not null
		constraint product_pricelist_currency_id_fkey
			references res_currency
				on delete restrict,
	company_id integer
		constraint product_pricelist_company_id_fkey
			references res_company
				on delete set null,
	sequence integer,
	discount_policy varchar not null,
	create_uid integer
		constraint product_pricelist_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_pricelist_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_pricelist is 'Pricelist';

comment on column product_pricelist.name is 'Pricelist Name';

comment on column product_pricelist.active is 'Active';

comment on column product_pricelist.currency_id is 'Currency';

comment on column product_pricelist.company_id is 'Company';

comment on column product_pricelist.sequence is 'Sequence';

comment on column product_pricelist.discount_policy is 'Discount Policy';

comment on column product_pricelist.create_uid is 'Created by';

comment on column product_pricelist.create_date is 'Created on';

comment on column product_pricelist.write_uid is 'Last Updated by';

comment on column product_pricelist.write_date is 'Last Updated on';

alter table product_pricelist owner to postgres;

create index res_company_parent_id_index
	on res_company (parent_id);

create table res_country_group_pricelist_rel
(
	pricelist_id integer not null
		constraint res_country_group_pricelist_rel_pricelist_id_fkey
			references product_pricelist
				on delete cascade,
	res_country_group_id integer not null
		constraint res_country_group_pricelist_rel_res_country_group_id_fkey
			references res_country_group
				on delete cascade,
	constraint res_country_group_pricelist_rel_pkey
		primary key (pricelist_id, res_country_group_id)
);

comment on table res_country_group_pricelist_rel is 'RELATION BETWEEN product_pricelist AND res_country_group';

alter table res_country_group_pricelist_rel owner to postgres;

create index res_country_group_pricelist_r_res_country_group_id_pricelis_idx
	on res_country_group_pricelist_rel (res_country_group_id, pricelist_id);

create table res_currency_rate
(
	id integer default nextval('res_currency_rate_id_seq'::regclass) not null
		constraint res_currency_rate_pkey
			primary key,
	name date not null,
	rate numeric,
	currency_id integer not null
		constraint res_currency_rate_currency_id_fkey
			references res_currency
				on delete cascade,
	company_id integer
		constraint res_currency_rate_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint res_currency_rate_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_currency_rate_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint res_currency_rate_unique_name_per_day
		unique (name, currency_id, company_id)
);

comment on table res_currency_rate is 'Currency Rate';

comment on column res_currency_rate.name is 'Date';

comment on column res_currency_rate.rate is 'Rate';

comment on column res_currency_rate.currency_id is 'Currency';

comment on column res_currency_rate.company_id is 'Company';

comment on column res_currency_rate.create_uid is 'Created by';

comment on column res_currency_rate.create_date is 'Created on';

comment on column res_currency_rate.write_uid is 'Last Updated by';

comment on column res_currency_rate.write_date is 'Last Updated on';

alter table res_currency_rate owner to postgres;

create index res_currency_rate_name_index
	on res_currency_rate (name);

create table resource_resource
(
	id integer default nextval('resource_resource_id_seq'::regclass) not null
		constraint resource_resource_pkey
			primary key,
	name varchar not null,
	active boolean,
	company_id integer
		constraint resource_resource_company_id_fkey
			references res_company
				on delete set null,
	resource_type varchar not null,
	user_id integer
		constraint resource_resource_user_id_fkey
			references res_users
				on delete set null,
	time_efficiency double precision not null,
	calendar_id integer not null
		constraint resource_resource_calendar_id_fkey
			references resource_calendar
				on delete restrict,
	tz varchar not null,
	create_uid integer
		constraint resource_resource_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint resource_resource_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table resource_resource is 'Resources';

comment on column resource_resource.name is 'Name';

comment on column resource_resource.active is 'Active';

comment on column resource_resource.company_id is 'Company';

comment on column resource_resource.resource_type is 'Resource Type';

comment on column resource_resource.user_id is 'User';

comment on column resource_resource.time_efficiency is 'Efficiency Factor';

comment on column resource_resource.calendar_id is 'Working Time';

comment on column resource_resource.tz is 'Timezone';

comment on column resource_resource.create_uid is 'Created by';

comment on column resource_resource.create_date is 'Created on';

comment on column resource_resource.write_uid is 'Last Updated by';

comment on column resource_resource.write_date is 'Last Updated on';

alter table resource_resource owner to postgres;

create table resource_calendar_attendance
(
	id integer default nextval('resource_calendar_attendance_id_seq'::regclass) not null
		constraint resource_calendar_attendance_pkey
			primary key,
	name varchar not null,
	dayofweek varchar not null,
	date_from date,
	date_to date,
	hour_from double precision not null,
	hour_to double precision not null,
	calendar_id integer not null
		constraint resource_calendar_attendance_calendar_id_fkey
			references resource_calendar
				on delete cascade,
	day_period varchar not null,
	resource_id integer
		constraint resource_calendar_attendance_resource_id_fkey
			references resource_resource
				on delete set null,
	week_type varchar,
	display_type varchar,
	sequence integer,
	create_uid integer
		constraint resource_calendar_attendance_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint resource_calendar_attendance_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table resource_calendar_attendance is 'Work Detail';

comment on column resource_calendar_attendance.name is 'Name';

comment on column resource_calendar_attendance.dayofweek is 'Day of Week';

comment on column resource_calendar_attendance.date_from is 'Starting Date';

comment on column resource_calendar_attendance.date_to is 'End Date';

comment on column resource_calendar_attendance.hour_from is 'Work from';

comment on column resource_calendar_attendance.hour_to is 'Work to';

comment on column resource_calendar_attendance.calendar_id is 'Resource''s Calendar';

comment on column resource_calendar_attendance.day_period is 'Day Period';

comment on column resource_calendar_attendance.resource_id is 'Resource';

comment on column resource_calendar_attendance.week_type is 'Week Even/Odd';

comment on column resource_calendar_attendance.display_type is 'Display Type';

comment on column resource_calendar_attendance.sequence is 'Sequence';

comment on column resource_calendar_attendance.create_uid is 'Created by';

comment on column resource_calendar_attendance.create_date is 'Created on';

comment on column resource_calendar_attendance.write_uid is 'Last Updated by';

comment on column resource_calendar_attendance.write_date is 'Last Updated on';

alter table resource_calendar_attendance owner to postgres;

create index resource_calendar_attendance_dayofweek_index
	on resource_calendar_attendance (dayofweek);

create index resource_calendar_attendance_hour_from_index
	on resource_calendar_attendance (hour_from);

create table resource_calendar_leaves
(
	id integer default nextval('resource_calendar_leaves_id_seq'::regclass) not null
		constraint resource_calendar_leaves_pkey
			primary key,
	name varchar,
	company_id integer
		constraint resource_calendar_leaves_company_id_fkey
			references res_company
				on delete set null,
	calendar_id integer
		constraint resource_calendar_leaves_calendar_id_fkey
			references resource_calendar
				on delete set null,
	date_from timestamp not null,
	date_to timestamp not null,
	resource_id integer
		constraint resource_calendar_leaves_resource_id_fkey
			references resource_resource
				on delete set null,
	time_type varchar,
	create_uid integer
		constraint resource_calendar_leaves_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint resource_calendar_leaves_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table resource_calendar_leaves is 'Resource Time Off Detail';

comment on column resource_calendar_leaves.name is 'Reason';

comment on column resource_calendar_leaves.company_id is 'Company';

comment on column resource_calendar_leaves.calendar_id is 'Working Hours';

comment on column resource_calendar_leaves.date_from is 'Start Date';

comment on column resource_calendar_leaves.date_to is 'End Date';

comment on column resource_calendar_leaves.resource_id is 'Resource';

comment on column resource_calendar_leaves.time_type is 'Time Type';

comment on column resource_calendar_leaves.create_uid is 'Created by';

comment on column resource_calendar_leaves.create_date is 'Created on';

comment on column resource_calendar_leaves.write_uid is 'Last Updated by';

comment on column resource_calendar_leaves.write_date is 'Last Updated on';

alter table resource_calendar_leaves owner to postgres;

create index resource_calendar_leaves_calendar_id_index
	on resource_calendar_leaves (calendar_id);

create index resource_calendar_leaves_resource_id_index
	on resource_calendar_leaves (resource_id);

create table resource_test
(
	id integer default nextval('resource_test_id_seq'::regclass) not null
		constraint resource_test_pkey
			primary key,
	name varchar,
	resource_id integer not null
		constraint resource_test_resource_id_fkey
			references resource_resource
				on delete restrict,
	company_id integer
		constraint resource_test_company_id_fkey
			references res_company
				on delete set null,
	resource_calendar_id integer
		constraint resource_test_resource_calendar_id_fkey
			references resource_calendar
				on delete set null,
	create_uid integer
		constraint resource_test_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint resource_test_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table resource_test is 'Test Resource Model';

comment on column resource_test.name is 'Name';

comment on column resource_test.resource_id is 'Resource';

comment on column resource_test.company_id is 'Company';

comment on column resource_test.resource_calendar_id is 'Working Hours';

comment on column resource_test.create_uid is 'Created by';

comment on column resource_test.create_date is 'Created on';

comment on column resource_test.write_uid is 'Last Updated by';

comment on column resource_test.write_date is 'Last Updated on';

alter table resource_test owner to postgres;

create index resource_test_company_id_index
	on resource_test (company_id);

create index resource_test_resource_calendar_id_index
	on resource_test (resource_calendar_id);

create index resource_test_resource_id_index
	on resource_test (resource_id);

create table sale_order_template
(
	id integer default nextval('sale_order_template_id_seq'::regclass) not null
		constraint sale_order_template_pkey
			primary key,
	name varchar not null,
	note text,
	number_of_days integer,
	require_signature boolean,
	require_payment boolean,
	mail_template_id integer
		constraint sale_order_template_mail_template_id_fkey
			references mail_template
				on delete set null,
	active boolean,
	company_id integer
		constraint sale_order_template_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint sale_order_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_order_template is 'Quotation Template';

comment on column sale_order_template.name is 'Quotation Template';

comment on column sale_order_template.note is 'Terms and conditions';

comment on column sale_order_template.number_of_days is 'Quotation Duration';

comment on column sale_order_template.require_signature is 'Online Signature';

comment on column sale_order_template.require_payment is 'Online Payment';

comment on column sale_order_template.mail_template_id is 'Confirmation Mail';

comment on column sale_order_template.active is 'Active';

comment on column sale_order_template.company_id is 'Company';

comment on column sale_order_template.create_uid is 'Created by';

comment on column sale_order_template.create_date is 'Created on';

comment on column sale_order_template.write_uid is 'Last Updated by';

comment on column sale_order_template.write_date is 'Last Updated on';

alter table sale_order_template owner to postgres;

alter table res_company
	add constraint res_company_sale_order_template_id_fkey
		foreign key (sale_order_template_id) references sale_order_template
			on delete set null;

create table snailmail_letter
(
	id integer default nextval('snailmail_letter_id_seq'::regclass) not null
		constraint snailmail_letter_pkey
			primary key,
	user_id integer
		constraint snailmail_letter_user_id_fkey
			references res_users
				on delete set null,
	model varchar not null,
	res_id integer not null,
	partner_id integer not null
		constraint snailmail_letter_partner_id_fkey
			references res_partner
				on delete restrict,
	company_id integer not null
		constraint snailmail_letter_company_id_fkey
			references res_company
				on delete restrict,
	report_template integer
		constraint snailmail_letter_report_template_fkey
			references ir_act_report_xml
				on delete set null,
	attachment_id integer
		constraint snailmail_letter_attachment_id_fkey
			references ir_attachment
				on delete cascade,
	color boolean,
	cover boolean,
	duplex boolean,
	state varchar not null,
	error_code varchar,
	info_msg varchar,
	message_id integer
		constraint snailmail_letter_message_id_fkey
			references mail_message
				on delete set null,
	street varchar,
	street2 varchar,
	zip varchar,
	city varchar,
	state_id integer
		constraint snailmail_letter_state_id_fkey
			references res_country_state
				on delete set null,
	country_id integer
		constraint snailmail_letter_country_id_fkey
			references res_country
				on delete set null,
	create_uid integer
		constraint snailmail_letter_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_letter_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_letter is 'Snailmail Letter';

comment on column snailmail_letter.user_id is 'Sent by';

comment on column snailmail_letter.model is 'Model';

comment on column snailmail_letter.res_id is 'Document ID';

comment on column snailmail_letter.partner_id is 'Recipient';

comment on column snailmail_letter.company_id is 'Company';

comment on column snailmail_letter.report_template is 'Optional report to print and attach';

comment on column snailmail_letter.attachment_id is 'Attachment';

comment on column snailmail_letter.color is 'Color';

comment on column snailmail_letter.cover is 'Cover Page';

comment on column snailmail_letter.duplex is 'Both side';

comment on column snailmail_letter.state is 'Status';

comment on column snailmail_letter.error_code is 'Error';

comment on column snailmail_letter.info_msg is 'Information';

comment on column snailmail_letter.message_id is 'Snailmail Status Message';

comment on column snailmail_letter.street is 'Street';

comment on column snailmail_letter.street2 is 'Street2';

comment on column snailmail_letter.zip is 'Zip';

comment on column snailmail_letter.city is 'City';

comment on column snailmail_letter.state_id is 'State';

comment on column snailmail_letter.country_id is 'Country';

comment on column snailmail_letter.create_uid is 'Created by';

comment on column snailmail_letter.create_date is 'Created on';

comment on column snailmail_letter.write_uid is 'Last Updated by';

comment on column snailmail_letter.write_date is 'Last Updated on';

alter table snailmail_letter owner to postgres;

create table mail_message_res_partner_needaction_rel
(
	id integer default nextval('mail_message_res_partner_needaction_rel_id_seq'::regclass) not null
		constraint mail_message_res_partner_needaction_rel_pkey
			primary key,
	mail_message_id integer not null
		constraint mail_message_res_partner_needaction_rel_mail_message_id_fkey
			references mail_message
				on delete cascade,
	mail_id integer
		constraint mail_message_res_partner_needaction_rel_mail_id_fkey
			references mail_mail
				on delete set null,
	res_partner_id integer
		constraint mail_message_res_partner_needaction_rel_res_partner_id_fkey
			references res_partner
				on delete cascade,
	notification_type varchar not null,
	notification_status varchar,
	is_read boolean,
	read_date timestamp,
	failure_type varchar,
	failure_reason text,
	sms_id integer
		constraint mail_message_res_partner_needaction_rel_sms_id_fkey
			references sms_sms
				on delete set null,
	sms_number varchar,
	letter_id integer
		constraint mail_message_res_partner_needaction_rel_letter_id_fkey
			references snailmail_letter
				on delete cascade
);

comment on table mail_message_res_partner_needaction_rel is 'Message Notifications';

comment on column mail_message_res_partner_needaction_rel.mail_message_id is 'Message';

comment on column mail_message_res_partner_needaction_rel.mail_id is 'Mail';

comment on column mail_message_res_partner_needaction_rel.res_partner_id is 'Recipient';

comment on column mail_message_res_partner_needaction_rel.notification_type is 'Notification Type';

comment on column mail_message_res_partner_needaction_rel.notification_status is 'Status';

comment on column mail_message_res_partner_needaction_rel.is_read is 'Is Read';

comment on column mail_message_res_partner_needaction_rel.read_date is 'Read Date';

comment on column mail_message_res_partner_needaction_rel.failure_type is 'Failure type';

comment on column mail_message_res_partner_needaction_rel.failure_reason is 'Failure reason';

comment on column mail_message_res_partner_needaction_rel.sms_id is 'SMS';

comment on column mail_message_res_partner_needaction_rel.sms_number is 'SMS Number';

comment on column mail_message_res_partner_needaction_rel.letter_id is 'Snailmail Letter';

alter table mail_message_res_partner_needaction_rel owner to postgres;

create index mail_message_res_partner_needaction_rel_is_read_index
	on mail_message_res_partner_needaction_rel (is_read);

create index mail_message_res_partner_needaction_rel_letter_id_index
	on mail_message_res_partner_needaction_rel (letter_id);

create index mail_message_res_partner_needaction_rel_mail_id_index
	on mail_message_res_partner_needaction_rel (mail_id);

create index mail_message_res_partner_needaction_rel_mail_message_id_index
	on mail_message_res_partner_needaction_rel (mail_message_id);

create index mail_message_res_partner_needaction_rel_notification_status_ind
	on mail_message_res_partner_needaction_rel (notification_status);

create index mail_message_res_partner_needaction_rel_notification_type_index
	on mail_message_res_partner_needaction_rel (notification_type);

create index mail_message_res_partner_needaction_rel_res_partner_id_index
	on mail_message_res_partner_needaction_rel (res_partner_id);

create index mail_message_res_partner_needaction_rel_sms_id_index
	on mail_message_res_partner_needaction_rel (sms_id);

create index mail_notification_res_partner_id_is_read_notification_status_ma
	on mail_message_res_partner_needaction_rel (res_partner_id, is_read, notification_status, mail_message_id);

create table mail_message_res_partner_needaction_rel_mail_resend_message_rel
(
	mail_resend_message_id integer not null
		constraint mail_message_res_partner_needaction_mail_resend_message_id_fkey
			references mail_resend_message
				on delete cascade,
	mail_message_res_partner_needaction_rel_id integer not null
		constraint mail_message_res_partner_need_mail_message_res_partner_nee_fkey
			references mail_message_res_partner_needaction_rel
				on delete cascade,
	constraint mail_message_res_partner_needaction_rel_mail_resend_messag_pkey
		primary key (mail_resend_message_id, mail_message_res_partner_needaction_rel_id)
);

comment on table mail_message_res_partner_needaction_rel_mail_resend_message_rel is 'RELATION BETWEEN mail_resend_message AND mail_message_res_partner_needaction_rel';

alter table mail_message_res_partner_needaction_rel_mail_resend_message_rel owner to postgres;

create index mail_message_res_partner_need_mail_message_res_partner_need_idx
	on mail_message_res_partner_needaction_rel_mail_resend_message_rel (mail_message_res_partner_needaction_rel_id, mail_resend_message_id);

create table sms_resend_recipient
(
	id integer default nextval('sms_resend_recipient_id_seq'::regclass) not null
		constraint sms_resend_recipient_pkey
			primary key,
	sms_resend_id integer not null
		constraint sms_resend_recipient_sms_resend_id_fkey
			references sms_resend
				on delete restrict,
	notification_id integer not null
		constraint sms_resend_recipient_notification_id_fkey
			references mail_message_res_partner_needaction_rel
				on delete cascade,
	resend boolean,
	partner_name varchar,
	sms_number varchar,
	create_uid integer
		constraint sms_resend_recipient_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sms_resend_recipient_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sms_resend_recipient is 'Resend Notification';

comment on column sms_resend_recipient.sms_resend_id is 'Sms Resend';

comment on column sms_resend_recipient.notification_id is 'Notification';

comment on column sms_resend_recipient.resend is 'Resend';

comment on column sms_resend_recipient.partner_name is 'Recipient';

comment on column sms_resend_recipient.sms_number is 'Number';

comment on column sms_resend_recipient.create_uid is 'Created by';

comment on column sms_resend_recipient.create_date is 'Created on';

comment on column sms_resend_recipient.write_uid is 'Last Updated by';

comment on column sms_resend_recipient.write_date is 'Last Updated on';

alter table sms_resend_recipient owner to postgres;

create table snailmail_letter_missing_required_fields
(
	id integer default nextval('snailmail_letter_missing_required_fields_id_seq'::regclass) not null
		constraint snailmail_letter_missing_required_fields_pkey
			primary key,
	partner_id integer
		constraint snailmail_letter_missing_required_fields_partner_id_fkey
			references res_partner
				on delete set null,
	letter_id integer
		constraint snailmail_letter_missing_required_fields_letter_id_fkey
			references snailmail_letter
				on delete set null,
	street varchar,
	street2 varchar,
	zip varchar,
	city varchar,
	state_id integer
		constraint snailmail_letter_missing_required_fields_state_id_fkey
			references res_country_state
				on delete set null,
	country_id integer
		constraint snailmail_letter_missing_required_fields_country_id_fkey
			references res_country
				on delete set null,
	create_uid integer
		constraint snailmail_letter_missing_required_fields_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint snailmail_letter_missing_required_fields_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table snailmail_letter_missing_required_fields is 'Update address of partner';

comment on column snailmail_letter_missing_required_fields.partner_id is 'Partner';

comment on column snailmail_letter_missing_required_fields.letter_id is 'Letter';

comment on column snailmail_letter_missing_required_fields.street is 'Street';

comment on column snailmail_letter_missing_required_fields.street2 is 'Street2';

comment on column snailmail_letter_missing_required_fields.zip is 'Zip';

comment on column snailmail_letter_missing_required_fields.city is 'City';

comment on column snailmail_letter_missing_required_fields.state_id is 'State';

comment on column snailmail_letter_missing_required_fields.country_id is 'Country';

comment on column snailmail_letter_missing_required_fields.create_uid is 'Created by';

comment on column snailmail_letter_missing_required_fields.create_date is 'Created on';

comment on column snailmail_letter_missing_required_fields.write_uid is 'Last Updated by';

comment on column snailmail_letter_missing_required_fields.write_date is 'Last Updated on';

alter table snailmail_letter_missing_required_fields owner to postgres;

create table stock_inventory_stock_location_rel
(
	stock_inventory_id integer not null
		constraint stock_inventory_stock_location_rel_stock_inventory_id_fkey
			references stock_inventory
				on delete cascade,
	stock_location_id integer not null
		constraint stock_inventory_stock_location_rel_stock_location_id_fkey
			references stock_location
				on delete cascade,
	constraint stock_inventory_stock_location_rel_pkey
		primary key (stock_inventory_id, stock_location_id)
);

comment on table stock_inventory_stock_location_rel is 'RELATION BETWEEN stock_inventory AND stock_location';

alter table stock_inventory_stock_location_rel owner to postgres;

create index stock_inventory_stock_locatio_stock_location_id_stock_inven_idx
	on stock_inventory_stock_location_rel (stock_location_id, stock_inventory_id);

create index stock_location_company_id_index
	on stock_location (company_id);

create index stock_location_location_id_index
	on stock_location (location_id);

create index stock_location_parent_path_index
	on stock_location (parent_path);

create index stock_location_usage_index
	on stock_location (usage);

create table stock_location_route
(
	id integer default nextval('stock_location_route_id_seq'::regclass) not null
		constraint stock_location_route_pkey
			primary key,
	name varchar not null,
	active boolean,
	sequence integer,
	product_selectable boolean,
	product_categ_selectable boolean,
	warehouse_selectable boolean,
	supplied_wh_id integer,
	supplier_wh_id integer,
	company_id integer,
	create_uid integer
		constraint stock_location_route_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_location_route_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	sale_selectable boolean
);

comment on table stock_location_route is 'Inventory Routes';

comment on column stock_location_route.name is 'Route';

comment on column stock_location_route.active is 'Active';

comment on column stock_location_route.sequence is 'Sequence';

comment on column stock_location_route.product_selectable is 'Applicable on Product';

comment on column stock_location_route.product_categ_selectable is 'Applicable on Product Category';

comment on column stock_location_route.warehouse_selectable is 'Applicable on Warehouse';

comment on column stock_location_route.supplied_wh_id is 'Supplied Warehouse';

comment on column stock_location_route.supplier_wh_id is 'Supplying Warehouse';

comment on column stock_location_route.company_id is 'Company';

comment on column stock_location_route.create_uid is 'Created by';

comment on column stock_location_route.create_date is 'Created on';

comment on column stock_location_route.write_uid is 'Last Updated by';

comment on column stock_location_route.write_date is 'Last Updated on';

comment on column stock_location_route.sale_selectable is 'Selectable on Sales Order Line';

alter table stock_location_route owner to postgres;

create index stock_location_route_company_id_index
	on stock_location_route (company_id);

create table stock_location_route_categ
(
	route_id integer not null
		constraint stock_location_route_categ_route_id_fkey
			references stock_location_route
				on delete cascade,
	categ_id integer not null
		constraint stock_location_route_categ_categ_id_fkey
			references product_category
				on delete cascade,
	constraint stock_location_route_categ_pkey
		primary key (route_id, categ_id)
);

comment on table stock_location_route_categ is 'RELATION BETWEEN stock_location_route AND product_category';

alter table stock_location_route_categ owner to postgres;

create index stock_location_route_categ_categ_id_route_id_idx
	on stock_location_route_categ (categ_id, route_id);

create table stock_orderpoint_snooze
(
	id integer default nextval('stock_orderpoint_snooze_id_seq'::regclass) not null
		constraint stock_orderpoint_snooze_pkey
			primary key,
	predefined_date varchar,
	snoozed_until date,
	create_uid integer
		constraint stock_orderpoint_snooze_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_orderpoint_snooze_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_orderpoint_snooze is 'Snooze Orderpoint';

comment on column stock_orderpoint_snooze.predefined_date is 'Snooze for';

comment on column stock_orderpoint_snooze.snoozed_until is 'Snooze Date';

comment on column stock_orderpoint_snooze.create_uid is 'Created by';

comment on column stock_orderpoint_snooze.create_date is 'Created on';

comment on column stock_orderpoint_snooze.write_uid is 'Last Updated by';

comment on column stock_orderpoint_snooze.write_date is 'Last Updated on';

alter table stock_orderpoint_snooze owner to postgres;

create table stock_picking_type
(
	id integer default nextval('stock_picking_type_id_seq'::regclass) not null
		constraint stock_picking_type_pkey
			primary key,
	name varchar not null,
	color integer,
	sequence integer,
	sequence_id integer
		constraint stock_picking_type_sequence_id_fkey
			references ir_sequence
				on delete set null,
	sequence_code varchar not null,
	default_location_src_id integer
		constraint stock_picking_type_default_location_src_id_fkey
			references stock_location
				on delete set null,
	default_location_dest_id integer
		constraint stock_picking_type_default_location_dest_id_fkey
			references stock_location
				on delete set null,
	code varchar not null,
	return_picking_type_id integer
		constraint stock_picking_type_return_picking_type_id_fkey
			references stock_picking_type
				on delete set null,
	show_entire_packs boolean,
	warehouse_id integer,
	active boolean,
	use_create_lots boolean,
	use_existing_lots boolean,
	show_operations boolean,
	show_reserved boolean,
	barcode varchar,
	company_id integer not null,
	create_uid integer
		constraint stock_picking_type_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_picking_type_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_picking_type is 'Picking Type';

comment on column stock_picking_type.name is 'Operation Type';

comment on column stock_picking_type.color is 'Color';

comment on column stock_picking_type.sequence is 'Sequence';

comment on column stock_picking_type.sequence_id is 'Reference Sequence';

comment on column stock_picking_type.sequence_code is 'Code';

comment on column stock_picking_type.default_location_src_id is 'Default Source Location';

comment on column stock_picking_type.default_location_dest_id is 'Default Destination Location';

comment on column stock_picking_type.code is 'Type of Operation';

comment on column stock_picking_type.return_picking_type_id is 'Operation Type for Returns';

comment on column stock_picking_type.show_entire_packs is 'Move Entire Packages';

comment on column stock_picking_type.warehouse_id is 'Warehouse';

comment on column stock_picking_type.active is 'Active';

comment on column stock_picking_type.use_create_lots is 'Create New Lots/Serial Numbers';

comment on column stock_picking_type.use_existing_lots is 'Use Existing Lots/Serial Numbers';

comment on column stock_picking_type.show_operations is 'Show Detailed Operations';

comment on column stock_picking_type.show_reserved is 'Pre-fill Detailed Operations';

comment on column stock_picking_type.barcode is 'Barcode';

comment on column stock_picking_type.company_id is 'Company';

comment on column stock_picking_type.create_uid is 'Created by';

comment on column stock_picking_type.create_date is 'Created on';

comment on column stock_picking_type.write_uid is 'Last Updated by';

comment on column stock_picking_type.write_date is 'Last Updated on';

alter table stock_picking_type owner to postgres;

create table purchase_order
(
	id integer default nextval('purchase_order_id_seq'::regclass) not null
		constraint purchase_order_pkey
			primary key,
	message_main_attachment_id integer
		constraint purchase_order_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	access_token varchar,
	name varchar not null,
	priority varchar,
	origin varchar,
	partner_ref varchar,
	date_order timestamp not null,
	date_approve timestamp,
	partner_id integer not null
		constraint purchase_order_partner_id_fkey
			references res_partner
				on delete restrict,
	dest_address_id integer
		constraint purchase_order_dest_address_id_fkey
			references res_partner
				on delete set null,
	currency_id integer not null
		constraint purchase_order_currency_id_fkey
			references res_currency
				on delete restrict,
	state varchar,
	notes text,
	invoice_count integer,
	invoice_status varchar,
	date_planned timestamp,
	date_calendar_start timestamp,
	amount_untaxed numeric,
	amount_tax numeric,
	amount_total numeric,
	fiscal_position_id integer
		constraint purchase_order_fiscal_position_id_fkey
			references account_fiscal_position
				on delete set null,
	payment_term_id integer
		constraint purchase_order_payment_term_id_fkey
			references account_payment_term
				on delete set null,
	incoterm_id integer
		constraint purchase_order_incoterm_id_fkey
			references account_incoterms
				on delete set null,
	user_id integer
		constraint purchase_order_user_id_fkey
			references res_users
				on delete set null,
	company_id integer not null,
	currency_rate double precision,
	mail_reminder_confirmed boolean,
	mail_reception_confirmed boolean,
	create_uid integer
		constraint purchase_order_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint purchase_order_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	picking_count integer,
	picking_type_id integer not null
		constraint purchase_order_picking_type_id_fkey
			references stock_picking_type
				on delete restrict,
	group_id integer
		constraint purchase_order_group_id_fkey
			references procurement_group
				on delete set null,
	effective_date timestamp,
	report_grids boolean
);

comment on table purchase_order is 'Purchase Order';

comment on column purchase_order.message_main_attachment_id is 'Main Attachment';

comment on column purchase_order.access_token is 'Security Token';

comment on column purchase_order.name is 'Order Reference';

comment on column purchase_order.priority is 'Priority';

comment on column purchase_order.origin is 'Source Document';

comment on column purchase_order.partner_ref is 'Vendor Reference';

comment on column purchase_order.date_order is 'Order Deadline';

comment on column purchase_order.date_approve is 'Confirmation Date';

comment on column purchase_order.partner_id is 'Vendor';

comment on column purchase_order.dest_address_id is 'Drop Ship Address';

comment on column purchase_order.currency_id is 'Currency';

comment on column purchase_order.state is 'Status';

comment on column purchase_order.notes is 'Terms and Conditions';

comment on column purchase_order.invoice_count is 'Bill Count';

comment on column purchase_order.invoice_status is 'Billing Status';

comment on column purchase_order.date_planned is 'Receipt Date';

comment on column purchase_order.date_calendar_start is 'Date Calendar Start';

comment on column purchase_order.amount_untaxed is 'Untaxed Amount';

comment on column purchase_order.amount_tax is 'Taxes';

comment on column purchase_order.amount_total is 'Total';

comment on column purchase_order.fiscal_position_id is 'Fiscal Position';

comment on column purchase_order.payment_term_id is 'Payment Terms';

comment on column purchase_order.incoterm_id is 'Incoterm';

comment on column purchase_order.user_id is 'Purchase Representative';

comment on column purchase_order.company_id is 'Company';

comment on column purchase_order.currency_rate is 'Currency Rate';

comment on column purchase_order.mail_reminder_confirmed is 'Reminder Confirmed';

comment on column purchase_order.mail_reception_confirmed is 'Reception Confirmed';

comment on column purchase_order.create_uid is 'Created by';

comment on column purchase_order.create_date is 'Created on';

comment on column purchase_order.write_uid is 'Last Updated by';

comment on column purchase_order.write_date is 'Last Updated on';

comment on column purchase_order.picking_count is 'Picking count';

comment on column purchase_order.picking_type_id is 'Deliver To';

comment on column purchase_order.group_id is 'Procurement Group';

comment on column purchase_order.effective_date is 'Effective Date';

comment on column purchase_order.report_grids is 'Print Variant Grids';

alter table purchase_order owner to postgres;

create table account_move_purchase_order_rel
(
	purchase_order_id integer not null
		constraint account_move_purchase_order_rel_purchase_order_id_fkey
			references purchase_order
				on delete cascade,
	account_move_id integer not null
		constraint account_move_purchase_order_rel_account_move_id_fkey
			references account_move
				on delete cascade,
	constraint account_move_purchase_order_rel_pkey
		primary key (purchase_order_id, account_move_id)
);

comment on table account_move_purchase_order_rel is 'RELATION BETWEEN purchase_order AND account_move';

alter table account_move_purchase_order_rel owner to postgres;

create index account_move_purchase_order_r_account_move_id_purchase_orde_idx
	on account_move_purchase_order_rel (account_move_id, purchase_order_id);

create index purchase_order_company_id_index
	on purchase_order (company_id);

create index purchase_order_date_approve_index
	on purchase_order (date_approve);

create index purchase_order_date_order_index
	on purchase_order (date_order);

create index purchase_order_date_planned_index
	on purchase_order (date_planned);

create index purchase_order_message_main_attachment_id_index
	on purchase_order (message_main_attachment_id);

create index purchase_order_name_index
	on purchase_order (name);

create index purchase_order_priority_index
	on purchase_order (priority);

create index purchase_order_state_index
	on purchase_order (state);

create index purchase_order_user_id_index
	on purchase_order (user_id);

create index stock_picking_type_company_id_index
	on stock_picking_type (company_id);

create table stock_quantity_history
(
	id integer default nextval('stock_quantity_history_id_seq'::regclass) not null
		constraint stock_quantity_history_pkey
			primary key,
	inventory_datetime timestamp,
	create_uid integer
		constraint stock_quantity_history_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_quantity_history_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_quantity_history is 'Stock Quantity History';

comment on column stock_quantity_history.inventory_datetime is 'Inventory at Date';

comment on column stock_quantity_history.create_uid is 'Created by';

comment on column stock_quantity_history.create_date is 'Created on';

comment on column stock_quantity_history.write_uid is 'Last Updated by';

comment on column stock_quantity_history.write_date is 'Last Updated on';

alter table stock_quantity_history owner to postgres;

create table stock_rule
(
	id integer default nextval('stock_rule_id_seq'::regclass) not null
		constraint stock_rule_pkey
			primary key,
	name varchar not null,
	active boolean,
	group_propagation_option varchar,
	group_id integer
		constraint stock_rule_group_id_fkey
			references procurement_group
				on delete set null,
	action varchar not null,
	sequence integer,
	company_id integer,
	location_id integer not null
		constraint stock_rule_location_id_fkey
			references stock_location
				on delete restrict,
	location_src_id integer
		constraint stock_rule_location_src_id_fkey
			references stock_location
				on delete set null,
	route_id integer not null
		constraint stock_rule_route_id_fkey
			references stock_location_route
				on delete cascade,
	procure_method varchar not null,
	route_sequence integer,
	picking_type_id integer not null
		constraint stock_rule_picking_type_id_fkey
			references stock_picking_type
				on delete restrict,
	delay integer,
	partner_address_id integer
		constraint stock_rule_partner_address_id_fkey
			references res_partner
				on delete set null,
	propagate_cancel boolean,
	warehouse_id integer,
	propagate_warehouse_id integer,
	auto varchar not null,
	create_uid integer
		constraint stock_rule_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_rule_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_rule is 'Stock Rule';

comment on column stock_rule.name is 'Name';

comment on column stock_rule.active is 'Active';

comment on column stock_rule.group_propagation_option is 'Propagation of Procurement Group';

comment on column stock_rule.group_id is 'Fixed Procurement Group';

comment on column stock_rule.action is 'Action';

comment on column stock_rule.sequence is 'Sequence';

comment on column stock_rule.company_id is 'Company';

comment on column stock_rule.location_id is 'Destination Location';

comment on column stock_rule.location_src_id is 'Source Location';

comment on column stock_rule.route_id is 'Route';

comment on column stock_rule.procure_method is 'Supply Method';

comment on column stock_rule.route_sequence is 'Route Sequence';

comment on column stock_rule.picking_type_id is 'Operation Type';

comment on column stock_rule.delay is 'Lead Time';

comment on column stock_rule.partner_address_id is 'Partner Address';

comment on column stock_rule.propagate_cancel is 'Cancel Next Move';

comment on column stock_rule.warehouse_id is 'Warehouse';

comment on column stock_rule.propagate_warehouse_id is 'Warehouse to Propagate';

comment on column stock_rule.auto is 'Automatic Move';

comment on column stock_rule.create_uid is 'Created by';

comment on column stock_rule.create_date is 'Created on';

comment on column stock_rule.write_uid is 'Last Updated by';

comment on column stock_rule.write_date is 'Last Updated on';

alter table stock_rule owner to postgres;

create index stock_rule_auto_index
	on stock_rule (auto);

create table stock_scheduler_compute
(
	id integer default nextval('stock_scheduler_compute_id_seq'::regclass) not null
		constraint stock_scheduler_compute_pkey
			primary key,
	create_uid integer
		constraint stock_scheduler_compute_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_scheduler_compute_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_scheduler_compute is 'Run Scheduler Manually';

comment on column stock_scheduler_compute.create_uid is 'Created by';

comment on column stock_scheduler_compute.create_date is 'Created on';

comment on column stock_scheduler_compute.write_uid is 'Last Updated by';

comment on column stock_scheduler_compute.write_date is 'Last Updated on';

alter table stock_scheduler_compute owner to postgres;

create table stock_traceability_report
(
	id integer default nextval('stock_traceability_report_id_seq'::regclass) not null
		constraint stock_traceability_report_pkey
			primary key,
	create_uid integer
		constraint stock_traceability_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_traceability_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_traceability_report is 'Traceability Report';

comment on column stock_traceability_report.create_uid is 'Created by';

comment on column stock_traceability_report.create_date is 'Created on';

comment on column stock_traceability_report.write_uid is 'Last Updated by';

comment on column stock_traceability_report.write_date is 'Last Updated on';

alter table stock_traceability_report owner to postgres;

create table stock_track_confirmation
(
	id integer default nextval('stock_track_confirmation_id_seq'::regclass) not null
		constraint stock_track_confirmation_pkey
			primary key,
	inventory_id integer
		constraint stock_track_confirmation_inventory_id_fkey
			references stock_inventory
				on delete set null,
	create_uid integer
		constraint stock_track_confirmation_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_track_confirmation_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_track_confirmation is 'Stock Track Confirmation';

comment on column stock_track_confirmation.inventory_id is 'Inventory';

comment on column stock_track_confirmation.create_uid is 'Created by';

comment on column stock_track_confirmation.create_date is 'Created on';

comment on column stock_track_confirmation.write_uid is 'Last Updated by';

comment on column stock_track_confirmation.write_date is 'Last Updated on';

alter table stock_track_confirmation owner to postgres;

create table stock_warehouse
(
	id integer default nextval('stock_warehouse_id_seq'::regclass) not null
		constraint stock_warehouse_pkey
			primary key,
	name varchar not null,
	active boolean,
	company_id integer not null,
	partner_id integer
		constraint stock_warehouse_partner_id_fkey
			references res_partner
				on delete set null,
	view_location_id integer not null
		constraint stock_warehouse_view_location_id_fkey
			references stock_location
				on delete restrict,
	lot_stock_id integer not null
		constraint stock_warehouse_lot_stock_id_fkey
			references stock_location
				on delete restrict,
	code varchar(5) not null,
	reception_steps varchar not null,
	delivery_steps varchar not null,
	wh_input_stock_loc_id integer
		constraint stock_warehouse_wh_input_stock_loc_id_fkey
			references stock_location
				on delete set null,
	wh_qc_stock_loc_id integer
		constraint stock_warehouse_wh_qc_stock_loc_id_fkey
			references stock_location
				on delete set null,
	wh_output_stock_loc_id integer
		constraint stock_warehouse_wh_output_stock_loc_id_fkey
			references stock_location
				on delete set null,
	wh_pack_stock_loc_id integer
		constraint stock_warehouse_wh_pack_stock_loc_id_fkey
			references stock_location
				on delete set null,
	mto_pull_id integer
		constraint stock_warehouse_mto_pull_id_fkey
			references stock_rule
				on delete set null,
	pick_type_id integer
		constraint stock_warehouse_pick_type_id_fkey
			references stock_picking_type
				on delete set null,
	pack_type_id integer
		constraint stock_warehouse_pack_type_id_fkey
			references stock_picking_type
				on delete set null,
	out_type_id integer
		constraint stock_warehouse_out_type_id_fkey
			references stock_picking_type
				on delete set null,
	in_type_id integer
		constraint stock_warehouse_in_type_id_fkey
			references stock_picking_type
				on delete set null,
	int_type_id integer
		constraint stock_warehouse_int_type_id_fkey
			references stock_picking_type
				on delete set null,
	crossdock_route_id integer
		constraint stock_warehouse_crossdock_route_id_fkey
			references stock_location_route
				on delete restrict,
	reception_route_id integer
		constraint stock_warehouse_reception_route_id_fkey
			references stock_location_route
				on delete restrict,
	delivery_route_id integer
		constraint stock_warehouse_delivery_route_id_fkey
			references stock_location_route
				on delete restrict,
	sequence integer,
	create_uid integer
		constraint stock_warehouse_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_warehouse_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	buy_to_resupply boolean,
	buy_pull_id integer
		constraint stock_warehouse_buy_pull_id_fkey
			references stock_rule
				on delete set null,
	constraint stock_warehouse_warehouse_code_uniq
		unique (code, company_id),
	constraint stock_warehouse_warehouse_name_uniq
		unique (name, company_id)
);

comment on table stock_warehouse is 'Warehouse';

comment on column stock_warehouse.name is 'Warehouse';

comment on column stock_warehouse.active is 'Active';

comment on column stock_warehouse.company_id is 'Company';

comment on column stock_warehouse.partner_id is 'Address';

comment on column stock_warehouse.view_location_id is 'View Location';

comment on column stock_warehouse.lot_stock_id is 'Location Stock';

comment on column stock_warehouse.code is 'Short Name';

comment on column stock_warehouse.reception_steps is 'Incoming Shipments';

comment on column stock_warehouse.delivery_steps is 'Outgoing Shipments';

comment on column stock_warehouse.wh_input_stock_loc_id is 'Input Location';

comment on column stock_warehouse.wh_qc_stock_loc_id is 'Quality Control Location';

comment on column stock_warehouse.wh_output_stock_loc_id is 'Output Location';

comment on column stock_warehouse.wh_pack_stock_loc_id is 'Packing Location';

comment on column stock_warehouse.mto_pull_id is 'MTO rule';

comment on column stock_warehouse.pick_type_id is 'Pick Type';

comment on column stock_warehouse.pack_type_id is 'Pack Type';

comment on column stock_warehouse.out_type_id is 'Out Type';

comment on column stock_warehouse.in_type_id is 'In Type';

comment on column stock_warehouse.int_type_id is 'Internal Type';

comment on column stock_warehouse.crossdock_route_id is 'Crossdock Route';

comment on column stock_warehouse.reception_route_id is 'Receipt Route';

comment on column stock_warehouse.delivery_route_id is 'Delivery Route';

comment on column stock_warehouse.sequence is 'Sequence';

comment on column stock_warehouse.create_uid is 'Created by';

comment on column stock_warehouse.create_date is 'Created on';

comment on column stock_warehouse.write_uid is 'Last Updated by';

comment on column stock_warehouse.write_date is 'Last Updated on';

comment on column stock_warehouse.buy_to_resupply is 'Buy to Resupply';

comment on column stock_warehouse.buy_pull_id is 'Buy rule';

alter table stock_warehouse owner to postgres;

alter table stock_location_route
	add constraint stock_location_route_supplied_wh_id_fkey
		foreign key (supplied_wh_id) references stock_warehouse
			on delete set null;

alter table stock_location_route
	add constraint stock_location_route_supplier_wh_id_fkey
		foreign key (supplier_wh_id) references stock_warehouse
			on delete set null;

alter table stock_picking_type
	add constraint stock_picking_type_warehouse_id_fkey
		foreign key (warehouse_id) references stock_warehouse
			on delete cascade;

create table stock_route_warehouse
(
	route_id integer not null
		constraint stock_route_warehouse_route_id_fkey
			references stock_location_route
				on delete cascade,
	warehouse_id integer not null
		constraint stock_route_warehouse_warehouse_id_fkey
			references stock_warehouse
				on delete cascade,
	constraint stock_route_warehouse_pkey
		primary key (route_id, warehouse_id)
);

comment on table stock_route_warehouse is 'RELATION BETWEEN stock_location_route AND stock_warehouse';

alter table stock_route_warehouse owner to postgres;

create index stock_route_warehouse_warehouse_id_route_id_idx
	on stock_route_warehouse (warehouse_id, route_id);

alter table stock_rule
	add constraint stock_rule_propagate_warehouse_id_fkey
		foreign key (propagate_warehouse_id) references stock_warehouse
			on delete set null;

alter table stock_rule
	add constraint stock_rule_warehouse_id_fkey
		foreign key (warehouse_id) references stock_warehouse
			on delete set null;

create index stock_warehouse_company_id_index
	on stock_warehouse (company_id);

create index stock_warehouse_name_index
	on stock_warehouse (name);

create table stock_wh_resupply_table
(
	supplied_wh_id integer not null
		constraint stock_wh_resupply_table_supplied_wh_id_fkey
			references stock_warehouse
				on delete cascade,
	supplier_wh_id integer not null
		constraint stock_wh_resupply_table_supplier_wh_id_fkey
			references stock_warehouse
				on delete cascade,
	constraint stock_wh_resupply_table_pkey
		primary key (supplied_wh_id, supplier_wh_id)
);

comment on table stock_wh_resupply_table is 'RELATION BETWEEN stock_warehouse AND stock_warehouse';

alter table stock_wh_resupply_table owner to postgres;

create index stock_wh_resupply_table_supplier_wh_id_supplied_wh_id_idx
	on stock_wh_resupply_table (supplier_wh_id, supplied_wh_id);

create table tax_adjustments_wizard
(
	id integer default nextval('tax_adjustments_wizard_id_seq'::regclass) not null
		constraint tax_adjustments_wizard_pkey
			primary key,
	reason varchar not null,
	journal_id integer not null
		constraint tax_adjustments_wizard_journal_id_fkey
			references account_journal
				on delete cascade,
	date date not null,
	debit_account_id integer not null
		constraint tax_adjustments_wizard_debit_account_id_fkey
			references account_account
				on delete cascade,
	credit_account_id integer not null
		constraint tax_adjustments_wizard_credit_account_id_fkey
			references account_account
				on delete cascade,
	amount numeric not null,
	adjustment_type varchar not null,
	tax_report_line_id integer not null
		constraint tax_adjustments_wizard_tax_report_line_id_fkey
			references account_tax_report_line
				on delete cascade,
	company_currency_id integer
		constraint tax_adjustments_wizard_company_currency_id_fkey
			references res_currency
				on delete set null,
	create_uid integer
		constraint tax_adjustments_wizard_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint tax_adjustments_wizard_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table tax_adjustments_wizard is 'Tax Adjustments Wizard';

comment on column tax_adjustments_wizard.reason is 'Justification';

comment on column tax_adjustments_wizard.journal_id is 'Journal';

comment on column tax_adjustments_wizard.date is 'Date';

comment on column tax_adjustments_wizard.debit_account_id is 'Debit account';

comment on column tax_adjustments_wizard.credit_account_id is 'Credit account';

comment on column tax_adjustments_wizard.amount is 'Amount';

comment on column tax_adjustments_wizard.adjustment_type is 'Adjustment Type';

comment on column tax_adjustments_wizard.tax_report_line_id is 'Report Line';

comment on column tax_adjustments_wizard.company_currency_id is 'Company Currency';

comment on column tax_adjustments_wizard.create_uid is 'Created by';

comment on column tax_adjustments_wizard.create_date is 'Created on';

comment on column tax_adjustments_wizard.write_uid is 'Last Updated by';

comment on column tax_adjustments_wizard.write_date is 'Last Updated on';

alter table tax_adjustments_wizard owner to postgres;

create table team_favorite_user_rel
(
	team_id integer not null
		constraint team_favorite_user_rel_team_id_fkey
			references crm_team
				on delete cascade,
	user_id integer not null
		constraint team_favorite_user_rel_user_id_fkey
			references res_users
				on delete cascade,
	constraint team_favorite_user_rel_pkey
		primary key (team_id, user_id)
);

comment on table team_favorite_user_rel is 'RELATION BETWEEN crm_team AND res_users';

alter table team_favorite_user_rel owner to postgres;

create index team_favorite_user_rel_user_id_team_id_idx
	on team_favorite_user_rel (user_id, team_id);

create table uom_category
(
	id integer default nextval('uom_category_id_seq'::regclass) not null
		constraint uom_category_pkey
			primary key,
	name varchar not null,
	create_uid integer
		constraint uom_category_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint uom_category_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table uom_category is 'Product UoM Categories';

comment on column uom_category.name is 'Unit of Measure Category';

comment on column uom_category.create_uid is 'Created by';

comment on column uom_category.create_date is 'Created on';

comment on column uom_category.write_uid is 'Last Updated by';

comment on column uom_category.write_date is 'Last Updated on';

alter table uom_category owner to postgres;

create table uom_uom
(
	id integer default nextval('uom_uom_id_seq'::regclass) not null
		constraint uom_uom_pkey
			primary key,
	name varchar not null,
	category_id integer not null
		constraint uom_uom_category_id_fkey
			references uom_category
				on delete cascade,
	factor numeric not null,
	rounding numeric not null,
	active boolean,
	uom_type varchar not null,
	create_uid integer
		constraint uom_uom_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint uom_uom_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table uom_uom is 'Product Unit of Measure';

comment on column uom_uom.name is 'Unit of Measure';

comment on column uom_uom.category_id is 'Category';

comment on column uom_uom.factor is 'Ratio';

comment on column uom_uom.rounding is 'Rounding Precision';

comment on column uom_uom.active is 'Active';

comment on column uom_uom.uom_type is 'Type';

comment on column uom_uom.create_uid is 'Created by';

comment on column uom_uom.create_date is 'Created on';

comment on column uom_uom.write_uid is 'Last Updated by';

comment on column uom_uom.write_date is 'Last Updated on';

alter table uom_uom owner to postgres;

create table product_template
(
	id integer default nextval('product_template_id_seq'::regclass) not null
		constraint product_template_pkey
			primary key,
	name varchar not null,
	sequence integer,
	description text,
	description_purchase text,
	description_sale text,
	type varchar not null,
	categ_id integer not null
		constraint product_template_categ_id_fkey
			references product_category
				on delete restrict,
	list_price numeric,
	volume numeric,
	weight numeric,
	sale_ok boolean,
	purchase_ok boolean,
	uom_id integer not null
		constraint product_template_uom_id_fkey
			references uom_uom
				on delete restrict,
	uom_po_id integer not null
		constraint product_template_uom_po_id_fkey
			references uom_uom
				on delete restrict,
	company_id integer
		constraint product_template_company_id_fkey
			references res_company
				on delete set null,
	active boolean,
	color integer,
	default_code varchar,
	can_image_1024_be_zoomed boolean,
	has_configurable_attributes boolean,
	message_main_attachment_id integer
		constraint product_template_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint product_template_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_template_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	service_type varchar,
	sale_line_warn varchar not null,
	sale_line_warn_msg text,
	expense_policy varchar,
	invoice_policy varchar,
	sale_delay double precision,
	tracking varchar not null,
	description_picking text,
	description_pickingout text,
	description_pickingin text,
	hs_code varchar,
	purchase_method varchar,
	purchase_line_warn varchar not null,
	purchase_line_warn_msg text,
	service_to_purchase boolean,
	delivery_type varchar,
	write_price_unit boolean
);

comment on table product_template is 'Product Template';

comment on column product_template.name is 'Name';

comment on column product_template.sequence is 'Sequence';

comment on column product_template.description is 'Description';

comment on column product_template.description_purchase is 'Purchase Description';

comment on column product_template.description_sale is 'Sales Description';

comment on column product_template.type is 'Product Type';

comment on column product_template.categ_id is 'Product Category';

comment on column product_template.list_price is 'Sales Price';

comment on column product_template.volume is 'Volume';

comment on column product_template.weight is 'Weight';

comment on column product_template.sale_ok is 'Can be Sold';

comment on column product_template.purchase_ok is 'Can be Purchased';

comment on column product_template.uom_id is 'Unit of Measure';

comment on column product_template.uom_po_id is 'Purchase Unit of Measure';

comment on column product_template.company_id is 'Company';

comment on column product_template.active is 'Active';

comment on column product_template.color is 'Color Index';

comment on column product_template.default_code is 'Internal Reference';

comment on column product_template.can_image_1024_be_zoomed is 'Can Image 1024 be zoomed';

comment on column product_template.has_configurable_attributes is 'Is a configurable product';

comment on column product_template.message_main_attachment_id is 'Main Attachment';

comment on column product_template.create_uid is 'Created by';

comment on column product_template.create_date is 'Created on';

comment on column product_template.write_uid is 'Last Updated by';

comment on column product_template.write_date is 'Last Updated on';

comment on column product_template.service_type is 'Track Service';

comment on column product_template.sale_line_warn is 'Sales Order Line';

comment on column product_template.sale_line_warn_msg is 'Message for Sales Order Line';

comment on column product_template.expense_policy is 'Re-Invoice Expenses';

comment on column product_template.invoice_policy is 'Invoicing Policy';

comment on column product_template.sale_delay is 'Customer Lead Time';

comment on column product_template.tracking is 'Tracking';

comment on column product_template.description_picking is 'Description on Picking';

comment on column product_template.description_pickingout is 'Description on Delivery Orders';

comment on column product_template.description_pickingin is 'Description on Receptions';

comment on column product_template.hs_code is 'HS Code';

comment on column product_template.purchase_method is 'Control Policy';

comment on column product_template.purchase_line_warn is 'Purchase Order Line Warning';

comment on column product_template.purchase_line_warn_msg is 'Message for Purchase Order Line';

comment on column product_template.service_to_purchase is 'Purchase Automatically';

comment on column product_template.delivery_type is 'Delivery type';

comment on column product_template.write_price_unit is 'Can write price unit';

alter table product_template owner to postgres;

create table product_attribute_product_template_rel
(
	product_attribute_id integer not null
		constraint product_attribute_product_template_re_product_attribute_id_fkey
			references product_attribute
				on delete cascade,
	product_template_id integer not null
		constraint product_attribute_product_template_rel_product_template_id_fkey
			references product_template
				on delete cascade,
	constraint product_attribute_product_template_rel_pkey
		primary key (product_attribute_id, product_template_id)
);

comment on table product_attribute_product_template_rel is 'RELATION BETWEEN product_attribute AND product_template';

alter table product_attribute_product_template_rel owner to postgres;

create index product_attribute_product_tem_product_template_id_product_a_idx
	on product_attribute_product_template_rel (product_template_id, product_attribute_id);

create table product_product
(
	id integer default nextval('product_product_id_seq'::regclass) not null
		constraint product_product_pkey
			primary key,
	default_code varchar,
	active boolean,
	product_tmpl_id integer not null
		constraint product_product_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	barcode varchar
		constraint product_product_barcode_uniq
			unique,
	combination_indices varchar,
	volume numeric,
	weight numeric,
	can_image_variant_1024_be_zoomed boolean,
	message_main_attachment_id integer
		constraint product_product_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	create_uid integer
		constraint product_product_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_product_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_product is 'Product';

comment on column product_product.default_code is 'Internal Reference';

comment on column product_product.active is 'Active';

comment on column product_product.product_tmpl_id is 'Product Template';

comment on column product_product.barcode is 'Barcode';

comment on column product_product.combination_indices is 'Combination Indices';

comment on column product_product.volume is 'Volume';

comment on column product_product.weight is 'Weight';

comment on column product_product.can_image_variant_1024_be_zoomed is 'Can Variant Image 1024 be zoomed';

comment on column product_product.message_main_attachment_id is 'Main Attachment';

comment on column product_product.create_uid is 'Created by';

comment on column product_product.create_date is 'Created on';

comment on column product_product.write_uid is 'Last Updated by';

comment on column product_product.write_date is 'Last Updated on';

alter table product_product owner to postgres;

create table account_analytic_default
(
	id integer default nextval('account_analytic_default_id_seq'::regclass) not null
		constraint account_analytic_default_pkey
			primary key,
	sequence integer,
	analytic_id integer
		constraint account_analytic_default_analytic_id_fkey
			references account_analytic_account
				on delete set null,
	product_id integer
		constraint account_analytic_default_product_id_fkey
			references product_product
				on delete cascade,
	partner_id integer
		constraint account_analytic_default_partner_id_fkey
			references res_partner
				on delete cascade,
	account_id integer
		constraint account_analytic_default_account_id_fkey
			references account_account
				on delete cascade,
	user_id integer
		constraint account_analytic_default_user_id_fkey
			references res_users
				on delete cascade,
	company_id integer
		constraint account_analytic_default_company_id_fkey
			references res_company
				on delete cascade,
	date_start date,
	date_stop date,
	create_uid integer
		constraint account_analytic_default_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_analytic_default_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_analytic_default is 'Analytic Distribution';

comment on column account_analytic_default.sequence is 'Sequence';

comment on column account_analytic_default.analytic_id is 'Analytic Account';

comment on column account_analytic_default.product_id is 'Product';

comment on column account_analytic_default.partner_id is 'Partner';

comment on column account_analytic_default.account_id is 'Account';

comment on column account_analytic_default.user_id is 'User';

comment on column account_analytic_default.company_id is 'Company';

comment on column account_analytic_default.date_start is 'Start Date';

comment on column account_analytic_default.date_stop is 'End Date';

comment on column account_analytic_default.create_uid is 'Created by';

comment on column account_analytic_default.create_date is 'Created on';

comment on column account_analytic_default.write_uid is 'Last Updated by';

comment on column account_analytic_default.write_date is 'Last Updated on';

alter table account_analytic_default owner to postgres;

create table account_analytic_default_account_analytic_tag_rel
(
	account_analytic_default_id integer not null
		constraint account_analytic_default_accou_account_analytic_default_id_fkey
			references account_analytic_default
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_analytic_default_account_a_account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_default_account_analytic_tag_rel_pkey
		primary key (account_analytic_default_id, account_analytic_tag_id)
);

comment on table account_analytic_default_account_analytic_tag_rel is 'RELATION BETWEEN account_analytic_default AND account_analytic_tag';

alter table account_analytic_default_account_analytic_tag_rel owner to postgres;

create index account_analytic_default_acco_account_analytic_tag_id_accou_idx
	on account_analytic_default_account_analytic_tag_rel (account_analytic_tag_id, account_analytic_default_id);

create table delivery_carrier
(
	id integer default nextval('delivery_carrier_id_seq'::regclass) not null
		constraint delivery_carrier_pkey
			primary key,
	name varchar not null,
	active boolean,
	sequence integer,
	integration_level varchar,
	prod_environment boolean,
	debug_logging boolean,
	company_id integer
		constraint delivery_carrier_company_id_fkey
			references res_company
				on delete set null,
	product_id integer not null
		constraint delivery_carrier_product_id_fkey
			references product_product
				on delete restrict,
	invoice_policy varchar not null,
	zip_from varchar,
	zip_to varchar,
	margin double precision,
	free_over boolean,
	amount double precision,
	return_label_on_delivery boolean,
	get_return_label_from_portal boolean,
	fixed_price double precision,
	delivery_type varchar not null,
	create_uid integer
		constraint delivery_carrier_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint delivery_carrier_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table delivery_carrier is 'Shipping Methods';

comment on column delivery_carrier.name is 'Delivery Method';

comment on column delivery_carrier.active is 'Active';

comment on column delivery_carrier.sequence is 'Sequence';

comment on column delivery_carrier.integration_level is 'Integration Level';

comment on column delivery_carrier.prod_environment is 'Environment';

comment on column delivery_carrier.debug_logging is 'Debug logging';

comment on column delivery_carrier.company_id is 'Company';

comment on column delivery_carrier.product_id is 'Delivery Product';

comment on column delivery_carrier.invoice_policy is 'Invoicing Policy';

comment on column delivery_carrier.zip_from is 'Zip From';

comment on column delivery_carrier.zip_to is 'Zip To';

comment on column delivery_carrier.margin is 'Margin';

comment on column delivery_carrier.free_over is 'Free if order amount is above';

comment on column delivery_carrier.amount is 'Amount';

comment on column delivery_carrier.return_label_on_delivery is 'Generate Return Label';

comment on column delivery_carrier.get_return_label_from_portal is 'Return Label Accessible from Customer Portal';

comment on column delivery_carrier.fixed_price is 'Fixed Price';

comment on column delivery_carrier.delivery_type is 'Provider';

comment on column delivery_carrier.create_uid is 'Created by';

comment on column delivery_carrier.create_date is 'Created on';

comment on column delivery_carrier.write_uid is 'Last Updated by';

comment on column delivery_carrier.write_date is 'Last Updated on';

alter table delivery_carrier owner to postgres;

create table delivery_agency
(
	id integer default nextval('delivery_agency_id_seq'::regclass) not null
		constraint delivery_agency_pkey
			primary key,
	location_id integer
		constraint delivery_agency_location_id_fkey
			references cesa_location
				on delete set null,
	delivery_id integer
		constraint delivery_agency_delivery_id_fkey
			references delivery_carrier
				on delete set null,
	create_uid integer
		constraint delivery_agency_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint delivery_agency_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	transport_type varchar,
	tarif boolean,
	majoration double precision,
	first_day integer,
	first_month varchar,
	last_day integer,
	last_month varchar
);

comment on table delivery_agency is 'delivery.agency';

comment on column delivery_agency.location_id is 'Shipping agency';

comment on column delivery_agency.delivery_id is 'Delivery';

comment on column delivery_agency.create_uid is 'Created by';

comment on column delivery_agency.create_date is 'Created on';

comment on column delivery_agency.write_uid is 'Last Updated by';

comment on column delivery_agency.write_date is 'Last Updated on';

comment on column delivery_agency.transport_type is 'Transport type';

comment on column delivery_agency.tarif is 'Tarif saisonnier';

comment on column delivery_agency.majoration is 'Majoration';

comment on column delivery_agency.first_day is 'First Day';

comment on column delivery_agency.first_month is 'First Month';

comment on column delivery_agency.last_day is 'Last Day';

comment on column delivery_agency.last_month is 'Last Month';

alter table delivery_agency owner to postgres;

create table cesa_location_delivery_agency_rel
(
	delivery_agency_id integer not null
		constraint cesa_location_delivery_agency_rel_delivery_agency_id_fkey
			references delivery_agency
				on delete cascade,
	cesa_location_id integer not null
		constraint cesa_location_delivery_agency_rel_cesa_location_id_fkey
			references cesa_location
				on delete cascade,
	constraint cesa_location_delivery_agency_rel_pkey
		primary key (delivery_agency_id, cesa_location_id)
);

comment on table cesa_location_delivery_agency_rel is 'RELATION BETWEEN delivery_agency AND cesa_location';

alter table cesa_location_delivery_agency_rel owner to postgres;

create index cesa_location_delivery_agency_cesa_location_id_delivery_age_idx
	on cesa_location_delivery_agency_rel (cesa_location_id, delivery_agency_id);

create table delivery_carrier_country_rel
(
	carrier_id integer not null
		constraint delivery_carrier_country_rel_carrier_id_fkey
			references delivery_carrier
				on delete cascade,
	country_id integer not null
		constraint delivery_carrier_country_rel_country_id_fkey
			references res_country
				on delete cascade,
	constraint delivery_carrier_country_rel_pkey
		primary key (carrier_id, country_id)
);

comment on table delivery_carrier_country_rel is 'RELATION BETWEEN delivery_carrier AND res_country';

alter table delivery_carrier_country_rel owner to postgres;

create index delivery_carrier_country_rel_country_id_carrier_id_idx
	on delivery_carrier_country_rel (country_id, carrier_id);

create table delivery_carrier_state_rel
(
	carrier_id integer not null
		constraint delivery_carrier_state_rel_carrier_id_fkey
			references delivery_carrier
				on delete cascade,
	state_id integer not null
		constraint delivery_carrier_state_rel_state_id_fkey
			references res_country_state
				on delete cascade,
	constraint delivery_carrier_state_rel_pkey
		primary key (carrier_id, state_id)
);

comment on table delivery_carrier_state_rel is 'RELATION BETWEEN delivery_carrier AND res_country_state';

alter table delivery_carrier_state_rel owner to postgres;

create index delivery_carrier_state_rel_state_id_carrier_id_idx
	on delivery_carrier_state_rel (state_id, carrier_id);

create table delivery_price_rule
(
	id integer default nextval('delivery_price_rule_id_seq'::regclass) not null
		constraint delivery_price_rule_pkey
			primary key,
	sequence integer not null,
	carrier_id integer not null
		constraint delivery_price_rule_carrier_id_fkey
			references delivery_carrier
				on delete cascade,
	variable varchar not null,
	operator varchar not null,
	max_value double precision not null,
	list_base_price numeric not null,
	list_price numeric not null,
	variable_factor varchar not null,
	create_uid integer
		constraint delivery_price_rule_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint delivery_price_rule_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	delivery_type varchar not null
);

comment on table delivery_price_rule is 'Delivery Price Rules';

comment on column delivery_price_rule.sequence is 'Sequence';

comment on column delivery_price_rule.carrier_id is 'Carrier';

comment on column delivery_price_rule.variable is 'Variable';

comment on column delivery_price_rule.operator is 'Operator';

comment on column delivery_price_rule.max_value is 'Maximum Value';

comment on column delivery_price_rule.list_base_price is 'Sale Base Price';

comment on column delivery_price_rule.list_price is 'Sale Price';

comment on column delivery_price_rule.variable_factor is 'Variable Factor';

comment on column delivery_price_rule.create_uid is 'Created by';

comment on column delivery_price_rule.create_date is 'Created on';

comment on column delivery_price_rule.write_uid is 'Last Updated by';

comment on column delivery_price_rule.write_date is 'Last Updated on';

comment on column delivery_price_rule.delivery_type is 'Applicable à';

alter table delivery_price_rule owner to postgres;

create table delivery_rate_detail
(
	id integer default nextval('delivery_rate_detail_id_seq'::regclass) not null
		constraint delivery_rate_detail_pkey
			primary key,
	order_line_id integer,
	rate_id integer
		constraint delivery_rate_detail_rate_id_fkey
			references delivery_carrier
				on delete set null,
	amount double precision,
	create_uid integer
		constraint delivery_rate_detail_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint delivery_rate_detail_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	pricelist_id integer
		constraint delivery_rate_detail_pricelist_id_fkey
			references product_pricelist
				on delete set null,
	agency_id integer
		constraint delivery_rate_detail_agency_id_fkey
			references delivery_agency
				on delete set null,
	total_amount double precision
);

comment on table delivery_rate_detail is 'delivery.rate.detail';

comment on column delivery_rate_detail.order_line_id is 'Order Line';

comment on column delivery_rate_detail.rate_id is 'Rate';

comment on column delivery_rate_detail.amount is 'Cost';

comment on column delivery_rate_detail.create_uid is 'Created by';

comment on column delivery_rate_detail.create_date is 'Created on';

comment on column delivery_rate_detail.write_uid is 'Last Updated by';

comment on column delivery_rate_detail.write_date is 'Last Updated on';

comment on column delivery_rate_detail.pricelist_id is 'Pricelist';

comment on column delivery_rate_detail.agency_id is 'Agency';

comment on column delivery_rate_detail.total_amount is 'Coût total';

alter table delivery_rate_detail owner to postgres;

create table handling_rate
(
	id integer default nextval('handling_rate_id_seq'::regclass) not null
		constraint handling_rate_pkey
			primary key,
	product_id integer not null
		constraint handling_rate_product_id_fkey
			references product_product
				on delete restrict,
	create_uid integer
		constraint handling_rate_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint handling_rate_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table handling_rate is 'handling.rate';

comment on column handling_rate.product_id is 'Handling Rate';

comment on column handling_rate.create_uid is 'Created by';

comment on column handling_rate.create_date is 'Created on';

comment on column handling_rate.write_uid is 'Last Updated by';

comment on column handling_rate.write_date is 'Last Updated on';

alter table handling_rate owner to postgres;

create table handling_rate_detail
(
	id integer default nextval('handling_rate_detail_id_seq'::regclass) not null
		constraint handling_rate_detail_pkey
			primary key,
	order_line_id integer,
	rate_id integer
		constraint handling_rate_detail_rate_id_fkey
			references handling_rate
				on delete set null,
	amount double precision,
	create_uid integer
		constraint handling_rate_detail_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint handling_rate_detail_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table handling_rate_detail is 'handling.rate.detail';

comment on column handling_rate_detail.order_line_id is 'Order Line';

comment on column handling_rate_detail.rate_id is 'Rate';

comment on column handling_rate_detail.amount is 'Cost';

comment on column handling_rate_detail.create_uid is 'Created by';

comment on column handling_rate_detail.create_date is 'Created on';

comment on column handling_rate_detail.write_uid is 'Last Updated by';

comment on column handling_rate_detail.write_date is 'Last Updated on';

alter table handling_rate_detail owner to postgres;

create table handling_rate_line
(
	id integer default nextval('handling_rate_line_id_seq'::regclass) not null
		constraint handling_rate_line_pkey
			primary key,
	rate_id integer
		constraint handling_rate_line_rate_id_fkey
			references handling_rate
				on delete set null,
	variable varchar,
	variable_factor varchar not null,
	sequence integer not null,
	operator varchar not null,
	max_value double precision not null,
	list_base_price numeric not null,
	list_price numeric not null,
	create_uid integer
		constraint handling_rate_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint handling_rate_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table handling_rate_line is 'handling.rate.line';

comment on column handling_rate_line.rate_id is 'Rate';

comment on column handling_rate_line.variable is 'Variable';

comment on column handling_rate_line.variable_factor is 'Variable Factor';

comment on column handling_rate_line.sequence is 'Sequence';

comment on column handling_rate_line.operator is 'Operator';

comment on column handling_rate_line.max_value is 'Maximum Value';

comment on column handling_rate_line.list_base_price is 'Sale Base Price';

comment on column handling_rate_line.list_price is 'Sale Price';

comment on column handling_rate_line.create_uid is 'Created by';

comment on column handling_rate_line.create_date is 'Created on';

comment on column handling_rate_line.write_uid is 'Last Updated by';

comment on column handling_rate_line.write_date is 'Last Updated on';

alter table handling_rate_line owner to postgres;

create table packaging_rate
(
	id integer default nextval('packaging_rate_id_seq'::regclass) not null
		constraint packaging_rate_pkey
			primary key,
	product_id integer not null
		constraint packaging_rate_product_id_fkey
			references product_product
				on delete restrict,
	create_uid integer
		constraint packaging_rate_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint packaging_rate_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table packaging_rate is 'packaging.rate';

comment on column packaging_rate.product_id is 'Packaging Rate';

comment on column packaging_rate.create_uid is 'Created by';

comment on column packaging_rate.create_date is 'Created on';

comment on column packaging_rate.write_uid is 'Last Updated by';

comment on column packaging_rate.write_date is 'Last Updated on';

alter table packaging_rate owner to postgres;

create table packaging_rate_detail
(
	id integer default nextval('packaging_rate_detail_id_seq'::regclass) not null
		constraint packaging_rate_detail_pkey
			primary key,
	order_line_id integer,
	rate_id integer
		constraint packaging_rate_detail_rate_id_fkey
			references packaging_rate
				on delete set null,
	amount double precision,
	create_uid integer
		constraint packaging_rate_detail_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint packaging_rate_detail_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table packaging_rate_detail is 'packaging.rate.detail';

comment on column packaging_rate_detail.order_line_id is 'Order Line';

comment on column packaging_rate_detail.rate_id is 'Rate';

comment on column packaging_rate_detail.amount is 'Cost';

comment on column packaging_rate_detail.create_uid is 'Created by';

comment on column packaging_rate_detail.create_date is 'Created on';

comment on column packaging_rate_detail.write_uid is 'Last Updated by';

comment on column packaging_rate_detail.write_date is 'Last Updated on';

alter table packaging_rate_detail owner to postgres;

create table packaging_rate_line
(
	id integer default nextval('packaging_rate_line_id_seq'::regclass) not null
		constraint packaging_rate_line_pkey
			primary key,
	rate_id integer
		constraint packaging_rate_line_rate_id_fkey
			references packaging_rate
				on delete set null,
	sequence integer not null,
	variable varchar,
	variable_factor varchar not null,
	operator varchar not null,
	max_value double precision not null,
	list_base_price numeric not null,
	list_price numeric not null,
	create_uid integer
		constraint packaging_rate_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint packaging_rate_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table packaging_rate_line is 'packaging.rate.line';

comment on column packaging_rate_line.rate_id is 'Rate';

comment on column packaging_rate_line.sequence is 'Sequence';

comment on column packaging_rate_line.variable is 'Variable';

comment on column packaging_rate_line.variable_factor is 'Variable Factor';

comment on column packaging_rate_line.operator is 'Operator';

comment on column packaging_rate_line.max_value is 'Maximum Value';

comment on column packaging_rate_line.list_base_price is 'Sale Base Price';

comment on column packaging_rate_line.list_price is 'Sale Price';

comment on column packaging_rate_line.create_uid is 'Created by';

comment on column packaging_rate_line.create_date is 'Created on';

comment on column packaging_rate_line.write_uid is 'Last Updated by';

comment on column packaging_rate_line.write_date is 'Last Updated on';

alter table packaging_rate_line owner to postgres;

create table product_packaging
(
	id integer default nextval('product_packaging_id_seq'::regclass) not null
		constraint product_packaging_pkey
			primary key,
	name varchar not null,
	sequence integer,
	product_id integer
		constraint product_packaging_product_id_fkey
			references product_product
				on delete set null,
	qty double precision,
	barcode varchar,
	company_id integer
		constraint product_packaging_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint product_packaging_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_packaging_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	height integer,
	width integer,
	packaging_length integer,
	max_weight double precision,
	shipper_package_code varchar,
	package_carrier_type varchar
);

comment on table product_packaging is 'Product Packaging';

comment on column product_packaging.name is 'Package Type';

comment on column product_packaging.sequence is 'Sequence';

comment on column product_packaging.product_id is 'Product';

comment on column product_packaging.qty is 'Contained Quantity';

comment on column product_packaging.barcode is 'Barcode';

comment on column product_packaging.company_id is 'Company';

comment on column product_packaging.create_uid is 'Created by';

comment on column product_packaging.create_date is 'Created on';

comment on column product_packaging.write_uid is 'Last Updated by';

comment on column product_packaging.write_date is 'Last Updated on';

comment on column product_packaging.height is 'Height';

comment on column product_packaging.width is 'Width';

comment on column product_packaging.packaging_length is 'Length';

comment on column product_packaging.max_weight is 'Max Weight';

comment on column product_packaging.shipper_package_code is 'Package Code';

comment on column product_packaging.package_carrier_type is 'Carrier';

alter table product_packaging owner to postgres;

create index product_packaging_company_id_index
	on product_packaging (company_id);

create table product_pricelist_item
(
	id integer default nextval('product_pricelist_item_id_seq'::regclass) not null
		constraint product_pricelist_item_pkey
			primary key,
	product_tmpl_id integer
		constraint product_pricelist_item_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	product_id integer
		constraint product_pricelist_item_product_id_fkey
			references product_product
				on delete cascade,
	categ_id integer
		constraint product_pricelist_item_categ_id_fkey
			references product_category
				on delete cascade,
	min_quantity numeric,
	applied_on varchar not null,
	base varchar not null,
	base_pricelist_id integer
		constraint product_pricelist_item_base_pricelist_id_fkey
			references product_pricelist
				on delete set null,
	pricelist_id integer not null
		constraint product_pricelist_item_pricelist_id_fkey
			references product_pricelist
				on delete cascade,
	price_surcharge numeric,
	price_discount numeric,
	price_round numeric,
	price_min_margin numeric,
	price_max_margin numeric,
	company_id integer
		constraint product_pricelist_item_company_id_fkey
			references res_company
				on delete set null,
	currency_id integer
		constraint product_pricelist_item_currency_id_fkey
			references res_currency
				on delete set null,
	active boolean,
	date_start timestamp,
	date_end timestamp,
	compute_price varchar not null,
	fixed_price numeric,
	percent_price double precision,
	create_uid integer
		constraint product_pricelist_item_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_pricelist_item_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_pricelist_item is 'Pricelist Rule';

comment on column product_pricelist_item.product_tmpl_id is 'Product';

comment on column product_pricelist_item.product_id is 'Product Variant';

comment on column product_pricelist_item.categ_id is 'Product Category';

comment on column product_pricelist_item.min_quantity is 'Min. Quantity';

comment on column product_pricelist_item.applied_on is 'Apply On';

comment on column product_pricelist_item.base is 'Based on';

comment on column product_pricelist_item.base_pricelist_id is 'Other Pricelist';

comment on column product_pricelist_item.pricelist_id is 'Pricelist';

comment on column product_pricelist_item.price_surcharge is 'Price Surcharge';

comment on column product_pricelist_item.price_discount is 'Price Discount';

comment on column product_pricelist_item.price_round is 'Price Rounding';

comment on column product_pricelist_item.price_min_margin is 'Min. Price Margin';

comment on column product_pricelist_item.price_max_margin is 'Max. Price Margin';

comment on column product_pricelist_item.company_id is 'Company';

comment on column product_pricelist_item.currency_id is 'Currency';

comment on column product_pricelist_item.active is 'Active';

comment on column product_pricelist_item.date_start is 'Start Date';

comment on column product_pricelist_item.date_end is 'End Date';

comment on column product_pricelist_item.compute_price is 'Compute Price';

comment on column product_pricelist_item.fixed_price is 'Fixed Price';

comment on column product_pricelist_item.percent_price is 'Percentage Price';

comment on column product_pricelist_item.create_uid is 'Created by';

comment on column product_pricelist_item.create_date is 'Created on';

comment on column product_pricelist_item.write_uid is 'Last Updated by';

comment on column product_pricelist_item.write_date is 'Last Updated on';

alter table product_pricelist_item owner to postgres;

create index product_pricelist_item_compute_price_index
	on product_pricelist_item (compute_price);

create index product_pricelist_item_pricelist_id_index
	on product_pricelist_item (pricelist_id);

create index product_product_combination_indices_index
	on product_product (combination_indices);

create index product_product_combination_unique
	on product_product (product_tmpl_id, combination_indices);

create index product_product_default_code_index
	on product_product (default_code);

create index product_product_message_main_attachment_id_index
	on product_product (message_main_attachment_id);

create index product_product_product_tmpl_id_index
	on product_product (product_tmpl_id);

create table product_product_stock_inventory_rel
(
	stock_inventory_id integer not null
		constraint product_product_stock_inventory_rel_stock_inventory_id_fkey
			references stock_inventory
				on delete cascade,
	product_product_id integer not null
		constraint product_product_stock_inventory_rel_product_product_id_fkey
			references product_product
				on delete cascade,
	constraint product_product_stock_inventory_rel_pkey
		primary key (stock_inventory_id, product_product_id)
);

comment on table product_product_stock_inventory_rel is 'RELATION BETWEEN stock_inventory AND product_product';

alter table product_product_stock_inventory_rel owner to postgres;

create index product_product_stock_invento_product_product_id_stock_inve_idx
	on product_product_stock_inventory_rel (product_product_id, stock_inventory_id);

create table product_replenish
(
	id integer default nextval('product_replenish_id_seq'::regclass) not null
		constraint product_replenish_pkey
			primary key,
	product_id integer not null
		constraint product_replenish_product_id_fkey
			references product_product
				on delete cascade,
	product_tmpl_id integer not null
		constraint product_replenish_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	product_has_variants boolean not null,
	product_uom_id integer not null
		constraint product_replenish_product_uom_id_fkey
			references uom_uom
				on delete cascade,
	quantity double precision not null,
	date_planned timestamp not null,
	warehouse_id integer not null
		constraint product_replenish_warehouse_id_fkey
			references stock_warehouse
				on delete cascade,
	company_id integer
		constraint product_replenish_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint product_replenish_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_replenish_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_replenish is 'Product Replenish';

comment on column product_replenish.product_id is 'Product';

comment on column product_replenish.product_tmpl_id is 'Product Template';

comment on column product_replenish.product_has_variants is 'Has variants';

comment on column product_replenish.product_uom_id is 'Unity of measure';

comment on column product_replenish.quantity is 'Quantity';

comment on column product_replenish.date_planned is 'Scheduled Date';

comment on column product_replenish.warehouse_id is 'Warehouse';

comment on column product_replenish.company_id is 'Company';

comment on column product_replenish.create_uid is 'Created by';

comment on column product_replenish.create_date is 'Created on';

comment on column product_replenish.write_uid is 'Last Updated by';

comment on column product_replenish.write_date is 'Last Updated on';

alter table product_replenish owner to postgres;

create table product_replenish_stock_location_route_rel
(
	product_replenish_id integer not null
		constraint product_replenish_stock_location_rout_product_replenish_id_fkey
			references product_replenish
				on delete cascade,
	stock_location_route_id integer not null
		constraint product_replenish_stock_location_r_stock_location_route_id_fkey
			references stock_location_route
				on delete cascade,
	constraint product_replenish_stock_location_route_rel_pkey
		primary key (product_replenish_id, stock_location_route_id)
);

comment on table product_replenish_stock_location_route_rel is 'RELATION BETWEEN product_replenish AND stock_location_route';

alter table product_replenish_stock_location_route_rel owner to postgres;

create index product_replenish_stock_locat_stock_location_route_id_produ_idx
	on product_replenish_stock_location_route_rel (stock_location_route_id, product_replenish_id);

create table product_supplier_taxes_rel
(
	prod_id integer not null
		constraint product_supplier_taxes_rel_prod_id_fkey
			references product_template
				on delete cascade,
	tax_id integer not null
		constraint product_supplier_taxes_rel_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint product_supplier_taxes_rel_pkey
		primary key (prod_id, tax_id)
);

comment on table product_supplier_taxes_rel is 'RELATION BETWEEN product_template AND account_tax';

alter table product_supplier_taxes_rel owner to postgres;

create index product_supplier_taxes_rel_tax_id_prod_id_idx
	on product_supplier_taxes_rel (tax_id, prod_id);

create table product_supplierinfo
(
	id integer default nextval('product_supplierinfo_id_seq'::regclass) not null
		constraint product_supplierinfo_pkey
			primary key,
	name integer not null
		constraint product_supplierinfo_name_fkey
			references res_partner
				on delete cascade,
	product_name varchar,
	product_code varchar,
	sequence integer,
	min_qty numeric not null,
	price numeric not null,
	company_id integer,
	currency_id integer not null
		constraint product_supplierinfo_currency_id_fkey
			references res_currency
				on delete restrict,
	date_start date,
	date_end date,
	product_id integer
		constraint product_supplierinfo_product_id_fkey
			references product_product
				on delete set null,
	product_tmpl_id integer
		constraint product_supplierinfo_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	delay integer not null,
	create_uid integer
		constraint product_supplierinfo_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_supplierinfo_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_supplierinfo is 'Supplier Pricelist';

comment on column product_supplierinfo.name is 'Vendor';

comment on column product_supplierinfo.product_name is 'Vendor Product Name';

comment on column product_supplierinfo.product_code is 'Vendor Product Code';

comment on column product_supplierinfo.sequence is 'Sequence';

comment on column product_supplierinfo.min_qty is 'Quantity';

comment on column product_supplierinfo.price is 'Price';

comment on column product_supplierinfo.company_id is 'Company';

comment on column product_supplierinfo.currency_id is 'Currency';

comment on column product_supplierinfo.date_start is 'Start Date';

comment on column product_supplierinfo.date_end is 'End Date';

comment on column product_supplierinfo.product_id is 'Product Variant';

comment on column product_supplierinfo.product_tmpl_id is 'Product Template';

comment on column product_supplierinfo.delay is 'Delivery Lead Time';

comment on column product_supplierinfo.create_uid is 'Created by';

comment on column product_supplierinfo.create_date is 'Created on';

comment on column product_supplierinfo.write_uid is 'Last Updated by';

comment on column product_supplierinfo.write_date is 'Last Updated on';

alter table product_supplierinfo owner to postgres;

create index product_supplierinfo_company_id_index
	on product_supplierinfo (company_id);

create index product_supplierinfo_product_tmpl_id_index
	on product_supplierinfo (product_tmpl_id);

create table product_taxes_rel
(
	prod_id integer not null
		constraint product_taxes_rel_prod_id_fkey
			references product_template
				on delete cascade,
	tax_id integer not null
		constraint product_taxes_rel_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint product_taxes_rel_pkey
		primary key (prod_id, tax_id)
);

comment on table product_taxes_rel is 'RELATION BETWEEN product_template AND account_tax';

alter table product_taxes_rel owner to postgres;

create index product_taxes_rel_tax_id_prod_id_idx
	on product_taxes_rel (tax_id, prod_id);

create index product_template_company_id_index
	on product_template (company_id);

create index product_template_message_main_attachment_id_index
	on product_template (message_main_attachment_id);

create index product_template_name_index
	on product_template (name);

create table product_template_attribute_line
(
	id integer default nextval('product_template_attribute_line_id_seq'::regclass) not null
		constraint product_template_attribute_line_pkey
			primary key,
	active boolean,
	product_tmpl_id integer not null
		constraint product_template_attribute_line_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	attribute_id integer not null
		constraint product_template_attribute_line_attribute_id_fkey
			references product_attribute
				on delete restrict,
	create_uid integer
		constraint product_template_attribute_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_template_attribute_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_template_attribute_line is 'Product Template Attribute Line';

comment on column product_template_attribute_line.active is 'Active';

comment on column product_template_attribute_line.product_tmpl_id is 'Product Template';

comment on column product_template_attribute_line.attribute_id is 'Attribute';

comment on column product_template_attribute_line.create_uid is 'Created by';

comment on column product_template_attribute_line.create_date is 'Created on';

comment on column product_template_attribute_line.write_uid is 'Last Updated by';

comment on column product_template_attribute_line.write_date is 'Last Updated on';

alter table product_template_attribute_line owner to postgres;

create table product_attribute_value_product_template_attribute_line_rel
(
	product_attribute_value_id integer not null
		constraint product_attribute_value_product_product_attribute_value_id_fkey
			references product_attribute_value
				on delete restrict,
	product_template_attribute_line_id integer not null
		constraint product_attribute_value_produ_product_template_attribute_l_fkey
			references product_template_attribute_line
				on delete cascade,
	constraint product_attribute_value_product_template_attribute_line_re_pkey
		primary key (product_attribute_value_id, product_template_attribute_line_id)
);

comment on table product_attribute_value_product_template_attribute_line_rel is 'RELATION BETWEEN product_attribute_value AND product_template_attribute_line';

alter table product_attribute_value_product_template_attribute_line_rel owner to postgres;

create index product_attribute_value_produ_product_template_attribute_li_idx
	on product_attribute_value_product_template_attribute_line_rel (product_template_attribute_line_id, product_attribute_value_id);

create index product_template_attribute_line_attribute_id_index
	on product_template_attribute_line (attribute_id);

create index product_template_attribute_line_product_tmpl_id_index
	on product_template_attribute_line (product_tmpl_id);

create table product_template_attribute_value
(
	id integer default nextval('product_template_attribute_value_id_seq'::regclass) not null
		constraint product_template_attribute_value_pkey
			primary key,
	ptav_active boolean,
	product_attribute_value_id integer not null
		constraint product_template_attribute_valu_product_attribute_value_id_fkey
			references product_attribute_value
				on delete cascade,
	attribute_line_id integer not null
		constraint product_template_attribute_value_attribute_line_id_fkey
			references product_template_attribute_line
				on delete cascade,
	price_extra numeric,
	product_tmpl_id integer
		constraint product_template_attribute_value_product_tmpl_id_fkey
			references product_template
				on delete set null,
	attribute_id integer
		constraint product_template_attribute_value_attribute_id_fkey
			references product_attribute
				on delete set null,
	create_uid integer
		constraint product_template_attribute_value_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_template_attribute_value_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	constraint product_template_attribute_value_attribute_value_unique
		unique (attribute_line_id, product_attribute_value_id)
);

comment on table product_template_attribute_value is 'Product Template Attribute Value';

comment on column product_template_attribute_value.ptav_active is 'Active';

comment on column product_template_attribute_value.product_attribute_value_id is 'Attribute Value';

comment on column product_template_attribute_value.attribute_line_id is 'Attribute Line';

comment on column product_template_attribute_value.price_extra is 'Value Price Extra';

comment on column product_template_attribute_value.product_tmpl_id is 'Product Template';

comment on column product_template_attribute_value.attribute_id is 'Attribute';

comment on column product_template_attribute_value.create_uid is 'Created by';

comment on column product_template_attribute_value.create_date is 'Created on';

comment on column product_template_attribute_value.write_uid is 'Last Updated by';

comment on column product_template_attribute_value.write_date is 'Last Updated on';

alter table product_template_attribute_value owner to postgres;

create table product_template_attribute_exclusion
(
	id integer default nextval('product_template_attribute_exclusion_id_seq'::regclass) not null
		constraint product_template_attribute_exclusion_pkey
			primary key,
	product_template_attribute_value_id integer
		constraint product_template_attribute_ex_product_template_attribute_v_fkey
			references product_template_attribute_value
				on delete cascade,
	product_tmpl_id integer not null
		constraint product_template_attribute_exclusion_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	create_uid integer
		constraint product_template_attribute_exclusion_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_template_attribute_exclusion_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table product_template_attribute_exclusion is 'Product Template Attribute Exclusion';

comment on column product_template_attribute_exclusion.product_template_attribute_value_id is 'Attribute Value';

comment on column product_template_attribute_exclusion.product_tmpl_id is 'Product Template';

comment on column product_template_attribute_exclusion.create_uid is 'Created by';

comment on column product_template_attribute_exclusion.create_date is 'Created on';

comment on column product_template_attribute_exclusion.write_uid is 'Last Updated by';

comment on column product_template_attribute_exclusion.write_date is 'Last Updated on';

alter table product_template_attribute_exclusion owner to postgres;

create table product_attr_exclusion_value_ids_rel
(
	product_template_attribute_exclusion_id integer not null
		constraint product_attr_exclusion_value__product_template_attribute_e_fkey
			references product_template_attribute_exclusion
				on delete cascade,
	product_template_attribute_value_id integer not null
		constraint product_attr_exclusion_value__product_template_attribute_v_fkey
			references product_template_attribute_value
				on delete cascade,
	constraint product_attr_exclusion_value_ids_rel_pkey
		primary key (product_template_attribute_exclusion_id, product_template_attribute_value_id)
);

comment on table product_attr_exclusion_value_ids_rel is 'RELATION BETWEEN product_template_attribute_exclusion AND product_template_attribute_value';

alter table product_attr_exclusion_value_ids_rel owner to postgres;

create index product_attr_exclusion_value__product_template_attribute_va_idx
	on product_attr_exclusion_value_ids_rel (product_template_attribute_value_id, product_template_attribute_exclusion_id);

create index product_template_attribute_exclusion_product_template_attribute
	on product_template_attribute_exclusion (product_template_attribute_value_id);

create index product_template_attribute_exclusion_product_tmpl_id_index
	on product_template_attribute_exclusion (product_tmpl_id);

create index product_template_attribute_value_attribute_id_index
	on product_template_attribute_value (attribute_id);

create index product_template_attribute_value_attribute_line_id_index
	on product_template_attribute_value (attribute_line_id);

create index product_template_attribute_value_product_attribute_value_id_ind
	on product_template_attribute_value (product_attribute_value_id);

create index product_template_attribute_value_product_tmpl_id_index
	on product_template_attribute_value (product_tmpl_id);

create table product_variant_combination
(
	product_product_id integer not null
		constraint product_variant_combination_product_product_id_fkey
			references product_product
				on delete cascade,
	product_template_attribute_value_id integer not null
		constraint product_variant_combination_product_template_attribute_val_fkey
			references product_template_attribute_value
				on delete restrict,
	constraint product_variant_combination_pkey
		primary key (product_product_id, product_template_attribute_value_id)
);

comment on table product_variant_combination is 'RELATION BETWEEN product_product AND product_template_attribute_value';

alter table product_variant_combination owner to postgres;

create index product_variant_combination_product_template_attribute_valu_idx
	on product_variant_combination (product_template_attribute_value_id, product_product_id);

create table res_config_settings
(
	id integer default nextval('res_config_settings_id_seq'::regclass) not null
		constraint res_config_settings_pkey
			primary key,
	create_uid integer
		constraint res_config_settings_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint res_config_settings_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	company_id integer not null
		constraint res_config_settings_company_id_fkey
			references res_company
				on delete cascade,
	user_default_rights boolean,
	external_email_server_default boolean,
	module_base_import boolean,
	module_google_calendar boolean,
	module_microsoft_calendar boolean,
	module_google_drive boolean,
	module_google_spreadsheet boolean,
	module_auth_oauth boolean,
	module_auth_ldap boolean,
	module_base_gengo boolean,
	module_account_inter_company_rules boolean,
	module_pad boolean,
	module_voip boolean,
	module_web_unsplash boolean,
	module_partner_autocomplete boolean,
	module_base_geolocalize boolean,
	module_google_recaptcha boolean,
	group_multi_currency boolean,
	show_effect boolean,
	fail_counter integer,
	alias_domain varchar,
	map_box_token varchar,
	unsplash_access_key varchar,
	auth_signup_reset_password boolean,
	auth_signup_uninvited varchar,
	auth_signup_template_user_id integer
		constraint res_config_settings_auth_signup_template_user_id_fkey
			references res_users
				on delete set null,
	group_discount_per_so_line boolean,
	group_uom boolean,
	group_product_variant boolean,
	module_sale_product_configurator boolean,
	module_sale_product_matrix boolean,
	group_stock_packaging boolean,
	group_product_pricelist boolean,
	group_sale_pricelist boolean,
	product_pricelist_setting varchar,
	product_weight_in_lbs varchar,
	product_volume_volume_in_cubic_feet varchar,
	disable_redirect_firebase_dynamic_link boolean,
	enable_ocn boolean,
	digest_emails boolean,
	digest_id integer
		constraint res_config_settings_digest_id_fkey
			references digest_digest
				on delete set null,
	chart_template_id integer
		constraint res_config_settings_chart_template_id_fkey
			references account_chart_template
				on delete set null,
	module_account_accountant boolean,
	group_analytic_accounting boolean,
	group_analytic_tags boolean,
	group_warning_account boolean,
	group_cash_rounding boolean,
	group_show_line_subtotals_tax_excluded boolean,
	group_show_line_subtotals_tax_included boolean,
	group_show_sale_receipts boolean,
	group_show_purchase_receipts boolean,
	show_line_subtotals_tax_selection varchar not null,
	module_account_budget boolean,
	module_account_payment boolean,
	module_account_reports boolean,
	module_account_check_printing boolean,
	module_account_batch_payment boolean,
	module_account_sepa boolean,
	module_account_sepa_direct_debit boolean,
	module_account_plaid boolean,
	module_account_yodlee boolean,
	module_account_bank_statement_import_qif boolean,
	module_account_bank_statement_import_ofx boolean,
	module_account_bank_statement_import_csv boolean,
	module_account_bank_statement_import_camt boolean,
	module_currency_rate_live boolean,
	module_account_intrastat boolean,
	module_product_margin boolean,
	module_l10n_eu_service boolean,
	module_account_taxcloud boolean,
	module_account_invoice_extract boolean,
	module_snailmail_account boolean,
	use_invoice_terms boolean,
	module_account_predictive_bills boolean,
	group_fiscal_year boolean,
	group_auto_done_setting boolean,
	module_sale_margin boolean,
	use_quotation_validity_days boolean,
	group_warning_sale boolean,
	group_sale_delivery_address boolean,
	group_proforma_sales boolean,
	default_invoice_policy varchar,
	deposit_default_product_id integer
		constraint res_config_settings_deposit_default_product_id_fkey
			references product_product
				on delete set null,
	module_delivery boolean,
	module_delivery_dhl boolean,
	module_delivery_fedex boolean,
	module_delivery_ups boolean,
	module_delivery_usps boolean,
	module_delivery_bpost boolean,
	module_delivery_easypost boolean,
	module_product_email_template boolean,
	module_sale_coupon boolean,
	module_sale_amazon boolean,
	automatic_invoice boolean,
	template_id integer
		constraint res_config_settings_template_id_fkey
			references mail_template
				on delete set null,
	confirmation_template_id integer
		constraint res_config_settings_confirmation_template_id_fkey
			references mail_template
				on delete set null,
	group_sale_order_template boolean,
	module_sale_quotation_builder boolean,
	module_procurement_jit varchar,
	module_product_expiry boolean,
	group_stock_production_lot boolean,
	group_lot_on_delivery_slip boolean,
	group_stock_tracking_lot boolean,
	group_stock_tracking_owner boolean,
	group_stock_adv_location boolean,
	group_warning_stock boolean,
	group_stock_sign_delivery boolean,
	module_stock_picking_batch boolean,
	module_stock_barcode boolean,
	module_stock_sms boolean,
	group_stock_multi_locations boolean,
	module_stock_landed_costs boolean,
	group_display_incoterm boolean,
	group_lot_on_invoice boolean,
	use_security_lead boolean,
	default_picking_policy varchar not null,
	lock_confirmed_po boolean,
	po_order_approval boolean,
	default_purchase_method varchar,
	group_warning_purchase boolean,
	module_account_3way_match boolean,
	module_purchase_requisition boolean,
	module_purchase_product_matrix boolean,
	use_po_lead boolean,
	group_send_reminder boolean,
	module_stock_dropshipping boolean,
	is_installed_sale boolean
);

comment on table res_config_settings is 'Config Settings';

comment on column res_config_settings.create_uid is 'Created by';

comment on column res_config_settings.create_date is 'Created on';

comment on column res_config_settings.write_uid is 'Last Updated by';

comment on column res_config_settings.write_date is 'Last Updated on';

comment on column res_config_settings.company_id is 'Company';

comment on column res_config_settings.user_default_rights is 'Default Access Rights';

comment on column res_config_settings.external_email_server_default is 'External Email Servers';

comment on column res_config_settings.module_base_import is 'Allow users to import data from CSV/XLS/XLSX/ODS files';

comment on column res_config_settings.module_google_calendar is 'Allow the users to synchronize their calendar  with Google Calendar';

comment on column res_config_settings.module_microsoft_calendar is 'Allow the users to synchronize their calendar with Outlook Calendar';

comment on column res_config_settings.module_google_drive is 'Attach Google documents to any record';

comment on column res_config_settings.module_google_spreadsheet is 'Google Spreadsheet';

comment on column res_config_settings.module_auth_oauth is 'Use external authentication providers (OAuth)';

comment on column res_config_settings.module_auth_ldap is 'LDAP Authentication';

comment on column res_config_settings.module_base_gengo is 'Translate Your Website with Gengo';

comment on column res_config_settings.module_account_inter_company_rules is 'Manage Inter Company';

comment on column res_config_settings.module_pad is 'Collaborative Pads';

comment on column res_config_settings.module_voip is 'Asterisk (VoIP)';

comment on column res_config_settings.module_web_unsplash is 'Unsplash Image Library';

comment on column res_config_settings.module_partner_autocomplete is 'Partner Autocomplete';

comment on column res_config_settings.module_base_geolocalize is 'GeoLocalize';

comment on column res_config_settings.module_google_recaptcha is 'reCAPTCHA: Easy on Humans, Hard on Bots';

comment on column res_config_settings.group_multi_currency is 'Multi-Currencies';

comment on column res_config_settings.show_effect is 'Show Effect';

comment on column res_config_settings.fail_counter is 'Fail Mail';

comment on column res_config_settings.alias_domain is 'Alias Domain';

comment on column res_config_settings.map_box_token is 'Token Map Box';

comment on column res_config_settings.unsplash_access_key is 'Access Key';

comment on column res_config_settings.auth_signup_reset_password is 'Enable password reset from Login page';

comment on column res_config_settings.auth_signup_uninvited is 'Customer Account';

comment on column res_config_settings.auth_signup_template_user_id is 'Template user for new users created through signup';

comment on column res_config_settings.group_discount_per_so_line is 'Discounts';

comment on column res_config_settings.group_uom is 'Units of Measure';

comment on column res_config_settings.group_product_variant is 'Variants';

comment on column res_config_settings.module_sale_product_configurator is 'Product Configurator';

comment on column res_config_settings.module_sale_product_matrix is 'Sales Grid Entry';

comment on column res_config_settings.group_stock_packaging is 'Product Packagings';

comment on column res_config_settings.group_product_pricelist is 'Pricelists';

comment on column res_config_settings.group_sale_pricelist is 'Advanced Pricelists';

comment on column res_config_settings.product_pricelist_setting is 'Pricelists Method';

comment on column res_config_settings.product_weight_in_lbs is 'Weight unit of measure';

comment on column res_config_settings.product_volume_volume_in_cubic_feet is 'Volume unit of measure';

comment on column res_config_settings.disable_redirect_firebase_dynamic_link is 'Disable link redirection to mobile app';

comment on column res_config_settings.enable_ocn is 'Push Notifications';

comment on column res_config_settings.digest_emails is 'Digest Emails';

comment on column res_config_settings.digest_id is 'Digest Email';

comment on column res_config_settings.chart_template_id is 'Template';

comment on column res_config_settings.module_account_accountant is 'Accounting';

comment on column res_config_settings.group_analytic_accounting is 'Analytic Accounting';

comment on column res_config_settings.group_analytic_tags is 'Analytic Tags';

comment on column res_config_settings.group_warning_account is 'Warnings in Invoices';

comment on column res_config_settings.group_cash_rounding is 'Cash Rounding';

comment on column res_config_settings.group_show_line_subtotals_tax_excluded is 'Show line subtotals without taxes (B2B)';

comment on column res_config_settings.group_show_line_subtotals_tax_included is 'Show line subtotals with taxes (B2C)';

comment on column res_config_settings.group_show_sale_receipts is 'Sale Receipt';

comment on column res_config_settings.group_show_purchase_receipts is 'Purchase Receipt';

comment on column res_config_settings.show_line_subtotals_tax_selection is 'Line Subtotals Tax Display';

comment on column res_config_settings.module_account_budget is 'Budget Management';

comment on column res_config_settings.module_account_payment is 'Invoice Online Payment';

comment on column res_config_settings.module_account_reports is 'Dynamic Reports';

comment on column res_config_settings.module_account_check_printing is 'Allow check printing and deposits';

comment on column res_config_settings.module_account_batch_payment is 'Use batch payments';

comment on column res_config_settings.module_account_sepa is 'SEPA Credit Transfer (SCT)';

comment on column res_config_settings.module_account_sepa_direct_debit is 'Use SEPA Direct Debit';

comment on column res_config_settings.module_account_plaid is 'Plaid Connector';

comment on column res_config_settings.module_account_yodlee is 'Bank Interface - Sync your bank feeds automatically';

comment on column res_config_settings.module_account_bank_statement_import_qif is 'Import .qif files';

comment on column res_config_settings.module_account_bank_statement_import_ofx is 'Import in .ofx format';

comment on column res_config_settings.module_account_bank_statement_import_csv is 'Import in .csv format';

comment on column res_config_settings.module_account_bank_statement_import_camt is 'Import in CAMT.053 format';

comment on column res_config_settings.module_currency_rate_live is 'Automatic Currency Rates';

comment on column res_config_settings.module_account_intrastat is 'Intrastat';

comment on column res_config_settings.module_product_margin is 'Allow Product Margin';

comment on column res_config_settings.module_l10n_eu_service is 'EU Intra-community Distance Selling';

comment on column res_config_settings.module_account_taxcloud is 'Account TaxCloud';

comment on column res_config_settings.module_account_invoice_extract is 'Bill Digitalization';

comment on column res_config_settings.module_snailmail_account is 'Snailmail';

comment on column res_config_settings.use_invoice_terms is 'Default Terms & Conditions';

comment on column res_config_settings.module_account_predictive_bills is 'Account Predictive Bills';

comment on column res_config_settings.group_fiscal_year is 'Fiscal Years';

comment on column res_config_settings.group_auto_done_setting is 'Lock Confirmed Sales';

comment on column res_config_settings.module_sale_margin is 'Margins';

comment on column res_config_settings.use_quotation_validity_days is 'Default Quotation Validity';

comment on column res_config_settings.group_warning_sale is 'Sale Order Warnings';

comment on column res_config_settings.group_sale_delivery_address is 'Customer Addresses';

comment on column res_config_settings.group_proforma_sales is 'Pro-Forma Invoice';

comment on column res_config_settings.default_invoice_policy is 'Invoicing Policy';

comment on column res_config_settings.deposit_default_product_id is 'Deposit Product';

comment on column res_config_settings.module_delivery is 'Delivery Methods';

comment on column res_config_settings.module_delivery_dhl is 'DHL USA Connector';

comment on column res_config_settings.module_delivery_fedex is 'FedEx Connector';

comment on column res_config_settings.module_delivery_ups is 'UPS Connector';

comment on column res_config_settings.module_delivery_usps is 'USPS Connector';

comment on column res_config_settings.module_delivery_bpost is 'bpost Connector';

comment on column res_config_settings.module_delivery_easypost is 'Easypost Connector';

comment on column res_config_settings.module_product_email_template is 'Specific Email';

comment on column res_config_settings.module_sale_coupon is 'Coupons & Promotions';

comment on column res_config_settings.module_sale_amazon is 'Amazon Sync';

comment on column res_config_settings.automatic_invoice is 'Automatic Invoice';

comment on column res_config_settings.template_id is 'Email Template';

comment on column res_config_settings.confirmation_template_id is 'Confirmation Email';

comment on column res_config_settings.group_sale_order_template is 'Quotation Templates';

comment on column res_config_settings.module_sale_quotation_builder is 'Quotation Builder';

comment on column res_config_settings.module_procurement_jit is 'Reservation';

comment on column res_config_settings.module_product_expiry is 'Expiration Dates';

comment on column res_config_settings.group_stock_production_lot is 'Lots & Serial Numbers';

comment on column res_config_settings.group_lot_on_delivery_slip is 'Display Lots & Serial Numbers on Delivery Slips';

comment on column res_config_settings.group_stock_tracking_lot is 'Packages';

comment on column res_config_settings.group_stock_tracking_owner is 'Consignment';

comment on column res_config_settings.group_stock_adv_location is 'Multi-Step Routes';

comment on column res_config_settings.group_warning_stock is 'Warnings for Stock';

comment on column res_config_settings.group_stock_sign_delivery is 'Signature';

comment on column res_config_settings.module_stock_picking_batch is 'Batch Pickings';

comment on column res_config_settings.module_stock_barcode is 'Barcode Scanner';

comment on column res_config_settings.module_stock_sms is 'SMS Confirmation';

comment on column res_config_settings.group_stock_multi_locations is 'Storage Locations';

comment on column res_config_settings.module_stock_landed_costs is 'Landed Costs';

comment on column res_config_settings.group_display_incoterm is 'Incoterms';

comment on column res_config_settings.group_lot_on_invoice is 'Display Lots & Serial Numbers on Invoices';

comment on column res_config_settings.use_security_lead is 'Security Lead Time for Sales';

comment on column res_config_settings.default_picking_policy is 'Picking Policy';

comment on column res_config_settings.lock_confirmed_po is 'Lock Confirmed Orders';

comment on column res_config_settings.po_order_approval is 'Purchase Order Approval';

comment on column res_config_settings.default_purchase_method is 'Bill Control';

comment on column res_config_settings.group_warning_purchase is 'Purchase Warnings';

comment on column res_config_settings.module_account_3way_match is '3-way matching: purchases, receptions and bills';

comment on column res_config_settings.module_purchase_requisition is 'Purchase Agreements';

comment on column res_config_settings.module_purchase_product_matrix is 'Purchase Grid Entry';

comment on column res_config_settings.use_po_lead is 'Security Lead Time for Purchase';

comment on column res_config_settings.group_send_reminder is 'Receipt Reminder';

comment on column res_config_settings.module_stock_dropshipping is 'Dropshipping';

comment on column res_config_settings.is_installed_sale is 'Is the Sale Module Installed';

alter table res_config_settings owner to postgres;

create table sale_advance_payment_inv
(
	id integer default nextval('sale_advance_payment_inv_id_seq'::regclass) not null
		constraint sale_advance_payment_inv_pkey
			primary key,
	advance_payment_method varchar not null,
	deduct_down_payments boolean,
	has_down_payments boolean,
	product_id integer
		constraint sale_advance_payment_inv_product_id_fkey
			references product_product
				on delete set null,
	count integer,
	amount numeric,
	currency_id integer
		constraint sale_advance_payment_inv_currency_id_fkey
			references res_currency
				on delete set null,
	fixed_amount numeric,
	deposit_account_id integer
		constraint sale_advance_payment_inv_deposit_account_id_fkey
			references account_account
				on delete set null,
	create_uid integer
		constraint sale_advance_payment_inv_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_advance_payment_inv_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_advance_payment_inv is 'Sales Advance Payment Invoice';

comment on column sale_advance_payment_inv.advance_payment_method is 'Create Invoice';

comment on column sale_advance_payment_inv.deduct_down_payments is 'Deduct down payments';

comment on column sale_advance_payment_inv.has_down_payments is 'Has down payments';

comment on column sale_advance_payment_inv.product_id is 'Down Payment Product';

comment on column sale_advance_payment_inv.count is 'Order Count';

comment on column sale_advance_payment_inv.amount is 'Down Payment Amount';

comment on column sale_advance_payment_inv.currency_id is 'Currency';

comment on column sale_advance_payment_inv.fixed_amount is 'Down Payment Amount (Fixed)';

comment on column sale_advance_payment_inv.deposit_account_id is 'Income Account';

comment on column sale_advance_payment_inv.create_uid is 'Created by';

comment on column sale_advance_payment_inv.create_date is 'Created on';

comment on column sale_advance_payment_inv.write_uid is 'Last Updated by';

comment on column sale_advance_payment_inv.write_date is 'Last Updated on';

alter table sale_advance_payment_inv owner to postgres;

create table account_tax_sale_advance_payment_inv_rel
(
	sale_advance_payment_inv_id integer not null
		constraint account_tax_sale_advance_payme_sale_advance_payment_inv_id_fkey
			references sale_advance_payment_inv
				on delete cascade,
	account_tax_id integer not null
		constraint account_tax_sale_advance_payment_inv_rel_account_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint account_tax_sale_advance_payment_inv_rel_pkey
		primary key (sale_advance_payment_inv_id, account_tax_id)
);

comment on table account_tax_sale_advance_payment_inv_rel is 'RELATION BETWEEN sale_advance_payment_inv AND account_tax';

alter table account_tax_sale_advance_payment_inv_rel owner to postgres;

create index account_tax_sale_advance_paym_account_tax_id_sale_advance_p_idx
	on account_tax_sale_advance_payment_inv_rel (account_tax_id, sale_advance_payment_inv_id);

create table sale_order_template_line
(
	id integer default nextval('sale_order_template_line_id_seq'::regclass) not null
		constraint sale_order_template_line_pkey
			primary key,
	sequence integer,
	sale_order_template_id integer not null
		constraint sale_order_template_line_sale_order_template_id_fkey
			references sale_order_template
				on delete cascade,
	company_id integer
		constraint sale_order_template_line_company_id_fkey
			references res_company
				on delete set null,
	name text not null,
	product_id integer
		constraint sale_order_template_line_product_id_fkey
			references product_product
				on delete set null,
	product_uom_qty numeric not null,
	product_uom_id integer
		constraint sale_order_template_line_product_uom_id_fkey
			references uom_uom
				on delete set null,
	display_type varchar,
	create_uid integer
		constraint sale_order_template_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_template_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_order_template_line is 'Quotation Template Line';

comment on column sale_order_template_line.sequence is 'Sequence';

comment on column sale_order_template_line.sale_order_template_id is 'Quotation Template Reference';

comment on column sale_order_template_line.company_id is 'Company';

comment on column sale_order_template_line.name is 'Description';

comment on column sale_order_template_line.product_id is 'Product';

comment on column sale_order_template_line.product_uom_qty is 'Quantity';

comment on column sale_order_template_line.product_uom_id is 'Unit of Measure';

comment on column sale_order_template_line.display_type is 'Display Type';

comment on column sale_order_template_line.create_uid is 'Created by';

comment on column sale_order_template_line.create_date is 'Created on';

comment on column sale_order_template_line.write_uid is 'Last Updated by';

comment on column sale_order_template_line.write_date is 'Last Updated on';

alter table sale_order_template_line owner to postgres;

create index sale_order_template_line_company_id_index
	on sale_order_template_line (company_id);

create index sale_order_template_line_sale_order_template_id_index
	on sale_order_template_line (sale_order_template_id);

create table sale_order_template_option
(
	id integer default nextval('sale_order_template_option_id_seq'::regclass) not null
		constraint sale_order_template_option_pkey
			primary key,
	sale_order_template_id integer not null
		constraint sale_order_template_option_sale_order_template_id_fkey
			references sale_order_template
				on delete cascade,
	company_id integer
		constraint sale_order_template_option_company_id_fkey
			references res_company
				on delete set null,
	name text not null,
	product_id integer not null
		constraint sale_order_template_option_product_id_fkey
			references product_product
				on delete restrict,
	uom_id integer not null
		constraint sale_order_template_option_uom_id_fkey
			references uom_uom
				on delete restrict,
	quantity numeric not null,
	create_uid integer
		constraint sale_order_template_option_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_template_option_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_order_template_option is 'Quotation Template Option';

comment on column sale_order_template_option.sale_order_template_id is 'Quotation Template Reference';

comment on column sale_order_template_option.company_id is 'Company';

comment on column sale_order_template_option.name is 'Description';

comment on column sale_order_template_option.product_id is 'Product';

comment on column sale_order_template_option.uom_id is 'Unit of Measure ';

comment on column sale_order_template_option.quantity is 'Quantity';

comment on column sale_order_template_option.create_uid is 'Created by';

comment on column sale_order_template_option.create_date is 'Created on';

comment on column sale_order_template_option.write_uid is 'Last Updated by';

comment on column sale_order_template_option.write_date is 'Last Updated on';

alter table sale_order_template_option owner to postgres;

create index sale_order_template_option_company_id_index
	on sale_order_template_option (company_id);

create index sale_order_template_option_sale_order_template_id_index
	on sale_order_template_option (sale_order_template_id);

create table stock_change_product_qty
(
	id integer default nextval('stock_change_product_qty_id_seq'::regclass) not null
		constraint stock_change_product_qty_pkey
			primary key,
	product_id integer not null
		constraint stock_change_product_qty_product_id_fkey
			references product_product
				on delete cascade,
	product_tmpl_id integer not null
		constraint stock_change_product_qty_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	new_quantity numeric not null,
	create_uid integer
		constraint stock_change_product_qty_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_change_product_qty_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_change_product_qty is 'Change Product Quantity';

comment on column stock_change_product_qty.product_id is 'Product';

comment on column stock_change_product_qty.product_tmpl_id is 'Template';

comment on column stock_change_product_qty.new_quantity is 'New Quantity on Hand';

comment on column stock_change_product_qty.create_uid is 'Created by';

comment on column stock_change_product_qty.create_date is 'Created on';

comment on column stock_change_product_qty.write_uid is 'Last Updated by';

comment on column stock_change_product_qty.write_date is 'Last Updated on';

alter table stock_change_product_qty owner to postgres;

create table stock_production_lot
(
	id integer default nextval('stock_production_lot_id_seq'::regclass) not null
		constraint stock_production_lot_pkey
			primary key,
	message_main_attachment_id integer
		constraint stock_production_lot_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	name varchar not null,
	ref varchar,
	product_id integer not null
		constraint stock_production_lot_product_id_fkey
			references product_product
				on delete restrict,
	product_uom_id integer
		constraint stock_production_lot_product_uom_id_fkey
			references uom_uom
				on delete set null,
	note text,
	company_id integer not null
		constraint stock_production_lot_company_id_fkey
			references res_company
				on delete restrict,
	create_uid integer
		constraint stock_production_lot_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_production_lot_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_production_lot is 'Lot/Serial';

comment on column stock_production_lot.message_main_attachment_id is 'Main Attachment';

comment on column stock_production_lot.name is 'Lot/Serial Number';

comment on column stock_production_lot.ref is 'Internal Reference';

comment on column stock_production_lot.product_id is 'Product';

comment on column stock_production_lot.product_uom_id is 'Unit of Measure';

comment on column stock_production_lot.note is 'Description';

comment on column stock_production_lot.company_id is 'Company';

comment on column stock_production_lot.create_uid is 'Created by';

comment on column stock_production_lot.create_date is 'Created on';

comment on column stock_production_lot.write_uid is 'Last Updated by';

comment on column stock_production_lot.write_date is 'Last Updated on';

alter table stock_production_lot owner to postgres;

create index stock_production_lot_company_id_index
	on stock_production_lot (company_id);

create index stock_production_lot_message_main_attachment_id_index
	on stock_production_lot (message_main_attachment_id);

create table stock_putaway_rule
(
	id integer default nextval('stock_putaway_rule_id_seq'::regclass) not null
		constraint stock_putaway_rule_pkey
			primary key,
	product_id integer
		constraint stock_putaway_rule_product_id_fkey
			references product_product
				on delete cascade,
	category_id integer
		constraint stock_putaway_rule_category_id_fkey
			references product_category
				on delete cascade,
	location_in_id integer not null
		constraint stock_putaway_rule_location_in_id_fkey
			references stock_location
				on delete cascade,
	location_out_id integer not null
		constraint stock_putaway_rule_location_out_id_fkey
			references stock_location
				on delete cascade,
	sequence integer,
	company_id integer not null
		constraint stock_putaway_rule_company_id_fkey
			references res_company
				on delete restrict,
	create_uid integer
		constraint stock_putaway_rule_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_putaway_rule_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_putaway_rule is 'Putaway Rule';

comment on column stock_putaway_rule.product_id is 'Product';

comment on column stock_putaway_rule.category_id is 'Product Category';

comment on column stock_putaway_rule.location_in_id is 'When product arrives in';

comment on column stock_putaway_rule.location_out_id is 'Store to';

comment on column stock_putaway_rule.sequence is 'Priority';

comment on column stock_putaway_rule.company_id is 'Company';

comment on column stock_putaway_rule.create_uid is 'Created by';

comment on column stock_putaway_rule.create_date is 'Created on';

comment on column stock_putaway_rule.write_uid is 'Last Updated by';

comment on column stock_putaway_rule.write_date is 'Last Updated on';

alter table stock_putaway_rule owner to postgres;

create index stock_putaway_rule_company_id_index
	on stock_putaway_rule (company_id);

create table stock_quant_package
(
	id integer default nextval('stock_quant_package_id_seq'::regclass) not null
		constraint stock_quant_package_pkey
			primary key,
	name varchar,
	packaging_id integer
		constraint stock_quant_package_packaging_id_fkey
			references product_packaging
				on delete set null,
	location_id integer
		constraint stock_quant_package_location_id_fkey
			references stock_location
				on delete set null,
	company_id integer
		constraint stock_quant_package_company_id_fkey
			references res_company
				on delete set null,
	create_uid integer
		constraint stock_quant_package_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_quant_package_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	shipping_weight double precision
);

comment on table stock_quant_package is 'Packages';

comment on column stock_quant_package.name is 'Package Reference';

comment on column stock_quant_package.packaging_id is 'Package Type';

comment on column stock_quant_package.location_id is 'Location';

comment on column stock_quant_package.company_id is 'Company';

comment on column stock_quant_package.create_uid is 'Created by';

comment on column stock_quant_package.create_date is 'Created on';

comment on column stock_quant_package.write_uid is 'Last Updated by';

comment on column stock_quant_package.write_date is 'Last Updated on';

comment on column stock_quant_package.shipping_weight is 'Shipping Weight';

alter table stock_quant_package owner to postgres;

create table stock_inventory_line
(
	id integer default nextval('stock_inventory_line_id_seq'::regclass) not null
		constraint stock_inventory_line_pkey
			primary key,
	is_editable boolean,
	inventory_id integer
		constraint stock_inventory_line_inventory_id_fkey
			references stock_inventory
				on delete cascade,
	partner_id integer
		constraint stock_inventory_line_partner_id_fkey
			references res_partner
				on delete set null,
	product_id integer not null
		constraint stock_inventory_line_product_id_fkey
			references product_product
				on delete restrict,
	product_uom_id integer not null
		constraint stock_inventory_line_product_uom_id_fkey
			references uom_uom
				on delete restrict,
	product_qty numeric,
	categ_id integer
		constraint stock_inventory_line_categ_id_fkey
			references product_category
				on delete set null,
	location_id integer not null
		constraint stock_inventory_line_location_id_fkey
			references stock_location
				on delete restrict,
	package_id integer
		constraint stock_inventory_line_package_id_fkey
			references stock_quant_package
				on delete set null,
	prod_lot_id integer
		constraint stock_inventory_line_prod_lot_id_fkey
			references stock_production_lot
				on delete set null,
	company_id integer,
	theoretical_qty numeric,
	inventory_date timestamp,
	create_uid integer
		constraint stock_inventory_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_inventory_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_inventory_line is 'Inventory Line';

comment on column stock_inventory_line.is_editable is 'Is Editable';

comment on column stock_inventory_line.inventory_id is 'Inventory';

comment on column stock_inventory_line.partner_id is 'Owner';

comment on column stock_inventory_line.product_id is 'Product';

comment on column stock_inventory_line.product_uom_id is 'Product Unit of Measure';

comment on column stock_inventory_line.product_qty is 'Counted Quantity';

comment on column stock_inventory_line.categ_id is 'Product Category';

comment on column stock_inventory_line.location_id is 'Location';

comment on column stock_inventory_line.package_id is 'Pack';

comment on column stock_inventory_line.prod_lot_id is 'Lot/Serial Number';

comment on column stock_inventory_line.company_id is 'Company';

comment on column stock_inventory_line.theoretical_qty is 'Theoretical Quantity';

comment on column stock_inventory_line.inventory_date is 'Inventory Date';

comment on column stock_inventory_line.create_uid is 'Created by';

comment on column stock_inventory_line.create_date is 'Created on';

comment on column stock_inventory_line.write_uid is 'Last Updated by';

comment on column stock_inventory_line.write_date is 'Last Updated on';

alter table stock_inventory_line owner to postgres;

create index stock_inventory_line_company_id_index
	on stock_inventory_line (company_id);

create index stock_inventory_line_inventory_id_index
	on stock_inventory_line (inventory_id);

create index stock_inventory_line_location_id_index
	on stock_inventory_line (location_id);

create index stock_inventory_line_package_id_index
	on stock_inventory_line (package_id);

create index stock_inventory_line_product_id_index
	on stock_inventory_line (product_id);

create table stock_quant
(
	id integer default nextval('stock_quant_id_seq'::regclass) not null
		constraint stock_quant_pkey
			primary key,
	product_id integer not null
		constraint stock_quant_product_id_fkey
			references product_product
				on delete restrict,
	company_id integer,
	location_id integer not null
		constraint stock_quant_location_id_fkey
			references stock_location
				on delete restrict,
	lot_id integer
		constraint stock_quant_lot_id_fkey
			references stock_production_lot
				on delete restrict,
	package_id integer
		constraint stock_quant_package_id_fkey
			references stock_quant_package
				on delete restrict,
	owner_id integer
		constraint stock_quant_owner_id_fkey
			references res_partner
				on delete set null,
	quantity double precision,
	reserved_quantity double precision not null,
	in_date timestamp,
	create_uid integer
		constraint stock_quant_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_quant_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_quant is 'Quants';

comment on column stock_quant.product_id is 'Product';

comment on column stock_quant.company_id is 'Company';

comment on column stock_quant.location_id is 'Location';

comment on column stock_quant.lot_id is 'Lot/Serial Number';

comment on column stock_quant.package_id is 'Package';

comment on column stock_quant.owner_id is 'Owner';

comment on column stock_quant.quantity is 'Quantity';

comment on column stock_quant.reserved_quantity is 'Reserved Quantity';

comment on column stock_quant.in_date is 'Incoming Date';

comment on column stock_quant.create_uid is 'Created by';

comment on column stock_quant.create_date is 'Created on';

comment on column stock_quant.write_uid is 'Last Updated by';

comment on column stock_quant.write_date is 'Last Updated on';

alter table stock_quant owner to postgres;

create index stock_quant_location_id_index
	on stock_quant (location_id);

create index stock_quant_lot_id_index
	on stock_quant (lot_id);

create index stock_quant_product_id_index
	on stock_quant (product_id);

create index stock_quant_package_company_id_index
	on stock_quant_package (company_id);

create index stock_quant_package_location_id_index
	on stock_quant_package (location_id);

create index stock_quant_package_name_index
	on stock_quant_package (name);

create index stock_quant_package_packaging_id_index
	on stock_quant_package (packaging_id);

create table stock_route_product
(
	route_id integer not null
		constraint stock_route_product_route_id_fkey
			references stock_location_route
				on delete cascade,
	product_id integer not null
		constraint stock_route_product_product_id_fkey
			references product_template
				on delete cascade,
	constraint stock_route_product_pkey
		primary key (route_id, product_id)
);

comment on table stock_route_product is 'RELATION BETWEEN stock_location_route AND product_template';

alter table stock_route_product owner to postgres;

create index stock_route_product_product_id_route_id_idx
	on stock_route_product (product_id, route_id);

create table stock_rules_report
(
	id integer default nextval('stock_rules_report_id_seq'::regclass) not null
		constraint stock_rules_report_pkey
			primary key,
	product_id integer not null
		constraint stock_rules_report_product_id_fkey
			references product_product
				on delete cascade,
	product_tmpl_id integer not null
		constraint stock_rules_report_product_tmpl_id_fkey
			references product_template
				on delete cascade,
	product_has_variants boolean not null,
	create_uid integer
		constraint stock_rules_report_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_rules_report_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_rules_report is 'Stock Rules report';

comment on column stock_rules_report.product_id is 'Product';

comment on column stock_rules_report.product_tmpl_id is 'Product Template';

comment on column stock_rules_report.product_has_variants is 'Has variants';

comment on column stock_rules_report.create_uid is 'Created by';

comment on column stock_rules_report.create_date is 'Created on';

comment on column stock_rules_report.write_uid is 'Last Updated by';

comment on column stock_rules_report.write_date is 'Last Updated on';

alter table stock_rules_report owner to postgres;

create table stock_location_route_stock_rules_report_rel
(
	stock_rules_report_id integer not null
		constraint stock_location_route_stock_rules_rep_stock_rules_report_id_fkey
			references stock_rules_report
				on delete cascade,
	stock_location_route_id integer not null
		constraint stock_location_route_stock_rules_r_stock_location_route_id_fkey
			references stock_location_route
				on delete cascade,
	constraint stock_location_route_stock_rules_report_rel_pkey
		primary key (stock_rules_report_id, stock_location_route_id)
);

comment on table stock_location_route_stock_rules_report_rel is 'RELATION BETWEEN stock_rules_report AND stock_location_route';

alter table stock_location_route_stock_rules_report_rel owner to postgres;

create index stock_location_route_stock_ru_stock_location_route_id_stock_idx
	on stock_location_route_stock_rules_report_rel (stock_location_route_id, stock_rules_report_id);

create table stock_rules_report_stock_warehouse_rel
(
	stock_rules_report_id integer not null
		constraint stock_rules_report_stock_warehouse_r_stock_rules_report_id_fkey
			references stock_rules_report
				on delete cascade,
	stock_warehouse_id integer not null
		constraint stock_rules_report_stock_warehouse_rel_stock_warehouse_id_fkey
			references stock_warehouse
				on delete cascade,
	constraint stock_rules_report_stock_warehouse_rel_pkey
		primary key (stock_rules_report_id, stock_warehouse_id)
);

comment on table stock_rules_report_stock_warehouse_rel is 'RELATION BETWEEN stock_rules_report AND stock_warehouse';

alter table stock_rules_report_stock_warehouse_rel owner to postgres;

create index stock_rules_report_stock_ware_stock_warehouse_id_stock_rule_idx
	on stock_rules_report_stock_warehouse_rel (stock_warehouse_id, stock_rules_report_id);

create table stock_track_line
(
	id integer default nextval('stock_track_line_id_seq'::regclass) not null
		constraint stock_track_line_pkey
			primary key,
	product_id integer
		constraint stock_track_line_product_id_fkey
			references product_product
				on delete set null,
	tracking varchar,
	wizard_id integer
		constraint stock_track_line_wizard_id_fkey
			references stock_track_confirmation
				on delete set null,
	create_uid integer
		constraint stock_track_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_track_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_track_line is 'Stock Track Line';

comment on column stock_track_line.product_id is 'Product';

comment on column stock_track_line.tracking is 'Tracking';

comment on column stock_track_line.wizard_id is 'Wizard';

comment on column stock_track_line.create_uid is 'Created by';

comment on column stock_track_line.create_date is 'Created on';

comment on column stock_track_line.write_uid is 'Last Updated by';

comment on column stock_track_line.write_date is 'Last Updated on';

alter table stock_track_line owner to postgres;

create table stock_valuation_layer_revaluation
(
	id integer default nextval('stock_valuation_layer_revaluation_id_seq'::regclass) not null
		constraint stock_valuation_layer_revaluation_pkey
			primary key,
	company_id integer not null
		constraint stock_valuation_layer_revaluation_company_id_fkey
			references res_company
				on delete cascade,
	product_id integer not null
		constraint stock_valuation_layer_revaluation_product_id_fkey
			references product_product
				on delete cascade,
	added_value numeric not null,
	reason varchar,
	account_journal_id integer
		constraint stock_valuation_layer_revaluation_account_journal_id_fkey
			references account_journal
				on delete set null,
	account_id integer
		constraint stock_valuation_layer_revaluation_account_id_fkey
			references account_account
				on delete set null,
	date date,
	create_uid integer
		constraint stock_valuation_layer_revaluation_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_valuation_layer_revaluation_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_valuation_layer_revaluation is 'Wizard model to reavaluate a stock inventory for a product';

comment on column stock_valuation_layer_revaluation.company_id is 'Company';

comment on column stock_valuation_layer_revaluation.product_id is 'Related product';

comment on column stock_valuation_layer_revaluation.added_value is 'Added value';

comment on column stock_valuation_layer_revaluation.reason is 'Reason';

comment on column stock_valuation_layer_revaluation.account_journal_id is 'Journal';

comment on column stock_valuation_layer_revaluation.account_id is 'Counterpart Account';

comment on column stock_valuation_layer_revaluation.date is 'Accounting Date';

comment on column stock_valuation_layer_revaluation.create_uid is 'Created by';

comment on column stock_valuation_layer_revaluation.create_date is 'Created on';

comment on column stock_valuation_layer_revaluation.write_uid is 'Last Updated by';

comment on column stock_valuation_layer_revaluation.write_date is 'Last Updated on';

alter table stock_valuation_layer_revaluation owner to postgres;

create table stock_warehouse_orderpoint
(
	id integer default nextval('stock_warehouse_orderpoint_id_seq'::regclass) not null
		constraint stock_warehouse_orderpoint_pkey
			primary key,
	name varchar not null,
	trigger varchar not null,
	active boolean,
	snoozed_until date,
	warehouse_id integer not null
		constraint stock_warehouse_orderpoint_warehouse_id_fkey
			references stock_warehouse
				on delete cascade,
	location_id integer not null
		constraint stock_warehouse_orderpoint_location_id_fkey
			references stock_location
				on delete cascade,
	product_id integer not null
		constraint stock_warehouse_orderpoint_product_id_fkey
			references product_product
				on delete cascade,
	product_category_id integer
		constraint stock_warehouse_orderpoint_product_category_id_fkey
			references product_category
				on delete set null,
	product_min_qty numeric not null,
	product_max_qty numeric not null,
	qty_multiple numeric not null,
	group_id integer
		constraint stock_warehouse_orderpoint_group_id_fkey
			references procurement_group
				on delete set null,
	company_id integer not null,
	route_id integer
		constraint stock_warehouse_orderpoint_route_id_fkey
			references stock_location_route
				on delete set null,
	qty_to_order double precision,
	create_uid integer
		constraint stock_warehouse_orderpoint_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_warehouse_orderpoint_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	supplier_id integer
		constraint stock_warehouse_orderpoint_supplier_id_fkey
			references product_supplierinfo
				on delete set null
);

comment on table stock_warehouse_orderpoint is 'Minimum Inventory Rule';

comment on column stock_warehouse_orderpoint.name is 'Name';

comment on column stock_warehouse_orderpoint.trigger is 'Trigger';

comment on column stock_warehouse_orderpoint.active is 'Active';

comment on column stock_warehouse_orderpoint.snoozed_until is 'Snoozed';

comment on column stock_warehouse_orderpoint.warehouse_id is 'Warehouse';

comment on column stock_warehouse_orderpoint.location_id is 'Location';

comment on column stock_warehouse_orderpoint.product_id is 'Product';

comment on column stock_warehouse_orderpoint.product_category_id is 'Product Category';

comment on column stock_warehouse_orderpoint.product_min_qty is 'Min Quantity';

comment on column stock_warehouse_orderpoint.product_max_qty is 'Max Quantity';

comment on column stock_warehouse_orderpoint.qty_multiple is 'Multiple Quantity';

comment on column stock_warehouse_orderpoint.group_id is 'Procurement Group';

comment on column stock_warehouse_orderpoint.company_id is 'Company';

comment on column stock_warehouse_orderpoint.route_id is 'Preferred Route';

comment on column stock_warehouse_orderpoint.qty_to_order is 'To Order';

comment on column stock_warehouse_orderpoint.create_uid is 'Created by';

comment on column stock_warehouse_orderpoint.create_date is 'Created on';

comment on column stock_warehouse_orderpoint.write_uid is 'Last Updated by';

comment on column stock_warehouse_orderpoint.write_date is 'Last Updated on';

comment on column stock_warehouse_orderpoint.supplier_id is 'Vendor';

alter table stock_warehouse_orderpoint owner to postgres;

create table stock_orderpoint_snooze_stock_warehouse_orderpoint_rel
(
	stock_orderpoint_snooze_id integer not null
		constraint stock_orderpoint_snooze_stock_w_stock_orderpoint_snooze_id_fkey
			references stock_orderpoint_snooze
				on delete cascade,
	stock_warehouse_orderpoint_id integer not null
		constraint stock_orderpoint_snooze_stock_stock_warehouse_orderpoint_i_fkey
			references stock_warehouse_orderpoint
				on delete cascade,
	constraint stock_orderpoint_snooze_stock_warehouse_orderpoint_rel_pkey
		primary key (stock_orderpoint_snooze_id, stock_warehouse_orderpoint_id)
);

comment on table stock_orderpoint_snooze_stock_warehouse_orderpoint_rel is 'RELATION BETWEEN stock_orderpoint_snooze AND stock_warehouse_orderpoint';

alter table stock_orderpoint_snooze_stock_warehouse_orderpoint_rel owner to postgres;

create index stock_orderpoint_snooze_stock_stock_warehouse_orderpoint_id_idx
	on stock_orderpoint_snooze_stock_warehouse_orderpoint_rel (stock_warehouse_orderpoint_id, stock_orderpoint_snooze_id);

create index stock_warehouse_orderpoint_company_id_index
	on stock_warehouse_orderpoint (company_id);

create index stock_warehouse_orderpoint_location_id_index
	on stock_warehouse_orderpoint (location_id);

create index stock_warehouse_orderpoint_product_id_index
	on stock_warehouse_orderpoint (product_id);

create table user_journal_rel
(
	user_id integer not null
		constraint user_journal_rel_user_id_fkey
			references account_journal
				on delete cascade,
	journal_id integer not null
		constraint user_journal_rel_journal_id_fkey
			references res_users
				on delete cascade,
	constraint user_journal_rel_pkey
		primary key (user_id, journal_id)
);

comment on table user_journal_rel is 'RELATION BETWEEN account_journal AND res_users';

alter table user_journal_rel owner to postgres;

create index user_journal_rel_journal_id_user_id_idx
	on user_journal_rel (journal_id, user_id);

create table utm_medium
(
	id integer default nextval('utm_medium_id_seq'::regclass) not null
		constraint utm_medium_pkey
			primary key,
	name varchar not null,
	active boolean,
	create_uid integer
		constraint utm_medium_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint utm_medium_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table utm_medium is 'UTM Medium';

comment on column utm_medium.name is 'Medium Name';

comment on column utm_medium.active is 'Active';

comment on column utm_medium.create_uid is 'Created by';

comment on column utm_medium.create_date is 'Created on';

comment on column utm_medium.write_uid is 'Last Updated by';

comment on column utm_medium.write_date is 'Last Updated on';

alter table utm_medium owner to postgres;

alter table account_move
	add constraint account_move_medium_id_fkey
		foreign key (medium_id) references utm_medium
			on delete set null;

create table utm_source
(
	id integer default nextval('utm_source_id_seq'::regclass) not null
		constraint utm_source_pkey
			primary key,
	name varchar not null,
	create_uid integer
		constraint utm_source_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint utm_source_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table utm_source is 'UTM Source';

comment on column utm_source.name is 'Source Name';

comment on column utm_source.create_uid is 'Created by';

comment on column utm_source.create_date is 'Created on';

comment on column utm_source.write_uid is 'Last Updated by';

comment on column utm_source.write_date is 'Last Updated on';

alter table utm_source owner to postgres;

alter table account_move
	add constraint account_move_source_id_fkey
		foreign key (source_id) references utm_source
			on delete set null;

create table utm_stage
(
	id integer default nextval('utm_stage_id_seq'::regclass) not null
		constraint utm_stage_pkey
			primary key,
	name varchar not null,
	sequence integer,
	create_uid integer
		constraint utm_stage_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint utm_stage_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table utm_stage is 'Campaign Stage';

comment on column utm_stage.name is 'Name';

comment on column utm_stage.sequence is 'Sequence';

comment on column utm_stage.create_uid is 'Created by';

comment on column utm_stage.create_date is 'Created on';

comment on column utm_stage.write_uid is 'Last Updated by';

comment on column utm_stage.write_date is 'Last Updated on';

alter table utm_stage owner to postgres;

create table utm_campaign
(
	id integer default nextval('utm_campaign_id_seq'::regclass) not null
		constraint utm_campaign_pkey
			primary key,
	name varchar not null,
	user_id integer not null
		constraint utm_campaign_user_id_fkey
			references res_users
				on delete restrict,
	stage_id integer not null
		constraint utm_campaign_stage_id_fkey
			references utm_stage
				on delete restrict,
	is_website boolean,
	color integer,
	create_uid integer
		constraint utm_campaign_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint utm_campaign_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	company_id integer
		constraint utm_campaign_company_id_fkey
			references res_company
				on delete set null
);

comment on table utm_campaign is 'UTM Campaign';

comment on column utm_campaign.name is 'Campaign Name';

comment on column utm_campaign.user_id is 'Responsible';

comment on column utm_campaign.stage_id is 'Stage';

comment on column utm_campaign.is_website is 'Is Website';

comment on column utm_campaign.color is 'Color Index';

comment on column utm_campaign.create_uid is 'Created by';

comment on column utm_campaign.create_date is 'Created on';

comment on column utm_campaign.write_uid is 'Last Updated by';

comment on column utm_campaign.write_date is 'Last Updated on';

comment on column utm_campaign.company_id is 'Company';

alter table utm_campaign owner to postgres;

alter table account_move
	add constraint account_move_campaign_id_fkey
		foreign key (campaign_id) references utm_campaign
			on delete set null;

create table sale_order
(
	id integer default nextval('sale_order_id_seq'::regclass) not null
		constraint sale_order_pkey
			primary key,
	name varchar not null,
	origin varchar,
	client_order_ref varchar,
	reference varchar,
	state varchar,
	date_order timestamp not null,
	validity_date date,
	require_signature boolean,
	require_payment boolean,
	create_date timestamp,
	user_id integer
		constraint sale_order_user_id_fkey
			references res_users
				on delete set null,
	partner_id integer not null
		constraint sale_order_partner_id_fkey
			references res_partner
				on delete restrict,
	partner_invoice_id integer not null
		constraint sale_order_partner_invoice_id_fkey
			references res_partner
				on delete restrict,
	partner_shipping_id integer not null
		constraint sale_order_partner_shipping_id_fkey
			references res_partner
				on delete restrict,
	pricelist_id integer not null
		constraint sale_order_pricelist_id_fkey
			references product_pricelist
				on delete restrict,
	currency_id integer
		constraint sale_order_currency_id_fkey
			references res_currency
				on delete set null,
	analytic_account_id integer
		constraint sale_order_analytic_account_id_fkey
			references account_analytic_account
				on delete set null,
	invoice_status varchar,
	note text,
	amount_untaxed numeric,
	amount_tax numeric,
	amount_total numeric,
	currency_rate numeric,
	payment_term_id integer
		constraint sale_order_payment_term_id_fkey
			references account_payment_term
				on delete set null,
	fiscal_position_id integer
		constraint sale_order_fiscal_position_id_fkey
			references account_fiscal_position
				on delete set null,
	company_id integer not null,
	team_id integer
		constraint sale_order_team_id_fkey
			references crm_team
				on delete set null,
	signed_by varchar,
	signed_on timestamp,
	commitment_date timestamp,
	show_update_pricelist boolean,
	message_main_attachment_id integer
		constraint sale_order_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	access_token varchar,
	campaign_id integer
		constraint sale_order_campaign_id_fkey
			references utm_campaign
				on delete set null,
	source_id integer
		constraint sale_order_source_id_fkey
			references utm_source
				on delete set null,
	medium_id integer
		constraint sale_order_medium_id_fkey
			references utm_medium
				on delete set null,
	create_uid integer
		constraint sale_order_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint sale_order_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	sale_order_template_id integer
		constraint sale_order_sale_order_template_id_fkey
			references sale_order_template
				on delete set null,
	incoterm integer
		constraint sale_order_incoterm_fkey
			references account_incoterms
				on delete set null,
	picking_policy varchar not null,
	warehouse_id integer not null
		constraint sale_order_warehouse_id_fkey
			references stock_warehouse
				on delete restrict,
	procurement_group_id integer
		constraint sale_order_procurement_group_id_fkey
			references procurement_group
				on delete set null,
	effective_date date,
	carrier_id integer
		constraint sale_order_carrier_id_fkey
			references delivery_carrier
				on delete set null,
	delivery_message varchar,
	delivery_rating_success boolean,
	recompute_delivery_price boolean,
	location_id integer
		constraint sale_order_location_id_fkey
			references cesa_location
				on delete set null,
	location_dest_id integer
		constraint sale_order_location_dest_id_fkey
			references cesa_location
				on delete set null,
	transport_type varchar,
	delivery_method varchar,
	invoice_id integer
		constraint sale_order_invoice_id_fkey
			references account_move
				on delete set null,
	sender_id integer
		constraint sale_order_sender_id_fkey
			references res_partner
				on delete set null,
	circuit varchar,
	identifier varchar,
	is_posted varchar,
	can_invoice boolean,
	date_invoice timestamp
);

comment on table sale_order is 'Sales Order';

comment on column sale_order.name is 'Order Reference';

comment on column sale_order.origin is 'Source Document';

comment on column sale_order.client_order_ref is 'Customer Reference';

comment on column sale_order.reference is 'Payment Ref.';

comment on column sale_order.state is 'Status';

comment on column sale_order.date_order is 'Order Date';

comment on column sale_order.validity_date is 'Expiration';

comment on column sale_order.require_signature is 'Online Signature';

comment on column sale_order.require_payment is 'Online Payment';

comment on column sale_order.create_date is 'Creation Date';

comment on column sale_order.user_id is 'Salesperson';

comment on column sale_order.partner_id is 'Customer';

comment on column sale_order.partner_invoice_id is 'Invoice Address';

comment on column sale_order.partner_shipping_id is 'Delivery Address';

comment on column sale_order.pricelist_id is 'Pricelist';

comment on column sale_order.currency_id is 'Currency';

comment on column sale_order.analytic_account_id is 'Analytic Account';

comment on column sale_order.invoice_status is 'Invoice Status';

comment on column sale_order.note is 'Terms and conditions';

comment on column sale_order.amount_untaxed is 'Untaxed Amount';

comment on column sale_order.amount_tax is 'Taxes';

comment on column sale_order.amount_total is 'Total';

comment on column sale_order.currency_rate is 'Currency Rate';

comment on column sale_order.payment_term_id is 'Payment Terms';

comment on column sale_order.fiscal_position_id is 'Fiscal Position';

comment on column sale_order.company_id is 'Company';

comment on column sale_order.team_id is 'Sales Team';

comment on column sale_order.signed_by is 'Signed By';

comment on column sale_order.signed_on is 'Signed On';

comment on column sale_order.commitment_date is 'Delivery Date';

comment on column sale_order.show_update_pricelist is 'Has Pricelist Changed';

comment on column sale_order.message_main_attachment_id is 'Main Attachment';

comment on column sale_order.access_token is 'Security Token';

comment on column sale_order.campaign_id is 'Campaign';

comment on column sale_order.source_id is 'Source';

comment on column sale_order.medium_id is 'Medium';

comment on column sale_order.create_uid is 'Created by';

comment on column sale_order.write_uid is 'Last Updated by';

comment on column sale_order.write_date is 'Last Updated on';

comment on column sale_order.sale_order_template_id is 'Quotation Template';

comment on column sale_order.incoterm is 'Incoterm';

comment on column sale_order.picking_policy is 'Shipping Policy';

comment on column sale_order.warehouse_id is 'Warehouse';

comment on column sale_order.procurement_group_id is 'Procurement Group';

comment on column sale_order.effective_date is 'Effective Date';

comment on column sale_order.carrier_id is 'Delivery Method';

comment on column sale_order.delivery_message is 'Delivery Message';

comment on column sale_order.delivery_rating_success is 'Delivery Rating Success';

comment on column sale_order.recompute_delivery_price is 'Delivery cost should be recomputed';

comment on column sale_order.location_id is 'Shipping agency';

comment on column sale_order.location_dest_id is 'Destination agency';

comment on column sale_order.transport_type is 'Transport type';

comment on column sale_order.delivery_method is 'Delivery method';

comment on column sale_order.invoice_id is 'Account move';

comment on column sale_order.sender_id is 'Sender';

comment on column sale_order.circuit is 'Circuit';

comment on column sale_order.identifier is 'Identifier';

comment on column sale_order.is_posted is 'Post status';

comment on column sale_order.can_invoice is 'Can invoice';

comment on column sale_order.date_invoice is 'Date Invoice';

alter table sale_order owner to postgres;

create table account_move_sale_order_rel
(
	account_move_id integer not null
		constraint account_move_sale_order_rel_account_move_id_fkey
			references account_move
				on delete cascade,
	sale_order_id integer not null
		constraint account_move_sale_order_rel_sale_order_id_fkey
			references sale_order
				on delete cascade,
	constraint account_move_sale_order_rel_pkey
		primary key (account_move_id, sale_order_id)
);

comment on table account_move_sale_order_rel is 'RELATION BETWEEN account_move AND sale_order';

alter table account_move_sale_order_rel owner to postgres;

create index account_move_sale_order_rel_sale_order_id_account_move_id_idx
	on account_move_sale_order_rel (sale_order_id, account_move_id);

create table choose_delivery_carrier
(
	id integer default nextval('choose_delivery_carrier_id_seq'::regclass) not null
		constraint choose_delivery_carrier_pkey
			primary key,
	order_id integer not null
		constraint choose_delivery_carrier_order_id_fkey
			references sale_order
				on delete cascade,
	carrier_id integer not null
		constraint choose_delivery_carrier_carrier_id_fkey
			references delivery_carrier
				on delete cascade,
	delivery_price double precision,
	display_price double precision,
	delivery_message text,
	create_uid integer
		constraint choose_delivery_carrier_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint choose_delivery_carrier_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table choose_delivery_carrier is 'Delivery Carrier Selection Wizard';

comment on column choose_delivery_carrier.order_id is 'Order';

comment on column choose_delivery_carrier.carrier_id is 'Shipping Method';

comment on column choose_delivery_carrier.delivery_price is 'Delivery Price';

comment on column choose_delivery_carrier.display_price is 'Cost';

comment on column choose_delivery_carrier.delivery_message is 'Delivery Message';

comment on column choose_delivery_carrier.create_uid is 'Created by';

comment on column choose_delivery_carrier.create_date is 'Created on';

comment on column choose_delivery_carrier.write_uid is 'Last Updated by';

comment on column choose_delivery_carrier.write_date is 'Last Updated on';

alter table choose_delivery_carrier owner to postgres;

alter table procurement_group
	add constraint procurement_group_sale_id_fkey
		foreign key (sale_id) references sale_order
			on delete set null;

create index sale_order_company_id_index
	on sale_order (company_id);

create index sale_order_create_date_index
	on sale_order (create_date);

create index sale_order_date_order_index
	on sale_order (date_order);

create index sale_order_message_main_attachment_id_index
	on sale_order (message_main_attachment_id);

create index sale_order_name_index
	on sale_order (name);

create index sale_order_partner_id_index
	on sale_order (partner_id);

create index sale_order_state_index
	on sale_order (state);

create index sale_order_user_id_index
	on sale_order (user_id);

create table sale_order_cancel
(
	id integer default nextval('sale_order_cancel_id_seq'::regclass) not null
		constraint sale_order_cancel_pkey
			primary key,
	order_id integer not null
		constraint sale_order_cancel_order_id_fkey
			references sale_order
				on delete cascade,
	create_uid integer
		constraint sale_order_cancel_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_cancel_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_order_cancel is 'Sales Order Cancel';

comment on column sale_order_cancel.order_id is 'Sale Order';

comment on column sale_order_cancel.create_uid is 'Created by';

comment on column sale_order_cancel.create_date is 'Created on';

comment on column sale_order_cancel.write_uid is 'Last Updated by';

comment on column sale_order_cancel.write_date is 'Last Updated on';

alter table sale_order_cancel owner to postgres;

create table sale_order_line
(
	id integer default nextval('sale_order_line_id_seq'::regclass) not null
		constraint sale_order_line_pkey
			primary key,
	order_id integer not null
		constraint sale_order_line_order_id_fkey
			references sale_order
				on delete cascade,
	name text not null,
	sequence integer,
	invoice_status varchar,
	price_unit numeric not null,
	price_subtotal numeric,
	price_tax double precision,
	price_total numeric,
	price_reduce numeric,
	price_reduce_taxinc numeric,
	price_reduce_taxexcl numeric,
	discount numeric,
	product_id integer
		constraint sale_order_line_product_id_fkey
			references product_product
				on delete restrict,
	product_uom_qty numeric not null,
	product_uom integer
		constraint sale_order_line_product_uom_fkey
			references uom_uom
				on delete set null,
	qty_delivered_method varchar,
	qty_delivered numeric,
	qty_delivered_manual numeric,
	qty_to_invoice numeric,
	qty_invoiced numeric,
	untaxed_amount_invoiced numeric,
	untaxed_amount_to_invoice numeric,
	salesman_id integer
		constraint sale_order_line_salesman_id_fkey
			references res_users
				on delete set null,
	currency_id integer
		constraint sale_order_line_currency_id_fkey
			references res_currency
				on delete set null,
	company_id integer,
	order_partner_id integer
		constraint sale_order_line_order_partner_id_fkey
			references res_partner
				on delete set null,
	is_expense boolean,
	is_downpayment boolean,
	state varchar,
	customer_lead double precision not null,
	display_type varchar,
	create_uid integer
		constraint sale_order_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	product_packaging integer
		constraint sale_order_line_product_packaging_fkey
			references product_packaging
				on delete set null,
	route_id integer
		constraint sale_order_line_route_id_fkey
			references stock_location_route
				on delete restrict,
	is_delivery boolean,
	value double precision,
	real_weight double precision,
	volume_weight double precision,
	weighing_id integer
		constraint sale_order_line_weighing_id_fkey
			references order_weighing
				on delete set null,
	delivery_rate_id integer
		constraint sale_order_line_delivery_rate_id_fkey
			references delivery_rate_detail
				on delete set null,
	packaging_rate_id integer
		constraint sale_order_line_packaging_rate_id_fkey
			references packaging_rate_detail
				on delete set null,
	handling_rate_id integer
		constraint sale_order_line_handling_rate_id_fkey
			references handling_rate_detail
				on delete set null,
	handling_rate double precision,
	packaging_rate double precision,
	qr_in_report boolean,
	parent_order_line_id integer
		constraint sale_order_line_parent_order_line_id_fkey
			references sale_order_line
				on delete set null,
	ref_colis varchar,
	quantity integer,
	copied boolean,
	duplicata boolean,
	orig_quantity integer,
	price_unit_def double precision,
	etat_livraison_moved0 boolean,
	date_livraison timestamp,
	type_of varchar,
	etat_livraison varchar
);

comment on table sale_order_line is 'Sales Order Line';

comment on column sale_order_line.order_id is 'Order Reference';

comment on column sale_order_line.name is 'Description';

comment on column sale_order_line.sequence is 'Sequence';

comment on column sale_order_line.invoice_status is 'Invoice Status';

comment on column sale_order_line.price_unit is 'Unit Price';

comment on column sale_order_line.price_subtotal is 'Subtotal';

comment on column sale_order_line.price_tax is 'Total Tax';

comment on column sale_order_line.price_total is 'Total';

comment on column sale_order_line.price_reduce is 'Price Reduce';

comment on column sale_order_line.price_reduce_taxinc is 'Price Reduce Tax inc';

comment on column sale_order_line.price_reduce_taxexcl is 'Price Reduce Tax excl';

comment on column sale_order_line.discount is 'Discount (%)';

comment on column sale_order_line.product_id is 'Product';

comment on column sale_order_line.product_uom_qty is 'Quantity';

comment on column sale_order_line.product_uom is 'Unit of Measure';

comment on column sale_order_line.qty_delivered_method is 'Method to update delivered qty';

comment on column sale_order_line.qty_delivered is 'Delivered Quantity';

comment on column sale_order_line.qty_delivered_manual is 'Delivered Manually';

comment on column sale_order_line.qty_to_invoice is 'To Invoice Quantity';

comment on column sale_order_line.qty_invoiced is 'Invoiced Quantity';

comment on column sale_order_line.untaxed_amount_invoiced is 'Untaxed Invoiced Amount';

comment on column sale_order_line.untaxed_amount_to_invoice is 'Untaxed Amount To Invoice';

comment on column sale_order_line.salesman_id is 'Salesperson';

comment on column sale_order_line.currency_id is 'Currency';

comment on column sale_order_line.company_id is 'Company';

comment on column sale_order_line.order_partner_id is 'Customer';

comment on column sale_order_line.is_expense is 'Is expense';

comment on column sale_order_line.is_downpayment is 'Is a down payment';

comment on column sale_order_line.state is 'Order Status';

comment on column sale_order_line.customer_lead is 'Lead Time';

comment on column sale_order_line.display_type is 'Display Type';

comment on column sale_order_line.create_uid is 'Created by';

comment on column sale_order_line.create_date is 'Created on';

comment on column sale_order_line.write_uid is 'Last Updated by';

comment on column sale_order_line.write_date is 'Last Updated on';

comment on column sale_order_line.product_packaging is 'Package';

comment on column sale_order_line.route_id is 'Route';

comment on column sale_order_line.is_delivery is 'Is a Delivery';

comment on column sale_order_line.value is 'Value';

comment on column sale_order_line.real_weight is 'Real Weight';

comment on column sale_order_line.volume_weight is 'Volume weight in kg';

comment on column sale_order_line.weighing_id is 'Weighing';

comment on column sale_order_line.delivery_rate_id is 'Delivery Rate';

comment on column sale_order_line.packaging_rate_id is 'Packaging Rate';

comment on column sale_order_line.handling_rate_id is 'Handling Rate';

comment on column sale_order_line.handling_rate is 'Handling Rate';

comment on column sale_order_line.packaging_rate is 'Packaging Rate';

comment on column sale_order_line.qr_in_report is 'Show QR in Report';

comment on column sale_order_line.parent_order_line_id is 'Parent sale order line';

comment on column sale_order_line.ref_colis is 'Référence';

comment on column sale_order_line.quantity is 'Quantité';

comment on column sale_order_line.copied is 'Copied';

comment on column sale_order_line.duplicata is 'Duplicata';

comment on column sale_order_line.orig_quantity is 'Quantité';

comment on column sale_order_line.price_unit_def is 'Price Unit Def';

comment on column sale_order_line.etat_livraison_moved0 is 'Etat Livraison';

comment on column sale_order_line.date_livraison is 'Date Livraison';

comment on column sale_order_line.type_of is 'Type_of';

comment on column sale_order_line.etat_livraison is 'etat livraison';

alter table sale_order_line owner to postgres;

create table account_analytic_tag_sale_order_line_rel
(
	sale_order_line_id integer not null
		constraint account_analytic_tag_sale_order_line_re_sale_order_line_id_fkey
			references sale_order_line
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_analytic_tag_sale_order_li_account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_tag_sale_order_line_rel_pkey
		primary key (sale_order_line_id, account_analytic_tag_id)
);

comment on table account_analytic_tag_sale_order_line_rel is 'RELATION BETWEEN sale_order_line AND account_analytic_tag';

alter table account_analytic_tag_sale_order_line_rel owner to postgres;

create index account_analytic_tag_sale_ord_account_analytic_tag_id_sale__idx
	on account_analytic_tag_sale_order_line_rel (account_analytic_tag_id, sale_order_line_id);

create table account_tax_sale_order_line_rel
(
	sale_order_line_id integer not null
		constraint account_tax_sale_order_line_rel_sale_order_line_id_fkey
			references sale_order_line
				on delete cascade,
	account_tax_id integer not null
		constraint account_tax_sale_order_line_rel_account_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint account_tax_sale_order_line_rel_pkey
		primary key (sale_order_line_id, account_tax_id)
);

comment on table account_tax_sale_order_line_rel is 'RELATION BETWEEN sale_order_line AND account_tax';

alter table account_tax_sale_order_line_rel owner to postgres;

create index account_tax_sale_order_line_r_account_tax_id_sale_order_lin_idx
	on account_tax_sale_order_line_rel (account_tax_id, sale_order_line_id);

alter table delivery_rate_detail
	add constraint delivery_rate_detail_order_line_id_fkey
		foreign key (order_line_id) references sale_order_line
			on delete set null;

alter table handling_rate_detail
	add constraint handling_rate_detail_order_line_id_fkey
		foreign key (order_line_id) references sale_order_line
			on delete set null;

alter table order_weighing
	add constraint order_weighing_order_line_id_fkey
		foreign key (order_line_id) references sale_order_line
			on delete set null;

alter table packaging_rate_detail
	add constraint packaging_rate_detail_order_line_id_fkey
		foreign key (order_line_id) references sale_order_line
			on delete set null;

create table product_attribute_custom_value
(
	id integer default nextval('product_attribute_custom_value_id_seq'::regclass) not null
		constraint product_attribute_custom_value_pkey
			primary key,
	custom_product_template_attribute_value_id integer not null
		constraint product_attribute_custom_valu_custom_product_template_attr_fkey
			references product_template_attribute_value
				on delete restrict,
	custom_value varchar,
	create_uid integer
		constraint product_attribute_custom_value_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint product_attribute_custom_value_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	sale_order_line_id integer not null
		constraint product_attribute_custom_value_sale_order_line_id_fkey
			references sale_order_line
				on delete cascade,
	constraint product_attribute_custom_value_sol_custom_value_unique
		unique (custom_product_template_attribute_value_id, sale_order_line_id)
);

comment on table product_attribute_custom_value is 'Product Attribute Custom Value';

comment on column product_attribute_custom_value.custom_product_template_attribute_value_id is 'Attribute Value';

comment on column product_attribute_custom_value.custom_value is 'Custom Value';

comment on column product_attribute_custom_value.create_uid is 'Created by';

comment on column product_attribute_custom_value.create_date is 'Created on';

comment on column product_attribute_custom_value.write_uid is 'Last Updated by';

comment on column product_attribute_custom_value.write_date is 'Last Updated on';

comment on column product_attribute_custom_value.sale_order_line_id is 'Sales Order Line';

alter table product_attribute_custom_value owner to postgres;

create table product_template_attribute_value_sale_order_line_rel
(
	sale_order_line_id integer not null
		constraint product_template_attribute_value_sale_o_sale_order_line_id_fkey
			references sale_order_line
				on delete cascade,
	product_template_attribute_value_id integer not null
		constraint product_template_attribute_va_product_template_attribute_v_fkey
			references product_template_attribute_value
				on delete restrict,
	constraint product_template_attribute_value_sale_order_line_rel_pkey
		primary key (sale_order_line_id, product_template_attribute_value_id)
);

comment on table product_template_attribute_value_sale_order_line_rel is 'RELATION BETWEEN sale_order_line AND product_template_attribute_value';

alter table product_template_attribute_value_sale_order_line_rel owner to postgres;

create index product_template_attribute_va_product_template_attribute_va_idx
	on product_template_attribute_value_sale_order_line_rel (product_template_attribute_value_id, sale_order_line_id);

create table purchase_order_line
(
	id integer default nextval('purchase_order_line_id_seq'::regclass) not null
		constraint purchase_order_line_pkey
			primary key,
	name text not null,
	sequence integer,
	product_qty numeric not null,
	product_uom_qty double precision,
	date_planned timestamp,
	product_uom integer
		constraint purchase_order_line_product_uom_fkey
			references uom_uom
				on delete set null,
	product_id integer
		constraint purchase_order_line_product_id_fkey
			references product_product
				on delete set null,
	price_unit numeric not null,
	price_subtotal numeric,
	price_total numeric,
	price_tax double precision,
	order_id integer not null
		constraint purchase_order_line_order_id_fkey
			references purchase_order
				on delete cascade,
	account_analytic_id integer
		constraint purchase_order_line_account_analytic_id_fkey
			references account_analytic_account
				on delete set null,
	company_id integer,
	state varchar,
	qty_invoiced numeric,
	qty_received_method varchar,
	qty_received numeric,
	qty_received_manual numeric,
	qty_to_invoice numeric,
	partner_id integer
		constraint purchase_order_line_partner_id_fkey
			references res_partner
				on delete set null,
	currency_id integer
		constraint purchase_order_line_currency_id_fkey
			references res_currency
				on delete set null,
	display_type varchar,
	create_uid integer
		constraint purchase_order_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint purchase_order_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	orderpoint_id integer
		constraint purchase_order_line_orderpoint_id_fkey
			references stock_warehouse_orderpoint
				on delete set null,
	product_description_variants varchar,
	propagate_cancel boolean,
	sale_order_id integer
		constraint purchase_order_line_sale_order_id_fkey
			references sale_order
				on delete set null,
	sale_line_id integer
		constraint purchase_order_line_sale_line_id_fkey
			references sale_order_line
				on delete set null
);

comment on table purchase_order_line is 'Purchase Order Line';

comment on column purchase_order_line.name is 'Description';

comment on column purchase_order_line.sequence is 'Sequence';

comment on column purchase_order_line.product_qty is 'Quantity';

comment on column purchase_order_line.product_uom_qty is 'Total Quantity';

comment on column purchase_order_line.date_planned is 'Delivery Date';

comment on column purchase_order_line.product_uom is 'Unit of Measure';

comment on column purchase_order_line.product_id is 'Product';

comment on column purchase_order_line.price_unit is 'Unit Price';

comment on column purchase_order_line.price_subtotal is 'Subtotal';

comment on column purchase_order_line.price_total is 'Total';

comment on column purchase_order_line.price_tax is 'Tax';

comment on column purchase_order_line.order_id is 'Order Reference';

comment on column purchase_order_line.account_analytic_id is 'Analytic Account';

comment on column purchase_order_line.company_id is 'Company';

comment on column purchase_order_line.state is 'Status';

comment on column purchase_order_line.qty_invoiced is 'Billed Qty';

comment on column purchase_order_line.qty_received_method is 'Received Qty Method';

comment on column purchase_order_line.qty_received is 'Received Qty';

comment on column purchase_order_line.qty_received_manual is 'Manual Received Qty';

comment on column purchase_order_line.qty_to_invoice is 'To Invoice Quantity';

comment on column purchase_order_line.partner_id is 'Partner';

comment on column purchase_order_line.currency_id is 'Currency';

comment on column purchase_order_line.display_type is 'Display Type';

comment on column purchase_order_line.create_uid is 'Created by';

comment on column purchase_order_line.create_date is 'Created on';

comment on column purchase_order_line.write_uid is 'Last Updated by';

comment on column purchase_order_line.write_date is 'Last Updated on';

comment on column purchase_order_line.orderpoint_id is 'Orderpoint';

comment on column purchase_order_line.product_description_variants is 'Custom Description';

comment on column purchase_order_line.propagate_cancel is 'Propagate cancellation';

comment on column purchase_order_line.sale_order_id is 'Sale Order';

comment on column purchase_order_line.sale_line_id is 'Origin Sale Item';

alter table purchase_order_line owner to postgres;

create table account_analytic_tag_purchase_order_line_rel
(
	purchase_order_line_id integer not null
		constraint account_analytic_tag_purchase_order_purchase_order_line_id_fkey
			references purchase_order_line
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_analytic_tag_purchase_orde_account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_tag_purchase_order_line_rel_pkey
		primary key (purchase_order_line_id, account_analytic_tag_id)
);

comment on table account_analytic_tag_purchase_order_line_rel is 'RELATION BETWEEN purchase_order_line AND account_analytic_tag';

alter table account_analytic_tag_purchase_order_line_rel owner to postgres;

create index account_analytic_tag_purchase_account_analytic_tag_id_purch_idx
	on account_analytic_tag_purchase_order_line_rel (account_analytic_tag_id, purchase_order_line_id);

create table account_move_line
(
	id integer default nextval('account_move_line_id_seq'::regclass) not null
		constraint account_move_line_pkey
			primary key,
	move_id integer not null
		constraint account_move_line_move_id_fkey
			references account_move
				on delete cascade,
	move_name varchar,
	date date,
	ref varchar,
	parent_state varchar,
	journal_id integer
		constraint account_move_line_journal_id_fkey
			references account_journal
				on delete set null,
	company_id integer,
	company_currency_id integer
		constraint account_move_line_company_currency_id_fkey
			references res_currency
				on delete set null,
	account_id integer
		constraint account_move_line_account_id_fkey
			references account_account
				on delete cascade,
	account_root_id integer,
	sequence integer,
	name varchar,
	quantity numeric,
	price_unit numeric,
	discount numeric,
	debit numeric,
	credit numeric,
	balance numeric,
	amount_currency numeric,
	price_subtotal numeric,
	price_total numeric,
	reconciled boolean,
	blocked boolean,
	date_maturity date,
	currency_id integer not null
		constraint account_move_line_currency_id_fkey
			references res_currency
				on delete restrict,
	partner_id integer
		constraint account_move_line_partner_id_fkey
			references res_partner
				on delete restrict,
	product_uom_id integer
		constraint account_move_line_product_uom_id_fkey
			references uom_uom
				on delete set null,
	product_id integer
		constraint account_move_line_product_id_fkey
			references product_product
				on delete restrict,
	reconcile_model_id integer
		constraint account_move_line_reconcile_model_id_fkey
			references account_reconcile_model
				on delete set null,
	payment_id integer
		constraint account_move_line_payment_id_fkey
			references account_payment
				on delete set null,
	statement_line_id integer
		constraint account_move_line_statement_line_id_fkey
			references account_bank_statement_line
				on delete set null,
	statement_id integer
		constraint account_move_line_statement_id_fkey
			references account_bank_statement
				on delete set null,
	tax_line_id integer
		constraint account_move_line_tax_line_id_fkey
			references account_tax
				on delete restrict,
	tax_group_id integer
		constraint account_move_line_tax_group_id_fkey
			references account_tax_group
				on delete set null,
	tax_base_amount numeric,
	tax_exigible boolean,
	tax_repartition_line_id integer
		constraint account_move_line_tax_repartition_line_id_fkey
			references account_tax_repartition_line
				on delete restrict,
	tax_audit varchar,
	amount_residual numeric,
	amount_residual_currency numeric,
	full_reconcile_id integer
		constraint account_move_line_full_reconcile_id_fkey
			references account_full_reconcile
				on delete set null,
	matching_number varchar,
	analytic_account_id integer
		constraint account_move_line_analytic_account_id_fkey
			references account_analytic_account
				on delete set null,
	display_type varchar,
	is_rounding_line boolean,
	exclude_from_invoice_tab boolean,
	create_uid integer
		constraint account_move_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_move_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	expected_pay_date date,
	internal_note text,
	next_action_date date,
	followup_line_id integer
		constraint account_move_line_followup_line_id_fkey
			references account_followup_followup_line
				on delete set null,
	followup_date date,
	is_anglo_saxon_line boolean,
	purchase_line_id integer
		constraint account_move_line_purchase_line_id_fkey
			references purchase_order_line
				on delete set null,
	can_be_paid varchar
);

comment on table account_move_line is 'Journal Item';

comment on column account_move_line.move_id is 'Journal Entry';

comment on column account_move_line.move_name is 'Number';

comment on column account_move_line.date is 'Date';

comment on column account_move_line.ref is 'Reference';

comment on column account_move_line.parent_state is 'Status';

comment on column account_move_line.journal_id is 'Journal';

comment on column account_move_line.company_id is 'Company';

comment on column account_move_line.company_currency_id is 'Company Currency';

comment on column account_move_line.account_id is 'Account';

comment on column account_move_line.account_root_id is 'Account Root';

comment on column account_move_line.sequence is 'Sequence';

comment on column account_move_line.name is 'Label';

comment on column account_move_line.quantity is 'Quantity';

comment on column account_move_line.price_unit is 'Unit Price';

comment on column account_move_line.discount is 'Discount (%)';

comment on column account_move_line.debit is 'Debit';

comment on column account_move_line.credit is 'Credit';

comment on column account_move_line.balance is 'Balance';

comment on column account_move_line.amount_currency is 'Amount in Currency';

comment on column account_move_line.price_subtotal is 'Subtotal';

comment on column account_move_line.price_total is 'Total';

comment on column account_move_line.reconciled is 'Reconciled';

comment on column account_move_line.blocked is 'No Follow-up';

comment on column account_move_line.date_maturity is 'Due Date';

comment on column account_move_line.currency_id is 'Currency';

comment on column account_move_line.partner_id is 'Partner';

comment on column account_move_line.product_uom_id is 'Unit of Measure';

comment on column account_move_line.product_id is 'Product';

comment on column account_move_line.reconcile_model_id is 'Reconciliation Model';

comment on column account_move_line.payment_id is 'Originator Payment';

comment on column account_move_line.statement_line_id is 'Originator Statement Line';

comment on column account_move_line.statement_id is 'Statement';

comment on column account_move_line.tax_line_id is 'Originator Tax';

comment on column account_move_line.tax_group_id is 'Originator tax group';

comment on column account_move_line.tax_base_amount is 'Base Amount';

comment on column account_move_line.tax_exigible is 'Appears in VAT report';

comment on column account_move_line.tax_repartition_line_id is 'Originator Tax Distribution Line';

comment on column account_move_line.tax_audit is 'Tax Audit String';

comment on column account_move_line.amount_residual is 'Residual Amount';

comment on column account_move_line.amount_residual_currency is 'Residual Amount in Currency';

comment on column account_move_line.full_reconcile_id is 'Matching';

comment on column account_move_line.matching_number is 'Matching #';

comment on column account_move_line.analytic_account_id is 'Analytic Account';

comment on column account_move_line.display_type is 'Display Type';

comment on column account_move_line.is_rounding_line is 'Is Rounding Line';

comment on column account_move_line.exclude_from_invoice_tab is 'Exclude From Invoice Tab';

comment on column account_move_line.create_uid is 'Created by';

comment on column account_move_line.create_date is 'Created on';

comment on column account_move_line.write_uid is 'Last Updated by';

comment on column account_move_line.write_date is 'Last Updated on';

comment on column account_move_line.expected_pay_date is 'Expected Payment Date';

comment on column account_move_line.internal_note is 'Internal Note';

comment on column account_move_line.next_action_date is 'Next Action Date';

comment on column account_move_line.followup_line_id is 'Follow-up Level';

comment on column account_move_line.followup_date is 'Latest Follow-up';

comment on column account_move_line.is_anglo_saxon_line is 'Is Anglo Saxon Line';

comment on column account_move_line.purchase_line_id is 'Purchase Order Line';

comment on column account_move_line.can_be_paid is 'Release to Pay';

alter table account_move_line owner to postgres;

create table account_account_tag_account_move_line_rel
(
	account_move_line_id integer not null
		constraint account_account_tag_account_move_line_account_move_line_id_fkey
			references account_move_line
				on delete cascade,
	account_account_tag_id integer not null
		constraint account_account_tag_account_move_li_account_account_tag_id_fkey
			references account_account_tag
				on delete restrict,
	constraint account_account_tag_account_move_line_rel_pkey
		primary key (account_move_line_id, account_account_tag_id)
);

comment on table account_account_tag_account_move_line_rel is 'RELATION BETWEEN account_move_line AND account_account_tag';

alter table account_account_tag_account_move_line_rel owner to postgres;

create index account_account_tag_account_m_account_account_tag_id_accoun_idx
	on account_account_tag_account_move_line_rel (account_account_tag_id, account_move_line_id);

create table account_analytic_line
(
	id integer default nextval('account_analytic_line_id_seq'::regclass) not null
		constraint account_analytic_line_pkey
			primary key,
	name varchar not null,
	date date not null,
	amount numeric not null,
	unit_amount double precision,
	product_uom_id integer
		constraint account_analytic_line_product_uom_id_fkey
			references uom_uom
				on delete set null,
	account_id integer not null
		constraint account_analytic_line_account_id_fkey
			references account_analytic_account
				on delete restrict,
	partner_id integer
		constraint account_analytic_line_partner_id_fkey
			references res_partner
				on delete set null,
	user_id integer
		constraint account_analytic_line_user_id_fkey
			references res_users
				on delete set null,
	company_id integer not null,
	currency_id integer
		constraint account_analytic_line_currency_id_fkey
			references res_currency
				on delete set null,
	group_id integer
		constraint account_analytic_line_group_id_fkey
			references account_analytic_group
				on delete set null,
	create_uid integer
		constraint account_analytic_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_analytic_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	product_id integer
		constraint account_analytic_line_product_id_fkey
			references product_product
				on delete set null,
	general_account_id integer
		constraint account_analytic_line_general_account_id_fkey
			references account_account
				on delete restrict,
	move_id integer
		constraint account_analytic_line_move_id_fkey
			references account_move_line
				on delete cascade,
	code varchar(8),
	ref varchar,
	so_line integer
		constraint account_analytic_line_so_line_fkey
			references sale_order_line
				on delete set null
);

comment on table account_analytic_line is 'Analytic Line';

comment on column account_analytic_line.name is 'Description';

comment on column account_analytic_line.date is 'Date';

comment on column account_analytic_line.amount is 'Amount';

comment on column account_analytic_line.unit_amount is 'Quantity';

comment on column account_analytic_line.product_uom_id is 'Unit of Measure';

comment on column account_analytic_line.account_id is 'Analytic Account';

comment on column account_analytic_line.partner_id is 'Partner';

comment on column account_analytic_line.user_id is 'User';

comment on column account_analytic_line.company_id is 'Company';

comment on column account_analytic_line.currency_id is 'Currency';

comment on column account_analytic_line.group_id is 'Group';

comment on column account_analytic_line.create_uid is 'Created by';

comment on column account_analytic_line.create_date is 'Created on';

comment on column account_analytic_line.write_uid is 'Last Updated by';

comment on column account_analytic_line.write_date is 'Last Updated on';

comment on column account_analytic_line.product_id is 'Product';

comment on column account_analytic_line.general_account_id is 'Financial Account';

comment on column account_analytic_line.move_id is 'Journal Item';

comment on column account_analytic_line.code is 'Code';

comment on column account_analytic_line.ref is 'Ref.';

comment on column account_analytic_line.so_line is 'Sales Order Item';

alter table account_analytic_line owner to postgres;

create index account_analytic_line_account_id_index
	on account_analytic_line (account_id);

create index account_analytic_line_date_index
	on account_analytic_line (date);

create index account_analytic_line_move_id_index
	on account_analytic_line (move_id);

create table account_analytic_line_tag_rel
(
	line_id integer not null
		constraint account_analytic_line_tag_rel_line_id_fkey
			references account_analytic_line
				on delete cascade,
	tag_id integer not null
		constraint account_analytic_line_tag_rel_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_line_tag_rel_pkey
		primary key (line_id, tag_id)
);

comment on table account_analytic_line_tag_rel is 'RELATION BETWEEN account_analytic_line AND account_analytic_tag';

alter table account_analytic_line_tag_rel owner to postgres;

create index account_analytic_line_tag_rel_tag_id_line_id_idx
	on account_analytic_line_tag_rel (tag_id, line_id);

create table account_analytic_tag_account_move_line_rel
(
	account_move_line_id integer not null
		constraint account_analytic_tag_account_move_lin_account_move_line_id_fkey
			references account_move_line
				on delete cascade,
	account_analytic_tag_id integer not null
		constraint account_analytic_tag_account_move__account_analytic_tag_id_fkey
			references account_analytic_tag
				on delete cascade,
	constraint account_analytic_tag_account_move_line_rel_pkey
		primary key (account_move_line_id, account_analytic_tag_id)
);

comment on table account_analytic_tag_account_move_line_rel is 'RELATION BETWEEN account_move_line AND account_analytic_tag';

alter table account_analytic_tag_account_move_line_rel owner to postgres;

create index account_analytic_tag_account__account_analytic_tag_id_accou_idx
	on account_analytic_tag_account_move_line_rel (account_analytic_tag_id, account_move_line_id);

create table account_asset_sell
(
	id integer default nextval('account_asset_sell_id_seq'::regclass) not null
		constraint account_asset_sell_pkey
			primary key,
	asset_id integer not null
		constraint account_asset_sell_asset_id_fkey
			references account_asset
				on delete cascade,
	company_id integer
		constraint account_asset_sell_company_id_fkey
			references res_company
				on delete set null,
	action varchar not null,
	invoice_id integer
		constraint account_asset_sell_invoice_id_fkey
			references account_move
				on delete set null,
	invoice_line_id integer
		constraint account_asset_sell_invoice_line_id_fkey
			references account_move_line
				on delete set null,
	create_uid integer
		constraint account_asset_sell_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_asset_sell_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_asset_sell is 'Sell Asset';

comment on column account_asset_sell.asset_id is 'Asset';

comment on column account_asset_sell.company_id is 'Company';

comment on column account_asset_sell.action is 'Action';

comment on column account_asset_sell.invoice_id is 'Customer Invoice';

comment on column account_asset_sell.invoice_line_id is 'Invoice Line';

comment on column account_asset_sell.create_uid is 'Created by';

comment on column account_asset_sell.create_date is 'Created on';

comment on column account_asset_sell.write_uid is 'Last Updated by';

comment on column account_asset_sell.write_date is 'Last Updated on';

alter table account_asset_sell owner to postgres;

create table account_automatic_entry_wizard_account_move_line_rel
(
	account_automatic_entry_wizard_id integer not null
		constraint account_automatic_entry_wizar_account_automatic_entry_wiza_fkey
			references account_automatic_entry_wizard
				on delete cascade,
	account_move_line_id integer not null
		constraint account_automatic_entry_wizard_accoun_account_move_line_id_fkey
			references account_move_line
				on delete cascade,
	constraint account_automatic_entry_wizard_account_move_line_rel_pkey
		primary key (account_automatic_entry_wizard_id, account_move_line_id)
);

comment on table account_automatic_entry_wizard_account_move_line_rel is 'RELATION BETWEEN account_automatic_entry_wizard AND account_move_line';

alter table account_automatic_entry_wizard_account_move_line_rel owner to postgres;

create index account_automatic_entry_wizar_account_move_line_id_account__idx
	on account_automatic_entry_wizard_account_move_line_rel (account_move_line_id, account_automatic_entry_wizard_id);

create index account_move_line_account_id_index
	on account_move_line (account_id);

create index account_move_line_analytic_account_id_index
	on account_move_line (analytic_account_id);

create index account_move_line_date_index
	on account_move_line (date);

create index account_move_line_date_maturity_index
	on account_move_line (date_maturity);

create index account_move_line_followup_date_index
	on account_move_line (followup_date);

create index account_move_line_full_reconcile_id_index
	on account_move_line (full_reconcile_id);

create index account_move_line_journal_id_index
	on account_move_line (journal_id);

create index account_move_line_move_id_index
	on account_move_line (move_id);

create index account_move_line_move_name_index
	on account_move_line (move_name);

create index account_move_line_partner_id_ref_idx
	on account_move_line (partner_id, ref);

create index account_move_line_payment_id_index
	on account_move_line (payment_id);

create index account_move_line_purchase_line_id_index
	on account_move_line (purchase_line_id);

create index account_move_line_ref_index
	on account_move_line (ref);

create index account_move_line_statement_id_index
	on account_move_line (statement_id);

create index account_move_line_statement_line_id_index
	on account_move_line (statement_line_id);

create table account_move_line_account_tax_rel
(
	account_move_line_id integer not null
		constraint account_move_line_account_tax_rel_account_move_line_id_fkey
			references account_move_line
				on delete cascade,
	account_tax_id integer not null
		constraint account_move_line_account_tax_rel_account_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint account_move_line_account_tax_rel_pkey
		primary key (account_move_line_id, account_tax_id)
);

comment on table account_move_line_account_tax_rel is 'RELATION BETWEEN account_move_line AND account_tax';

alter table account_move_line_account_tax_rel owner to postgres;

create index account_move_line_account_tax_account_tax_id_account_move_l_idx
	on account_move_line_account_tax_rel (account_tax_id, account_move_line_id);

create table account_partial_reconcile
(
	id integer default nextval('account_partial_reconcile_id_seq'::regclass) not null
		constraint account_partial_reconcile_pkey
			primary key,
	debit_move_id integer not null
		constraint account_partial_reconcile_debit_move_id_fkey
			references account_move_line
				on delete restrict,
	credit_move_id integer not null
		constraint account_partial_reconcile_credit_move_id_fkey
			references account_move_line
				on delete restrict,
	full_reconcile_id integer
		constraint account_partial_reconcile_full_reconcile_id_fkey
			references account_full_reconcile
				on delete set null,
	debit_currency_id integer
		constraint account_partial_reconcile_debit_currency_id_fkey
			references res_currency
				on delete set null,
	credit_currency_id integer
		constraint account_partial_reconcile_credit_currency_id_fkey
			references res_currency
				on delete set null,
	amount numeric,
	debit_amount_currency numeric,
	credit_amount_currency numeric,
	company_id integer,
	max_date date,
	create_uid integer
		constraint account_partial_reconcile_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint account_partial_reconcile_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table account_partial_reconcile is 'Partial Reconcile';

comment on column account_partial_reconcile.debit_move_id is 'Debit Move';

comment on column account_partial_reconcile.credit_move_id is 'Credit Move';

comment on column account_partial_reconcile.full_reconcile_id is 'Full Reconcile';

comment on column account_partial_reconcile.debit_currency_id is 'Currency of the debit journal item.';

comment on column account_partial_reconcile.credit_currency_id is 'Currency of the credit journal item.';

comment on column account_partial_reconcile.amount is 'Amount';

comment on column account_partial_reconcile.debit_amount_currency is 'Debit Amount Currency';

comment on column account_partial_reconcile.credit_amount_currency is 'Credit Amount Currency';

comment on column account_partial_reconcile.company_id is 'Company';

comment on column account_partial_reconcile.max_date is 'Max Date of Matched Lines';

comment on column account_partial_reconcile.create_uid is 'Created by';

comment on column account_partial_reconcile.create_date is 'Created on';

comment on column account_partial_reconcile.write_uid is 'Last Updated by';

comment on column account_partial_reconcile.write_date is 'Last Updated on';

alter table account_partial_reconcile owner to postgres;

alter table account_move
	add constraint account_move_tax_cash_basis_rec_id_fkey
		foreign key (tax_cash_basis_rec_id) references account_partial_reconcile
			on delete set null;

create index account_partial_reconcile_credit_move_id_index
	on account_partial_reconcile (credit_move_id);

create index account_partial_reconcile_debit_move_id_index
	on account_partial_reconcile (debit_move_id);

create table account_payment_register_move_line_rel
(
	wizard_id integer not null
		constraint account_payment_register_move_line_rel_wizard_id_fkey
			references account_payment_register
				on delete cascade,
	line_id integer not null
		constraint account_payment_register_move_line_rel_line_id_fkey
			references account_move_line
				on delete cascade,
	constraint account_payment_register_move_line_rel_pkey
		primary key (wizard_id, line_id)
);

comment on table account_payment_register_move_line_rel is 'RELATION BETWEEN account_payment_register AND account_move_line';

alter table account_payment_register_move_line_rel owner to postgres;

create index account_payment_register_move_line_rel_line_id_wizard_id_idx
	on account_payment_register_move_line_rel (line_id, wizard_id);

create table account_tax_purchase_order_line_rel
(
	purchase_order_line_id integer not null
		constraint account_tax_purchase_order_line_rel_purchase_order_line_id_fkey
			references purchase_order_line
				on delete cascade,
	account_tax_id integer not null
		constraint account_tax_purchase_order_line_rel_account_tax_id_fkey
			references account_tax
				on delete cascade,
	constraint account_tax_purchase_order_line_rel_pkey
		primary key (purchase_order_line_id, account_tax_id)
);

comment on table account_tax_purchase_order_line_rel is 'RELATION BETWEEN purchase_order_line AND account_tax';

alter table account_tax_purchase_order_line_rel owner to postgres;

create index account_tax_purchase_order_li_account_tax_id_purchase_order_idx
	on account_tax_purchase_order_line_rel (account_tax_id, purchase_order_line_id);

create table asset_move_line_rel
(
	asset_id integer not null
		constraint asset_move_line_rel_asset_id_fkey
			references account_asset
				on delete cascade,
	line_id integer not null
		constraint asset_move_line_rel_line_id_fkey
			references account_move_line
				on delete cascade,
	constraint asset_move_line_rel_pkey
		primary key (asset_id, line_id)
);

comment on table asset_move_line_rel is 'RELATION BETWEEN account_asset AND account_move_line';

alter table asset_move_line_rel owner to postgres;

create index asset_move_line_rel_line_id_asset_id_idx
	on asset_move_line_rel (line_id, asset_id);

create table product_template_attribute_value_purchase_order_line_rel
(
	purchase_order_line_id integer not null
		constraint product_template_attribute_value_pu_purchase_order_line_id_fkey
			references purchase_order_line
				on delete cascade,
	product_template_attribute_value_id integer not null
		constraint product_template_attribute_v_product_template_attribute_v_fkey1
			references product_template_attribute_value
				on delete restrict,
	constraint product_template_attribute_value_purchase_order_line_rel_pkey
		primary key (purchase_order_line_id, product_template_attribute_value_id)
);

comment on table product_template_attribute_value_purchase_order_line_rel is 'RELATION BETWEEN purchase_order_line AND product_template_attribute_value';

alter table product_template_attribute_value_purchase_order_line_rel owner to postgres;

create index product_template_attribute_va_product_template_attribute_v_idx1
	on product_template_attribute_value_purchase_order_line_rel (product_template_attribute_value_id, purchase_order_line_id);

create index purchase_order_line_date_planned_index
	on purchase_order_line (date_planned);

create index purchase_order_line_order_id_index
	on purchase_order_line (order_id);

create index purchase_order_line_orderpoint_id_index
	on purchase_order_line (orderpoint_id);

create index purchase_order_line_sale_line_id_index
	on purchase_order_line (sale_line_id);

create index sale_order_line_company_id_index
	on sale_order_line (company_id);

create index sale_order_line_order_id_index
	on sale_order_line (order_id);

create table sale_order_line_invoice_rel
(
	invoice_line_id integer not null
		constraint sale_order_line_invoice_rel_invoice_line_id_fkey
			references account_move_line
				on delete cascade,
	order_line_id integer not null
		constraint sale_order_line_invoice_rel_order_line_id_fkey
			references sale_order_line
				on delete cascade,
	constraint sale_order_line_invoice_rel_pkey
		primary key (invoice_line_id, order_line_id)
);

comment on table sale_order_line_invoice_rel is 'RELATION BETWEEN account_move_line AND sale_order_line';

alter table sale_order_line_invoice_rel owner to postgres;

create index sale_order_line_invoice_rel_order_line_id_invoice_line_id_idx
	on sale_order_line_invoice_rel (order_line_id, invoice_line_id);

create table sale_order_option
(
	id integer default nextval('sale_order_option_id_seq'::regclass) not null
		constraint sale_order_option_pkey
			primary key,
	order_id integer
		constraint sale_order_option_order_id_fkey
			references sale_order
				on delete cascade,
	line_id integer
		constraint sale_order_option_line_id_fkey
			references sale_order_line
				on delete set null,
	name text not null,
	product_id integer not null
		constraint sale_order_option_product_id_fkey
			references product_product
				on delete restrict,
	price_unit numeric not null,
	discount numeric,
	uom_id integer not null
		constraint sale_order_option_uom_id_fkey
			references uom_uom
				on delete restrict,
	quantity numeric not null,
	sequence integer,
	create_uid integer
		constraint sale_order_option_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint sale_order_option_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table sale_order_option is 'Sale Options';

comment on column sale_order_option.order_id is 'Sales Order Reference';

comment on column sale_order_option.line_id is 'Line';

comment on column sale_order_option.name is 'Description';

comment on column sale_order_option.product_id is 'Product';

comment on column sale_order_option.price_unit is 'Unit Price';

comment on column sale_order_option.discount is 'Discount (%)';

comment on column sale_order_option.uom_id is 'Unit of Measure ';

comment on column sale_order_option.quantity is 'Quantity';

comment on column sale_order_option.sequence is 'Sequence';

comment on column sale_order_option.create_uid is 'Created by';

comment on column sale_order_option.create_date is 'Created on';

comment on column sale_order_option.write_uid is 'Last Updated by';

comment on column sale_order_option.write_date is 'Last Updated on';

alter table sale_order_option owner to postgres;

create index sale_order_option_order_id_index
	on sale_order_option (order_id);

create table sale_order_tag_rel
(
	order_id integer not null
		constraint sale_order_tag_rel_order_id_fkey
			references sale_order
				on delete cascade,
	tag_id integer not null
		constraint sale_order_tag_rel_tag_id_fkey
			references crm_tag
				on delete cascade,
	constraint sale_order_tag_rel_pkey
		primary key (order_id, tag_id)
);

comment on table sale_order_tag_rel is 'RELATION BETWEEN sale_order AND crm_tag';

alter table sale_order_tag_rel owner to postgres;

create index sale_order_tag_rel_tag_id_order_id_idx
	on sale_order_tag_rel (tag_id, order_id);

create table sale_order_transaction_rel
(
	sale_order_id integer not null
		constraint sale_order_transaction_rel_sale_order_id_fkey
			references sale_order
				on delete cascade,
	transaction_id integer not null
		constraint sale_order_transaction_rel_transaction_id_fkey
			references payment_transaction
				on delete cascade,
	constraint sale_order_transaction_rel_pkey
		primary key (sale_order_id, transaction_id)
);

comment on table sale_order_transaction_rel is 'RELATION BETWEEN sale_order AND payment_transaction';

alter table sale_order_transaction_rel owner to postgres;

create index sale_order_transaction_rel_transaction_id_sale_order_id_idx
	on sale_order_transaction_rel (transaction_id, sale_order_id);

create table stock_picking
(
	id integer default nextval('stock_picking_id_seq'::regclass) not null
		constraint stock_picking_pkey
			primary key,
	message_main_attachment_id integer
		constraint stock_picking_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	name varchar,
	origin varchar,
	note text,
	backorder_id integer
		constraint stock_picking_backorder_id_fkey
			references stock_picking
				on delete set null,
	move_type varchar not null,
	state varchar,
	group_id integer
		constraint stock_picking_group_id_fkey
			references procurement_group
				on delete set null,
	priority varchar,
	scheduled_date timestamp,
	date_deadline timestamp,
	has_deadline_issue boolean,
	date timestamp,
	date_done timestamp,
	location_id integer not null
		constraint stock_picking_location_id_fkey
			references stock_location
				on delete restrict,
	location_dest_id integer not null
		constraint stock_picking_location_dest_id_fkey
			references stock_location
				on delete restrict,
	picking_type_id integer not null
		constraint stock_picking_picking_type_id_fkey
			references stock_picking_type
				on delete restrict,
	partner_id integer
		constraint stock_picking_partner_id_fkey
			references res_partner
				on delete set null,
	company_id integer,
	user_id integer
		constraint stock_picking_user_id_fkey
			references res_users
				on delete set null,
	owner_id integer
		constraint stock_picking_owner_id_fkey
			references res_partner
				on delete set null,
	printed boolean,
	is_locked boolean,
	immediate_transfer boolean,
	create_uid integer
		constraint stock_picking_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_picking_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	sale_id integer
		constraint stock_picking_sale_id_fkey
			references sale_order
				on delete set null,
	carrier_price double precision,
	carrier_id integer
		constraint stock_picking_carrier_id_fkey
			references delivery_carrier
				on delete set null,
	weight numeric,
	carrier_tracking_ref varchar,
	constraint stock_picking_name_uniq
		unique (name, company_id)
);

comment on table stock_picking is 'Transfer';

comment on column stock_picking.message_main_attachment_id is 'Main Attachment';

comment on column stock_picking.name is 'Reference';

comment on column stock_picking.origin is 'Source Document';

comment on column stock_picking.note is 'Notes';

comment on column stock_picking.backorder_id is 'Back Order of';

comment on column stock_picking.move_type is 'Shipping Policy';

comment on column stock_picking.state is 'Status';

comment on column stock_picking.group_id is 'Procurement Group';

comment on column stock_picking.priority is 'Priority';

comment on column stock_picking.scheduled_date is 'Scheduled Date';

comment on column stock_picking.date_deadline is 'Deadline';

comment on column stock_picking.has_deadline_issue is 'Is late';

comment on column stock_picking.date is 'Creation Date';

comment on column stock_picking.date_done is 'Date of Transfer';

comment on column stock_picking.location_id is 'Source Location';

comment on column stock_picking.location_dest_id is 'Destination Location';

comment on column stock_picking.picking_type_id is 'Operation Type';

comment on column stock_picking.partner_id is 'Contact';

comment on column stock_picking.company_id is 'Company';

comment on column stock_picking.user_id is 'Responsible';

comment on column stock_picking.owner_id is 'Assign Owner';

comment on column stock_picking.printed is 'Printed';

comment on column stock_picking.is_locked is 'Is Locked';

comment on column stock_picking.immediate_transfer is 'Immediate Transfer';

comment on column stock_picking.create_uid is 'Created by';

comment on column stock_picking.create_date is 'Created on';

comment on column stock_picking.write_uid is 'Last Updated by';

comment on column stock_picking.write_date is 'Last Updated on';

comment on column stock_picking.sale_id is 'Sales Order';

comment on column stock_picking.carrier_price is 'Shipping Cost';

comment on column stock_picking.carrier_id is 'Carrier';

comment on column stock_picking.weight is 'Weight';

comment on column stock_picking.carrier_tracking_ref is 'Tracking Reference';

alter table stock_picking owner to postgres;

create table choose_delivery_package
(
	id integer default nextval('choose_delivery_package_id_seq'::regclass) not null
		constraint choose_delivery_package_pkey
			primary key,
	picking_id integer
		constraint choose_delivery_package_picking_id_fkey
			references stock_picking
				on delete set null,
	delivery_packaging_id integer
		constraint choose_delivery_package_delivery_packaging_id_fkey
			references product_packaging
				on delete set null,
	shipping_weight double precision,
	create_uid integer
		constraint choose_delivery_package_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint choose_delivery_package_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table choose_delivery_package is 'Delivery Package Selection Wizard';

comment on column choose_delivery_package.picking_id is 'Picking';

comment on column choose_delivery_package.delivery_packaging_id is 'Delivery Packaging';

comment on column choose_delivery_package.shipping_weight is 'Shipping Weight';

comment on column choose_delivery_package.create_uid is 'Created by';

comment on column choose_delivery_package.create_date is 'Created on';

comment on column choose_delivery_package.write_uid is 'Last Updated by';

comment on column choose_delivery_package.write_date is 'Last Updated on';

alter table choose_delivery_package owner to postgres;

create table purchase_order_stock_picking_rel
(
	purchase_order_id integer not null
		constraint purchase_order_stock_picking_rel_purchase_order_id_fkey
			references purchase_order
				on delete cascade,
	stock_picking_id integer not null
		constraint purchase_order_stock_picking_rel_stock_picking_id_fkey
			references stock_picking
				on delete cascade,
	constraint purchase_order_stock_picking_rel_pkey
		primary key (purchase_order_id, stock_picking_id)
);

comment on table purchase_order_stock_picking_rel is 'RELATION BETWEEN purchase_order AND stock_picking';

alter table purchase_order_stock_picking_rel owner to postgres;

create index purchase_order_stock_picking__stock_picking_id_purchase_ord_idx
	on purchase_order_stock_picking_rel (stock_picking_id, purchase_order_id);

create table stock_backorder_confirmation_line
(
	id integer default nextval('stock_backorder_confirmation_line_id_seq'::regclass) not null
		constraint stock_backorder_confirmation_line_pkey
			primary key,
	backorder_confirmation_id integer
		constraint stock_backorder_confirmation_lin_backorder_confirmation_id_fkey
			references stock_backorder_confirmation
				on delete set null,
	picking_id integer
		constraint stock_backorder_confirmation_line_picking_id_fkey
			references stock_picking
				on delete set null,
	to_backorder boolean,
	create_uid integer
		constraint stock_backorder_confirmation_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_backorder_confirmation_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_backorder_confirmation_line is 'Backorder Confirmation Line';

comment on column stock_backorder_confirmation_line.backorder_confirmation_id is 'Immediate Transfer';

comment on column stock_backorder_confirmation_line.picking_id is 'Transfer';

comment on column stock_backorder_confirmation_line.to_backorder is 'To Backorder';

comment on column stock_backorder_confirmation_line.create_uid is 'Created by';

comment on column stock_backorder_confirmation_line.create_date is 'Created on';

comment on column stock_backorder_confirmation_line.write_uid is 'Last Updated by';

comment on column stock_backorder_confirmation_line.write_date is 'Last Updated on';

alter table stock_backorder_confirmation_line owner to postgres;

create table stock_immediate_transfer_line
(
	id integer default nextval('stock_immediate_transfer_line_id_seq'::regclass) not null
		constraint stock_immediate_transfer_line_pkey
			primary key,
	immediate_transfer_id integer not null
		constraint stock_immediate_transfer_line_immediate_transfer_id_fkey
			references stock_immediate_transfer
				on delete restrict,
	picking_id integer not null
		constraint stock_immediate_transfer_line_picking_id_fkey
			references stock_picking
				on delete cascade,
	to_immediate boolean,
	create_uid integer
		constraint stock_immediate_transfer_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_immediate_transfer_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_immediate_transfer_line is 'Immediate Transfer Line';

comment on column stock_immediate_transfer_line.immediate_transfer_id is 'Immediate Transfer';

comment on column stock_immediate_transfer_line.picking_id is 'Transfer';

comment on column stock_immediate_transfer_line.to_immediate is 'To Process';

comment on column stock_immediate_transfer_line.create_uid is 'Created by';

comment on column stock_immediate_transfer_line.create_date is 'Created on';

comment on column stock_immediate_transfer_line.write_uid is 'Last Updated by';

comment on column stock_immediate_transfer_line.write_date is 'Last Updated on';

alter table stock_immediate_transfer_line owner to postgres;

create table stock_package_destination
(
	id integer default nextval('stock_package_destination_id_seq'::regclass) not null
		constraint stock_package_destination_pkey
			primary key,
	picking_id integer not null
		constraint stock_package_destination_picking_id_fkey
			references stock_picking
				on delete cascade,
	location_dest_id integer not null
		constraint stock_package_destination_location_dest_id_fkey
			references stock_location
				on delete cascade,
	create_uid integer
		constraint stock_package_destination_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_package_destination_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_package_destination is 'Stock Package Destination';

comment on column stock_package_destination.picking_id is 'Picking';

comment on column stock_package_destination.location_dest_id is 'Destination location';

comment on column stock_package_destination.create_uid is 'Created by';

comment on column stock_package_destination.create_date is 'Created on';

comment on column stock_package_destination.write_uid is 'Last Updated by';

comment on column stock_package_destination.write_date is 'Last Updated on';

alter table stock_package_destination owner to postgres;

create table stock_package_level
(
	id integer default nextval('stock_package_level_id_seq'::regclass) not null
		constraint stock_package_level_pkey
			primary key,
	package_id integer not null
		constraint stock_package_level_package_id_fkey
			references stock_quant_package
				on delete restrict,
	picking_id integer
		constraint stock_package_level_picking_id_fkey
			references stock_picking
				on delete set null,
	location_dest_id integer
		constraint stock_package_level_location_dest_id_fkey
			references stock_location
				on delete set null,
	company_id integer not null
		constraint stock_package_level_company_id_fkey
			references res_company
				on delete restrict,
	create_uid integer
		constraint stock_package_level_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_package_level_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_package_level is 'Stock Package Level';

comment on column stock_package_level.package_id is 'Package';

comment on column stock_package_level.picking_id is 'Picking';

comment on column stock_package_level.location_dest_id is 'To';

comment on column stock_package_level.company_id is 'Company';

comment on column stock_package_level.create_uid is 'Created by';

comment on column stock_package_level.create_date is 'Created on';

comment on column stock_package_level.write_uid is 'Last Updated by';

comment on column stock_package_level.write_date is 'Last Updated on';

alter table stock_package_level owner to postgres;

create table stock_move
(
	id integer default nextval('stock_move_id_seq'::regclass) not null
		constraint stock_move_pkey
			primary key,
	name varchar not null,
	sequence integer,
	priority varchar,
	create_date timestamp,
	date timestamp not null,
	date_deadline timestamp,
	company_id integer not null,
	product_id integer not null
		constraint stock_move_product_id_fkey
			references product_product
				on delete restrict,
	description_picking text,
	product_qty numeric,
	product_uom_qty numeric not null,
	product_uom integer not null
		constraint stock_move_product_uom_fkey
			references uom_uom
				on delete restrict,
	location_id integer not null
		constraint stock_move_location_id_fkey
			references stock_location
				on delete restrict,
	location_dest_id integer not null
		constraint stock_move_location_dest_id_fkey
			references stock_location
				on delete restrict,
	partner_id integer
		constraint stock_move_partner_id_fkey
			references res_partner
				on delete set null,
	picking_id integer
		constraint stock_move_picking_id_fkey
			references stock_picking
				on delete set null,
	note text,
	state varchar,
	price_unit double precision,
	origin varchar,
	procure_method varchar not null,
	scrapped boolean,
	group_id integer
		constraint stock_move_group_id_fkey
			references procurement_group
				on delete set null,
	rule_id integer
		constraint stock_move_rule_id_fkey
			references stock_rule
				on delete restrict,
	propagate_cancel boolean,
	delay_alert_date timestamp,
	picking_type_id integer
		constraint stock_move_picking_type_id_fkey
			references stock_picking_type
				on delete set null,
	inventory_id integer
		constraint stock_move_inventory_id_fkey
			references stock_inventory
				on delete set null,
	origin_returned_move_id integer
		constraint stock_move_origin_returned_move_id_fkey
			references stock_move
				on delete set null,
	restrict_partner_id integer
		constraint stock_move_restrict_partner_id_fkey
			references res_partner
				on delete set null,
	warehouse_id integer
		constraint stock_move_warehouse_id_fkey
			references stock_warehouse
				on delete set null,
	additional boolean,
	reference varchar,
	package_level_id integer
		constraint stock_move_package_level_id_fkey
			references stock_package_level
				on delete set null,
	next_serial varchar,
	next_serial_count integer,
	orderpoint_id integer
		constraint stock_move_orderpoint_id_fkey
			references stock_warehouse_orderpoint
				on delete set null,
	create_uid integer
		constraint stock_move_create_uid_fkey
			references res_users
				on delete set null,
	write_uid integer
		constraint stock_move_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	to_refund boolean,
	sale_line_id integer
		constraint stock_move_sale_line_id_fkey
			references sale_order_line
				on delete set null,
	weight numeric,
	purchase_line_id integer
		constraint stock_move_purchase_line_id_fkey
			references purchase_order_line
				on delete set null,
	created_purchase_line_id integer
		constraint stock_move_created_purchase_line_id_fkey
			references purchase_order_line
				on delete set null
);

comment on table stock_move is 'Stock Move';

comment on column stock_move.name is 'Description';

comment on column stock_move.sequence is 'Sequence';

comment on column stock_move.priority is 'Priority';

comment on column stock_move.create_date is 'Creation Date';

comment on column stock_move.date is 'Date Scheduled';

comment on column stock_move.date_deadline is 'Deadline';

comment on column stock_move.company_id is 'Company';

comment on column stock_move.product_id is 'Product';

comment on column stock_move.description_picking is 'Description of Picking';

comment on column stock_move.product_qty is 'Real Quantity';

comment on column stock_move.product_uom_qty is 'Demand';

comment on column stock_move.product_uom is 'Unit of Measure';

comment on column stock_move.location_id is 'Source Location';

comment on column stock_move.location_dest_id is 'Destination Location';

comment on column stock_move.partner_id is 'Destination Address ';

comment on column stock_move.picking_id is 'Transfer';

comment on column stock_move.note is 'Notes';

comment on column stock_move.state is 'Status';

comment on column stock_move.price_unit is 'Unit Price';

comment on column stock_move.origin is 'Source Document';

comment on column stock_move.procure_method is 'Supply Method';

comment on column stock_move.scrapped is 'Scrapped';

comment on column stock_move.group_id is 'Procurement Group';

comment on column stock_move.rule_id is 'Stock Rule';

comment on column stock_move.propagate_cancel is 'Propagate cancel and split';

comment on column stock_move.delay_alert_date is 'Delay Alert Date';

comment on column stock_move.picking_type_id is 'Operation Type';

comment on column stock_move.inventory_id is 'Inventory';

comment on column stock_move.origin_returned_move_id is 'Origin return move';

comment on column stock_move.restrict_partner_id is 'Owner ';

comment on column stock_move.warehouse_id is 'Warehouse';

comment on column stock_move.additional is 'Whether the move was added after the picking''s confirmation';

comment on column stock_move.reference is 'Reference';

comment on column stock_move.package_level_id is 'Package Level';

comment on column stock_move.next_serial is 'First SN';

comment on column stock_move.next_serial_count is 'Number of SN';

comment on column stock_move.orderpoint_id is 'Original Reordering Rule';

comment on column stock_move.create_uid is 'Created by';

comment on column stock_move.write_uid is 'Last Updated by';

comment on column stock_move.write_date is 'Last Updated on';

comment on column stock_move.to_refund is 'Update quantities on SO/PO';

comment on column stock_move.sale_line_id is 'Sale Line';

comment on column stock_move.weight is 'Weight';

comment on column stock_move.purchase_line_id is 'Purchase Order Line';

comment on column stock_move.created_purchase_line_id is 'Created Purchase Order Line';

alter table stock_move owner to postgres;

alter table account_move
	add constraint account_move_stock_move_id_fkey
		foreign key (stock_move_id) references stock_move
			on delete set null;

create table stock_assign_serial
(
	id integer default nextval('stock_assign_serial_id_seq'::regclass) not null
		constraint stock_assign_serial_pkey
			primary key,
	move_id integer not null
		constraint stock_assign_serial_move_id_fkey
			references stock_move
				on delete cascade,
	next_serial_number varchar not null,
	next_serial_count integer not null,
	create_uid integer
		constraint stock_assign_serial_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_assign_serial_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_assign_serial is 'Stock Assign Serial Numbers';

comment on column stock_assign_serial.move_id is 'Move';

comment on column stock_assign_serial.next_serial_number is 'First SN';

comment on column stock_assign_serial.next_serial_count is 'Number of SN';

comment on column stock_assign_serial.create_uid is 'Created by';

comment on column stock_assign_serial.create_date is 'Created on';

comment on column stock_assign_serial.write_uid is 'Last Updated by';

comment on column stock_assign_serial.write_date is 'Last Updated on';

alter table stock_assign_serial owner to postgres;

create table stock_location_route_move
(
	move_id integer not null
		constraint stock_location_route_move_move_id_fkey
			references stock_move
				on delete cascade,
	route_id integer not null
		constraint stock_location_route_move_route_id_fkey
			references stock_location_route
				on delete cascade,
	constraint stock_location_route_move_pkey
		primary key (move_id, route_id)
);

comment on table stock_location_route_move is 'RELATION BETWEEN stock_move AND stock_location_route';

alter table stock_location_route_move owner to postgres;

create index stock_location_route_move_route_id_move_id_idx
	on stock_location_route_move (route_id, move_id);

create index stock_move_company_id_index
	on stock_move (company_id);

create index stock_move_create_date_index
	on stock_move (create_date);

create index stock_move_date_index
	on stock_move (date);

create index stock_move_location_dest_id_index
	on stock_move (location_dest_id);

create index stock_move_location_id_index
	on stock_move (location_id);

create index stock_move_name_index
	on stock_move (name);

create index stock_move_orderpoint_id_index
	on stock_move (orderpoint_id);

create index stock_move_origin_returned_move_id_index
	on stock_move (origin_returned_move_id);

create index stock_move_picking_id_index
	on stock_move (picking_id);

create index stock_move_priority_index
	on stock_move (priority);

create index stock_move_product_id_index
	on stock_move (product_id);

create index stock_move_product_location_index
	on stock_move (product_id, location_id, location_dest_id, company_id, state);

create index stock_move_purchase_line_id_index
	on stock_move (purchase_line_id);

create index stock_move_sale_line_id_index
	on stock_move (sale_line_id);

create index stock_move_state_index
	on stock_move (state);

create table stock_move_line
(
	id integer default nextval('stock_move_line_id_seq'::regclass) not null
		constraint stock_move_line_pkey
			primary key,
	picking_id integer
		constraint stock_move_line_picking_id_fkey
			references stock_picking
				on delete set null,
	move_id integer
		constraint stock_move_line_move_id_fkey
			references stock_move
				on delete set null,
	company_id integer not null,
	product_id integer
		constraint stock_move_line_product_id_fkey
			references product_product
				on delete cascade,
	product_uom_id integer not null
		constraint stock_move_line_product_uom_id_fkey
			references uom_uom
				on delete restrict,
	product_qty numeric,
	product_uom_qty numeric not null,
	qty_done numeric,
	package_id integer
		constraint stock_move_line_package_id_fkey
			references stock_quant_package
				on delete restrict,
	package_level_id integer
		constraint stock_move_line_package_level_id_fkey
			references stock_package_level
				on delete set null,
	lot_id integer
		constraint stock_move_line_lot_id_fkey
			references stock_production_lot
				on delete set null,
	lot_name varchar,
	result_package_id integer
		constraint stock_move_line_result_package_id_fkey
			references stock_quant_package
				on delete restrict,
	date timestamp not null,
	owner_id integer
		constraint stock_move_line_owner_id_fkey
			references res_partner
				on delete set null,
	location_id integer not null
		constraint stock_move_line_location_id_fkey
			references stock_location
				on delete restrict,
	location_dest_id integer not null
		constraint stock_move_line_location_dest_id_fkey
			references stock_location
				on delete restrict,
	state varchar,
	reference varchar,
	description_picking text,
	create_uid integer
		constraint stock_move_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_move_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_move_line is 'Product Moves (Stock Move Line)';

comment on column stock_move_line.picking_id is 'Transfer';

comment on column stock_move_line.move_id is 'Stock Move';

comment on column stock_move_line.company_id is 'Company';

comment on column stock_move_line.product_id is 'Product';

comment on column stock_move_line.product_uom_id is 'Unit of Measure';

comment on column stock_move_line.product_qty is 'Real Reserved Quantity';

comment on column stock_move_line.product_uom_qty is 'Reserved';

comment on column stock_move_line.qty_done is 'Done';

comment on column stock_move_line.package_id is 'Source Package';

comment on column stock_move_line.package_level_id is 'Package Level';

comment on column stock_move_line.lot_id is 'Lot/Serial Number';

comment on column stock_move_line.lot_name is 'Lot/Serial Number Name';

comment on column stock_move_line.result_package_id is 'Destination Package';

comment on column stock_move_line.date is 'Date';

comment on column stock_move_line.owner_id is 'From Owner';

comment on column stock_move_line.location_id is 'From';

comment on column stock_move_line.location_dest_id is 'To';

comment on column stock_move_line.state is 'Status';

comment on column stock_move_line.reference is 'Reference';

comment on column stock_move_line.description_picking is 'Description picking';

comment on column stock_move_line.create_uid is 'Created by';

comment on column stock_move_line.create_date is 'Created on';

comment on column stock_move_line.write_uid is 'Last Updated by';

comment on column stock_move_line.write_date is 'Last Updated on';

alter table stock_move_line owner to postgres;

create index stock_move_line_company_id_index
	on stock_move_line (company_id);

create index stock_move_line_free_reservation_index
	on stock_move_line (id, company_id, product_id, lot_id, location_id, owner_id, package_id);

create index stock_move_line_move_id_index
	on stock_move_line (move_id);

create index stock_move_line_picking_id_index
	on stock_move_line (picking_id);

create table stock_move_line_consume_rel
(
	consume_line_id integer not null
		constraint stock_move_line_consume_rel_consume_line_id_fkey
			references stock_move_line
				on delete cascade,
	produce_line_id integer not null
		constraint stock_move_line_consume_rel_produce_line_id_fkey
			references stock_move_line
				on delete cascade,
	constraint stock_move_line_consume_rel_pkey
		primary key (consume_line_id, produce_line_id)
);

comment on table stock_move_line_consume_rel is 'RELATION BETWEEN stock_move_line AND stock_move_line';

alter table stock_move_line_consume_rel owner to postgres;

create index stock_move_line_consume_rel_produce_line_id_consume_line_id_idx
	on stock_move_line_consume_rel (produce_line_id, consume_line_id);

create table stock_move_move_rel
(
	move_orig_id integer not null
		constraint stock_move_move_rel_move_orig_id_fkey
			references stock_move
				on delete cascade,
	move_dest_id integer not null
		constraint stock_move_move_rel_move_dest_id_fkey
			references stock_move
				on delete cascade,
	constraint stock_move_move_rel_pkey
		primary key (move_orig_id, move_dest_id)
);

comment on table stock_move_move_rel is 'RELATION BETWEEN stock_move AND stock_move';

alter table stock_move_move_rel owner to postgres;

create index stock_move_move_rel_move_dest_id_move_orig_id_idx
	on stock_move_move_rel (move_dest_id, move_orig_id);

create index stock_package_level_company_id_index
	on stock_package_level (company_id);

create index stock_picking_backorder_id_index
	on stock_picking (backorder_id);

create index stock_picking_company_id_index
	on stock_picking (company_id);

create index stock_picking_date_index
	on stock_picking (date);

create index stock_picking_message_main_attachment_id_index
	on stock_picking (message_main_attachment_id);

create index stock_picking_name_index
	on stock_picking (name);

create index stock_picking_origin_index
	on stock_picking (origin);

create index stock_picking_priority_index
	on stock_picking (priority);

create index stock_picking_scheduled_date_index
	on stock_picking (scheduled_date);

create index stock_picking_state_index
	on stock_picking (state);

create table stock_picking_backorder_rel
(
	stock_backorder_confirmation_id integer not null
		constraint stock_picking_backorder_rel_stock_backorder_confirmation_i_fkey
			references stock_backorder_confirmation
				on delete cascade,
	stock_picking_id integer not null
		constraint stock_picking_backorder_rel_stock_picking_id_fkey
			references stock_picking
				on delete cascade,
	constraint stock_picking_backorder_rel_pkey
		primary key (stock_backorder_confirmation_id, stock_picking_id)
);

comment on table stock_picking_backorder_rel is 'RELATION BETWEEN stock_backorder_confirmation AND stock_picking';

alter table stock_picking_backorder_rel owner to postgres;

create index stock_picking_backorder_rel_stock_picking_id_stock_backorde_idx
	on stock_picking_backorder_rel (stock_picking_id, stock_backorder_confirmation_id);

create table stock_picking_sms_rel
(
	confirm_stock_sms_id integer not null
		constraint stock_picking_sms_rel_confirm_stock_sms_id_fkey
			references confirm_stock_sms
				on delete cascade,
	stock_picking_id integer not null
		constraint stock_picking_sms_rel_stock_picking_id_fkey
			references stock_picking
				on delete cascade,
	constraint stock_picking_sms_rel_pkey
		primary key (confirm_stock_sms_id, stock_picking_id)
);

comment on table stock_picking_sms_rel is 'RELATION BETWEEN confirm_stock_sms AND stock_picking';

alter table stock_picking_sms_rel owner to postgres;

create index stock_picking_sms_rel_stock_picking_id_confirm_stock_sms_id_idx
	on stock_picking_sms_rel (stock_picking_id, confirm_stock_sms_id);

create table stock_picking_transfer_rel
(
	stock_immediate_transfer_id integer not null
		constraint stock_picking_transfer_rel_stock_immediate_transfer_id_fkey
			references stock_immediate_transfer
				on delete cascade,
	stock_picking_id integer not null
		constraint stock_picking_transfer_rel_stock_picking_id_fkey
			references stock_picking
				on delete cascade,
	constraint stock_picking_transfer_rel_pkey
		primary key (stock_immediate_transfer_id, stock_picking_id)
);

comment on table stock_picking_transfer_rel is 'RELATION BETWEEN stock_immediate_transfer AND stock_picking';

alter table stock_picking_transfer_rel owner to postgres;

create index stock_picking_transfer_rel_stock_picking_id_stock_immediate_idx
	on stock_picking_transfer_rel (stock_picking_id, stock_immediate_transfer_id);

create table stock_return_picking
(
	id integer default nextval('stock_return_picking_id_seq'::regclass) not null
		constraint stock_return_picking_pkey
			primary key,
	picking_id integer
		constraint stock_return_picking_picking_id_fkey
			references stock_picking
				on delete set null,
	move_dest_exists boolean,
	original_location_id integer
		constraint stock_return_picking_original_location_id_fkey
			references stock_location
				on delete set null,
	parent_location_id integer
		constraint stock_return_picking_parent_location_id_fkey
			references stock_location
				on delete set null,
	location_id integer
		constraint stock_return_picking_location_id_fkey
			references stock_location
				on delete set null,
	create_uid integer
		constraint stock_return_picking_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_return_picking_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_return_picking is 'Return Picking';

comment on column stock_return_picking.picking_id is 'Picking';

comment on column stock_return_picking.move_dest_exists is 'Chained Move Exists';

comment on column stock_return_picking.original_location_id is 'Original Location';

comment on column stock_return_picking.parent_location_id is 'Parent Location';

comment on column stock_return_picking.location_id is 'Return Location';

comment on column stock_return_picking.create_uid is 'Created by';

comment on column stock_return_picking.create_date is 'Created on';

comment on column stock_return_picking.write_uid is 'Last Updated by';

comment on column stock_return_picking.write_date is 'Last Updated on';

alter table stock_return_picking owner to postgres;

create table stock_return_picking_line
(
	id integer default nextval('stock_return_picking_line_id_seq'::regclass) not null
		constraint stock_return_picking_line_pkey
			primary key,
	product_id integer not null
		constraint stock_return_picking_line_product_id_fkey
			references product_product
				on delete cascade,
	quantity numeric not null,
	wizard_id integer
		constraint stock_return_picking_line_wizard_id_fkey
			references stock_return_picking
				on delete set null,
	move_id integer
		constraint stock_return_picking_line_move_id_fkey
			references stock_move
				on delete set null,
	create_uid integer
		constraint stock_return_picking_line_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_return_picking_line_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp,
	to_refund boolean
);

comment on table stock_return_picking_line is 'Return Picking Line';

comment on column stock_return_picking_line.product_id is 'Product';

comment on column stock_return_picking_line.quantity is 'Quantity';

comment on column stock_return_picking_line.wizard_id is 'Wizard';

comment on column stock_return_picking_line.move_id is 'Move';

comment on column stock_return_picking_line.create_uid is 'Created by';

comment on column stock_return_picking_line.create_date is 'Created on';

comment on column stock_return_picking_line.write_uid is 'Last Updated by';

comment on column stock_return_picking_line.write_date is 'Last Updated on';

comment on column stock_return_picking_line.to_refund is 'Update quantities on SO/PO';

alter table stock_return_picking_line owner to postgres;

create table stock_scrap
(
	id integer default nextval('stock_scrap_id_seq'::regclass) not null
		constraint stock_scrap_pkey
			primary key,
	message_main_attachment_id integer
		constraint stock_scrap_message_main_attachment_id_fkey
			references ir_attachment
				on delete set null,
	name varchar not null,
	company_id integer not null
		constraint stock_scrap_company_id_fkey
			references res_company
				on delete restrict,
	origin varchar,
	product_id integer not null
		constraint stock_scrap_product_id_fkey
			references product_product
				on delete restrict,
	product_uom_id integer not null
		constraint stock_scrap_product_uom_id_fkey
			references uom_uom
				on delete restrict,
	lot_id integer
		constraint stock_scrap_lot_id_fkey
			references stock_production_lot
				on delete set null,
	package_id integer
		constraint stock_scrap_package_id_fkey
			references stock_quant_package
				on delete set null,
	owner_id integer
		constraint stock_scrap_owner_id_fkey
			references res_partner
				on delete set null,
	move_id integer
		constraint stock_scrap_move_id_fkey
			references stock_move
				on delete set null,
	picking_id integer
		constraint stock_scrap_picking_id_fkey
			references stock_picking
				on delete set null,
	location_id integer not null
		constraint stock_scrap_location_id_fkey
			references stock_location
				on delete restrict,
	scrap_location_id integer not null
		constraint stock_scrap_scrap_location_id_fkey
			references stock_location
				on delete restrict,
	scrap_qty double precision not null,
	state varchar,
	date_done timestamp,
	create_uid integer
		constraint stock_scrap_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_scrap_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_scrap is 'Scrap';

comment on column stock_scrap.message_main_attachment_id is 'Main Attachment';

comment on column stock_scrap.name is 'Reference';

comment on column stock_scrap.company_id is 'Company';

comment on column stock_scrap.origin is 'Source Document';

comment on column stock_scrap.product_id is 'Product';

comment on column stock_scrap.product_uom_id is 'Unit of Measure';

comment on column stock_scrap.lot_id is 'Lot/Serial';

comment on column stock_scrap.package_id is 'Package';

comment on column stock_scrap.owner_id is 'Owner';

comment on column stock_scrap.move_id is 'Scrap Move';

comment on column stock_scrap.picking_id is 'Picking';

comment on column stock_scrap.location_id is 'Source Location';

comment on column stock_scrap.scrap_location_id is 'Scrap Location';

comment on column stock_scrap.scrap_qty is 'Quantity';

comment on column stock_scrap.state is 'Status';

comment on column stock_scrap.date_done is 'Date';

comment on column stock_scrap.create_uid is 'Created by';

comment on column stock_scrap.create_date is 'Created on';

comment on column stock_scrap.write_uid is 'Last Updated by';

comment on column stock_scrap.write_date is 'Last Updated on';

alter table stock_scrap owner to postgres;

create index stock_scrap_message_main_attachment_id_index
	on stock_scrap (message_main_attachment_id);

create table stock_valuation_layer
(
	id integer default nextval('stock_valuation_layer_id_seq'::regclass) not null
		constraint stock_valuation_layer_pkey
			primary key,
	company_id integer not null,
	product_id integer not null
		constraint stock_valuation_layer_product_id_fkey
			references product_product
				on delete restrict,
	quantity numeric,
	unit_cost numeric,
	value numeric,
	remaining_qty numeric,
	remaining_value numeric,
	description varchar,
	stock_valuation_layer_id integer
		constraint stock_valuation_layer_stock_valuation_layer_id_fkey
			references stock_valuation_layer
				on delete set null,
	stock_move_id integer
		constraint stock_valuation_layer_stock_move_id_fkey
			references stock_move
				on delete set null,
	account_move_id integer
		constraint stock_valuation_layer_account_move_id_fkey
			references account_move
				on delete set null,
	create_uid integer
		constraint stock_valuation_layer_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_valuation_layer_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_valuation_layer is 'Stock Valuation Layer';

comment on column stock_valuation_layer.company_id is 'Company';

comment on column stock_valuation_layer.product_id is 'Product';

comment on column stock_valuation_layer.quantity is 'Quantity';

comment on column stock_valuation_layer.unit_cost is 'Unit Value';

comment on column stock_valuation_layer.value is 'Total Value';

comment on column stock_valuation_layer.remaining_qty is 'Remaining Qty';

comment on column stock_valuation_layer.remaining_value is 'Remaining Value';

comment on column stock_valuation_layer.description is 'Description';

comment on column stock_valuation_layer.stock_valuation_layer_id is 'Linked To';

comment on column stock_valuation_layer.stock_move_id is 'Stock Move';

comment on column stock_valuation_layer.account_move_id is 'Journal Entry';

comment on column stock_valuation_layer.create_uid is 'Created by';

comment on column stock_valuation_layer.create_date is 'Created on';

comment on column stock_valuation_layer.write_uid is 'Last Updated by';

comment on column stock_valuation_layer.write_date is 'Last Updated on';

alter table stock_valuation_layer owner to postgres;

create index stock_valuation_layer_index
	on stock_valuation_layer (product_id, remaining_qty, stock_move_id, company_id, create_date);

create index stock_valuation_layer_stock_move_id_index
	on stock_valuation_layer (stock_move_id);

create table stock_warn_insufficient_qty_scrap
(
	id integer default nextval('stock_warn_insufficient_qty_scrap_id_seq'::regclass) not null
		constraint stock_warn_insufficient_qty_scrap_pkey
			primary key,
	scrap_id integer
		constraint stock_warn_insufficient_qty_scrap_scrap_id_fkey
			references stock_scrap
				on delete set null,
	product_id integer not null
		constraint stock_warn_insufficient_qty_scrap_product_id_fkey
			references product_product
				on delete cascade,
	location_id integer not null
		constraint stock_warn_insufficient_qty_scrap_location_id_fkey
			references stock_location
				on delete cascade,
	quantity double precision not null,
	product_uom_name varchar not null,
	create_uid integer
		constraint stock_warn_insufficient_qty_scrap_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint stock_warn_insufficient_qty_scrap_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table stock_warn_insufficient_qty_scrap is 'Warn Insufficient Scrap Quantity';

comment on column stock_warn_insufficient_qty_scrap.scrap_id is 'Scrap';

comment on column stock_warn_insufficient_qty_scrap.product_id is 'Product';

comment on column stock_warn_insufficient_qty_scrap.location_id is 'Location';

comment on column stock_warn_insufficient_qty_scrap.quantity is 'Quantity';

comment on column stock_warn_insufficient_qty_scrap.product_uom_name is 'Unit of Measure';

comment on column stock_warn_insufficient_qty_scrap.create_uid is 'Created by';

comment on column stock_warn_insufficient_qty_scrap.create_date is 'Created on';

comment on column stock_warn_insufficient_qty_scrap.write_uid is 'Last Updated by';

comment on column stock_warn_insufficient_qty_scrap.write_date is 'Last Updated on';

alter table stock_warn_insufficient_qty_scrap owner to postgres;

create table utm_tag
(
	id integer default nextval('utm_tag_id_seq'::regclass) not null
		constraint utm_tag_pkey
			primary key,
	name varchar not null
		constraint utm_tag_name_uniq
			unique,
	color integer,
	create_uid integer
		constraint utm_tag_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint utm_tag_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table utm_tag is 'UTM Tag';

comment on column utm_tag.name is 'Name';

comment on column utm_tag.color is 'Color Index';

comment on column utm_tag.create_uid is 'Created by';

comment on column utm_tag.create_date is 'Created on';

comment on column utm_tag.write_uid is 'Last Updated by';

comment on column utm_tag.write_date is 'Last Updated on';

alter table utm_tag owner to postgres;

create table utm_tag_rel
(
	tag_id integer not null
		constraint utm_tag_rel_tag_id_fkey
			references utm_campaign
				on delete cascade,
	campaign_id integer not null
		constraint utm_tag_rel_campaign_id_fkey
			references utm_tag
				on delete cascade,
	constraint utm_tag_rel_pkey
		primary key (tag_id, campaign_id)
);

comment on table utm_tag_rel is 'RELATION BETWEEN utm_campaign AND utm_tag';

alter table utm_tag_rel owner to postgres;

create index utm_tag_rel_campaign_id_tag_id_idx
	on utm_tag_rel (campaign_id, tag_id);

create table validate_account_move
(
	id integer default nextval('validate_account_move_id_seq'::regclass) not null
		constraint validate_account_move_pkey
			primary key,
	force_post boolean,
	create_uid integer
		constraint validate_account_move_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint validate_account_move_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table validate_account_move is 'Validate Account Move';

comment on column validate_account_move.force_post is 'Force';

comment on column validate_account_move.create_uid is 'Created by';

comment on column validate_account_move.create_date is 'Created on';

comment on column validate_account_move.write_uid is 'Last Updated by';

comment on column validate_account_move.write_date is 'Last Updated on';

alter table validate_account_move owner to postgres;

create table web_editor_converter_test_sub
(
	id integer default nextval('web_editor_converter_test_sub_id_seq'::regclass) not null
		constraint web_editor_converter_test_sub_pkey
			primary key,
	name varchar,
	create_uid integer
		constraint web_editor_converter_test_sub_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint web_editor_converter_test_sub_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table web_editor_converter_test_sub is 'Web Editor Converter Subtest';

comment on column web_editor_converter_test_sub.name is 'Name';

comment on column web_editor_converter_test_sub.create_uid is 'Created by';

comment on column web_editor_converter_test_sub.create_date is 'Created on';

comment on column web_editor_converter_test_sub.write_uid is 'Last Updated by';

comment on column web_editor_converter_test_sub.write_date is 'Last Updated on';

alter table web_editor_converter_test_sub owner to postgres;

create table web_editor_converter_test
(
	id integer default nextval('web_editor_converter_test_id_seq'::regclass) not null
		constraint web_editor_converter_test_pkey
			primary key,
	char varchar,
	integer integer,
	float double precision,
	numeric numeric,
	many2one integer
		constraint web_editor_converter_test_many2one_fkey
			references web_editor_converter_test_sub
				on delete set null,
	"binary" bytea,
	date date,
	datetime timestamp,
	selection_str varchar,
	html text,
	text text,
	create_uid integer
		constraint web_editor_converter_test_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint web_editor_converter_test_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table web_editor_converter_test is 'Web Editor Converter Test';

comment on column web_editor_converter_test.char is 'Char';

comment on column web_editor_converter_test.integer is 'Integer';

comment on column web_editor_converter_test.float is 'Float';

comment on column web_editor_converter_test.numeric is 'Numeric';

comment on column web_editor_converter_test.many2one is 'Many2One';

comment on column web_editor_converter_test."binary" is 'Binary';

comment on column web_editor_converter_test.date is 'Date';

comment on column web_editor_converter_test.datetime is 'Datetime';

comment on column web_editor_converter_test.selection_str is 'Lorsqu''un pancake prend l''avion à destination de Toronto et qu''il fait une escale technique à St Claude, on dit:';

comment on column web_editor_converter_test.html is 'Html';

comment on column web_editor_converter_test.text is 'Text';

comment on column web_editor_converter_test.create_uid is 'Created by';

comment on column web_editor_converter_test.create_date is 'Created on';

comment on column web_editor_converter_test.write_uid is 'Last Updated by';

comment on column web_editor_converter_test.write_date is 'Last Updated on';

alter table web_editor_converter_test owner to postgres;

create table web_tour_tour
(
	id integer default nextval('web_tour_tour_id_seq'::regclass) not null
		constraint web_tour_tour_pkey
			primary key,
	name varchar not null,
	user_id integer
		constraint web_tour_tour_user_id_fkey
			references res_users
				on delete set null
);

comment on table web_tour_tour is 'Tours';

comment on column web_tour_tour.name is 'Tour name';

comment on column web_tour_tour.user_id is 'Consumed by';

alter table web_tour_tour owner to postgres;

create table wizard_ir_model_menu_create
(
	id integer default nextval('wizard_ir_model_menu_create_id_seq'::regclass) not null
		constraint wizard_ir_model_menu_create_pkey
			primary key,
	menu_id integer not null
		constraint wizard_ir_model_menu_create_menu_id_fkey
			references ir_ui_menu
				on delete cascade,
	name varchar not null,
	create_uid integer
		constraint wizard_ir_model_menu_create_create_uid_fkey
			references res_users
				on delete set null,
	create_date timestamp,
	write_uid integer
		constraint wizard_ir_model_menu_create_write_uid_fkey
			references res_users
				on delete set null,
	write_date timestamp
);

comment on table wizard_ir_model_menu_create is 'Create Menu Wizard';

comment on column wizard_ir_model_menu_create.menu_id is 'Parent Menu';

comment on column wizard_ir_model_menu_create.name is 'Menu Name';

comment on column wizard_ir_model_menu_create.create_uid is 'Created by';

comment on column wizard_ir_model_menu_create.create_date is 'Created on';

comment on column wizard_ir_model_menu_create.write_uid is 'Last Updated by';

comment on column wizard_ir_model_menu_create.write_date is 'Last Updated on';

alter table wizard_ir_model_menu_create owner to postgres;

create table fixed_cost
(
	id serial not null,
	label varchar,
	value double precision,
	date_insert timestamp
);

alter table fixed_cost owner to postgres;

create table amortissement
(
	id serial not null,
	label_depense varchar,
	max_use double precision
);

alter table amortissement owner to postgres;

create view account_root(id, name, parent_id, company_id) as
SELECT DISTINCT ((ascii((account_account.code)::text) * 1000) +
                     ascii("substring"((account_account.code)::text, 2, 1))) AS id,
                    "left"((account_account.code)::text, 2)                  AS name,
                    ascii((account_account.code)::text)                      AS parent_id,
                    account_account.company_id
    FROM account_account
    WHERE (account_account.code IS NOT NULL)
    UNION ALL
    SELECT DISTINCT ascii((account_account.code)::text)     AS id,
                    "left"((account_account.code)::text, 1) AS name,
                    NULL::integer                           AS parent_id,
                    account_account.company_id
    FROM account_account
    WHERE (account_account.code IS NOT NULL);

alter table account_root owner to postgres;

create view purchase_bill_union(id, name, reference, partner_id, date, amount, currency_id, company_id, vendor_bill_id, purchase_order_id) as
SELECT account_move.id,
           account_move.name,
           account_move.ref            AS reference,
           account_move.partner_id,
           account_move.date,
           account_move.amount_untaxed AS amount,
           account_move.currency_id,
           account_move.company_id,
           account_move.id             AS vendor_bill_id,
           NULL::integer               AS purchase_order_id
    FROM account_move
    WHERE (((account_move.move_type)::text = 'in_invoice'::text) AND ((account_move.state)::text = 'posted'::text))
    UNION
    SELECT (- purchase_order.id)             AS id,
           purchase_order.name,
           purchase_order.partner_ref        AS reference,
           purchase_order.partner_id,
           (purchase_order.date_order)::date AS date,
           purchase_order.amount_untaxed     AS amount,
           purchase_order.currency_id,
           purchase_order.company_id,
           NULL::integer                     AS vendor_bill_id,
           purchase_order.id                 AS purchase_order_id
    FROM purchase_order
    WHERE (((purchase_order.state)::text = ANY
            (ARRAY [('purchase'::character varying)::text, ('done'::character varying)::text])) AND
           ((purchase_order.invoice_status)::text = ANY
            (ARRAY [('to invoice'::character varying)::text, ('no'::character varying)::text])));

alter table purchase_bill_union owner to postgres;

create view purchase_report(order_id, id, date_order, state, date_approve, dest_address_id, partner_id, user_id, company_id, fiscal_position_id, product_id, product_tmpl_id, category_id, currency_id, product_uom, delay, delay_pass, nbr_lines, price_total, price_average, country_id, commercial_partner_id, account_analytic_id, weight, volume, untaxed_total, qty_ordered, qty_received, qty_billed, qty_to_be_billed, picking_type_id, effective_date) as
WITH currency_rate AS (
        SELECT r.currency_id,
               COALESCE(r.company_id, c.id) AS company_id,
               r.rate,
               r.name                       AS date_start,
               (SELECT r2.name
                FROM res_currency_rate r2
                WHERE ((r2.name > r.name) AND (r2.currency_id = r.currency_id) AND
                       ((r2.company_id IS NULL) OR (r2.company_id = c.id)))
                ORDER BY r2.name
                LIMIT 1)                    AS date_end
        FROM (res_currency_rate r
                 JOIN res_company c ON (((r.company_id IS NULL) OR (r.company_id = c.id))))
    )
    SELECT po.id                                                                        AS order_id,
           min(l.id)                                                                    AS id,
           po.date_order,
           po.state,
           po.date_approve,
           po.dest_address_id,
           po.partner_id,
           po.user_id,
           po.company_id,
           po.fiscal_position_id,
           l.product_id,
           p.product_tmpl_id,
           t.categ_id                                                                   AS category_id,
           po.currency_id,
           t.uom_id                                                                     AS product_uom,
           (date_part('epoch'::text, age(po.date_approve, po.date_order)) /
            ((((24 * 60) * 60))::numeric(16, 2))::double precision)                     AS delay,
           (date_part('epoch'::text, age(l.date_planned, po.date_order)) /
            ((((24 * 60) * 60))::numeric(16, 2))::double precision)                     AS delay_pass,
           count(*)                                                                     AS nbr_lines,
           (sum(((l.price_total)::double precision /
                 COALESCE(po.currency_rate, (1.0)::double precision))))::numeric(16, 2) AS price_total,
           ((sum((((l.product_qty * l.price_unit))::double precision /
                  COALESCE(po.currency_rate, (1.0)::double precision))) /
             (NULLIF(sum(((l.product_qty / line_uom.factor) * product_uom.factor)),
                     0.0))::double precision))::numeric(16, 2)                          AS price_average,
           partner.country_id,
           partner.commercial_partner_id,
           analytic_account.id                                                          AS account_analytic_id,
           sum((((p.weight * l.product_qty) / line_uom.factor) * product_uom.factor))   AS weight,
           sum((((p.volume * l.product_qty) / line_uom.factor) * product_uom.factor))   AS volume,
           (sum(((l.price_subtotal)::double precision /
                 COALESCE(po.currency_rate, (1.0)::double precision))))::numeric(16, 2) AS untaxed_total,
           sum(((l.product_qty / line_uom.factor) * product_uom.factor))                AS qty_ordered,
           sum(((l.qty_received / line_uom.factor) * product_uom.factor))               AS qty_received,
           sum(((l.qty_invoiced / line_uom.factor) * product_uom.factor))               AS qty_billed,
           CASE
               WHEN ((t.purchase_method)::text = 'purchase'::text) THEN (
                       sum(((l.product_qty / line_uom.factor) * product_uom.factor)) -
                       sum(((l.qty_invoiced / line_uom.factor) * product_uom.factor)))
               ELSE (sum(((l.qty_received / line_uom.factor) * product_uom.factor)) -
                     sum(((l.qty_invoiced / line_uom.factor) * product_uom.factor)))
               END                                                                      AS qty_to_be_billed,
           spt.warehouse_id                                                             AS picking_type_id,
           po.effective_date
    FROM (((((((((purchase_order_line l
        JOIN purchase_order po ON ((l.order_id = po.id)))
        JOIN res_partner partner ON ((po.partner_id = partner.id)))
        LEFT JOIN product_product p ON ((l.product_id = p.id)))
        LEFT JOIN product_template t ON ((p.product_tmpl_id = t.id)))
        LEFT JOIN uom_uom line_uom ON ((line_uom.id = l.product_uom)))
        LEFT JOIN uom_uom product_uom ON ((product_uom.id = t.uom_id)))
        LEFT JOIN account_analytic_account analytic_account ON ((l.account_analytic_id = analytic_account.id)))
        LEFT JOIN currency_rate cr ON (((cr.currency_id = po.currency_id) AND (cr.company_id = po.company_id) AND
                                        (cr.date_start <=
                                         COALESCE((po.date_order)::timestamp with time zone, now())) AND
                                        ((cr.date_end IS NULL) OR
                                         (cr.date_end > COALESCE((po.date_order)::timestamp with time zone, now()))))))
             LEFT JOIN stock_picking_type spt ON ((spt.id = po.picking_type_id)))
    GROUP BY po.company_id, po.user_id, po.partner_id, line_uom.factor, po.currency_id, l.price_unit, po.date_approve,
             l.date_planned, l.product_uom, po.dest_address_id, po.fiscal_position_id, l.product_id, p.product_tmpl_id,
             t.categ_id, po.date_order, po.state, line_uom.uom_type, line_uom.category_id, t.uom_id, t.purchase_method,
             line_uom.id, product_uom.factor, partner.country_id, partner.commercial_partner_id, analytic_account.id,
             po.id, spt.warehouse_id, po.effective_date;

alter table purchase_report owner to postgres;

create view report_all_channels_sales(id, name, partner_id, product_id, product_tmpl_id, date_order, user_id, categ_id, company_id, price_total, pricelist_id, analytic_account_id, country_id, team_id, price_subtotal, product_qty) as
SELECT foo.id,
       foo.name,
       foo.partner_id,
       foo.product_id,
       foo.product_tmpl_id,
       foo.date_order,
       foo.user_id,
       foo.categ_id,
       foo.company_id,
       foo.price_total,
       foo.pricelist_id,
       foo.analytic_account_id,
       foo.country_id,
       foo.team_id,
       foo.price_subtotal,
       foo.product_qty
FROM (SELECT sol.id,
             so.name,
             so.partner_id,
             sol.product_id,
             pro.product_tmpl_id,
             so.date_order,
             so.user_id,
             pt.categ_id,
             so.company_id,
             (sol.price_total /
              CASE COALESCE(so.currency_rate, (0)::numeric)
                  WHEN 0 THEN 1.0
                  ELSE so.currency_rate
                  END)                                      AS price_total,
             so.pricelist_id,
             rp.country_id,
             (sol.price_subtotal /
              CASE COALESCE(so.currency_rate, (0)::numeric)
                  WHEN 0 THEN 1.0
                  ELSE so.currency_rate
                  END)                                      AS price_subtotal,
             ((sol.product_uom_qty / u.factor) * u2.factor) AS product_qty,
             so.analytic_account_id,
             so.team_id
      FROM (((((((sale_order_line sol
          JOIN sale_order so ON ((sol.order_id = so.id)))
          LEFT JOIN product_product pro ON ((sol.product_id = pro.id)))
          JOIN res_partner rp ON ((so.partner_id = rp.id)))
          LEFT JOIN product_template pt ON ((pro.product_tmpl_id = pt.id)))
          LEFT JOIN product_pricelist pp ON ((so.pricelist_id = pp.id)))
          LEFT JOIN uom_uom u ON ((u.id = sol.product_uom)))
               LEFT JOIN uom_uom u2 ON ((u2.id = pt.uom_id)))
      WHERE ((so.state)::text = ANY
             (ARRAY [('sale'::character varying)::text, ('done'::character varying)::text]))) foo;

alter table report_all_channels_sales owner to postgres;

create view report_stock_quantity(id, product_id, state, date, product_qty, company_id, warehouse_id) as
SELECT min(forecast_qty.id)          AS id,
       forecast_qty.product_id,
       forecast_qty.state,
       forecast_qty.date,
       sum(forecast_qty.product_qty) AS product_qty,
       forecast_qty.company_id,
       forecast_qty.warehouse_id
FROM (SELECT m.id,
             m.product_id,
             CASE
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL)) THEN 'out'::text
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL)) THEN 'in'::text
                 ELSE NULL::text
                 END        AS state,
             (m.date)::date AS date,
             CASE
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL)) THEN (- m.product_qty)
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL)) THEN m.product_qty
                 ELSE NULL::numeric
                 END        AS product_qty,
             m.company_id,
             CASE
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL)) THEN whs.id
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL)) THEN whd.id
                 ELSE NULL::integer
                 END        AS warehouse_id
      FROM ((((((stock_move m
          LEFT JOIN stock_location ls ON ((ls.id = m.location_id)))
          LEFT JOIN stock_location ld ON ((ld.id = m.location_dest_id)))
          LEFT JOIN stock_warehouse whs ON (((ls.parent_path)::text ~~ concat('%/', whs.view_location_id, '/%'))))
          LEFT JOIN stock_warehouse whd ON (((ld.parent_path)::text ~~ concat('%/', whd.view_location_id, '/%'))))
          LEFT JOIN product_product pp ON ((pp.id = m.product_id)))
               LEFT JOIN product_template pt ON ((pt.id = pp.product_tmpl_id)))
      WHERE (((pt.type)::text = 'product'::text) AND (m.product_qty <> (0)::numeric) AND
             ((whs.id IS NOT NULL) OR (whd.id IS NOT NULL)) AND
             ((whs.id IS NULL) OR (whd.id IS NULL) OR (whs.id <> whd.id)) AND ((m.state)::text <> ALL
                                                                               (ARRAY [('cancel'::character varying)::text, ('draft'::character varying)::text, ('done'::character varying)::text])))
      UNION ALL
      SELECT (- q.id)          AS id,
             q.product_id,
             'forecast'::text  AS state,
             (date.date)::date AS date,
             q.quantity        AS product_qty,
             q.company_id,
             wh.id             AS warehouse_id
      FROM generate_series(((timezone('utc'::text, now()))::date - '3 mons'::interval),
                           ((timezone('utc'::text, now()))::date + '3 mons'::interval), '1 day'::interval) date(date),
           ((stock_quant q
               LEFT JOIN stock_location l ON ((l.id = q.location_id)))
               LEFT JOIN stock_warehouse wh ON (((l.parent_path)::text ~~ concat('%/', wh.view_location_id, '/%'))))
      WHERE ((((l.usage)::text = 'internal'::text) AND (wh.id IS NOT NULL)) OR ((l.usage)::text = 'transit'::text))
      UNION ALL
      SELECT m.id,
             m.product_id,
             'forecast'::text                           AS state,
             (generate_series(
                     CASE
                         WHEN ((m.state)::text = 'done'::text)
                             THEN ((timezone('utc'::text, now()))::date - '3 mons'::interval)
                         ELSE ((m.date)::date)::timestamp without time zone
                         END,
                     CASE
                         WHEN ((m.state)::text <> 'done'::text)
                             THEN ((timezone('utc'::text, now()))::date + '3 mons'::interval)
                         ELSE ((m.date)::date - '1 day'::interval)
                         END, '1 day'::interval))::date AS date,
             CASE
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL) AND ((m.state)::text = 'done'::text))
                     THEN m.product_qty
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL) AND ((m.state)::text = 'done'::text))
                     THEN (- m.product_qty)
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL)) THEN (- m.product_qty)
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL)) THEN m.product_qty
                 ELSE NULL::numeric
                 END                                    AS product_qty,
             m.company_id,
             CASE
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL)) THEN whs.id
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL)) THEN whd.id
                 ELSE NULL::integer
                 END                                    AS warehouse_id
      FROM ((((((stock_move m
          LEFT JOIN stock_location ls ON ((ls.id = m.location_id)))
          LEFT JOIN stock_location ld ON ((ld.id = m.location_dest_id)))
          LEFT JOIN stock_warehouse whs ON (((ls.parent_path)::text ~~ concat('%/', whs.view_location_id, '/%'))))
          LEFT JOIN stock_warehouse whd ON (((ld.parent_path)::text ~~ concat('%/', whd.view_location_id, '/%'))))
          LEFT JOIN product_product pp ON ((pp.id = m.product_id)))
               LEFT JOIN product_template pt ON ((pt.id = pp.product_tmpl_id)))
      WHERE (((pt.type)::text = 'product'::text) AND (m.product_qty <> (0)::numeric) AND
             ((whs.id IS NOT NULL) OR (whd.id IS NOT NULL)) AND
             ((whs.id IS NULL) OR (whd.id IS NULL) OR (whs.id <> whd.id)) AND ((m.state)::text <> ALL
                                                                               (ARRAY [('cancel'::character varying)::text, ('draft'::character varying)::text])))) forecast_qty
GROUP BY forecast_qty.product_id, forecast_qty.state, forecast_qty.date, forecast_qty.company_id,
         forecast_qty.warehouse_id;

alter table report_stock_quantity owner to postgres;

create view sale_report(id, product_id, product_uom, product_uom_qty, qty_delivered, qty_invoiced, qty_to_invoice, price_total, price_subtotal, untaxed_amount_to_invoice, untaxed_amount_invoiced, nbr, name, date, state, partner_id, user_id, company_id, campaign_id, medium_id, source_id, delay, categ_id, pricelist_id, analytic_account_id, team_id, product_tmpl_id, country_id, industry_id, commercial_partner_id, weight, volume, discount, discount_amount, order_id, warehouse_id, invoice_status) as
SELECT COALESCE(min(l.id), (- s.id))                            AS id,
       l.product_id,
       t.uom_id                                                 AS product_uom,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum(((l.product_uom_qty / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS product_uom_qty,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum(((l.qty_delivered / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS qty_delivered,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum(((l.qty_invoiced / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS qty_invoiced,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum(((l.qty_to_invoice / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS qty_to_invoice,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((l.price_total /
                                                     CASE COALESCE(s.currency_rate, (0)::numeric)
                                                         WHEN 0 THEN 1.0
                                                         ELSE s.currency_rate
                                                         END))
           ELSE (0)::numeric
           END                                                  AS price_total,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((l.price_subtotal /
                                                     CASE COALESCE(s.currency_rate, (0)::numeric)
                                                         WHEN 0 THEN 1.0
                                                         ELSE s.currency_rate
                                                         END))
           ELSE (0)::numeric
           END                                                  AS price_subtotal,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((l.untaxed_amount_to_invoice /
                                                     CASE COALESCE(s.currency_rate, (0)::numeric)
                                                         WHEN 0 THEN 1.0
                                                         ELSE s.currency_rate
                                                         END))
           ELSE (0)::numeric
           END                                                  AS untaxed_amount_to_invoice,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((l.untaxed_amount_invoiced /
                                                     CASE COALESCE(s.currency_rate, (0)::numeric)
                                                         WHEN 0 THEN 1.0
                                                         ELSE s.currency_rate
                                                         END))
           ELSE (0)::numeric
           END                                                  AS untaxed_amount_invoiced,
       count(*)                                                 AS nbr,
       s.name,
       s.date_order                                             AS date,
       s.state,
       s.partner_id,
       s.user_id,
       s.company_id,
       s.campaign_id,
       s.medium_id,
       s.source_id,
       (date_part('epoch'::text,
                  avg((date_trunc('day'::text, s.date_order) - date_trunc('day'::text, s.create_date)))) /
        ((((24 * 60) * 60))::numeric(16, 2))::double precision) AS delay,
       t.categ_id,
       s.pricelist_id,
       s.analytic_account_id,
       s.team_id,
       p.product_tmpl_id,
       partner.country_id,
       partner.industry_id,
       partner.commercial_partner_id,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((((p.weight * l.product_uom_qty) / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS weight,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((((p.volume * l.product_uom_qty) / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS volume,
       l.discount,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum(((((l.price_unit * l.product_uom_qty) * l.discount) / 100.0) /
                                                     CASE COALESCE(s.currency_rate, (0)::numeric)
                                                         WHEN 0 THEN 1.0
                                                         ELSE s.currency_rate
                                                         END))
           ELSE (0)::numeric
           END                                                  AS discount_amount,
       s.id                                                     AS order_id,
       s.warehouse_id,
       s.invoice_status
FROM (((((((sale_order_line l
    RIGHT JOIN sale_order s ON ((s.id = l.order_id)))
    JOIN res_partner partner ON ((s.partner_id = partner.id)))
    LEFT JOIN product_product p ON ((l.product_id = p.id)))
    LEFT JOIN product_template t ON ((p.product_tmpl_id = t.id)))
    LEFT JOIN uom_uom u ON ((u.id = l.product_uom)))
    LEFT JOIN uom_uom u2 ON ((u2.id = t.uom_id)))
         LEFT JOIN product_pricelist pp ON ((s.pricelist_id = pp.id)))
GROUP BY l.product_id, l.order_id, t.uom_id, t.categ_id, s.name, s.date_order, s.partner_id, s.user_id, s.state,
         s.company_id, s.campaign_id, s.medium_id, s.source_id, s.pricelist_id, s.analytic_account_id, s.team_id,
         p.product_tmpl_id, partner.country_id, partner.industry_id, partner.commercial_partner_id, l.discount, s.id,
         s.warehouse_id, s.invoice_status;

alter table sale_report owner to postgres;

create view stock_report(id, picking_name, date_done, creation_date, scheduled_date, partner_id, is_backorder, delay, is_late, cycle_time, picking_type_code, operation_type, product_id, reference, picking_id, inventory_id, state, product_qty, company_id, categ_id) as
SELECT sm.id,
       sp.name                            AS picking_name,
       sp.date_done,
       sp.creation_date,
       sp.scheduled_date,
       sp.partner_id,
       sp.is_backorder,
       sp.delay,
       (sp.delay > (0)::double precision) AS is_late,
       sp.cycle_time,
       spt.code                           AS picking_type_code,
       spt.name                           AS operation_type,
       p.id                               AS product_id,
       sm.reference,
       sm.picking_id,
       sm.inventory_id,
       sm.state,
       sm.product_qty,
       sm.company_id,
       cat.id                             AS categ_id
FROM (((((stock_move sm
    LEFT JOIN (SELECT stock_picking.id,
                      stock_picking.name,
                      stock_picking.date_done,
                      stock_picking.date                                       AS creation_date,
                      stock_picking.scheduled_date,
                      stock_picking.partner_id,
                      (stock_picking.backorder_id IS NOT NULL)                 AS is_backorder,
                      (date_part('epoch'::text, avg((date_trunc('day'::text, stock_picking.date_done) -
                                                     date_trunc('day'::text, stock_picking.scheduled_date)))) /
                       ((((24 * 60) * 60))::numeric(16, 2))::double precision) AS delay,
                      (date_part('epoch'::text, avg((date_trunc('day'::text, stock_picking.date_done) -
                                                     date_trunc('day'::text, stock_picking.date)))) /
                       ((((24 * 60) * 60))::numeric(16, 2))::double precision) AS cycle_time
               FROM stock_picking
               GROUP BY stock_picking.id, stock_picking.name, stock_picking.date_done, stock_picking.date,
                        stock_picking.scheduled_date, stock_picking.partner_id,
                        (stock_picking.backorder_id IS NOT NULL)) sp ON ((sm.picking_id = sp.id)))
    LEFT JOIN stock_picking_type spt ON ((sm.picking_type_id = spt.id)))
    JOIN product_product p ON ((sm.product_id = p.id)))
    JOIN product_template t ON ((p.product_tmpl_id = t.id)))
         JOIN product_category cat ON ((t.categ_id = cat.id)))
WHERE ((t.type)::text = 'product'::text)
GROUP BY sm.id, sm.reference, sm.picking_id, sm.inventory_id, sm.state, sm.product_qty, sm.company_id, sp.name,
         sp.date_done, sp.creation_date, sp.scheduled_date, sp.partner_id, sp.is_backorder, sp.delay, sp.cycle_time,
         spt.code, spt.name, p.id, (sp.delay > (0)::double precision), cat.id;

alter table stock_report owner to postgres;

create view vendor_delay_report(id, date, purchase_line_id, product_id, category_id, partner_id, qty_total, qty_on_time) as
SELECT m.id,
       m.date,
       m.purchase_line_id,
       m.product_id,
       min(pc.id)               AS category_id,
       min(po.partner_id)       AS partner_id,
       sum(pol.product_uom_qty) AS qty_total,
       sum(
               CASE
                   WHEN ((pol.date_planned)::date >= (m.date)::date) THEN ml.qty_done
                   ELSE (0)::numeric
                   END)         AS qty_on_time
FROM ((((((stock_move m
    JOIN stock_move_line ml ON ((m.id = ml.move_id)))
    JOIN purchase_order_line pol ON ((pol.id = m.purchase_line_id)))
    JOIN purchase_order po ON ((po.id = pol.order_id)))
    JOIN product_product p ON ((p.id = m.product_id)))
    JOIN product_template pt ON ((pt.id = p.product_tmpl_id)))
         JOIN product_category pc ON ((pc.id = pt.categ_id)))
WHERE ((m.state)::text = 'done'::text)
GROUP BY m.id;

alter table vendor_delay_report owner to postgres;

create view account_root(id, name, parent_id, company_id) as
SELECT DISTINCT ((ascii((account_account.code)::text) * 1000) +
                     ascii("substring"((account_account.code)::text, 2, 1))) AS id,
                    "left"((account_account.code)::text, 2)                  AS name,
                    ascii((account_account.code)::text)                      AS parent_id,
                    account_account.company_id
    FROM account_account
    WHERE (account_account.code IS NOT NULL)
    UNION ALL
    SELECT DISTINCT ascii((account_account.code)::text)     AS id,
                    "left"((account_account.code)::text, 1) AS name,
                    NULL::integer                           AS parent_id,
                    account_account.company_id
    FROM account_account
    WHERE (account_account.code IS NOT NULL);

alter table account_root owner to postgres;

create view purchase_bill_union(id, name, reference, partner_id, date, amount, currency_id, company_id, vendor_bill_id, purchase_order_id) as
SELECT account_move.id,
           account_move.name,
           account_move.ref            AS reference,
           account_move.partner_id,
           account_move.date,
           account_move.amount_untaxed AS amount,
           account_move.currency_id,
           account_move.company_id,
           account_move.id             AS vendor_bill_id,
           NULL::integer               AS purchase_order_id
    FROM account_move
    WHERE (((account_move.move_type)::text = 'in_invoice'::text) AND ((account_move.state)::text = 'posted'::text))
    UNION
    SELECT (- purchase_order.id)             AS id,
           purchase_order.name,
           purchase_order.partner_ref        AS reference,
           purchase_order.partner_id,
           (purchase_order.date_order)::date AS date,
           purchase_order.amount_untaxed     AS amount,
           purchase_order.currency_id,
           purchase_order.company_id,
           NULL::integer                     AS vendor_bill_id,
           purchase_order.id                 AS purchase_order_id
    FROM purchase_order
    WHERE (((purchase_order.state)::text = ANY
            (ARRAY [('purchase'::character varying)::text, ('done'::character varying)::text])) AND
           ((purchase_order.invoice_status)::text = ANY
            (ARRAY [('to invoice'::character varying)::text, ('no'::character varying)::text])));

alter table purchase_bill_union owner to postgres;

create view purchase_report(order_id, id, date_order, state, date_approve, dest_address_id, partner_id, user_id, company_id, fiscal_position_id, product_id, product_tmpl_id, category_id, currency_id, product_uom, delay, delay_pass, nbr_lines, price_total, price_average, country_id, commercial_partner_id, account_analytic_id, weight, volume, untaxed_total, qty_ordered, qty_received, qty_billed, qty_to_be_billed, picking_type_id, effective_date) as
WITH currency_rate AS (
        SELECT r.currency_id,
               COALESCE(r.company_id, c.id) AS company_id,
               r.rate,
               r.name                       AS date_start,
               (SELECT r2.name
                FROM res_currency_rate r2
                WHERE ((r2.name > r.name) AND (r2.currency_id = r.currency_id) AND
                       ((r2.company_id IS NULL) OR (r2.company_id = c.id)))
                ORDER BY r2.name
                LIMIT 1)                    AS date_end
        FROM (res_currency_rate r
                 JOIN res_company c ON (((r.company_id IS NULL) OR (r.company_id = c.id))))
    )
    SELECT po.id                                                                        AS order_id,
           min(l.id)                                                                    AS id,
           po.date_order,
           po.state,
           po.date_approve,
           po.dest_address_id,
           po.partner_id,
           po.user_id,
           po.company_id,
           po.fiscal_position_id,
           l.product_id,
           p.product_tmpl_id,
           t.categ_id                                                                   AS category_id,
           po.currency_id,
           t.uom_id                                                                     AS product_uom,
           (date_part('epoch'::text, age(po.date_approve, po.date_order)) /
            ((((24 * 60) * 60))::numeric(16, 2))::double precision)                     AS delay,
           (date_part('epoch'::text, age(l.date_planned, po.date_order)) /
            ((((24 * 60) * 60))::numeric(16, 2))::double precision)                     AS delay_pass,
           count(*)                                                                     AS nbr_lines,
           (sum(((l.price_total)::double precision /
                 COALESCE(po.currency_rate, (1.0)::double precision))))::numeric(16, 2) AS price_total,
           ((sum((((l.product_qty * l.price_unit))::double precision /
                  COALESCE(po.currency_rate, (1.0)::double precision))) /
             (NULLIF(sum(((l.product_qty / line_uom.factor) * product_uom.factor)),
                     0.0))::double precision))::numeric(16, 2)                          AS price_average,
           partner.country_id,
           partner.commercial_partner_id,
           analytic_account.id                                                          AS account_analytic_id,
           sum((((p.weight * l.product_qty) / line_uom.factor) * product_uom.factor))   AS weight,
           sum((((p.volume * l.product_qty) / line_uom.factor) * product_uom.factor))   AS volume,
           (sum(((l.price_subtotal)::double precision /
                 COALESCE(po.currency_rate, (1.0)::double precision))))::numeric(16, 2) AS untaxed_total,
           sum(((l.product_qty / line_uom.factor) * product_uom.factor))                AS qty_ordered,
           sum(((l.qty_received / line_uom.factor) * product_uom.factor))               AS qty_received,
           sum(((l.qty_invoiced / line_uom.factor) * product_uom.factor))               AS qty_billed,
           CASE
               WHEN ((t.purchase_method)::text = 'purchase'::text) THEN (
                       sum(((l.product_qty / line_uom.factor) * product_uom.factor)) -
                       sum(((l.qty_invoiced / line_uom.factor) * product_uom.factor)))
               ELSE (sum(((l.qty_received / line_uom.factor) * product_uom.factor)) -
                     sum(((l.qty_invoiced / line_uom.factor) * product_uom.factor)))
               END                                                                      AS qty_to_be_billed,
           spt.warehouse_id                                                             AS picking_type_id,
           po.effective_date
    FROM (((((((((purchase_order_line l
        JOIN purchase_order po ON ((l.order_id = po.id)))
        JOIN res_partner partner ON ((po.partner_id = partner.id)))
        LEFT JOIN product_product p ON ((l.product_id = p.id)))
        LEFT JOIN product_template t ON ((p.product_tmpl_id = t.id)))
        LEFT JOIN uom_uom line_uom ON ((line_uom.id = l.product_uom)))
        LEFT JOIN uom_uom product_uom ON ((product_uom.id = t.uom_id)))
        LEFT JOIN account_analytic_account analytic_account ON ((l.account_analytic_id = analytic_account.id)))
        LEFT JOIN currency_rate cr ON (((cr.currency_id = po.currency_id) AND (cr.company_id = po.company_id) AND
                                        (cr.date_start <=
                                         COALESCE((po.date_order)::timestamp with time zone, now())) AND
                                        ((cr.date_end IS NULL) OR
                                         (cr.date_end > COALESCE((po.date_order)::timestamp with time zone, now()))))))
             LEFT JOIN stock_picking_type spt ON ((spt.id = po.picking_type_id)))
    GROUP BY po.company_id, po.user_id, po.partner_id, line_uom.factor, po.currency_id, l.price_unit, po.date_approve,
             l.date_planned, l.product_uom, po.dest_address_id, po.fiscal_position_id, l.product_id, p.product_tmpl_id,
             t.categ_id, po.date_order, po.state, line_uom.uom_type, line_uom.category_id, t.uom_id, t.purchase_method,
             line_uom.id, product_uom.factor, partner.country_id, partner.commercial_partner_id, analytic_account.id,
             po.id, spt.warehouse_id, po.effective_date;

alter table purchase_report owner to postgres;

create view report_all_channels_sales(id, name, partner_id, product_id, product_tmpl_id, date_order, user_id, categ_id, company_id, price_total, pricelist_id, analytic_account_id, country_id, team_id, price_subtotal, product_qty) as
SELECT foo.id,
       foo.name,
       foo.partner_id,
       foo.product_id,
       foo.product_tmpl_id,
       foo.date_order,
       foo.user_id,
       foo.categ_id,
       foo.company_id,
       foo.price_total,
       foo.pricelist_id,
       foo.analytic_account_id,
       foo.country_id,
       foo.team_id,
       foo.price_subtotal,
       foo.product_qty
FROM (SELECT sol.id,
             so.name,
             so.partner_id,
             sol.product_id,
             pro.product_tmpl_id,
             so.date_order,
             so.user_id,
             pt.categ_id,
             so.company_id,
             (sol.price_total /
              CASE COALESCE(so.currency_rate, (0)::numeric)
                  WHEN 0 THEN 1.0
                  ELSE so.currency_rate
                  END)                                      AS price_total,
             so.pricelist_id,
             rp.country_id,
             (sol.price_subtotal /
              CASE COALESCE(so.currency_rate, (0)::numeric)
                  WHEN 0 THEN 1.0
                  ELSE so.currency_rate
                  END)                                      AS price_subtotal,
             ((sol.product_uom_qty / u.factor) * u2.factor) AS product_qty,
             so.analytic_account_id,
             so.team_id
      FROM (((((((sale_order_line sol
          JOIN sale_order so ON ((sol.order_id = so.id)))
          LEFT JOIN product_product pro ON ((sol.product_id = pro.id)))
          JOIN res_partner rp ON ((so.partner_id = rp.id)))
          LEFT JOIN product_template pt ON ((pro.product_tmpl_id = pt.id)))
          LEFT JOIN product_pricelist pp ON ((so.pricelist_id = pp.id)))
          LEFT JOIN uom_uom u ON ((u.id = sol.product_uom)))
               LEFT JOIN uom_uom u2 ON ((u2.id = pt.uom_id)))
      WHERE ((so.state)::text = ANY
             (ARRAY [('sale'::character varying)::text, ('done'::character varying)::text]))) foo;

alter table report_all_channels_sales owner to postgres;

create view report_stock_quantity(id, product_id, state, date, product_qty, company_id, warehouse_id) as
SELECT min(forecast_qty.id)          AS id,
       forecast_qty.product_id,
       forecast_qty.state,
       forecast_qty.date,
       sum(forecast_qty.product_qty) AS product_qty,
       forecast_qty.company_id,
       forecast_qty.warehouse_id
FROM (SELECT m.id,
             m.product_id,
             CASE
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL)) THEN 'out'::text
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL)) THEN 'in'::text
                 ELSE NULL::text
                 END        AS state,
             (m.date)::date AS date,
             CASE
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL)) THEN (- m.product_qty)
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL)) THEN m.product_qty
                 ELSE NULL::numeric
                 END        AS product_qty,
             m.company_id,
             CASE
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL)) THEN whs.id
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL)) THEN whd.id
                 ELSE NULL::integer
                 END        AS warehouse_id
      FROM ((((((stock_move m
          LEFT JOIN stock_location ls ON ((ls.id = m.location_id)))
          LEFT JOIN stock_location ld ON ((ld.id = m.location_dest_id)))
          LEFT JOIN stock_warehouse whs ON (((ls.parent_path)::text ~~ concat('%/', whs.view_location_id, '/%'))))
          LEFT JOIN stock_warehouse whd ON (((ld.parent_path)::text ~~ concat('%/', whd.view_location_id, '/%'))))
          LEFT JOIN product_product pp ON ((pp.id = m.product_id)))
               LEFT JOIN product_template pt ON ((pt.id = pp.product_tmpl_id)))
      WHERE (((pt.type)::text = 'product'::text) AND (m.product_qty <> (0)::numeric) AND
             ((whs.id IS NOT NULL) OR (whd.id IS NOT NULL)) AND
             ((whs.id IS NULL) OR (whd.id IS NULL) OR (whs.id <> whd.id)) AND ((m.state)::text <> ALL
                                                                               (ARRAY [('cancel'::character varying)::text, ('draft'::character varying)::text, ('done'::character varying)::text])))
      UNION ALL
      SELECT (- q.id)          AS id,
             q.product_id,
             'forecast'::text  AS state,
             (date.date)::date AS date,
             q.quantity        AS product_qty,
             q.company_id,
             wh.id             AS warehouse_id
      FROM generate_series(((timezone('utc'::text, now()))::date - '3 mons'::interval),
                           ((timezone('utc'::text, now()))::date + '3 mons'::interval), '1 day'::interval) date(date),
           ((stock_quant q
               LEFT JOIN stock_location l ON ((l.id = q.location_id)))
               LEFT JOIN stock_warehouse wh ON (((l.parent_path)::text ~~ concat('%/', wh.view_location_id, '/%'))))
      WHERE ((((l.usage)::text = 'internal'::text) AND (wh.id IS NOT NULL)) OR ((l.usage)::text = 'transit'::text))
      UNION ALL
      SELECT m.id,
             m.product_id,
             'forecast'::text                           AS state,
             (generate_series(
                     CASE
                         WHEN ((m.state)::text = 'done'::text)
                             THEN ((timezone('utc'::text, now()))::date - '3 mons'::interval)
                         ELSE ((m.date)::date)::timestamp without time zone
                         END,
                     CASE
                         WHEN ((m.state)::text <> 'done'::text)
                             THEN ((timezone('utc'::text, now()))::date + '3 mons'::interval)
                         ELSE ((m.date)::date - '1 day'::interval)
                         END, '1 day'::interval))::date AS date,
             CASE
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL) AND ((m.state)::text = 'done'::text))
                     THEN m.product_qty
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL) AND ((m.state)::text = 'done'::text))
                     THEN (- m.product_qty)
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL)) THEN (- m.product_qty)
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL)) THEN m.product_qty
                 ELSE NULL::numeric
                 END                                    AS product_qty,
             m.company_id,
             CASE
                 WHEN ((whs.id IS NOT NULL) AND (whd.id IS NULL)) THEN whs.id
                 WHEN ((whd.id IS NOT NULL) AND (whs.id IS NULL)) THEN whd.id
                 ELSE NULL::integer
                 END                                    AS warehouse_id
      FROM ((((((stock_move m
          LEFT JOIN stock_location ls ON ((ls.id = m.location_id)))
          LEFT JOIN stock_location ld ON ((ld.id = m.location_dest_id)))
          LEFT JOIN stock_warehouse whs ON (((ls.parent_path)::text ~~ concat('%/', whs.view_location_id, '/%'))))
          LEFT JOIN stock_warehouse whd ON (((ld.parent_path)::text ~~ concat('%/', whd.view_location_id, '/%'))))
          LEFT JOIN product_product pp ON ((pp.id = m.product_id)))
               LEFT JOIN product_template pt ON ((pt.id = pp.product_tmpl_id)))
      WHERE (((pt.type)::text = 'product'::text) AND (m.product_qty <> (0)::numeric) AND
             ((whs.id IS NOT NULL) OR (whd.id IS NOT NULL)) AND
             ((whs.id IS NULL) OR (whd.id IS NULL) OR (whs.id <> whd.id)) AND ((m.state)::text <> ALL
                                                                               (ARRAY [('cancel'::character varying)::text, ('draft'::character varying)::text])))) forecast_qty
GROUP BY forecast_qty.product_id, forecast_qty.state, forecast_qty.date, forecast_qty.company_id,
         forecast_qty.warehouse_id;

alter table report_stock_quantity owner to postgres;

create view sale_report(id, product_id, product_uom, product_uom_qty, qty_delivered, qty_invoiced, qty_to_invoice, price_total, price_subtotal, untaxed_amount_to_invoice, untaxed_amount_invoiced, nbr, name, date, state, partner_id, user_id, company_id, campaign_id, medium_id, source_id, delay, categ_id, pricelist_id, analytic_account_id, team_id, product_tmpl_id, country_id, industry_id, commercial_partner_id, weight, volume, discount, discount_amount, order_id, warehouse_id, invoice_status) as
SELECT COALESCE(min(l.id), (- s.id))                            AS id,
       l.product_id,
       t.uom_id                                                 AS product_uom,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum(((l.product_uom_qty / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS product_uom_qty,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum(((l.qty_delivered / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS qty_delivered,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum(((l.qty_invoiced / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS qty_invoiced,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum(((l.qty_to_invoice / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS qty_to_invoice,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((l.price_total /
                                                     CASE COALESCE(s.currency_rate, (0)::numeric)
                                                         WHEN 0 THEN 1.0
                                                         ELSE s.currency_rate
                                                         END))
           ELSE (0)::numeric
           END                                                  AS price_total,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((l.price_subtotal /
                                                     CASE COALESCE(s.currency_rate, (0)::numeric)
                                                         WHEN 0 THEN 1.0
                                                         ELSE s.currency_rate
                                                         END))
           ELSE (0)::numeric
           END                                                  AS price_subtotal,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((l.untaxed_amount_to_invoice /
                                                     CASE COALESCE(s.currency_rate, (0)::numeric)
                                                         WHEN 0 THEN 1.0
                                                         ELSE s.currency_rate
                                                         END))
           ELSE (0)::numeric
           END                                                  AS untaxed_amount_to_invoice,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((l.untaxed_amount_invoiced /
                                                     CASE COALESCE(s.currency_rate, (0)::numeric)
                                                         WHEN 0 THEN 1.0
                                                         ELSE s.currency_rate
                                                         END))
           ELSE (0)::numeric
           END                                                  AS untaxed_amount_invoiced,
       count(*)                                                 AS nbr,
       s.name,
       s.date_order                                             AS date,
       s.state,
       s.partner_id,
       s.user_id,
       s.company_id,
       s.campaign_id,
       s.medium_id,
       s.source_id,
       (date_part('epoch'::text,
                  avg((date_trunc('day'::text, s.date_order) - date_trunc('day'::text, s.create_date)))) /
        ((((24 * 60) * 60))::numeric(16, 2))::double precision) AS delay,
       t.categ_id,
       s.pricelist_id,
       s.analytic_account_id,
       s.team_id,
       p.product_tmpl_id,
       partner.country_id,
       partner.industry_id,
       partner.commercial_partner_id,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((((p.weight * l.product_uom_qty) / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS weight,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum((((p.volume * l.product_uom_qty) / u.factor) * u2.factor))
           ELSE (0)::numeric
           END                                                  AS volume,
       l.discount,
       CASE
           WHEN (l.product_id IS NOT NULL) THEN sum(((((l.price_unit * l.product_uom_qty) * l.discount) / 100.0) /
                                                     CASE COALESCE(s.currency_rate, (0)::numeric)
                                                         WHEN 0 THEN 1.0
                                                         ELSE s.currency_rate
                                                         END))
           ELSE (0)::numeric
           END                                                  AS discount_amount,
       s.id                                                     AS order_id,
       s.warehouse_id,
       s.invoice_status
FROM (((((((sale_order_line l
    RIGHT JOIN sale_order s ON ((s.id = l.order_id)))
    JOIN res_partner partner ON ((s.partner_id = partner.id)))
    LEFT JOIN product_product p ON ((l.product_id = p.id)))
    LEFT JOIN product_template t ON ((p.product_tmpl_id = t.id)))
    LEFT JOIN uom_uom u ON ((u.id = l.product_uom)))
    LEFT JOIN uom_uom u2 ON ((u2.id = t.uom_id)))
         LEFT JOIN product_pricelist pp ON ((s.pricelist_id = pp.id)))
GROUP BY l.product_id, l.order_id, t.uom_id, t.categ_id, s.name, s.date_order, s.partner_id, s.user_id, s.state,
         s.company_id, s.campaign_id, s.medium_id, s.source_id, s.pricelist_id, s.analytic_account_id, s.team_id,
         p.product_tmpl_id, partner.country_id, partner.industry_id, partner.commercial_partner_id, l.discount, s.id,
         s.warehouse_id, s.invoice_status;

alter table sale_report owner to postgres;

create view stock_report(id, picking_name, date_done, creation_date, scheduled_date, partner_id, is_backorder, delay, is_late, cycle_time, picking_type_code, operation_type, product_id, reference, picking_id, inventory_id, state, product_qty, company_id, categ_id) as
SELECT sm.id,
       sp.name                            AS picking_name,
       sp.date_done,
       sp.creation_date,
       sp.scheduled_date,
       sp.partner_id,
       sp.is_backorder,
       sp.delay,
       (sp.delay > (0)::double precision) AS is_late,
       sp.cycle_time,
       spt.code                           AS picking_type_code,
       spt.name                           AS operation_type,
       p.id                               AS product_id,
       sm.reference,
       sm.picking_id,
       sm.inventory_id,
       sm.state,
       sm.product_qty,
       sm.company_id,
       cat.id                             AS categ_id
FROM (((((stock_move sm
    LEFT JOIN (SELECT stock_picking.id,
                      stock_picking.name,
                      stock_picking.date_done,
                      stock_picking.date                                       AS creation_date,
                      stock_picking.scheduled_date,
                      stock_picking.partner_id,
                      (stock_picking.backorder_id IS NOT NULL)                 AS is_backorder,
                      (date_part('epoch'::text, avg((date_trunc('day'::text, stock_picking.date_done) -
                                                     date_trunc('day'::text, stock_picking.scheduled_date)))) /
                       ((((24 * 60) * 60))::numeric(16, 2))::double precision) AS delay,
                      (date_part('epoch'::text, avg((date_trunc('day'::text, stock_picking.date_done) -
                                                     date_trunc('day'::text, stock_picking.date)))) /
                       ((((24 * 60) * 60))::numeric(16, 2))::double precision) AS cycle_time
               FROM stock_picking
               GROUP BY stock_picking.id, stock_picking.name, stock_picking.date_done, stock_picking.date,
                        stock_picking.scheduled_date, stock_picking.partner_id,
                        (stock_picking.backorder_id IS NOT NULL)) sp ON ((sm.picking_id = sp.id)))
    LEFT JOIN stock_picking_type spt ON ((sm.picking_type_id = spt.id)))
    JOIN product_product p ON ((sm.product_id = p.id)))
    JOIN product_template t ON ((p.product_tmpl_id = t.id)))
         JOIN product_category cat ON ((t.categ_id = cat.id)))
WHERE ((t.type)::text = 'product'::text)
GROUP BY sm.id, sm.reference, sm.picking_id, sm.inventory_id, sm.state, sm.product_qty, sm.company_id, sp.name,
         sp.date_done, sp.creation_date, sp.scheduled_date, sp.partner_id, sp.is_backorder, sp.delay, sp.cycle_time,
         spt.code, spt.name, p.id, (sp.delay > (0)::double precision), cat.id;

alter table stock_report owner to postgres;

create view vendor_delay_report(id, date, purchase_line_id, product_id, category_id, partner_id, qty_total, qty_on_time) as
SELECT m.id,
       m.date,
       m.purchase_line_id,
       m.product_id,
       min(pc.id)               AS category_id,
       min(po.partner_id)       AS partner_id,
       sum(pol.product_uom_qty) AS qty_total,
       sum(
               CASE
                   WHEN ((pol.date_planned)::date >= (m.date)::date) THEN ml.qty_done
                   ELSE (0)::numeric
                   END)         AS qty_on_time
FROM ((((((stock_move m
    JOIN stock_move_line ml ON ((m.id = ml.move_id)))
    JOIN purchase_order_line pol ON ((pol.id = m.purchase_line_id)))
    JOIN purchase_order po ON ((po.id = pol.order_id)))
    JOIN product_product p ON ((p.id = m.product_id)))
    JOIN product_template pt ON ((pt.id = p.product_tmpl_id)))
         JOIN product_category pc ON ((pc.id = pt.categ_id)))
WHERE ((m.state)::text = 'done'::text)
GROUP BY m.id;

alter table vendor_delay_report owner to postgres;

